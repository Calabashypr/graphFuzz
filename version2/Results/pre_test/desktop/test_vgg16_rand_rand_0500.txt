
analyse output arrays in iter:2

pre layer res:
5:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[-2.3178203 ,  2.0969563 ,  0.6664575 , ..., -0.9542439 ,
          -0.22199282, -0.24519059],
         [-1.4908103 , -1.7676389 ,  0.7024658 , ...,  0.7281751 ,
           1.0529937 , -2.8337197 ],
         [-3.447404  ,  1.2635518 ,  0.6415229 , ...,  0.33636603,
          -4.3461466 , -1.1423271 ],
         ...,
         [ 0.23806462, -1.7172596 ,  1.5552356 , ...,  2.073198  ,
           2.9321685 , -0.2981929 ],
         [-1.8660002 , -1.1609809 , -0.09306563, ...,  0.21631789,
          -1.5071222 , -2.1879349 ],
         [ 0.7301955 , -2.6084    ,  1.865068  , ...,  2.0997202 ,
          -2.826158  , -1.165133  ]],

        [[-2.3178203 ,  2.0969563 ,  0.6664575 , ..., -0.9542439 ,
          -0.22199282, -0.24519059],
         [-1.4908103 , -1.7676389 ,  0.7024658 , ...,  0.7281751 ,
           1.0529937 , -2.8337197 ],
         [-3.447404  ,  1.2635518 ,  0.6415229 , ...,  0.33636603,
          -4.3461466 , -1.1423271 ],
         ...,
         [ 0.23806462, -1.7172596 ,  1.5552356 , ...,  2.073198  ,
           2.9321685 , -0.2981929 ],
         [-1.8660002 , -1.1609809 , -0.09306563, ...,  0.21631789,
          -1.5071222 , -2.1879349 ],
         [ 0.7301955 , -2.6084    ,  1.865068  , ...,  2.0997202 ,
          -2.826158  , -1.165133  ]],

        [[-2.3178203 ,  2.0969563 ,  0.6664575 , ..., -0.9542439 ,
          -0.22199282, -0.24519059],
         [-1.4908103 , -1.7676389 ,  0.7024658 , ...,  0.7281751 ,
           1.0529937 , -2.8337197 ],
         [-3.447404  ,  1.2635518 ,  0.6415229 , ...,  0.33636603,
          -4.3461466 , -1.1423271 ],
         ...,
         [ 0.23806462, -1.7172596 ,  1.5552356 , ...,  2.073198  ,
           2.9321685 , -0.2981929 ],
         [-1.8660002 , -1.1609809 , -0.09306563, ...,  0.21631789,
          -1.5071222 , -2.1879349 ],
         [ 0.7301955 , -2.6084    ,  1.865068  , ...,  2.0997202 ,
          -2.826158  , -1.165133  ]],

        ...,

        [[-2.3178203 ,  2.0969563 ,  0.6664575 , ..., -0.9542439 ,
          -0.22199282, -0.24519059],
         [-1.4908103 , -1.7676389 ,  0.7024658 , ...,  0.7281751 ,
           1.0529937 , -2.8337197 ],
         [-3.447404  ,  1.2635518 ,  0.6415229 , ...,  0.33636603,
          -4.3461466 , -1.1423271 ],
         ...,
         [ 0.23806462, -1.7172596 ,  1.5552356 , ...,  2.073198  ,
           2.9321685 , -0.2981929 ],
         [-1.8660002 , -1.1609809 , -0.09306563, ...,  0.21631789,
          -1.5071222 , -2.1879349 ],
         [ 0.7301955 , -2.6084    ,  1.865068  , ...,  2.0997202 ,
          -2.826158  , -1.165133  ]],

        [[-2.3178203 ,  2.0969563 ,  0.6664575 , ..., -0.9542439 ,
          -0.22199282, -0.24519059],
         [-1.4908103 , -1.7676389 ,  0.7024658 , ...,  0.7281751 ,
           1.0529937 , -2.8337197 ],
         [-3.447404  ,  1.2635518 ,  0.6415229 , ...,  0.33636603,
          -4.3461466 , -1.1423271 ],
         ...,
         [ 0.23806462, -1.7172596 ,  1.5552356 , ...,  2.073198  ,
           2.9321685 , -0.2981929 ],
         [-1.8660002 , -1.1609809 , -0.09306563, ...,  0.21631789,
          -1.5071222 , -2.1879349 ],
         [ 0.7301955 , -2.6084    ,  1.865068  , ...,  2.0997202 ,
          -2.826158  , -1.165133  ]],

        [[-2.3178203 ,  2.0969563 ,  0.6664575 , ..., -0.9542439 ,
          -0.22199282, -0.24519059],
         [-1.4908103 , -1.7676389 ,  0.7024658 , ...,  0.7281751 ,
           1.0529937 , -2.8337197 ],
         [-3.447404  ,  1.2635518 ,  0.6415229 , ...,  0.33636603,
          -4.3461466 , -1.1423271 ],
         ...,
         [ 0.23806462, -1.7172596 ,  1.5552356 , ...,  2.073198  ,
           2.9321685 , -0.2981929 ],
         [-1.8660002 , -1.1609809 , -0.09306563, ...,  0.21631789,
          -1.5071222 , -2.1879349 ],
         [ 0.7301955 , -2.6084    ,  1.865068  , ...,  2.0997202 ,
          -2.826158  , -1.165133  ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [0], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[-1781.3745 , -1080.4939 ,  1912.1233 , ...,  2786.1616 ,
          -1266.6459 , -1150.9368 ],
         [-2899.505  , -1870.1621 ,  2747.4856 , ...,   171.83984,
          -3904.5547 , -3961.0522 ],
         [-4372.999  , -3616.8638 ,  -140.63788, ..., -2474.193  ,
          -4226.213  , -5264.598  ],
         ...,
         [-2517.8157 , -3568.1719 , -2736.214  , ...,  1978.1257 ,
           1868.3226 ,   430.48572],
         [-3268.7861 , -1565.2507 , -1877.958  , ...,  2484.4172 ,
           -339.51636, -2586.7917 ],
         [-2511.4277 , -1604.1643 , -2779.9883 , ...,  -897.6467 ,
          -2749.6301 , -3935.4272 ]],

        [[-1781.3745 , -1080.4939 ,  1912.1233 , ...,  2786.1616 ,
          -1266.6459 , -1150.9368 ],
         [-2899.505  , -1870.1621 ,  2747.4856 , ...,   171.83984,
          -3904.5547 , -3961.0522 ],
         [-4372.999  , -3616.8638 ,  -140.63788, ..., -2474.193  ,
          -4226.213  , -5264.598  ],
         ...,
         [-2517.8157 , -3568.1719 , -2736.214  , ...,  1978.1257 ,
           1868.3226 ,   430.48572],
         [-3268.7861 , -1565.2507 , -1877.958  , ...,  2484.4172 ,
           -339.51636, -2586.7917 ],
         [-2511.4277 , -1604.1643 , -2779.9883 , ...,  -897.6467 ,
          -2749.6301 , -3935.4272 ]],

        [[-1781.3745 , -1080.4939 ,  1912.1233 , ...,  2786.1616 ,
          -1266.6459 , -1150.9368 ],
         [-2899.505  , -1870.1621 ,  2747.4856 , ...,   171.83984,
          -3904.5547 , -3961.0522 ],
         [-4372.999  , -3616.8638 ,  -140.63788, ..., -2474.193  ,
          -4226.213  , -5264.598  ],
         ...,
         [-2517.8157 , -3568.1719 , -2736.214  , ...,  1978.1257 ,
           1868.3226 ,   430.48572],
         [-3268.7861 , -1565.2507 , -1877.958  , ...,  2484.4172 ,
           -339.51636, -2586.7917 ],
         [-2511.4277 , -1604.1643 , -2779.9883 , ...,  -897.6467 ,
          -2749.6301 , -3935.4272 ]],

        ...,

        [[-1781.3745 , -1080.4939 ,  1912.1233 , ...,  2786.1616 ,
          -1266.6459 , -1150.9368 ],
         [-2899.505  , -1870.1621 ,  2747.4856 , ...,   171.83984,
          -3904.5547 , -3961.0522 ],
         [-4372.999  , -3616.8638 ,  -140.63788, ..., -2474.193  ,
          -4226.213  , -5264.598  ],
         ...,
         [-2517.8157 , -3568.1719 , -2736.214  , ...,  1978.1257 ,
           1868.3226 ,   430.48572],
         [-3268.7861 , -1565.2507 , -1877.958  , ...,  2484.4172 ,
           -339.51636, -2586.7917 ],
         [-2511.4277 , -1604.1643 , -2779.9883 , ...,  -897.6467 ,
          -2749.6301 , -3935.4272 ]],

        [[-1781.3745 , -1080.4939 ,  1912.1233 , ...,  2786.1616 ,
          -1266.6459 , -1150.9368 ],
         [-2899.505  , -1870.1621 ,  2747.4856 , ...,   171.83984,
          -3904.5547 , -3961.0522 ],
         [-4372.999  , -3616.8638 ,  -140.63788, ..., -2474.193  ,
          -4226.213  , -5264.598  ],
         ...,
         [-2517.8157 , -3568.1719 , -2736.214  , ...,  1978.1257 ,
           1868.3226 ,   430.48572],
         [-3268.7861 , -1565.2507 , -1877.958  , ...,  2484.4172 ,
           -339.51636, -2586.7917 ],
         [-2511.4277 , -1604.1643 , -2779.9883 , ...,  -897.6467 ,
          -2749.6301 , -3935.4272 ]],

        [[-1781.3745 , -1080.4939 ,  1912.1233 , ...,  2786.1616 ,
          -1266.6459 , -1150.9368 ],
         [-2899.505  , -1870.1621 ,  2747.4856 , ...,   171.83984,
          -3904.5547 , -3961.0522 ],
         [-4372.999  , -3616.8638 ,  -140.63788, ..., -2474.193  ,
          -4226.213  , -5264.598  ],
         ...,
         [-2517.8157 , -3568.1719 , -2736.214  , ...,  1978.1257 ,
           1868.3226 ,   430.48572],
         [-3268.7861 , -1565.2507 , -1877.958  , ...,  2484.4172 ,
           -339.51636, -2586.7917 ],
         [-2511.4277 , -1604.1643 , -2779.9883 , ...,  -897.6467 ,
          -2749.6301 , -3935.4272 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [5], 'to': [3]}
ms node:
{'name': 'conv2d', 'output': array([[[[-1781.4088 , -1080.5197 ,  1912.1372 , ...,  2786.1687 ,
          -1266.6765 , -1150.9292 ],
         [-2899.5398 , -1870.1909 ,  2747.5125 , ...,   171.8586 ,
          -3904.5586 , -3961.0278 ],
         [-4372.9785 , -3616.8306 ,  -140.6271 , ..., -2474.1943 ,
          -4226.1953 , -5264.606  ],
         ...,
         [-2517.8    , -3568.1758 , -2736.2146 , ...,  1978.1178 ,
           1868.3157 ,   430.47177],
         [-3268.8022 , -1565.2574 , -1877.9845 , ...,  2484.421  ,
           -339.5256 , -2586.8152 ],
         [-2511.454  , -1604.1907 , -2779.9915 , ...,  -897.64685,
          -2749.5984 , -3935.4094 ]],

        [[-1781.4088 , -1080.5197 ,  1912.1372 , ...,  2786.1687 ,
          -1266.6765 , -1150.9292 ],
         [-2899.5398 , -1870.1909 ,  2747.5125 , ...,   171.8586 ,
          -3904.5586 , -3961.0278 ],
         [-4372.9785 , -3616.8306 ,  -140.6271 , ..., -2474.1943 ,
          -4226.1953 , -5264.606  ],
         ...,
         [-2517.8    , -3568.1758 , -2736.2146 , ...,  1978.1178 ,
           1868.3157 ,   430.47177],
         [-3268.8022 , -1565.2574 , -1877.9845 , ...,  2484.421  ,
           -339.5256 , -2586.8152 ],
         [-2511.454  , -1604.1907 , -2779.9915 , ...,  -897.64685,
          -2749.5984 , -3935.4094 ]],

        [[-1781.4088 , -1080.5197 ,  1912.1372 , ...,  2786.1687 ,
          -1266.6765 , -1150.9292 ],
         [-2899.5398 , -1870.1909 ,  2747.5125 , ...,   171.8586 ,
          -3904.5586 , -3961.0278 ],
         [-4372.9785 , -3616.8306 ,  -140.6271 , ..., -2474.1943 ,
          -4226.1953 , -5264.606  ],
         ...,
         [-2517.8    , -3568.1758 , -2736.2146 , ...,  1978.1178 ,
           1868.3157 ,   430.47177],
         [-3268.8022 , -1565.2574 , -1877.9845 , ...,  2484.421  ,
           -339.5256 , -2586.8152 ],
         [-2511.454  , -1604.1907 , -2779.9915 , ...,  -897.64685,
          -2749.5984 , -3935.4094 ]],

        ...,

        [[-1781.4088 , -1080.5197 ,  1912.1372 , ...,  2786.1687 ,
          -1266.6765 , -1150.9292 ],
         [-2899.5398 , -1870.1909 ,  2747.5125 , ...,   171.8586 ,
          -3904.5586 , -3961.0278 ],
         [-4372.9785 , -3616.8306 ,  -140.6271 , ..., -2474.1943 ,
          -4226.1953 , -5264.606  ],
         ...,
         [-2517.8    , -3568.1758 , -2736.2146 , ...,  1978.1178 ,
           1868.3157 ,   430.47177],
         [-3268.8022 , -1565.2574 , -1877.9845 , ...,  2484.421  ,
           -339.5256 , -2586.8152 ],
         [-2511.454  , -1604.1907 , -2779.9915 , ...,  -897.64685,
          -2749.5984 , -3935.4094 ]],

        [[-1781.4088 , -1080.5197 ,  1912.1372 , ...,  2786.1687 ,
          -1266.6765 , -1150.9292 ],
         [-2899.5398 , -1870.1909 ,  2747.5125 , ...,   171.8586 ,
          -3904.5586 , -3961.0278 ],
         [-4372.9785 , -3616.8306 ,  -140.6271 , ..., -2474.1943 ,
          -4226.1953 , -5264.606  ],
         ...,
         [-2517.8    , -3568.1758 , -2736.2146 , ...,  1978.1178 ,
           1868.3157 ,   430.47177],
         [-3268.8022 , -1565.2574 , -1877.9845 , ...,  2484.421  ,
           -339.5256 , -2586.8152 ],
         [-2511.454  , -1604.1907 , -2779.9915 , ...,  -897.64685,
          -2749.5984 , -3935.4094 ]],

        [[-1781.4088 , -1080.5197 ,  1912.1372 , ...,  2786.1687 ,
          -1266.6765 , -1150.9292 ],
         [-2899.5398 , -1870.1909 ,  2747.5125 , ...,   171.8586 ,
          -3904.5586 , -3961.0278 ],
         [-4372.9785 , -3616.8306 ,  -140.6271 , ..., -2474.1943 ,
          -4226.1953 , -5264.606  ],
         ...,
         [-2517.8    , -3568.1758 , -2736.2146 , ...,  1978.1178 ,
           1868.3157 ,   430.47177],
         [-3268.8022 , -1565.2574 , -1877.9845 , ...,  2484.421  ,
           -339.5256 , -2586.8152 ],
         [-2511.454  , -1604.1907 , -2779.9915 , ...,  -897.64685,
          -2749.5984 , -3935.4094 ]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [5], 'to': [3]}
torch node:
{'name': 'conv2d', 'output': array([[[[-1781.411  , -1080.5118 ,  1912.1562 , ...,  2786.1711 ,
          -1266.6942 , -1150.94   ],
         [-2899.5305 , -1870.1846 ,  2747.5579 , ...,   171.85945,
          -3904.5496 , -3961.0417 ],
         [-4372.9062 , -3616.7917 ,  -140.62642, ..., -2474.1853 ,
          -4226.1704 , -5264.5503 ],
         ...,
         [-2517.8042 , -3568.1628 , -2736.2344 , ...,  1978.1456 ,
           1868.3146 ,   430.47812],
         [-3268.7913 , -1565.2701 , -1878.0299 , ...,  2484.4387 ,
           -339.52042, -2586.8303 ],
         [-2511.4355 , -1604.1742 , -2780.0046 , ...,  -897.6534 ,
          -2749.6184 , -3935.4033 ]],

        [[-1781.411  , -1080.5118 ,  1912.1562 , ...,  2786.1711 ,
          -1266.6942 , -1150.94   ],
         [-2899.5305 , -1870.1846 ,  2747.5579 , ...,   171.85945,
          -3904.5496 , -3961.0417 ],
         [-4372.9062 , -3616.7917 ,  -140.62642, ..., -2474.1853 ,
          -4226.1704 , -5264.5503 ],
         ...,
         [-2517.8042 , -3568.1628 , -2736.2344 , ...,  1978.1456 ,
           1868.3146 ,   430.47812],
         [-3268.7913 , -1565.2701 , -1878.0299 , ...,  2484.4387 ,
           -339.52042, -2586.8303 ],
         [-2511.4355 , -1604.1742 , -2780.0046 , ...,  -897.6534 ,
          -2749.6184 , -3935.4033 ]],

        [[-1781.411  , -1080.5118 ,  1912.1562 , ...,  2786.1711 ,
          -1266.6942 , -1150.94   ],
         [-2899.5305 , -1870.1846 ,  2747.5579 , ...,   171.85945,
          -3904.5496 , -3961.0417 ],
         [-4372.9062 , -3616.7917 ,  -140.62642, ..., -2474.1853 ,
          -4226.1704 , -5264.5503 ],
         ...,
         [-2517.8042 , -3568.1628 , -2736.2344 , ...,  1978.1456 ,
           1868.3146 ,   430.47812],
         [-3268.7913 , -1565.2701 , -1878.0299 , ...,  2484.4387 ,
           -339.52042, -2586.8303 ],
         [-2511.4355 , -1604.1742 , -2780.0046 , ...,  -897.6534 ,
          -2749.6184 , -3935.4033 ]],

        ...,

        [[-1781.411  , -1080.5118 ,  1912.1562 , ...,  2786.1711 ,
          -1266.6942 , -1150.94   ],
         [-2899.5305 , -1870.1846 ,  2747.5579 , ...,   171.85945,
          -3904.5496 , -3961.0417 ],
         [-4372.9062 , -3616.7917 ,  -140.62642, ..., -2474.1853 ,
          -4226.1704 , -5264.5503 ],
         ...,
         [-2517.8042 , -3568.1628 , -2736.2344 , ...,  1978.1456 ,
           1868.3146 ,   430.47812],
         [-3268.7913 , -1565.2701 , -1878.0299 , ...,  2484.4387 ,
           -339.52042, -2586.8303 ],
         [-2511.4355 , -1604.1742 , -2780.0046 , ...,  -897.6534 ,
          -2749.6184 , -3935.4033 ]],

        [[-1781.411  , -1080.5118 ,  1912.1562 , ...,  2786.1711 ,
          -1266.6942 , -1150.94   ],
         [-2899.5305 , -1870.1846 ,  2747.5579 , ...,   171.85945,
          -3904.5496 , -3961.0417 ],
         [-4372.9062 , -3616.7917 ,  -140.62642, ..., -2474.1853 ,
          -4226.1704 , -5264.5503 ],
         ...,
         [-2517.8042 , -3568.1628 , -2736.2344 , ...,  1978.1456 ,
           1868.3146 ,   430.47812],
         [-3268.7913 , -1565.2701 , -1878.0299 , ...,  2484.4387 ,
           -339.52042, -2586.8303 ],
         [-2511.4355 , -1604.1742 , -2780.0046 , ...,  -897.6534 ,
          -2749.6184 , -3935.4033 ]],

        [[-1781.411  , -1080.5118 ,  1912.1562 , ...,  2786.1711 ,
          -1266.6942 , -1150.94   ],
         [-2899.5305 , -1870.1846 ,  2747.5579 , ...,   171.85945,
          -3904.5496 , -3961.0417 ],
         [-4372.9062 , -3616.7917 ,  -140.62642, ..., -2474.1853 ,
          -4226.1704 , -5264.5503 ],
         ...,
         [-2517.8042 , -3568.1628 , -2736.2344 , ...,  1978.1456 ,
           1868.3146 ,   430.47812],
         [-3268.7913 , -1565.2701 , -1878.0299 , ...,  2484.4387 ,
           -339.52042, -2586.8303 ],
         [-2511.4355 , -1604.1742 , -2780.0046 , ...,  -897.6534 ,
          -2749.6184 , -3935.4033 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [5], 'to': [3]}

generate models:2

analyse output arrays in iter:4

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[ 5.058655  ,  5.058655  ,  5.058655  , ...,  5.058655  ,
           5.058655  ,  5.058655  ],
         [-9.513504  , -9.513504  , -9.513504  , ..., -9.513504  ,
          -9.513504  , -9.513504  ],
         [ 2.6470184 ,  2.6470184 ,  2.6470184 , ...,  2.6470184 ,
           2.6470184 ,  2.6470184 ],
         ...,
         [ 1.486023  ,  1.486023  ,  1.486023  , ...,  1.486023  ,
           1.486023  ,  1.486023  ],
         [ 2.4854736 ,  2.4854736 ,  2.4854736 , ...,  2.4854736 ,
           2.4854736 ,  2.4854736 ],
         [ 4.90882   ,  4.90882   ,  4.90882   , ...,  4.90882   ,
           4.90882   ,  4.90882   ]],

        [[ 6.2626953 ,  6.2626953 ,  6.2626953 , ...,  6.2626953 ,
           6.2626953 ,  6.2626953 ],
         [-1.8053131 , -1.8053131 , -1.8053131 , ..., -1.8053131 ,
          -1.8053131 , -1.8053131 ],
         [ 7.4021606 ,  7.4021606 ,  7.4021606 , ...,  7.4021606 ,
           7.4021606 ,  7.4021606 ],
         ...,
         [-2.4889374 , -2.4889374 , -2.4889374 , ..., -2.4889374 ,
          -2.4889374 , -2.4889374 ],
         [-1.7423172 , -1.7423172 , -1.7423172 , ..., -1.7423172 ,
          -1.7423172 , -1.7423172 ],
         [ 2.3464966 ,  2.3464966 ,  2.3464966 , ...,  2.3464966 ,
           2.3464966 ,  2.3464966 ]],

        [[-2.7208939 , -2.7208939 , -2.7208939 , ..., -2.7208939 ,
          -2.7208939 , -2.7208939 ],
         [-0.89141846, -0.89141846, -0.89141846, ..., -0.89141846,
          -0.89141846, -0.89141846],
         [-4.47764   , -4.47764   , -4.47764   , ..., -4.47764   ,
          -4.47764   , -4.47764   ],
         ...,
         [-2.0386152 , -2.0386152 , -2.0386152 , ..., -2.0386152 ,
          -2.0386152 , -2.0386152 ],
         [-3.283142  , -3.283142  , -3.283142  , ..., -3.283142  ,
          -3.283142  , -3.283142  ],
         [-4.8820457 , -4.8820457 , -4.8820457 , ..., -4.8820457 ,
          -4.8820457 , -4.8820457 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [1]}
ms node:
{'name': 'linear', 'output': array([[[[ 5.0581164 ,  5.0581164 ,  5.0581164 , ...,  5.0581155 ,
           5.0581155 ,  5.0581155 ],
         [-9.5120945 , -9.5120945 , -9.5120945 , ..., -9.5120945 ,
          -9.5120945 , -9.5120945 ],
         [ 2.645127  ,  2.645127  ,  2.645127  , ...,  2.6451273 ,
           2.6451273 ,  2.6451273 ],
         ...,
         [ 1.4852562 ,  1.4852562 ,  1.4852562 , ...,  1.4852571 ,
           1.4852571 ,  1.4852571 ],
         [ 2.485203  ,  2.485203  ,  2.485203  , ...,  2.4852026 ,
           2.4852026 ,  2.4852026 ],
         [ 4.9074407 ,  4.9074407 ,  4.9074407 , ...,  4.9074416 ,
           4.9074416 ,  4.9074416 ]],

        [[ 6.2620454 ,  6.2620454 ,  6.2620454 , ...,  6.262045  ,
           6.262045  ,  6.262045  ],
         [-1.8053322 , -1.8053322 , -1.8053322 , ..., -1.8053312 ,
          -1.8053312 , -1.8053312 ],
         [ 7.4024067 ,  7.4024067 ,  7.4024067 , ...,  7.4024076 ,
           7.4024076 ,  7.4024076 ],
         ...,
         [-2.488411  , -2.488411  , -2.488411  , ..., -2.488411  ,
          -2.488411  , -2.488411  ],
         [-1.7435575 , -1.7435575 , -1.7435575 , ..., -1.7435573 ,
          -1.7435573 , -1.7435573 ],
         [ 2.346393  ,  2.346393  ,  2.346393  , ...,  2.346393  ,
           2.346393  ,  2.346393  ]],

        [[-2.719843  , -2.719843  , -2.719843  , ..., -2.7198436 ,
          -2.7198436 , -2.7198436 ],
         [-0.8904507 , -0.8904507 , -0.8904507 , ..., -0.89045024,
          -0.89045024, -0.89045024],
         [-4.476486  , -4.476486  , -4.476486  , ..., -4.476486  ,
          -4.476486  , -4.476486  ],
         ...,
         [-2.039755  , -2.039755  , -2.039755  , ..., -2.0397544 ,
          -2.0397544 , -2.0397544 ],
         [-3.28343   , -3.28343   , -3.28343   , ..., -3.2834299 ,
          -3.2834299 , -3.2834299 ],
         [-4.8822246 , -4.8822246 , -4.8822246 , ..., -4.882225  ,
          -4.882225  , -4.882225  ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [1]}
torch node:
{'name': 'linear', 'output': array([[[[ 5.0581164 ,  5.0581164 ,  5.0581164 , ...,  5.0581155 ,
           5.0581155 ,  5.0581155 ],
         [-9.5120945 , -9.5120945 , -9.5120945 , ..., -9.5120945 ,
          -9.5120945 , -9.5120945 ],
         [ 2.645127  ,  2.645127  ,  2.645127  , ...,  2.6451273 ,
           2.6451273 ,  2.6451273 ],
         ...,
         [ 1.4852562 ,  1.4852562 ,  1.4852562 , ...,  1.4852571 ,
           1.4852571 ,  1.4852571 ],
         [ 2.485203  ,  2.485203  ,  2.485203  , ...,  2.4852026 ,
           2.4852026 ,  2.4852026 ],
         [ 4.9074407 ,  4.9074407 ,  4.9074407 , ...,  4.9074416 ,
           4.9074416 ,  4.9074416 ]],

        [[ 6.2620454 ,  6.2620454 ,  6.2620454 , ...,  6.262045  ,
           6.262045  ,  6.262045  ],
         [-1.8053322 , -1.8053322 , -1.8053322 , ..., -1.8053312 ,
          -1.8053312 , -1.8053312 ],
         [ 7.4024067 ,  7.4024067 ,  7.4024067 , ...,  7.4024076 ,
           7.4024076 ,  7.4024076 ],
         ...,
         [-2.488411  , -2.488411  , -2.488411  , ..., -2.488411  ,
          -2.488411  , -2.488411  ],
         [-1.7435575 , -1.7435575 , -1.7435575 , ..., -1.7435573 ,
          -1.7435573 , -1.7435573 ],
         [ 2.346393  ,  2.346393  ,  2.346393  , ...,  2.346393  ,
           2.346393  ,  2.346393  ]],

        [[-2.719843  , -2.719843  , -2.719843  , ..., -2.7198436 ,
          -2.7198436 , -2.7198436 ],
         [-0.8904507 , -0.8904507 , -0.8904507 , ..., -0.89045024,
          -0.89045024, -0.89045024],
         [-4.476486  , -4.476486  , -4.476486  , ..., -4.476486  ,
          -4.476486  , -4.476486  ],
         ...,
         [-2.039755  , -2.039755  , -2.039755  , ..., -2.0397544 ,
          -2.0397544 , -2.0397544 ],
         [-3.28343   , -3.28343   , -3.28343   , ..., -3.2834299 ,
          -3.2834299 , -3.2834299 ],
         [-4.8822246 , -4.8822246 , -4.8822246 , ..., -4.882225  ,
          -4.882225  , -4.882225  ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [1]}

generate models:4

analyse the exceptions in iter:5
torch exception:
{'id': 4, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          ...,
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992]],

         [[16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          ...,
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992]],

         [[16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          ...,
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992],
          [16782.1973, 16782.1973, 16782.1973,  ..., 16782.1992,
           16782.1992, 16782.1992]],

         ...,

         [[    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          ...,
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000]],

         [[    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          ...,
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000]],

         [[    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          ...,
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000],
          [    0.0000,     0.0000,     0.0000,  ...,     0.0000,
               0.0000,     0.0000]]]], grad_fn=<AddBackward0>)]}
Given groups=1, weight of size [128, 128, 3, 3], expected input[1, 512, 16, 100] to have 128 channels, but got 512 channels instead
mindspore exception:
{'id': 4, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 512, 16, 100], dtype=Float32, value=
[[[[1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   ...
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004]],
  [[1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   ...
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004]],
  [[1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   ...
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004],
   [1.67821973e+004, 1.67821973e+004, 1.67821973e+004 ... 1.67821992e+004, 1.67821992e+004, 1.67821992e+004]],
  ...
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 512, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:5

analyse the exceptions in iter:7
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.0000, 0.0000, 0.0000,  ..., 1.6438, 0.0000, 1.4766],
          [0.2077, 0.0000, 0.0000,  ..., 0.0000, 0.4353, 0.1836],
          [0.0000, 1.0731, 0.0000,  ..., 0.0000, 0.4305, 0.0000],
          ...,
          [0.6085, 0.0000, 0.0000,  ..., 1.2722, 1.0309, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.6888, 1.1456, 0.2310],
          [0.0000, 0.0000, 0.3313,  ..., 0.0000, 0.0000, 0.0000]],

         [[0.0000, 1.2750, 0.0000,  ..., 0.0000, 1.5514, 0.0000],
          [0.5862, 0.0000, 0.0000,  ..., 1.0526, 0.7355, 0.0000],
          [0.0000, 0.0000, 0.3145,  ..., 0.0000, 0.8128, 0.1599],
          ...,
          [0.4904, 0.2344, 0.4192,  ..., 0.8617, 0.6375, 0.6269],
          [0.0000, 0.5140, 0.0000,  ..., 0.0000, 1.6725, 1.2503],
          [0.2048, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

         [[0.7676, 0.0000, 1.0505,  ..., 1.4793, 0.6351, 0.0000],
          [0.3277, 0.1926, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          [0.6309, 0.0000, 0.0000,  ..., 0.0000, 0.0748, 0.1528],
          ...,
          [0.0000, 1.7284, 0.0000,  ..., 0.0000, 0.0000, 1.1820],
          [0.2921, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          [1.5800, 0.7617, 1.0833,  ..., 1.9156, 0.3923, 0.5261]]]])]}
Given groups=1, weight of size [256, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 1.64381814e+000, 0.00000000e+000, 1.47657633e+000],
   [2.07650840e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 4.35270220e-001, 1.83645889e-001],
   [0.00000000e+000, 1.07306731e+000, 0.00000000e+000 ... 0.00000000e+000, 4.30545270e-001, 0.00000000e+000],
   ...
   [6.08536065e-001, 0.00000000e+000, 0.00000000e+000 ... 1.27217007e+000, 1.03091192e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 6.88763618e-001, 1.14555979e+000, 2.30961114e-001],
   [0.00000000e+000, 0.00000000e+000, 3.31288159e-001 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 1.27497458e+000, 0.00000000e+000 ... 0.00000000e+000, 1.55139279e+000, 0.00000000e+000],
   [5.86183012e-001, 0.00000000e+000, 0.00000000e+000 ... 1.05258942e+000, 7.35466778e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 3.14450890e-001 ... 0.00000000e+000, 8.12751114e-001, 1.59869358e-001],
   ...
   [4.90394652e-001, 2.34441116e-001, 4.19198036e-001 ... 8.61685336e-001, 6.37450993e-001, 6.26926303e-001],
   [0.00000000e+000, 5.13980687e-001, 0.00000000e+000 ... 0.00000000e+000, 1.67248487e+000, 1.25028718e+000],
   [2.04845384e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[7.67578602e-001, 0.00000000e+000, 1.05054820e+000 ... 1.47930598e+000, 6.35051429e-001, 0.00000000e+000],
   [3.27704638e-001, 1.92585409e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [6.30886316e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 7.48091489e-002, 1.52775541e-001],
   ...
   [0.00000000e+000, 1.72837961e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 1.18201876e+000],
   [2.92055368e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [1.57995474e+000, 7.61669993e-001, 1.08328307e+000 ... 1.91559231e+000, 3.92318100e-001, 5.26076496e-001]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:7

analyse the exceptions in iter:8
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-1.0359,  0.6172,  0.4268,  ...,  1.2042, -0.2062,  0.2331],
           [ 0.3362,  0.3503, -1.1151,  ...,  1.8123, -0.2711,  0.9806],
           [ 0.1855, -0.8265,  1.9179,  ...,  0.1439, -0.0699,  0.7416],
           ...,
           [ 0.4075,  0.8749, -0.7099,  ...,  0.2067,  0.8186, -0.0469],
           [-0.6039,  1.9436,  0.8902,  ..., -0.4271, -1.6179,  0.6608],
           [-1.1403,  2.3422, -1.6060,  ...,  0.5496, -0.7149,  1.7562]],

          [[ 0.8750,  0.3520,  0.1265,  ...,  0.6681, -1.6043, -1.1695],
           [ 2.8693, -0.0329,  1.9052,  ...,  1.9897,  0.2667, -1.3178],
           [-0.4801,  0.1486,  1.5074,  ...,  0.7451,  0.3530,  0.3555],
           ...,
           [-0.5949, -0.5024, -0.7646,  ..., -0.4288,  1.2806,  1.5650],
           [-0.8790,  0.1495, -0.2802,  ..., -0.4847, -0.6503, -0.1101],
           [ 1.8086, -0.4647, -1.5546,  ..., -0.2056,  0.0330, -0.2139]],

          [[-1.3111,  0.4992,  0.0399,  ...,  1.4099,  2.1671,  0.2368],
           [-0.0812, -0.9720, -1.9454,  ..., -0.9710, -0.4374, -0.6682],
           [ 2.1417, -0.1652,  0.0529,  ...,  3.0819, -0.5757,  0.2816],
           ...,
           [-2.5712, -1.0940,  1.0292,  ..., -0.1386,  0.2215, -0.4797],
           [-0.1753, -0.7384,  1.5767,  ...,  0.6721, -1.1749,  1.5882],
           [ 0.0798, -0.5987, -0.0950,  ...,  0.2098,  1.1480,  0.2398]]]]])}
Given groups=1, weight of size [128, 128, 3, 3], expected input[1, 3, 32, 32] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-1.03585386e+000, 6.17156029e-001, 4.26762760e-001 ... 1.20418799e+000, -2.06218526e-001, 2.33126521e-001],
    [3.36226434e-001, 3.50280255e-001, -1.11510336e+000 ... 1.81234705e+000, -2.71099627e-001, 9.80627656e-001],
    [1.85537800e-001, -8.26528072e-001, 1.91792107e+000 ... 1.43917724e-001, -6.99495450e-002, 7.41557896e-001],
    ...
    [4.07548308e-001, 8.74850333e-001, -7.09939957e-001 ... 2.06697240e-001, 8.18603277e-001, -4.68559973e-002],
    [-6.03856981e-001, 1.94363761e+000, 8.90225232e-001 ... -4.27059114e-001, -1.61794245e+000, 6.60835445e-001],
    [-1.14032257e+000, 2.34217286e+000, -1.60604370e+000 ... 5.49620748e-001, -7.14883745e-001, 1.75623930e+000]],
   [[8.74996543e-001, 3.51981014e-001, 1.26539066e-001 ... 6.68085933e-001, -1.60431015e+000, -1.16951358e+000],
    [2.86931920e+000, -3.28815058e-002, 1.90517056e+000 ... 1.98968232e+000, 2.66668439e-001, -1.31776965e+000],
    [-4.80081737e-001, 1.48619249e-001, 1.50740695e+000 ... 7.45067239e-001, 3.53041798e-001, 3.55530471e-001],
    ...
    [-5.94862282e-001, -5.02367973e-001, -7.64591753e-001 ... -4.28781718e-001, 1.28055227e+000, 1.56497359e+000],
    [-8.79049122e-001, 1.49482399e-001, -2.80203044e-001 ... -4.84692484e-001, -6.50293589e-001, -1.10090844e-001],
    [1.80855811e+000, -4.64704573e-001, -1.55464232e+000 ... -2.05611482e-001, 3.30064557e-002, -2.13898137e-001]],
   [[-1.31112397e+000, 4.99239355e-001, 3.98861580e-002 ... 1.40993893e+000, 2.16711831e+000, 2.36833960e-001],
    [-8.12068582e-002, -9.72021699e-001, -1.94539177e+000 ... -9.70966995e-001, -4.37401980e-001, -6.68232381e-001],
    [2.14171410e+000, -1.65209606e-001, 5.29011749e-002 ... 3.08191586e+000, -5.75717092e-001, 2.81577706e-001],
    ...
    [-2.57122612e+000, -1.09404898e+000, 1.02916276e+000 ... -1.38589412e-001, 2.21486747e-001, -4.79690313e-001],
    [-1.75298437e-001, -7.38408327e-001, 1.57672453e+000 ... 6.72107220e-001, -1.17485428e+000, 1.58824718e+000],
    [7.97525197e-002, -5.98716080e-001, -9.50215831e-002 ... 2.09771648e-001, 1.14801741e+000, 2.39825547e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:8

final statics:
total operators:28
tensorflow --> nums:2,distinct_bugs:2
mindspore --> nums:3,distinct_bugs:1
torch --> nums:3,distinct_bugs:1
tensorflow --> 
conv2d:1
linear:1
mindspore --> 
conv2d:3
torch --> 
conv2d:3

generate models:9

analyse output arrays in iter:12

pre layer res:
7:add
{'name': 'add', 'output': array([[[[ 1.7943143 , -2.226986  ,  2.2478108 , ...,  1.1211598 ,
          -1.2374158 ,  1.845036  ],
         [-2.1500487 , -1.7563769 ,  2.2195702 , ...,  1.9984312 ,
           1.5852561 ,  1.9848385 ],
         [-2.5337515 ,  0.7151282 ,  2.4745839 , ...,  0.67786646,
          -2.1604667 ,  1.8447268 ],
         ...,
         [-2.2718441 , -1.8667054 , -0.7979728 , ...,  1.1558038 ,
          -2.5485847 , -0.39201427],
         [ 0.834684  , -0.14915106,  1.6782675 , ...,  2.3020349 ,
          -1.3952911 , -2.158771  ],
         [ 0.5539924 , -2.1324096 ,  2.419938  , ..., -2.2194512 ,
          -2.568555  , -1.2625369 ]],

        [[ 1.7943143 , -2.226986  ,  2.2478108 , ...,  1.1211598 ,
          -1.2374158 ,  1.845036  ],
         [-2.1500487 , -1.7563769 ,  2.2195702 , ...,  1.9984312 ,
           1.5852561 ,  1.9848385 ],
         [-2.5337515 ,  0.7151282 ,  2.4745839 , ...,  0.67786646,
          -2.1604667 ,  1.8447268 ],
         ...,
         [-2.2718441 , -1.8667054 , -0.7979728 , ...,  1.1558038 ,
          -2.5485847 , -0.39201427],
         [ 0.834684  , -0.14915106,  1.6782675 , ...,  2.3020349 ,
          -1.3952911 , -2.158771  ],
         [ 0.5539924 , -2.1324096 ,  2.419938  , ..., -2.2194512 ,
          -2.568555  , -1.2625369 ]],

        [[ 1.7943143 , -2.226986  ,  2.2478108 , ...,  1.1211598 ,
          -1.2374158 ,  1.845036  ],
         [-2.1500487 , -1.7563769 ,  2.2195702 , ...,  1.9984312 ,
           1.5852561 ,  1.9848385 ],
         [-2.5337515 ,  0.7151282 ,  2.4745839 , ...,  0.67786646,
          -2.1604667 ,  1.8447268 ],
         ...,
         [-2.2718441 , -1.8667054 , -0.7979728 , ...,  1.1558038 ,
          -2.5485847 , -0.39201427],
         [ 0.834684  , -0.14915106,  1.6782675 , ...,  2.3020349 ,
          -1.3952911 , -2.158771  ],
         [ 0.5539924 , -2.1324096 ,  2.419938  , ..., -2.2194512 ,
          -2.568555  , -1.2625369 ]],

        ...,

        [[ 1.7943143 , -2.226986  ,  2.2478108 , ...,  1.1211598 ,
          -1.2374158 ,  1.845036  ],
         [-2.1500487 , -1.7563769 ,  2.2195702 , ...,  1.9984312 ,
           1.5852561 ,  1.9848385 ],
         [-2.5337515 ,  0.7151282 ,  2.4745839 , ...,  0.67786646,
          -2.1604667 ,  1.8447268 ],
         ...,
         [-2.2718441 , -1.8667054 , -0.7979728 , ...,  1.1558038 ,
          -2.5485847 , -0.39201427],
         [ 0.834684  , -0.14915106,  1.6782675 , ...,  2.3020349 ,
          -1.3952911 , -2.158771  ],
         [ 0.5539924 , -2.1324096 ,  2.419938  , ..., -2.2194512 ,
          -2.568555  , -1.2625369 ]],

        [[ 1.7943143 , -2.226986  ,  2.2478108 , ...,  1.1211598 ,
          -1.2374158 ,  1.845036  ],
         [-2.1500487 , -1.7563769 ,  2.2195702 , ...,  1.9984312 ,
           1.5852561 ,  1.9848385 ],
         [-2.5337515 ,  0.7151282 ,  2.4745839 , ...,  0.67786646,
          -2.1604667 ,  1.8447268 ],
         ...,
         [-2.2718441 , -1.8667054 , -0.7979728 , ...,  1.1558038 ,
          -2.5485847 , -0.39201427],
         [ 0.834684  , -0.14915106,  1.6782675 , ...,  2.3020349 ,
          -1.3952911 , -2.158771  ],
         [ 0.5539924 , -2.1324096 ,  2.419938  , ..., -2.2194512 ,
          -2.568555  , -1.2625369 ]],

        [[ 1.7943143 , -2.226986  ,  2.2478108 , ...,  1.1211598 ,
          -1.2374158 ,  1.845036  ],
         [-2.1500487 , -1.7563769 ,  2.2195702 , ...,  1.9984312 ,
           1.5852561 ,  1.9848385 ],
         [-2.5337515 ,  0.7151282 ,  2.4745839 , ...,  0.67786646,
          -2.1604667 ,  1.8447268 ],
         ...,
         [-2.2718441 , -1.8667054 , -0.7979728 , ...,  1.1558038 ,
          -2.5485847 , -0.39201427],
         [ 0.834684  , -0.14915106,  1.6782675 , ...,  2.3020349 ,
          -1.3952911 , -2.158771  ],
         [ 0.5539924 , -2.1324096 ,  2.419938  , ..., -2.2194512 ,
          -2.568555  , -1.2625369 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 32, 32]), 'from': [4, 8], 'to': [2]}
tf node:
{'name': 'linear', 'output': array([[[[ -0.66900635,  -0.66900635,  -0.66900635, ...,  -0.66900635,
           -0.66900635,  -0.66900635],
         [ -4.644409  ,  -4.644409  ,  -4.644409  , ...,  -4.644409  ,
           -4.644409  ,  -4.644409  ],
         [-15.673218  , -15.673218  , -15.673218  , ..., -15.673218  ,
          -15.673218  , -15.673218  ],
         ...,
         [ -3.8083496 ,  -3.8083496 ,  -3.8083496 , ...,  -3.8083496 ,
           -3.8083496 ,  -3.8083496 ],
         [ 19.408081  ,  19.408081  ,  19.408081  , ...,  19.408081  ,
           19.408081  ,  19.408081  ],
         [ -8.489319  ,  -8.489319  ,  -8.489319  , ...,  -8.489319  ,
           -8.489319  ,  -8.489319  ]],

        [[ -0.66900635,  -0.66900635,  -0.66900635, ...,  -0.66900635,
           -0.66900635,  -0.66900635],
         [ -4.644409  ,  -4.644409  ,  -4.644409  , ...,  -4.644409  ,
           -4.644409  ,  -4.644409  ],
         [-15.673218  , -15.673218  , -15.673218  , ..., -15.673218  ,
          -15.673218  , -15.673218  ],
         ...,
         [ -3.8083496 ,  -3.8083496 ,  -3.8083496 , ...,  -3.8083496 ,
           -3.8083496 ,  -3.8083496 ],
         [ 19.408081  ,  19.408081  ,  19.408081  , ...,  19.408081  ,
           19.408081  ,  19.408081  ],
         [ -8.489319  ,  -8.489319  ,  -8.489319  , ...,  -8.489319  ,
           -8.489319  ,  -8.489319  ]],

        [[ -0.66900635,  -0.66900635,  -0.66900635, ...,  -0.66900635,
           -0.66900635,  -0.66900635],
         [ -4.644409  ,  -4.644409  ,  -4.644409  , ...,  -4.644409  ,
           -4.644409  ,  -4.644409  ],
         [-15.673218  , -15.673218  , -15.673218  , ..., -15.673218  ,
          -15.673218  , -15.673218  ],
         ...,
         [ -3.8083496 ,  -3.8083496 ,  -3.8083496 , ...,  -3.8083496 ,
           -3.8083496 ,  -3.8083496 ],
         [ 19.408081  ,  19.408081  ,  19.408081  , ...,  19.408081  ,
           19.408081  ,  19.408081  ],
         [ -8.489319  ,  -8.489319  ,  -8.489319  , ...,  -8.489319  ,
           -8.489319  ,  -8.489319  ]],

        ...,

        [[ -0.66900635,  -0.66900635,  -0.66900635, ...,  -0.66900635,
           -0.66900635,  -0.66900635],
         [ -4.644409  ,  -4.644409  ,  -4.644409  , ...,  -4.644409  ,
           -4.644409  ,  -4.644409  ],
         [-15.673218  , -15.673218  , -15.673218  , ..., -15.673218  ,
          -15.673218  , -15.673218  ],
         ...,
         [ -3.8083496 ,  -3.8083496 ,  -3.8083496 , ...,  -3.8083496 ,
           -3.8083496 ,  -3.8083496 ],
         [ 19.408081  ,  19.408081  ,  19.408081  , ...,  19.408081  ,
           19.408081  ,  19.408081  ],
         [ -8.489319  ,  -8.489319  ,  -8.489319  , ...,  -8.489319  ,
           -8.489319  ,  -8.489319  ]],

        [[ -0.66900635,  -0.66900635,  -0.66900635, ...,  -0.66900635,
           -0.66900635,  -0.66900635],
         [ -4.644409  ,  -4.644409  ,  -4.644409  , ...,  -4.644409  ,
           -4.644409  ,  -4.644409  ],
         [-15.673218  , -15.673218  , -15.673218  , ..., -15.673218  ,
          -15.673218  , -15.673218  ],
         ...,
         [ -3.8083496 ,  -3.8083496 ,  -3.8083496 , ...,  -3.8083496 ,
           -3.8083496 ,  -3.8083496 ],
         [ 19.408081  ,  19.408081  ,  19.408081  , ...,  19.408081  ,
           19.408081  ,  19.408081  ],
         [ -8.489319  ,  -8.489319  ,  -8.489319  , ...,  -8.489319  ,
           -8.489319  ,  -8.489319  ]],

        [[ -0.66900635,  -0.66900635,  -0.66900635, ...,  -0.66900635,
           -0.66900635,  -0.66900635],
         [ -4.644409  ,  -4.644409  ,  -4.644409  , ...,  -4.644409  ,
           -4.644409  ,  -4.644409  ],
         [-15.673218  , -15.673218  , -15.673218  , ..., -15.673218  ,
          -15.673218  , -15.673218  ],
         ...,
         [ -3.8083496 ,  -3.8083496 ,  -3.8083496 , ...,  -3.8083496 ,
           -3.8083496 ,  -3.8083496 ],
         [ 19.408081  ,  19.408081  ,  19.408081  , ...,  19.408081  ,
           19.408081  ,  19.408081  ],
         [ -8.489319  ,  -8.489319  ,  -8.489319  , ...,  -8.489319  ,
           -8.489319  ,  -8.489319  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 32, 100]), 'from': [7], 'to': []}
ms node:
{'name': 'linear', 'output': array([[[[ -0.66711426,  -0.66711426,  -0.66711426, ...,  -0.6671152 ,
           -0.6671152 ,  -0.6671152 ],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.8117094 ,
           -3.8117094 ,  -3.8117094 ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.66711426,  -0.66711426,  -0.66711426, ...,  -0.6671152 ,
           -0.6671152 ,  -0.6671152 ],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.8117094 ,
           -3.8117094 ,  -3.8117094 ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.66711426,  -0.66711426,  -0.66711426, ...,  -0.6671152 ,
           -0.6671152 ,  -0.6671152 ],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.8117094 ,
           -3.8117094 ,  -3.8117094 ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        ...,

        [[ -0.66711426,  -0.66711426,  -0.66711426, ...,  -0.6671152 ,
           -0.6671152 ,  -0.6671152 ],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.8117094 ,
           -3.8117094 ,  -3.8117094 ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.66711426,  -0.66711426,  -0.66711426, ...,  -0.6671152 ,
           -0.6671152 ,  -0.6671152 ],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.8117094 ,
           -3.8117094 ,  -3.8117094 ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.66711426,  -0.66711426,  -0.66711426, ...,  -0.6671152 ,
           -0.6671152 ,  -0.6671152 ],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.8117094 ,
           -3.8117094 ,  -3.8117094 ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.4899025 ,  -8.4899025 ,  -8.4899025 , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]]]], dtype=float32), 'output_shape': (1, 128, 32, 100), 'from': [7], 'to': []}
torch node:
{'name': 'linear', 'output': array([[[[ -0.667114  ,  -0.667114  ,  -0.667114  , ...,  -0.66711473,
           -0.66711473,  -0.66711473],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.811709  ,
           -3.811709  ,  -3.811709  ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.667114  ,  -0.667114  ,  -0.667114  , ...,  -0.66711473,
           -0.66711473,  -0.66711473],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.811709  ,
           -3.811709  ,  -3.811709  ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.667114  ,  -0.667114  ,  -0.667114  , ...,  -0.66711473,
           -0.66711473,  -0.66711473],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.811709  ,
           -3.811709  ,  -3.811709  ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        ...,

        [[ -0.667114  ,  -0.667114  ,  -0.667114  , ...,  -0.66711473,
           -0.66711473,  -0.66711473],
         [ -4.638879  ,  -4.638879  ,  -4.638879  , ...,  -4.638881  ,
           -4.638881  ,  -4.638881  ],
         [-15.676458  , -15.676458  , -15.676458  , ..., -15.676452  ,
          -15.676452  , -15.676452  ],
         ...,
         [ -3.8117087 ,  -3.8117087 ,  -3.8117087 , ...,  -3.811709  ,
           -3.811709  ,  -3.811709  ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406136  ,
           19.406136  ,  19.406136  ],
         [ -8.489902  ,  -8.489902  ,  -8.489902  , ...,  -8.4899025 ,
           -8.4899025 ,  -8.4899025 ]],

        [[ -0.667122  ,  -0.667122  ,  -0.667122  , ...,  -0.66712224,
           -0.66712224,  -0.66712224],
         [ -4.638881  ,  -4.638881  ,  -4.638881  , ...,  -4.638883  ,
           -4.638883  ,  -4.638883  ],
         [-15.676456  , -15.676456  , -15.676456  , ..., -15.676453  ,
          -15.676453  , -15.676453  ],
         ...,
         [ -3.8117065 ,  -3.8117065 ,  -3.8117065 , ...,  -3.811706  ,
           -3.811706  ,  -3.811706  ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406134  ,
           19.406134  ,  19.406134  ],
         [ -8.4899    ,  -8.4899    ,  -8.4899    , ...,  -8.489899  ,
           -8.489899  ,  -8.489899  ]],

        [[ -0.667122  ,  -0.667122  ,  -0.667122  , ...,  -0.66712224,
           -0.66712224,  -0.66712224],
         [ -4.638881  ,  -4.638881  ,  -4.638881  , ...,  -4.638883  ,
           -4.638883  ,  -4.638883  ],
         [-15.676456  , -15.676456  , -15.676456  , ..., -15.676453  ,
          -15.676453  , -15.676453  ],
         ...,
         [ -3.8117065 ,  -3.8117065 ,  -3.8117065 , ...,  -3.811706  ,
           -3.811706  ,  -3.811706  ],
         [ 19.406136  ,  19.406136  ,  19.406136  , ...,  19.406134  ,
           19.406134  ,  19.406134  ],
         [ -8.4899    ,  -8.4899    ,  -8.4899    , ...,  -8.489899  ,
           -8.489899  ,  -8.489899  ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 32, 100]), 'from': [7], 'to': []}

generate models:10

analyse output arrays in iter:13

pre layer res:
4:add
{'name': 'add', 'output': array([[[[ 4.4599800e+00, -5.2517624e+00,  3.2986133e+00, ...,
          -2.1729131e+00,  4.5968304e+00, -1.7910137e+00],
         [-6.8576102e+00,  7.6067233e+00,  9.0870419e+00, ...,
          -3.6572695e-02,  7.7578330e+00, -7.8685794e+00],
         [-7.9162407e-01,  1.2947290e+01, -9.2158604e-01, ...,
           4.2064281e+00,  1.1958503e+01,  6.1835141e+00],
         ...,
         [-1.2028622e+01,  5.0967569e+00, -7.9160028e+00, ...,
           7.9802704e+00,  1.8263069e+01, -1.1697993e+00],
         [-7.0084481e+00, -5.0579667e-01, -1.0938044e+00, ...,
          -1.4659735e+01, -5.7043257e+00, -8.6652441e+00],
         [-5.9622993e+00,  5.4401927e+00,  1.1779783e+01, ...,
          -9.7400370e+00,  7.9694843e+00,  5.8615599e+00]],

        [[ 4.4599800e+00, -5.2517624e+00,  3.2986133e+00, ...,
          -2.1729131e+00,  4.5968304e+00, -1.7910137e+00],
         [-6.8576102e+00,  7.6067233e+00,  9.0870419e+00, ...,
          -3.6572695e-02,  7.7578330e+00, -7.8685794e+00],
         [-7.9162407e-01,  1.2947290e+01, -9.2158604e-01, ...,
           4.2064281e+00,  1.1958503e+01,  6.1835141e+00],
         ...,
         [-1.2028622e+01,  5.0967569e+00, -7.9160028e+00, ...,
           7.9802704e+00,  1.8263069e+01, -1.1697993e+00],
         [-7.0084481e+00, -5.0579667e-01, -1.0938044e+00, ...,
          -1.4659735e+01, -5.7043257e+00, -8.6652441e+00],
         [-5.9622993e+00,  5.4401927e+00,  1.1779783e+01, ...,
          -9.7400370e+00,  7.9694843e+00,  5.8615599e+00]],

        [[ 4.4599800e+00, -5.2517624e+00,  3.2986133e+00, ...,
          -2.1729131e+00,  4.5968304e+00, -1.7910137e+00],
         [-6.8576102e+00,  7.6067233e+00,  9.0870419e+00, ...,
          -3.6572695e-02,  7.7578330e+00, -7.8685794e+00],
         [-7.9162407e-01,  1.2947290e+01, -9.2158604e-01, ...,
           4.2064281e+00,  1.1958503e+01,  6.1835141e+00],
         ...,
         [-1.2028622e+01,  5.0967569e+00, -7.9160028e+00, ...,
           7.9802704e+00,  1.8263069e+01, -1.1697993e+00],
         [-7.0084481e+00, -5.0579667e-01, -1.0938044e+00, ...,
          -1.4659735e+01, -5.7043257e+00, -8.6652441e+00],
         [-5.9622993e+00,  5.4401927e+00,  1.1779783e+01, ...,
          -9.7400370e+00,  7.9694843e+00,  5.8615599e+00]],

        ...,

        [[ 2.1756651e+00,  4.7224313e-03,  1.8865991e-01, ...,
          -2.3506904e+00,  2.8797016e+00,  8.4297371e-01],
         [ 4.5222449e+00,  3.6290228e-01,  2.4953344e+00, ...,
          -3.6353920e+00,  6.3955846e+00, -8.4063053e-01],
         [ 1.7811570e+00,  2.2422984e+00, -4.9339886e+00, ...,
           3.0220423e+00,  9.1811724e+00,  2.0886869e+00],
         ...,
         [-1.7567515e+00,  3.8588824e+00, -1.3665153e+00, ...,
           1.3697960e+00,  7.8333740e+00, -2.5009761e+00],
         [-1.8365555e+00, -1.8072724e-01, -5.8518782e+00, ...,
          -1.4474959e+00,  3.8385830e+00, -2.3191910e+00],
         [ 5.2284307e+00,  3.9425278e-01,  7.3135362e+00, ...,
          -4.4565439e-02,  3.1462078e+00,  2.6662285e+00]],

        [[ 2.1756651e+00,  4.7224313e-03,  1.8865991e-01, ...,
          -2.3506904e+00,  2.8797016e+00,  8.4297371e-01],
         [ 4.5222449e+00,  3.6290228e-01,  2.4953344e+00, ...,
          -3.6353920e+00,  6.3955846e+00, -8.4063053e-01],
         [ 1.7811570e+00,  2.2422984e+00, -4.9339886e+00, ...,
           3.0220423e+00,  9.1811724e+00,  2.0886869e+00],
         ...,
         [-1.7567515e+00,  3.8588824e+00, -1.3665153e+00, ...,
           1.3697960e+00,  7.8333740e+00, -2.5009761e+00],
         [-1.8365555e+00, -1.8072724e-01, -5.8518782e+00, ...,
          -1.4474959e+00,  3.8385830e+00, -2.3191910e+00],
         [ 5.2284307e+00,  3.9425278e-01,  7.3135362e+00, ...,
          -4.4565439e-02,  3.1462078e+00,  2.6662285e+00]],

        [[ 2.1756651e+00,  4.7224313e-03,  1.8865991e-01, ...,
          -2.3506904e+00,  2.8797016e+00,  8.4297371e-01],
         [ 4.5222449e+00,  3.6290228e-01,  2.4953344e+00, ...,
          -3.6353920e+00,  6.3955846e+00, -8.4063053e-01],
         [ 1.7811570e+00,  2.2422984e+00, -4.9339886e+00, ...,
           3.0220423e+00,  9.1811724e+00,  2.0886869e+00],
         ...,
         [-1.7567515e+00,  3.8588824e+00, -1.3665153e+00, ...,
           1.3697960e+00,  7.8333740e+00, -2.5009761e+00],
         [-1.8365555e+00, -1.8072724e-01, -5.8518782e+00, ...,
          -1.4474959e+00,  3.8385830e+00, -2.3191910e+00],
         [ 5.2284307e+00,  3.9425278e-01,  7.3135362e+00, ...,
          -4.4565439e-02,  3.1462078e+00,  2.6662285e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [2, 12], 'to': [3]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 3355.1074  ,  5088.629   ,  2464.0615  , ...,  5773.209   ,
           1580.3191  ,  4505.6094  ],
         [ 5715.9287  ,  5071.9043  ,   992.1495  , ..., 11374.266   ,
           9194.632   , 10529.057   ],
         [ 7022.8057  ,  5310.7505  , -1990.331   , ...,  4647.1777  ,
           4763.663   ,  6381.3643  ],
         ...,
         [ 1434.563   , -4118.613   , -1090.9956  , ...,  6282.6313  ,
             54.405273,   821.6416  ],
         [ 2177.103   ,  2322.0366  ,  2094.521   , ...,  5784.3555  ,
           5975.2954  ,  6624.2734  ],
         [ 1425.9038  ,  2506.06    , -1189.8579  , ...,  -594.1366  ,
           1882.3306  ,  3470.7812  ]],

        [[ 3355.1074  ,  5088.629   ,  2464.0615  , ...,  5773.209   ,
           1580.3191  ,  4505.6094  ],
         [ 5715.9287  ,  5071.9043  ,   992.1495  , ..., 11374.266   ,
           9194.632   , 10529.057   ],
         [ 7022.8057  ,  5310.7505  , -1990.331   , ...,  4647.1777  ,
           4763.663   ,  6381.3643  ],
         ...,
         [ 1434.563   , -4118.613   , -1090.9956  , ...,  6282.6313  ,
             54.405273,   821.6416  ],
         [ 2177.103   ,  2322.0366  ,  2094.521   , ...,  5784.3555  ,
           5975.2954  ,  6624.2734  ],
         [ 1425.9038  ,  2506.06    , -1189.8579  , ...,  -594.1366  ,
           1882.3306  ,  3470.7812  ]],

        [[ 3355.1074  ,  5088.629   ,  2464.0615  , ...,  5773.209   ,
           1580.3191  ,  4505.6094  ],
         [ 5715.9287  ,  5071.9043  ,   992.1495  , ..., 11374.266   ,
           9194.632   , 10529.057   ],
         [ 7022.8057  ,  5310.7505  , -1990.331   , ...,  4647.1777  ,
           4763.663   ,  6381.3643  ],
         ...,
         [ 1434.563   , -4118.613   , -1090.9956  , ...,  6282.6313  ,
             54.405273,   821.6416  ],
         [ 2177.103   ,  2322.0366  ,  2094.521   , ...,  5784.3555  ,
           5975.2954  ,  6624.2734  ],
         [ 1425.9038  ,  2506.06    , -1189.8579  , ...,  -594.1366  ,
           1882.3306  ,  3470.7812  ]],

        ...,

        [[ 3355.1074  ,  5088.629   ,  2464.0615  , ...,  5773.209   ,
           1580.3191  ,  4505.6094  ],
         [ 5715.9287  ,  5071.9043  ,   992.1495  , ..., 11374.266   ,
           9194.632   , 10529.057   ],
         [ 7022.8057  ,  5310.7505  , -1990.331   , ...,  4647.1777  ,
           4763.663   ,  6381.3643  ],
         ...,
         [ 1434.563   , -4118.613   , -1090.9956  , ...,  6282.6313  ,
             54.405273,   821.6416  ],
         [ 2177.103   ,  2322.0366  ,  2094.521   , ...,  5784.3555  ,
           5975.2954  ,  6624.2734  ],
         [ 1425.9038  ,  2506.06    , -1189.8579  , ...,  -594.1366  ,
           1882.3306  ,  3470.7812  ]],

        [[ 3355.1074  ,  5088.629   ,  2464.0615  , ...,  5773.209   ,
           1580.3191  ,  4505.6094  ],
         [ 5715.9287  ,  5071.9043  ,   992.1495  , ..., 11374.266   ,
           9194.632   , 10529.057   ],
         [ 7022.8057  ,  5310.7505  , -1990.331   , ...,  4647.1777  ,
           4763.663   ,  6381.3643  ],
         ...,
         [ 1434.563   , -4118.613   , -1090.9956  , ...,  6282.6313  ,
             54.405273,   821.6416  ],
         [ 2177.103   ,  2322.0366  ,  2094.521   , ...,  5784.3555  ,
           5975.2954  ,  6624.2734  ],
         [ 1425.9038  ,  2506.06    , -1189.8579  , ...,  -594.1366  ,
           1882.3306  ,  3470.7812  ]],

        [[ 3355.1074  ,  5088.629   ,  2464.0615  , ...,  5773.209   ,
           1580.3191  ,  4505.6094  ],
         [ 5715.9287  ,  5071.9043  ,   992.1495  , ..., 11374.266   ,
           9194.632   , 10529.057   ],
         [ 7022.8057  ,  5310.7505  , -1990.331   , ...,  4647.1777  ,
           4763.663   ,  6381.3643  ],
         ...,
         [ 1434.563   , -4118.613   , -1090.9956  , ...,  6282.6313  ,
             54.405273,   821.6416  ],
         [ 2177.103   ,  2322.0366  ,  2094.521   , ...,  5784.3555  ,
           5975.2954  ,  6624.2734  ],
         [ 1425.9038  ,  2506.06    , -1189.8579  , ...,  -594.1366  ,
           1882.3306  ,  3470.7812  ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [4], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[ 3354.5488 ,  5087.7124 ,  2463.3838 , ...,  5774.739  ,
           1581.452  ,  4506.5903 ],
         [ 5715.45   ,  5070.871  ,   991.4072 , ..., 11376.822  ,
           9197.     , 10531.033  ],
         [ 7022.8423 ,  5310.1694 , -1991.4827 , ...,  4649.453  ,
           4765.3726 ,  6383.378  ],
         ...,
         [ 1434.8402 , -4118.702  , -1090.8456 , ...,  6282.975  ,
             53.99018,   821.6792 ],
         [ 2177.9302 ,  2322.9358 ,  2094.6917 , ...,  5785.1685 ,
           5974.844  ,  6624.1426 ],
         [ 1426.8628 ,  2507.3064 , -1189.7812 , ...,  -593.7068 ,
           1881.9514 ,  3470.563  ]],

        [[ 3354.5488 ,  5087.7124 ,  2463.3838 , ...,  5774.739  ,
           1581.452  ,  4506.5903 ],
         [ 5715.45   ,  5070.871  ,   991.4072 , ..., 11376.822  ,
           9197.     , 10531.033  ],
         [ 7022.8423 ,  5310.1694 , -1991.4827 , ...,  4649.453  ,
           4765.3726 ,  6383.378  ],
         ...,
         [ 1434.8402 , -4118.702  , -1090.8456 , ...,  6282.975  ,
             53.99018,   821.6792 ],
         [ 2177.9302 ,  2322.9358 ,  2094.6917 , ...,  5785.1685 ,
           5974.844  ,  6624.1426 ],
         [ 1426.8628 ,  2507.3064 , -1189.7812 , ...,  -593.7068 ,
           1881.9514 ,  3470.563  ]],

        [[ 3354.5488 ,  5087.7124 ,  2463.3838 , ...,  5774.739  ,
           1581.452  ,  4506.5903 ],
         [ 5715.45   ,  5070.871  ,   991.4072 , ..., 11376.822  ,
           9197.     , 10531.033  ],
         [ 7022.8423 ,  5310.1694 , -1991.4827 , ...,  4649.453  ,
           4765.3726 ,  6383.378  ],
         ...,
         [ 1434.8402 , -4118.702  , -1090.8456 , ...,  6282.975  ,
             53.99018,   821.6792 ],
         [ 2177.9302 ,  2322.9358 ,  2094.6917 , ...,  5785.1685 ,
           5974.844  ,  6624.1426 ],
         [ 1426.8628 ,  2507.3064 , -1189.7812 , ...,  -593.7068 ,
           1881.9514 ,  3470.563  ]],

        ...,

        [[ 3354.5488 ,  5087.7124 ,  2463.3838 , ...,  5774.739  ,
           1581.452  ,  4506.5903 ],
         [ 5715.45   ,  5070.871  ,   991.4072 , ..., 11376.822  ,
           9197.     , 10531.033  ],
         [ 7022.8423 ,  5310.1694 , -1991.4827 , ...,  4649.453  ,
           4765.3726 ,  6383.378  ],
         ...,
         [ 1434.8402 , -4118.702  , -1090.8456 , ...,  6282.975  ,
             53.99018,   821.6792 ],
         [ 2177.9302 ,  2322.9358 ,  2094.6917 , ...,  5785.1685 ,
           5974.844  ,  6624.1426 ],
         [ 1426.8628 ,  2507.3064 , -1189.7812 , ...,  -593.7068 ,
           1881.9514 ,  3470.563  ]],

        [[ 3354.5488 ,  5087.7124 ,  2463.3838 , ...,  5774.739  ,
           1581.452  ,  4506.5903 ],
         [ 5715.45   ,  5070.871  ,   991.4072 , ..., 11376.822  ,
           9197.     , 10531.033  ],
         [ 7022.8423 ,  5310.1694 , -1991.4827 , ...,  4649.453  ,
           4765.3726 ,  6383.378  ],
         ...,
         [ 1434.8402 , -4118.702  , -1090.8456 , ...,  6282.975  ,
             53.99018,   821.6792 ],
         [ 2177.9302 ,  2322.9358 ,  2094.6917 , ...,  5785.1685 ,
           5974.844  ,  6624.1426 ],
         [ 1426.8628 ,  2507.3064 , -1189.7812 , ...,  -593.7068 ,
           1881.9514 ,  3470.563  ]],

        [[ 3354.5488 ,  5087.7124 ,  2463.3838 , ...,  5774.739  ,
           1581.452  ,  4506.5903 ],
         [ 5715.45   ,  5070.871  ,   991.4072 , ..., 11376.822  ,
           9197.     , 10531.033  ],
         [ 7022.8423 ,  5310.1694 , -1991.4827 , ...,  4649.453  ,
           4765.3726 ,  6383.378  ],
         ...,
         [ 1434.8402 , -4118.702  , -1090.8456 , ...,  6282.975  ,
             53.99018,   821.6792 ],
         [ 2177.9302 ,  2322.9358 ,  2094.6917 , ...,  5785.1685 ,
           5974.844  ,  6624.1426 ],
         [ 1426.8628 ,  2507.3064 , -1189.7812 , ...,  -593.7068 ,
           1881.9514 ,  3470.563  ]]]], dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [4], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[ 3354.5298  ,  5087.721   ,  2463.4124  , ...,  5774.7363  ,
           1581.4796  ,  4506.5894  ],
         [ 5715.4785  ,  5070.8413  ,   991.43567 , ..., 11376.963   ,
           9197.034   , 10531.046   ],
         [ 7022.847   ,  5310.143   , -1991.4789  , ...,  4649.415   ,
           4765.325   ,  6383.3506  ],
         ...,
         [ 1434.8494  , -4118.6855  , -1090.8346  , ...,  6282.9966  ,
             53.991196,   821.67194 ],
         [ 2177.928   ,  2322.9297  ,  2094.668   , ...,  5785.159   ,
           5974.818   ,  6624.0674  ],
         [ 1426.8585  ,  2507.2812  , -1189.783   , ...,  -593.7075  ,
           1881.9469  ,  3470.6074  ]],

        [[ 3354.5298  ,  5087.721   ,  2463.4124  , ...,  5774.7363  ,
           1581.4796  ,  4506.5894  ],
         [ 5715.4785  ,  5070.8413  ,   991.43567 , ..., 11376.963   ,
           9197.034   , 10531.046   ],
         [ 7022.847   ,  5310.143   , -1991.4789  , ...,  4649.415   ,
           4765.325   ,  6383.3506  ],
         ...,
         [ 1434.8494  , -4118.6855  , -1090.8346  , ...,  6282.9966  ,
             53.991196,   821.67194 ],
         [ 2177.928   ,  2322.9297  ,  2094.668   , ...,  5785.159   ,
           5974.818   ,  6624.0674  ],
         [ 1426.8585  ,  2507.2812  , -1189.783   , ...,  -593.7075  ,
           1881.9469  ,  3470.6074  ]],

        [[ 3354.5298  ,  5087.721   ,  2463.4124  , ...,  5774.7363  ,
           1581.4796  ,  4506.5894  ],
         [ 5715.4785  ,  5070.8413  ,   991.43567 , ..., 11376.963   ,
           9197.034   , 10531.046   ],
         [ 7022.847   ,  5310.143   , -1991.4789  , ...,  4649.415   ,
           4765.325   ,  6383.3506  ],
         ...,
         [ 1434.8494  , -4118.6855  , -1090.8346  , ...,  6282.9966  ,
             53.991196,   821.67194 ],
         [ 2177.928   ,  2322.9297  ,  2094.668   , ...,  5785.159   ,
           5974.818   ,  6624.0674  ],
         [ 1426.8585  ,  2507.2812  , -1189.783   , ...,  -593.7075  ,
           1881.9469  ,  3470.6074  ]],

        ...,

        [[ 3354.5298  ,  5087.721   ,  2463.4124  , ...,  5774.7363  ,
           1581.4796  ,  4506.5894  ],
         [ 5715.4785  ,  5070.8413  ,   991.43567 , ..., 11376.963   ,
           9197.034   , 10531.046   ],
         [ 7022.847   ,  5310.143   , -1991.4789  , ...,  4649.415   ,
           4765.325   ,  6383.3506  ],
         ...,
         [ 1434.8494  , -4118.6855  , -1090.8346  , ...,  6282.9966  ,
             53.991196,   821.67194 ],
         [ 2177.928   ,  2322.9297  ,  2094.668   , ...,  5785.159   ,
           5974.818   ,  6624.0674  ],
         [ 1426.8585  ,  2507.2812  , -1189.783   , ...,  -593.7075  ,
           1881.9469  ,  3470.6074  ]],

        [[ 3354.5298  ,  5087.721   ,  2463.4124  , ...,  5774.7363  ,
           1581.4796  ,  4506.5894  ],
         [ 5715.4785  ,  5070.8413  ,   991.43567 , ..., 11376.963   ,
           9197.034   , 10531.046   ],
         [ 7022.847   ,  5310.143   , -1991.4789  , ...,  4649.415   ,
           4765.325   ,  6383.3506  ],
         ...,
         [ 1434.8494  , -4118.6855  , -1090.8346  , ...,  6282.9966  ,
             53.991196,   821.67194 ],
         [ 2177.928   ,  2322.9297  ,  2094.668   , ...,  5785.159   ,
           5974.818   ,  6624.0674  ],
         [ 1426.8585  ,  2507.2812  , -1189.783   , ...,  -593.7075  ,
           1881.9469  ,  3470.6074  ]],

        [[ 3354.5298  ,  5087.721   ,  2463.4124  , ...,  5774.7363  ,
           1581.4796  ,  4506.5894  ],
         [ 5715.4785  ,  5070.8413  ,   991.43567 , ..., 11376.963   ,
           9197.034   , 10531.046   ],
         [ 7022.847   ,  5310.143   , -1991.4789  , ...,  4649.415   ,
           4765.325   ,  6383.3506  ],
         ...,
         [ 1434.8494  , -4118.6855  , -1090.8346  , ...,  6282.9966  ,
             53.991196,   821.67194 ],
         [ 2177.928   ,  2322.9297  ,  2094.668   , ...,  5785.159   ,
           5974.818   ,  6624.0674  ],
         [ 1426.8585  ,  2507.2812  , -1189.783   , ...,  -593.7075  ,
           1881.9469  ,  3470.6074  ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [4], 'to': []}

generate models:11

analyse output arrays in iter:15

pre layer res:
9:log
{'name': 'log', 'output': array([[[[2.3028831, 2.7255847, 2.7606387, 2.4111636, 2.7054198,
          2.626616 , 2.5869439, 2.6364079],
         [2.5137246, 2.5603247, 2.536311 , 2.6366184, 2.5189779,
          2.8063264, 2.298419 , 2.5604274],
         [2.6386065, 2.8118658, 2.6803024, 2.6701088, 2.5518293,
          2.6205575, 2.8203514, 2.638063 ],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf,      -inf,
               -inf,      -inf,      -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 8, 8]), 'from': [15], 'to': [4]}
tf node:
{'name': 'maxpool2d', 'output': array([[[[ 2.7255847e+00,  2.7606387e+00,  2.8063264e+00,
           2.6364079e+00],
         [ 2.8118658e+00,  2.6803024e+00,  2.6205575e+00,
           2.8203514e+00],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38]],

        [[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38]],

        [[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 4, 4]), 'from': [9], 'to': [6, 6]}
ms node:
{'name': 'maxpool2d', 'output': array([[[[ 2.7255847e+00,  2.7606373e+00,  2.8063297e+00,
           2.6364069e+00],
         [ 2.8118691e+00,  2.6803014e+00,  2.6205544e+00,
           2.8203547e+00],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38]],

        [[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38]],

        [[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38,
          -3.4028235e+38]]]], dtype=float32), 'output_shape': (1, 3, 4, 4), 'from': [9], 'to': [6, 6]}
torch node:
{'name': 'maxpool2d', 'output': array([[[[2.7255847, 2.7606387, 2.8063264, 2.6364076],
         [2.8118658, 2.6803021, 2.6205575, 2.8203511],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 4, 4]), 'from': [9], 'to': [6, 6]}

pre layer res:
7:transpose
{'name': 'transpose', 'output': array([[[[5.4644785,      -inf,      -inf, 0.       ],
         [5.4665384,      -inf,      -inf, 0.       ],
         [     -inf,      -inf,      -inf, 0.       ],
         [     -inf,      -inf,      -inf, 0.       ]],

        [[0.       , 0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       , 0.       ]],

        [[0.       , 0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       , 0.       ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 4, 4]), 'from': [19], 'to': [11]}
tf node:
{'name': 'log', 'output': array([[[[1.6982687,       nan,       nan,      -inf],
         [1.6986456,       nan,       nan,      -inf],
         [      nan,       nan,       nan,      -inf],
         [      nan,       nan,       nan,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 4, 4]), 'from': [7], 'to': [8]}
ms node:
{'name': 'log', 'output': array([[[[1.698267 ,       nan,       nan,      -inf],
         [1.6986439,       nan,       nan,      -inf],
         [      nan,       nan,       nan,      -inf],
         [      nan,       nan,       nan,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]]]], dtype=float32), 'output_shape': (1, 3, 4, 4), 'from': [7], 'to': [8]}
torch node:
{'name': 'log', 'output': array([[[[1.6982687,       nan,       nan,      -inf],
         [1.6986456,       nan,       nan,      -inf],
         [      nan,       nan,       nan,      -inf],
         [      nan,       nan,       nan,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]],

        [[     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf],
         [     -inf,      -inf,      -inf,      -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 4, 4]), 'from': [7], 'to': [8]}

generate models:13

analyse the exceptions in iter:16
torch exception:
{'id': 0, 'name': 'linear', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 0.7959,  0.4083, -1.0892,  ..., -2.1456, -2.1106,  0.4193],
           [ 0.9961,  1.5363,  1.0764,  ...,  0.4556, -0.7398, -0.4325],
           [-0.8525,  0.0077, -1.2630,  ..., -0.2483,  0.1528, -0.7855],
           ...,
           [-0.4781,  0.1006, -1.7523,  ...,  0.1651, -1.1301,  1.5011],
           [-1.9478,  0.6239,  3.2772,  ..., -0.1441, -0.2133,  0.9439],
           [ 0.5681, -1.0145,  0.2194,  ..., -0.0644, -0.7713,  0.4563]],

          [[-0.5679,  1.6150,  0.6591,  ..., -0.3189, -0.4541, -0.8257],
           [ 0.3128, -0.6379, -1.3473,  ...,  0.5958,  0.1697, -0.0980],
           [-0.6437, -0.9053,  0.2226,  ..., -0.0476, -0.0490, -0.0783],
           ...,
           [ 0.0124, -0.7209, -0.5078,  ...,  1.1694, -0.4614,  1.5093],
           [-0.2036,  1.4838, -1.0683,  ...,  0.6630, -2.1730,  0.9272],
           [ 0.6413,  0.9047,  0.5740,  ..., -0.4155, -0.5690,  0.8512]],

          [[-0.0703,  1.9915,  0.4395,  ...,  0.7294, -1.0123,  0.0518],
           [ 0.2111,  0.6677, -0.7092,  ..., -0.9601,  1.4633, -0.5523],
           [-0.7628, -1.7352, -0.6343,  ..., -0.2389,  1.5248, -0.5177],
           ...,
           [ 1.0366, -0.9227,  1.6456,  ..., -0.1170,  1.5813,  2.0320],
           [-0.6993, -0.9638, -1.1489,  ...,  1.0975, -3.4037, -1.3596],
           [-1.5334, -0.4352,  0.3164,  ...,  0.1830,  0.5884,  1.4313]]]]])}
mat1 and mat2 shapes cannot be multiplied (96x32 and 100x100)
mindspore exception:
{'id': 0, 'name': 'linear', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[7.95913458e-001, 4.08316821e-001, -1.08922434e+000 ... -2.14564776e+000, -2.11062145e+000, 4.19334352e-001],
    [9.96126294e-001, 1.53625512e+000, 1.07636130e+000 ... 4.55613613e-001, -7.39845991e-001, -4.32528675e-001],
    [-8.52519691e-001, 7.72517128e-003, -1.26299274e+000 ... -2.48268217e-001, 1.52758494e-001, -7.85530567e-001],
    ...
    [-4.78076071e-001, 1.00573212e-001, -1.75229800e+000 ... 1.65078387e-001, -1.13006866e+000, 1.50109792e+000],
    [-1.94778872e+000, 6.23908877e-001, 3.27718186e+000 ... -1.44072503e-001, -2.13348225e-001, 9.43872213e-001],
    [5.68062007e-001, -1.01452184e+000, 2.19390169e-001 ... -6.44496530e-002, -7.71258771e-001, 4.56288666e-001]],
   [[-5.67894638e-001, 1.61504340e+000, 6.59100056e-001 ... -3.18916768e-001, -4.54104275e-001, -8.25696409e-001],
    [3.12757373e-001, -6.37892008e-001, -1.34729004e+000 ... 5.95799208e-001, 1.69669792e-001, -9.80314314e-002],
    [-6.43698394e-001, -9.05256689e-001, 2.22590610e-001 ... -4.75681834e-002, -4.90436852e-002, -7.83037096e-002],
    ...
    [1.23515110e-002, -7.20918894e-001, -5.07802963e-001 ... 1.16935635e+000, -4.61374581e-001, 1.50928938e+000],
    [-2.03613624e-001, 1.48384047e+000, -1.06825781e+000 ... 6.63040340e-001, -2.17299676e+000, 9.27152514e-001],
    [6.41265869e-001, 9.04681325e-001, 5.74005306e-001 ... -4.15512741e-001, -5.69028199e-001, 8.51222932e-001]],
   [[-7.03417212e-002, 1.99149191e+000, 4.39534277e-001 ... 7.29416311e-001, -1.01226938e+000, 5.17562553e-002],
    [2.11097494e-001, 6.67690933e-001, -7.09242880e-001 ... -9.60102081e-001, 1.46330249e+000, -5.52283883e-001],
    [-7.62754858e-001, -1.73519826e+000, -6.34288311e-001 ... -2.38919631e-001, 1.52481401e+000, -5.17657697e-001],
    ...
    [1.03656697e+000, -9.22713041e-001, 1.64564896e+000 ... -1.16989501e-001, 1.58129764e+000, 2.03199077e+000],
    [-6.99264348e-001, -9.63841498e-001, -1.14888120e+000 ... 1.09750652e+000, -3.40374923e+000, -1.35961878e+000],
    [-1.53344417e+000, -4.35244501e-001, 3.16391200e-001 ... 1.82997242e-001, 5.88351548e-001, 1.43131280e+000]]]]])}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 100. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:14

analyse the exceptions in iter:19
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 1.2436,  1.4061,  0.3581,  0.3146,  0.5687,  0.9049,  0.9930,
            0.6356,  0.8088,  1.8605,  0.5455,  1.5208,  0.1860,  1.6621,
            1.2986,  0.5105],
          [ 0.8198,  2.0713, -0.3342,  1.8177,  0.8864, -0.2990,  1.3599,
            0.4727,  0.5384,  1.1157,  0.6483,  0.5969,  2.4596,  1.0689,
            2.7118,  2.2859],
          [-0.0177,  1.4560,  1.4936,  1.1736,  1.6719, -0.0707, -0.3786,
            1.5178, -0.6090, -0.0593,  0.5005,  0.4882, -0.0148,  1.1247,
            0.4378,  0.3279],
          [ 1.6938,  0.6631,  1.3523,  1.5650,  1.0454,  0.5799,  1.6988,
            1.0472,  2.9494,  2.1690,  0.7721,  0.5465,  1.5316, -0.0139,
            0.2664,  1.3360],
          [-0.9779,  1.0598,  2.1547,  1.5225, -0.1321,  1.5807,  0.7455,
            0.0824,  0.2817,  0.6237,  1.1984,  0.4506,  1.5431, -0.2464,
            1.0899,  0.7922],
          [ 0.2457,  1.1999, -0.4803,  1.2553, -0.2958,  0.5704,  1.6055,
           -0.5052,  1.0557, -0.5029,  0.7227,  1.2429,  0.4237,  0.3882,
            0.9748,  0.6624],
          [ 0.2980,  0.8730, -0.0577,  0.2165,  1.8704,  0.6461,  0.9847,
            1.1174,  0.8075,  1.6473,  0.1641,  1.9999,  1.4226,  1.4400,
            1.8137,  1.0628],
          [ 0.7179,  0.0690,  1.5028,  0.7336,  0.4317,  0.8294,  1.8454,
            0.2556,  0.7215,  1.1821,  0.7218,  1.8635,  0.6295,  0.7646,
            1.7250,  1.6781],
          [ 2.6172,  0.5628,  1.0430,  1.3224,  1.0457,  1.1824,  1.1527,
            0.4555,  1.1714,  2.7390,  1.5918,  1.5296,  0.3009,  0.1530,
            1.5892,  1.6719],
          [ 0.6074,  0.7688,  1.1113,  0.8584,  0.3545,  2.0221,  0.1880,
            0.6439,  0.8483,  0.7093,  0.8355,  0.1714,  1.9012,  0.5385,
            2.6489,  1.0673],
          [ 0.5388,  1.0511,  0.4680,  2.2810,  1.5351,  0.8874,  2.8610,
            0.6686,  1.9373,  0.8302,  1.3871,  0.4823,  2.3595,  2.4584,
            1.8001, -0.0853],
          [ 1.2316,  1.2951,  0.4258,  0.4296,  0.3728,  0.3934,  1.6635,
            0.3426, -0.3744,  0.3792,  1.4114,  1.0398,  0.5727,  1.0692,
           -0.1305,  0.6958],
          [ 1.2620, -0.3184,  1.1769,  0.9212, -0.2803,  2.0099,  0.1487,
            1.1624,  0.6645,  1.1219,  1.1804,  0.1280,  0.8915,  0.7057,
            0.9667,  1.4415],
          [ 0.8691,  1.0748,  1.5379,  0.7732,  1.7553,  1.6588,  0.2981,
            2.6093,  0.8457,  1.0452,  0.8643,  1.5773,  0.1164,  1.3979,
           -0.1414, -0.8715],
          [ 2.1868,  1.2452,  0.7060,  0.0768,  1.6527,  0.0288,  0.9361,
            1.4580,  0.6382,  0.3919,  1.9079,  1.1175,  0.6651,  0.4355,
            1.4301,  0.3633],
          [ 0.9105,  1.6623,  1.7161,  1.8921,  0.6889,  0.8107, -0.8693,
            1.2313,  0.3992,  0.8834,  1.2210,  1.2878,  0.8431,  1.7915,
            0.5635,  1.3754]],

         [[ 0.4241,  0.3931,  1.0391,  1.9437,  0.1737,  0.7333,  0.1589,
            0.5358,  1.6983,  1.3850,  2.0992,  1.0263, -0.3672,  1.5433,
            0.7825,  0.9200],
          [ 1.0183,  0.5421,  1.3039,  0.5569,  1.3545,  1.6547,  1.2148,
            0.2051,  0.2501,  1.0849,  1.8645,  1.4316,  1.2318,  0.4341,
            0.8091,  1.5773],
          [ 2.5747,  0.7574,  1.3859,  1.3017,  1.1853,  0.5364,  0.5806,
            1.1932,  0.6799,  0.3914,  0.4560,  1.5049,  1.6295,  1.0814,
            0.6538,  1.6882],
          [ 1.4387,  1.5686,  1.3022,  1.1128,  0.8949,  0.1394,  1.6281,
            0.6986,  1.7363,  1.0643,  1.3797,  0.2731,  0.3521,  1.6144,
            2.0208,  0.5478],
          [ 0.4450,  1.3270,  0.7560,  0.8147,  1.4852,  0.7852, -0.1214,
            0.4165,  0.9447,  0.0950,  1.5414,  1.3938,  0.4456,  2.0676,
            0.6580,  1.3947],
          [ 0.0291,  2.1388,  2.1442,  1.2927,  0.6391,  0.7813,  1.6374,
            2.0939,  0.6367,  0.3230,  0.8507,  0.5634,  1.8731, -0.0221,
            1.6802,  2.2993],
          [ 0.3706,  1.4532,  0.9439,  1.7501,  1.0548,  1.4641,  0.7675,
            1.3438,  1.4870,  1.1192,  0.5706,  0.4661,  1.4409,  0.6990,
            2.0889, -0.2187],
          [ 1.1398,  0.0574,  0.5231, -0.0345,  0.8184,  2.0842,  3.1385,
            0.6209,  1.1834, -0.1060,  0.9045,  1.4751,  1.0948,  1.8795,
            0.6649,  1.7081],
          [ 1.0270,  1.0423,  1.3781,  2.6056,  1.1080,  0.1336,  2.1615,
            0.7259,  0.7595,  0.3765,  2.3370,  0.8278,  3.0008,  1.1893,
            1.0085,  0.4060],
          [ 0.5076, -0.4315,  1.0258,  0.9622,  1.0444,  1.1101,  0.8140,
            0.1485,  0.8081,  1.2168,  0.2588, -0.2914,  1.5021,  2.0402,
            0.2674,  0.3401],
          [ 1.2921,  1.3057,  0.5912,  1.0140,  1.7559,  1.0445,  0.8707,
            0.4163,  2.1415,  1.4386,  0.2637,  0.8275,  0.7599, -0.1426,
            0.2304,  1.7631],
          [ 1.3326,  0.9649,  1.1443,  1.0786,  0.7486,  0.6593,  1.4054,
            2.0394,  0.8382,  0.9870,  1.1495,  1.8120,  0.8734,  0.8060,
            1.0642,  0.7863],
          [ 0.0361,  1.0600,  2.3985,  0.4832,  1.4328,  2.8048,  2.0561,
            0.8799,  1.6959,  0.6999,  0.6502,  2.0412,  0.2582,  0.6270,
            0.6966,  0.5509],
          [ 2.2759,  1.0442,  1.7144,  1.0118, -0.0251,  0.8232,  1.3367,
            1.2992,  0.2921,  0.0990,  0.3140,  1.6130,  2.2297,  0.8454,
            1.2410,  0.4209],
          [ 0.5608,  1.5301,  1.2319,  1.3374,  1.6183,  1.8772,  0.7284,
            0.3614,  1.4861,  1.2241,  1.1491,  2.6265,  0.5685,  1.2082,
            1.2035,  1.0073],
          [ 2.2859,  0.9642,  0.5951,  1.8053,  1.5633,  1.5765,  3.1961,
            1.3478,  1.4939,  0.7894,  0.7981,  1.1564,  0.8080,  0.8417,
            0.5608,  0.7688]],

         [[ 0.2810,  0.3871,  1.5839,  1.1152,  1.8963,  1.5623,  1.6037,
            0.4588,  0.6158,  1.7617, -0.1829,  2.5367,  1.0850,  1.7628,
           -0.0125,  1.7602],
          [ 2.3016,  0.1225,  1.6743,  0.6432,  2.5964,  2.3750,  0.0895,
            1.6202, -0.1658,  1.6573,  0.8329,  1.9761,  2.3043,  1.0597,
            2.4264,  1.9762],
          [ 0.3256,  0.4702,  0.4014,  1.3663,  0.7916,  1.2989,  0.9980,
            1.1670,  1.9631,  0.6066,  0.8350,  0.8750,  0.5790, -0.1881,
            0.4320,  1.8214],
          [ 0.5074,  2.3514,  1.6336,  1.5443,  2.7985,  0.7547,  0.5252,
            0.5751,  1.3454,  0.6658,  1.8395,  0.2690,  0.5006,  1.4938,
            0.6424,  0.8194],
          [ 1.6651,  1.1282,  1.0145,  0.9629,  1.2305,  0.7062,  0.8742,
            0.6598,  1.0743,  0.0653,  0.9824,  0.8888,  1.6203,  1.5384,
            0.3047,  1.0211],
          [ 1.3705,  1.3451,  0.2196,  0.8780,  0.9213,  0.3091,  2.8465,
            0.3278,  1.6086,  3.1627,  1.0447,  1.1007,  1.3960,  1.2203,
            0.2265,  0.1780],
          [ 1.3743,  1.0804,  1.5323,  2.1589,  1.3690,  0.7244,  2.1716,
            1.3727,  0.9892, -0.1410,  0.3866,  0.5419,  0.6906,  1.2292,
            0.4347,  1.7495],
          [ 1.4448,  0.1543,  1.4252,  0.7646,  1.5369,  0.4109,  0.4791,
            1.0482,  0.4817,  0.4719, -0.0490,  0.9750,  1.3843,  0.2287,
            0.7254,  0.4178],
          [ 0.0979,  1.1008,  0.5982,  0.4601,  1.3385,  0.3281, -0.3246,
            1.3802,  2.0337,  0.4298,  0.7702,  0.6779,  0.7988,  1.1827,
            0.9157,  1.1976],
          [ 1.5150,  1.3545,  1.0845,  1.5668,  1.6351,  1.3347,  1.0848,
            1.7408,  0.3079,  0.3090,  0.7392,  1.4259,  0.7834,  0.0227,
            2.0049,  0.8240],
          [ 1.5471,  0.6883,  2.6863,  0.3995,  1.7404,  1.0695,  1.3811,
            2.1305,  0.2979,  1.5525,  0.5459,  1.0832, -0.5088,  0.7582,
            1.6835,  0.9291],
          [ 0.4641, -0.3682,  0.6514,  1.0065,  0.7663,  1.0613,  1.7703,
            0.4816,  1.1657,  0.2601,  1.7556, -0.2114,  0.0407,  0.6648,
            1.7013,  0.7215],
          [ 0.5302,  2.1623,  0.8069,  0.3633,  0.8152,  1.7463,  0.3136,
            1.1365,  1.0464,  1.2125, -0.1114,  0.5014,  1.3299, -0.2764,
            1.2427,  0.3726],
          [ 1.9812, -0.2131,  1.5996,  0.6084,  1.0026,  1.2996,  0.9756,
            0.2038,  0.4882,  1.9444,  1.8086,  0.8640,  1.0697,  1.8954,
            0.4194,  0.4460],
          [ 1.7249,  1.8005,  0.0347,  2.2415,  1.1532,  1.7751,  1.1751,
            0.3493,  2.0347,  0.5451, -0.4395, -0.2294,  1.2396,  0.6590,
            2.2090,  0.9150],
          [-0.0838,  1.2324,  1.0092,  0.7056,  1.1855,  1.1224, -0.1084,
            0.3906,  0.7390,  0.2014,  0.9381,  1.4575,  1.0772,  1.5945,
            0.7633,  0.9466]]]])]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 16, 16] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 16], dtype=Float32, value=
[[[[1.24364400e+000, 1.40610111e+000, 3.58076751e-001 ... 1.66211915e+000, 1.29857314e+000, 5.10496140e-001],
   [8.19780290e-001, 2.07126570e+000, -3.34182352e-001 ... 1.06887627e+000, 2.71177363e+000, 2.28588223e+000],
   [-1.76865794e-002, 1.45598173e+000, 1.49359453e+000 ... 1.12470603e+000, 4.37808692e-001, 3.27919126e-001],
   ...
   [8.69085789e-001, 1.07484686e+000, 1.53790653e+000 ... 1.39790380e+000, -1.41449511e-001, -8.71534109e-001],
   [2.18677425e+000, 1.24521935e+000, 7.05967784e-001 ... 4.35494900e-001, 1.43005955e+000, 3.63319039e-001],
   [9.10546541e-001, 1.66225076e+000, 1.71608078e+000 ... 1.79151249e+000, 5.63538313e-001, 1.37542963e+000]],
  [[4.24118280e-001, 3.93146306e-001, 1.03905976e+000 ... 1.54329860e+000, 7.82499552e-001, 9.19996381e-001],
   [1.01833272e+000, 5.42062581e-001, 1.30394340e+000 ... 4.34059203e-001, 8.09144735e-001, 1.57728815e+000],
   [2.57467484e+000, 7.57366478e-001, 1.38585448e+000 ... 1.08136964e+000, 6.53786182e-001, 1.68820119e+000],
   ...
   [2.27594209e+000, 1.04418802e+000, 1.71443594e+000 ... 8.45404565e-001, 1.24099958e+000, 4.20897692e-001],
   [5.60842395e-001, 1.53010452e+000, 1.23190403e+000 ... 1.20816123e+000, 1.20353556e+000, 1.00733638e+000],
   [2.28594184e+000, 9.64212239e-001, 5.95069468e-001 ... 8.41721117e-001, 5.60807586e-001, 7.68785715e-001]],
  [[2.81001180e-001, 3.87121350e-001, 1.58393908e+000 ... 1.76275134e+000, -1.25335008e-002, 1.76016796e+000],
   [2.30163193e+000, 1.22480161e-001, 1.67431712e+000 ... 1.05970180e+000, 2.42641115e+000, 1.97617912e+000],
   [3.25640678e-001, 4.70215440e-001, 4.01379526e-001 ... -1.88065127e-001, 4.31964666e-001, 1.82138026e+000],
   ...
   [1.98117423e+000, -2.13097602e-001, 1.59964132e+000 ... 1.89540660e+000, 4.19363916e-001, 4.45967555e-001],
   [1.72486520e+000, 1.80049574e+000, 3.47493626e-002 ... 6.59015894e-001, 2.20904040e+000, 9.14959788e-001],
   [-8.37886259e-002, 1.23241186e+000, 1.00915349e+000 ... 1.59453213e+000, 7.63258278e-001, 9.46631312e-001]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:17

analyse the exceptions in iter:22
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[1.0000, 1.0000, 1.0000,  ..., 7.3583, 1.0000, 1.6338],
          [1.8481, 1.0000, 1.0000,  ..., 1.3395, 1.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0967, 1.0000, 2.6336],
          ...,
          [5.4626, 1.1820, 1.0000,  ..., 2.5030, 1.4180, 1.0020],
          [1.0000, 1.0000, 1.0000,  ..., 1.3417, 2.0603, 6.7901],
          [1.9493, 1.3297, 1.9270,  ..., 1.0000, 1.0000, 1.3351]],

         [[1.0000, 1.4908, 1.0000,  ..., 1.0000, 1.0000, 7.0183],
          [1.3203, 1.0879, 1.0000,  ..., 1.2955, 1.0000, 2.2703],
          [1.1742, 3.0291, 1.0000,  ..., 1.0000, 1.0000, 2.2774],
          ...,
          [1.0039, 8.4283, 1.2743,  ..., 1.6956, 1.0000, 1.0000],
          [1.0000, 1.4957, 1.3329,  ..., 1.0000, 1.0000, 1.0000],
          [2.6482, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 2.7599]],

         [[1.0000, 1.1075, 4.2751,  ..., 1.2342, 1.4739, 1.0000],
          [2.7900, 1.0000, 1.0000,  ..., 6.7944, 2.0881, 1.0000],
          [1.0000, 1.6610, 1.0000,  ..., 3.5404, 1.0000, 1.0000],
          ...,
          [1.0000, 1.0000, 1.5463,  ..., 1.0000, 1.1508, 1.6913],
          [1.0000, 8.2610, 1.0000,  ..., 4.5605, 3.4132, 2.6724],
          [1.0000, 1.8432, 1.0000,  ..., 1.0000, 1.0000, 1.3272]]]])]}
Given groups=1, weight of size [64, 64, 3, 3], expected input[1, 3, 32, 32] to have 64 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[1.00000000e+000, 1.00000000e+000, 1.00000000e+000 ... 7.35828161e+000, 1.00000000e+000, 1.63384795e+000],
   [1.84809709e+000, 1.00000000e+000, 1.00000000e+000 ... 1.33953798e+000, 1.00000000e+000, 1.00000000e+000],
   [1.00000000e+000, 1.00000000e+000, 1.00000000e+000 ... 1.09670258e+000, 1.00000000e+000, 2.63364267e+000],
   ...
   [5.46257687e+000, 1.18204820e+000, 1.00000000e+000 ... 2.50295472e+000, 1.41799605e+000, 1.00202155e+000],
   [1.00000000e+000, 1.00000000e+000, 1.00000000e+000 ... 1.34174550e+000, 2.06026077e+000, 6.79007959e+000],
   [1.94925332e+000, 1.32974756e+000, 1.92701328e+000 ... 1.00000000e+000, 1.00000000e+000, 1.33513105e+000]],
  [[1.00000000e+000, 1.49081290e+000, 1.00000000e+000 ... 1.00000000e+000, 1.00000000e+000, 7.01827431e+000],
   [1.32029605e+000, 1.08788645e+000, 1.00000000e+000 ... 1.29554093e+000, 1.00000000e+000, 2.27034378e+000],
   [1.17421925e+000, 3.02907729e+000, 1.00000000e+000 ... 1.00000000e+000, 1.00000000e+000, 2.27740335e+000],
   ...
   [1.00389671e+000, 8.42825222e+000, 1.27425611e+000 ... 1.69564259e+000, 1.00000000e+000, 1.00000000e+000],
   [1.00000000e+000, 1.49566936e+000, 1.33287656e+000 ... 1.00000000e+000, 1.00000000e+000, 1.00000000e+000],
   [2.64822125e+000, 1.00000000e+000, 1.00000000e+000 ... 1.00000000e+000, 1.00000000e+000, 2.75987411e+000]],
  [[1.00000000e+000, 1.10747862e+000, 4.27514219e+000 ... 1.23420322e+000, 1.47390163e+000, 1.00000000e+000],
   [2.78997779e+000, 1.00000000e+000, 1.00000000e+000 ... 6.79441309e+000, 2.08808064e+000, 1.00000000e+000],
   [1.00000000e+000, 1.66101873e+000, 1.00000000e+000 ... 3.54037547e+000, 1.00000000e+000, 1.00000000e+000],
   ...
   [1.00000000e+000, 1.00000000e+000, 1.54626226e+000 ... 1.00000000e+000, 1.15076423e+000, 1.69128251e+000],
   [1.00000000e+000, 8.26099300e+000, 1.00000000e+000 ... 4.56050920e+000, 3.41315985e+000, 2.67239761e+000],
   [1.00000000e+000, 1.84321523e+000, 1.00000000e+000 ... 1.00000000e+000, 1.00000000e+000, 1.32717013e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:19

analyse the exceptions in iter:29
torch exception:
{'id': 4, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[14.5889, 14.5889, 14.5889,  ..., 14.5889, 14.5889, 14.5889],
          [12.5797, 12.5797, 12.5797,  ..., 12.5797, 12.5797, 12.5797],
          [13.1064, 13.1064, 13.1064,  ..., 13.1064, 13.1064, 13.1064],
          ...,
          [14.8629, 14.8629, 14.8629,  ..., 14.8629, 14.8629, 14.8629],
          [12.1426, 12.1426, 12.1426,  ..., 12.1426, 12.1426, 12.1426],
          [11.6799, 11.6799, 11.6799,  ..., 11.6799, 11.6799, 11.6799]],

         [[16.9899, 16.9899, 16.9899,  ..., 16.9899, 16.9899, 16.9899],
          [11.7133, 11.7133, 11.7133,  ..., 11.7133, 11.7133, 11.7133],
          [13.8769, 13.8769, 13.8769,  ..., 13.8769, 13.8769, 13.8769],
          ...,
          [12.7965, 12.7965, 12.7965,  ..., 12.7965, 12.7965, 12.7965],
          [13.3354, 13.3354, 13.3354,  ..., 13.3354, 13.3354, 13.3354],
          [14.2240, 14.2240, 14.2240,  ..., 14.2240, 14.2240, 14.2240]],

         [[13.8277, 13.8277, 13.8277,  ..., 13.8277, 13.8277, 13.8277],
          [15.6153, 15.6153, 15.6153,  ..., 15.6153, 15.6153, 15.6153],
          [14.7265, 14.7265, 14.7265,  ..., 14.7265, 14.7265, 14.7265],
          ...,
          [12.5149, 12.5149, 12.5149,  ..., 12.5149, 12.5149, 12.5149],
          [12.7251, 12.7251, 12.7251,  ..., 12.7251, 12.7251, 12.7251],
          [11.4487, 11.4487, 11.4487,  ..., 11.4487, 11.4487, 11.4487]]]],
       grad_fn=<UnsafeViewBackward0>)]}
Given groups=1, weight of size [128, 128, 3, 3], expected input[1, 3, 8, 100] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 4, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 8, 100], dtype=Float32, value=
[[[[1.45888615e+001, 1.45888615e+001, 1.45888615e+001 ... 1.45888615e+001, 1.45888615e+001, 1.45888615e+001],
   [1.25796995e+001, 1.25796995e+001, 1.25796995e+001 ... 1.25797014e+001, 1.25797014e+001, 1.25797014e+001],
   [1.31063843e+001, 1.31063843e+001, 1.31063843e+001 ... 1.31063843e+001, 1.31063843e+001, 1.31063843e+001],
   ...
   [1.48628893e+001, 1.48628893e+001, 1.48628893e+001 ... 1.48628883e+001, 1.48628883e+001, 1.48628883e+001],
   [1.21426449e+001, 1.21426449e+001, 1.21426449e+001 ... 1.21426449e+001, 1.21426449e+001, 1.21426449e+001],
   [1.16798897e+001, 1.16798897e+001, 1.16798897e+001 ... 1.16798897e+001, 1.16798897e+001, 1.16798897e+001]],
  [[1.69898987e+001, 1.69898987e+001, 1.69898987e+001 ... 1.69898987e+001, 1.69898987e+001, 1.69898987e+001],
   [1.17132969e+001, 1.17132969e+001, 1.17132969e+001 ... 1.17132969e+001, 1.17132969e+001, 1.17132969e+001],
   [1.38769398e+001, 1.38769398e+001, 1.38769398e+001 ... 1.38769388e+001, 1.38769388e+001, 1.38769388e+001],
   ...
   [1.27965374e+001, 1.27965374e+001, 1.27965374e+001 ... 1.27965374e+001, 1.27965374e+001, 1.27965374e+001],
   [1.33354053e+001, 1.33354053e+001, 1.33354053e+001 ... 1.33354053e+001, 1.33354053e+001, 1.33354053e+001],
   [1.42239971e+001, 1.42239971e+001, 1.42239971e+001 ... 1.42239952e+001, 1.42239952e+001, 1.42239952e+001]],
  [[1.38277454e+001, 1.38277454e+001, 1.38277454e+001 ... 1.38277454e+001, 1.38277454e+001, 1.38277454e+001],
   [1.56152887e+001, 1.56152887e+001, 1.56152887e+001 ... 1.56152878e+001, 1.56152878e+001, 1.56152878e+001],
   [1.47265148e+001, 1.47265148e+001, 1.47265148e+001 ... 1.47265158e+001, 1.47265158e+001, 1.47265158e+001],
   ...
   [1.25148735e+001, 1.25148735e+001, 1.25148735e+001 ... 1.25148735e+001, 1.25148735e+001, 1.25148735e+001],
   [1.27250509e+001, 1.27250509e+001, 1.27250509e+001 ... 1.27250509e+001, 1.27250509e+001, 1.27250509e+001],
   [1.14486713e+001, 1.14486713e+001, 1.14486713e+001 ... 1.14486713e+001, 1.14486713e+001, 1.14486713e+001]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:26

analyse the exceptions in iter:34
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-1.6118e+00,  3.2217e-01, -5.5491e-01,  ..., -5.2119e-01,
             2.7766e+00, -3.2905e-01],
           [ 1.7653e+00, -1.8780e-01, -3.8501e-01,  ..., -8.5540e-03,
            -4.8219e-01, -1.6710e-01],
           [ 1.9187e+00,  6.8583e-01,  8.8688e-02,  ...,  7.2386e-01,
            -6.8387e-01,  9.4136e-01],
           ...,
           [-1.0553e-01,  3.3380e-01, -1.7183e-01,  ...,  1.9408e+00,
             7.5018e-01, -1.5940e-01],
           [ 2.1879e+00, -2.0238e+00,  1.9296e-01,  ..., -2.3332e+00,
             2.6319e-01,  1.6653e+00],
           [ 3.1936e-01,  4.5512e-01, -4.2648e-01,  ..., -2.7804e-01,
            -2.5015e-01, -4.2374e-01]],

          [[-1.6830e+00,  8.7204e-01, -7.6233e-01,  ..., -1.4154e+00,
            -1.0388e+00,  2.1528e+00],
           [-6.9780e-01,  8.3925e-01, -1.4354e+00,  ..., -6.2703e-01,
            -2.3564e-02,  1.5802e+00],
           [-6.6073e-01,  1.4786e+00,  9.9883e-01,  ...,  7.0523e-01,
            -2.4179e+00, -2.5704e-02],
           ...,
           [-1.3038e+00,  5.3377e-02,  8.9299e-01,  ..., -3.6666e-02,
             1.1657e+00, -7.5545e-01],
           [-7.4055e-01,  9.5605e-01,  2.7517e-01,  ..., -8.3992e-01,
            -2.2283e-01, -4.9858e-01],
           [ 1.0127e+00,  3.2196e-01, -8.7226e-01,  ..., -2.2021e-01,
             2.2146e+00, -1.2695e+00]],

          [[ 8.6104e-01, -1.4952e+00,  4.7163e-01,  ..., -7.9273e-01,
            -8.4800e-01,  1.7487e+00],
           [-6.6201e-01,  7.9350e-01,  2.8031e-03,  ..., -3.1282e-01,
             7.0767e-01, -5.8541e-02],
           [ 3.9590e-01,  5.5953e-01, -2.2554e+00,  ..., -4.1566e-01,
            -4.7345e-01,  4.2539e+00],
           ...,
           [ 6.4386e-01,  5.8528e-01,  6.1468e-01,  ...,  5.9818e-01,
            -3.5314e-01,  1.3953e+00],
           [-1.7118e+00,  2.4414e-03, -4.8282e-01,  ...,  8.6018e-01,
             1.9410e+00, -1.3811e+00],
           [-3.9808e-01,  5.5849e-01, -7.5001e-01,  ..., -5.7191e-01,
            -3.7406e-01, -7.3964e-01]]]]])}
Given groups=1, weight of size [256, 256, 1, 1], expected input[1, 3, 32, 32] to have 256 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-1.61179018e+000, 3.22167546e-001, -5.54910541e-001 ... -5.21187663e-001, 2.77658725e+000, -3.29050452e-001],
    [1.76526082e+000, -1.87800661e-001, -3.85010421e-001 ... -8.55397340e-003, -4.82193559e-001, -1.67103648e-001],
    [1.91869295e+000, 6.85832202e-001, 8.86883736e-002 ... 7.23863542e-001, -6.83868825e-001, 9.41363513e-001],
    ...
    [-1.05526060e-001, 3.33800465e-001, -1.71827540e-001 ... 1.94076276e+000, 7.50178635e-001, -1.59400940e-001],
    [2.18786883e+000, -2.02375340e+000, 1.92962080e-001 ... -2.33323002e+000, 2.63188690e-001, 1.66532397e+000],
    [3.19360346e-001, 4.55121130e-001, -4.26477462e-001 ... -2.78043032e-001, -2.50146896e-001, -4.23736662e-001]],
   [[-1.68304336e+000, 8.72040689e-001, -7.62327671e-001 ... -1.41543031e+000, -1.03875363e+000, 2.15276027e+000],
    [-6.97800040e-001, 8.39253724e-001, -1.43537951e+000 ... -6.27032876e-001, -2.35641599e-002, 1.58024096e+000],
    [-6.60732806e-001, 1.47861099e+000, 9.98830378e-001 ... 7.05225766e-001, -2.41787839e+000, -2.57040970e-002],
    ...
    [-1.30380702e+000, 5.33771999e-002, 8.92990887e-001 ... -3.66662256e-002, 1.16566265e+000, -7.55452812e-001],
    [-7.40548253e-001, 9.56047475e-001, 2.75170922e-001 ... -8.39918733e-001, -2.22825870e-001, -4.98578370e-001],
    [1.01269746e+000, 3.21955979e-001, -8.72257292e-001 ... -2.20206797e-001, 2.21456170e+000, -1.26946151e+000]],
   [[8.61041009e-001, -1.49522293e+000, 4.71627563e-001 ... -7.92730808e-001, -8.48001897e-001, 1.74874854e+000],
    [-6.62007749e-001, 7.93502629e-001, 2.80313240e-003 ... -3.12816650e-001, 7.07666934e-001, -5.85406348e-002],
    [3.95896107e-001, 5.59532464e-001, -2.25541043e+000 ... -4.15663332e-001, -4.73453432e-001, 4.25391722e+000],
    ...
    [6.43863976e-001, 5.85277081e-001, 6.14675999e-001 ... 5.98184466e-001, -3.53143603e-001, 1.39525354e+000],
    [-1.71175826e+000, 2.44136015e-003, -4.82816488e-001 ... 8.60182464e-001, 1.94101572e+000, -1.38108432e+000],
    [-3.98077965e-001, 5.58490634e-001, -7.50012040e-001 ... -5.71910799e-001, -3.74061167e-001, -7.39641964e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 256, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:30

analyse output arrays in iter:37

pre layer res:
6:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          2.9920881e+10, 3.4471682e+12, 3.1616817e+15],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          1.9406188e+04, 1.5193004e+09, 1.1694689e+12],
         [7.6309137e+00, 4.8799214e-01, 1.7240379e-02, ...,
          2.2430172e+09, 2.3486813e+13, 2.1096579e+17],
         ...,
         [5.2664864e+11, 2.1633368e+14, 2.5582486e+14, ...,
          1.6581536e+07, 6.4275125e+14, 1.3509558e+16],
         [1.6207930e+05, 1.2696514e+03, 2.5688282e+09, ...,
          9.3704004e+10, 2.4524778e+08, 1.6910593e+09],
         [4.0404787e+13, 8.1538424e+18, 6.3891034e+20, ...,
          2.9067330e+07, 3.1605725e+15, 3.0078092e+16]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          2.3253088e+07, 2.9232969e+04, 6.7668047e+03],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          9.2671492e+04, 2.7688829e+11, 1.0232101e+14],
         [1.8662405e+11, 5.7332900e+10, 2.4162512e+11, ...,
          4.5679632e-01, 1.6978329e+01, 1.4217089e+03],
         ...,
         [1.2899048e+06, 2.7954099e+11, 4.1835468e+14, ...,
          6.3344898e+04, 6.2247334e+10, 9.7564688e+10],
         [1.1057430e+08, 2.6772993e+01, 5.6733305e-05, ...,
          8.8688327e+12, 2.2547082e+11, 2.6833836e+09],
         [1.9563986e+09, 8.6161951e+13, 8.1650668e+15, ...,
          7.8446345e+00, 1.5521449e+03, 6.6886888e+05]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          2.3751622e+06, 1.2899495e+03, 3.4445221e+02],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          3.8109587e+03, 8.1625877e+01, 9.8836266e+04],
         [2.9846247e+05, 2.2255180e+04, 1.1211167e+05, ...,
          3.9874965e+06, 1.1330273e+07, 6.9875663e+12],
         ...,
         [1.2513112e+08, 1.8268782e+09, 7.1190302e+02, ...,
          9.9393086e+04, 9.9155984e+07, 3.5562871e+04],
         [3.6034043e+03, 9.6847797e+02, 2.6860505e-03, ...,
          5.2178685e+13, 2.2983610e+17, 2.1633242e+18],
         [4.3992771e+09, 2.3517483e+10, 1.2605645e+07, ...,
          5.5242030e+06, 7.5460898e+13, 1.4950327e+09]],

        ...,

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          2.3253088e+07, 2.9232969e+04, 6.7668047e+03],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          9.2671492e+04, 2.7688829e+11, 1.0232101e+14],
         [1.8662405e+11, 5.7332900e+10, 2.4162512e+11, ...,
          4.5679632e-01, 1.6978329e+01, 1.4217089e+03],
         ...,
         [1.2899048e+06, 2.7954099e+11, 4.1835468e+14, ...,
          6.3344898e+04, 6.2247334e+10, 9.7564688e+10],
         [1.1057430e+08, 2.6772993e+01, 5.6733305e-05, ...,
          8.8688327e+12, 2.2547082e+11, 2.6833836e+09],
         [1.9563986e+09, 8.6161951e+13, 8.1650668e+15, ...,
          7.8446345e+00, 1.5521449e+03, 6.6886888e+05]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          2.3751622e+06, 1.2899495e+03, 3.4445221e+02],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          3.8109587e+03, 8.1625877e+01, 9.8836266e+04],
         [2.9846247e+05, 2.2255180e+04, 1.1211167e+05, ...,
          3.9874965e+06, 1.1330273e+07, 6.9875663e+12],
         ...,
         [1.2513112e+08, 1.8268782e+09, 7.1190302e+02, ...,
          9.9393086e+04, 9.9155984e+07, 3.5562871e+04],
         [3.6034043e+03, 9.6847797e+02, 2.6860505e-03, ...,
          5.2178685e+13, 2.2983610e+17, 2.1633242e+18],
         [4.3992771e+09, 2.3517483e+10, 1.2605645e+07, ...,
          5.5242030e+06, 7.5460898e+13, 1.4950327e+09]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          2.5623254e+17, 2.7429431e+19, 2.4754161e+19],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          4.7135974e+02, 3.1798432e+08, 8.0741619e+08],
         [2.6747862e+05, 9.7071160e+07, 1.8169494e+05, ...,
          5.1047934e+14, 3.0654157e+17, 1.0728205e+18],
         ...,
         [2.0894394e+10, 3.0020356e+07, 1.2145469e+09, ...,
          3.3178408e+15, 1.8863127e+14, 1.7048842e+08],
         [1.7019251e+09, 1.3954541e+08, 1.0610832e+12, ...,
          1.1218019e+14, 1.2462989e+18, 9.3355266e+18],
         [2.5072391e+12, 8.2634565e+11, 1.7651407e+09, ...,
          6.7623229e+09, 8.0702300e+10, 3.8365327e+09]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [17], 'to': [7]}
tf node:
{'name': 'linear', 'output': array([[[[3.16587140e+15, 3.16587140e+15, 3.16587140e+15, ...,
          3.16587140e+15, 3.16587140e+15, 3.16587140e+15],
         [5.49292629e+14, 5.49292629e+14, 5.49292629e+14, ...,
          5.49292629e+14, 5.49292629e+14, 5.49292629e+14],
         [2.10988980e+17, 2.10988980e+17, 2.10988980e+17, ...,
          2.10988980e+17, 2.10988980e+17, 2.10988980e+17],
         ...,
         [1.46265305e+16, 1.46265305e+16, 1.46265305e+16, ...,
          1.46265305e+16, 1.46265305e+16, 1.46265305e+16],
         [1.24715303e+11, 1.24715303e+11, 1.24715303e+11, ...,
          1.24715303e+11, 1.24715303e+11, 1.24715303e+11],
         [6.46933361e+20, 6.46933361e+20, 6.46933361e+20, ...,
          6.46933361e+20, 6.46933361e+20, 6.46933361e+20]],

        [[7.57138824e+12, 7.57138824e+12, 7.57138824e+12, ...,
          7.57138824e+12, 7.57138824e+12, 7.57138824e+12],
         [1.02665925e+14, 1.02665925e+14, 1.02665925e+14, ...,
          1.02665925e+14, 1.02665925e+14, 1.02665925e+14],
         [5.34735389e+11, 5.34735389e+11, 5.34735389e+11, ...,
          5.34735389e+11, 5.34735389e+11, 5.34735389e+11],
         ...,
         [6.08306486e+14, 6.08306486e+14, 6.08306486e+14, ...,
          6.08306486e+14, 6.08306486e+14, 6.08306486e+14],
         [4.10305914e+16, 4.10305914e+16, 4.10305914e+16, ...,
          4.10305914e+16, 4.10305914e+16, 4.10305914e+16],
         [1.42709222e+16, 1.42709222e+16, 1.42709222e+16, ...,
          1.42709222e+16, 1.42709222e+16, 1.42709222e+16]],

        [[1.27354637e+17, 1.27354637e+17, 1.27354637e+17, ...,
          1.27354637e+17, 1.27354637e+17, 1.27354637e+17],
         [1.69944380e+15, 1.69944380e+15, 1.69944380e+15, ...,
          1.69944380e+15, 1.69944380e+15, 1.69944380e+15],
         [2.81655187e+19, 2.81655187e+19, 2.81655187e+19, ...,
          2.81655187e+19, 2.81655187e+19, 2.81655187e+19],
         ...,
         [5.46311424e+09, 5.46311424e+09, 5.46311424e+09, ...,
          5.46311424e+09, 5.46311424e+09, 5.46311424e+09],
         [2.39273466e+18, 2.39273466e+18, 2.39273466e+18, ...,
          2.39273466e+18, 2.39273466e+18, 2.39273466e+18],
         [2.82026578e+14, 2.82026578e+14, 2.82026578e+14, ...,
          2.82026578e+14, 2.82026578e+14, 2.82026578e+14]],

        ...,

        [[7.57138824e+12, 7.57138824e+12, 7.57138824e+12, ...,
          7.57138824e+12, 7.57138824e+12, 7.57138824e+12],
         [1.02665925e+14, 1.02665925e+14, 1.02665925e+14, ...,
          1.02665925e+14, 1.02665925e+14, 1.02665925e+14],
         [5.34735389e+11, 5.34735389e+11, 5.34735389e+11, ...,
          5.34735389e+11, 5.34735389e+11, 5.34735389e+11],
         ...,
         [6.08306486e+14, 6.08306486e+14, 6.08306486e+14, ...,
          6.08306486e+14, 6.08306486e+14, 6.08306486e+14],
         [4.10305914e+16, 4.10305914e+16, 4.10305914e+16, ...,
          4.10305914e+16, 4.10305914e+16, 4.10305914e+16],
         [1.42709222e+16, 1.42709222e+16, 1.42709222e+16, ...,
          1.42709222e+16, 1.42709222e+16, 1.42709222e+16]],

        [[1.27354637e+17, 1.27354637e+17, 1.27354637e+17, ...,
          1.27354637e+17, 1.27354637e+17, 1.27354637e+17],
         [1.69944380e+15, 1.69944380e+15, 1.69944380e+15, ...,
          1.69944380e+15, 1.69944380e+15, 1.69944380e+15],
         [2.81655187e+19, 2.81655187e+19, 2.81655187e+19, ...,
          2.81655187e+19, 2.81655187e+19, 2.81655187e+19],
         ...,
         [5.46311424e+09, 5.46311424e+09, 5.46311424e+09, ...,
          5.46311424e+09, 5.46311424e+09, 5.46311424e+09],
         [2.39273466e+18, 2.39273466e+18, 2.39273466e+18, ...,
          2.39273466e+18, 2.39273466e+18, 2.39273466e+18],
         [2.82026578e+14, 2.82026578e+14, 2.82026578e+14, ...,
          2.82026578e+14, 2.82026578e+14, 2.82026578e+14]],

        [[5.24600351e+19, 5.24600351e+19, 5.24600351e+19, ...,
          5.24600351e+19, 5.24600351e+19, 5.24600351e+19],
         [9.62914807e+13, 9.62914807e+13, 9.62914807e+13, ...,
          9.62914807e+13, 9.62914807e+13, 9.62914807e+13],
         [1.38001931e+18, 1.38001931e+18, 1.38001931e+18, ...,
          1.38001931e+18, 1.38001931e+18, 1.38001931e+18],
         ...,
         [3.50742277e+15, 3.50742277e+15, 3.50742277e+15, ...,
          3.50742277e+15, 3.50742277e+15, 3.50742277e+15],
         [1.05824410e+19, 1.05824410e+19, 1.05824410e+19, ...,
          1.05824410e+19, 1.05824410e+19, 1.05824410e+19],
         [3.58281721e+12, 3.58281721e+12, 3.58281721e+12, ...,
          3.58281721e+12, 3.58281721e+12, 3.58281721e+12]]]],
      dtype=float32), 'output_shape': TensorShape([1, 512, 16, 100]), 'from': [6], 'to': []}
ms node:
{'name': 'linear', 'output': array([[[[3.1647531e+15, 3.1647531e+15, 3.1647531e+15, ...,
          3.1647531e+15, 3.1647531e+15, 3.1647531e+15],
         [5.4941399e+14, 5.4941399e+14, 5.4941399e+14, ...,
          5.4941396e+14, 5.4941396e+14, 5.4941396e+14],
         [2.1092968e+17, 2.1092968e+17, 2.1092968e+17, ...,
          2.1092968e+17, 2.1092968e+17, 2.1092968e+17],
         ...,
         [1.4627471e+16, 1.4627471e+16, 1.4627471e+16, ...,
          1.4627471e+16, 1.4627471e+16, 1.4627471e+16],
         [1.2473045e+11, 1.2473045e+11, 1.2473045e+11, ...,
          1.2473046e+11, 1.2473046e+11, 1.2473046e+11],
         [6.4738140e+20, 6.4738140e+20, 6.4738140e+20, ...,
          6.4738147e+20, 6.4738147e+20, 6.4738147e+20]],

        [[7.5717411e+12, 7.5717411e+12, 7.5717411e+12, ...,
          7.5717416e+12, 7.5717416e+12, 7.5717416e+12],
         [1.0262779e+14, 1.0262779e+14, 1.0262779e+14, ...,
          1.0262779e+14, 1.0262779e+14, 1.0262779e+14],
         [5.3498869e+11, 5.3498869e+11, 5.3498869e+11, ...,
          5.3498872e+11, 5.3498872e+11, 5.3498872e+11],
         ...,
         [6.0843218e+14, 6.0843218e+14, 6.0843218e+14, ...,
          6.0843218e+14, 6.0843218e+14, 6.0843218e+14],
         [4.1022036e+16, 4.1022036e+16, 4.1022036e+16, ...,
          4.1022036e+16, 4.1022036e+16, 4.1022036e+16],
         [1.4274570e+16, 1.4274570e+16, 1.4274570e+16, ...,
          1.4274569e+16, 1.4274569e+16, 1.4274569e+16]],

        [[1.2738675e+17, 1.2738675e+17, 1.2738675e+17, ...,
          1.2738675e+17, 1.2738675e+17, 1.2738675e+17],
         [1.6977089e+15, 1.6977089e+15, 1.6977089e+15, ...,
          1.6977089e+15, 1.6977089e+15, 1.6977089e+15],
         [2.8151146e+19, 2.8151146e+19, 2.8151146e+19, ...,
          2.8151146e+19, 2.8151146e+19, 2.8151146e+19],
         ...,
         [5.4636058e+09, 5.4636058e+09, 5.4636058e+09, ...,
          5.4636052e+09, 5.4636052e+09, 5.4636052e+09],
         [2.3928963e+18, 2.3928963e+18, 2.3928963e+18, ...,
          2.3928963e+18, 2.3928963e+18, 2.3928963e+18],
         [2.8202977e+14, 2.8202977e+14, 2.8202977e+14, ...,
          2.8202977e+14, 2.8202977e+14, 2.8202977e+14]],

        ...,

        [[7.5717411e+12, 7.5717411e+12, 7.5717411e+12, ...,
          7.5717416e+12, 7.5717416e+12, 7.5717416e+12],
         [1.0262779e+14, 1.0262779e+14, 1.0262779e+14, ...,
          1.0262779e+14, 1.0262779e+14, 1.0262779e+14],
         [5.3498869e+11, 5.3498869e+11, 5.3498869e+11, ...,
          5.3498872e+11, 5.3498872e+11, 5.3498872e+11],
         ...,
         [6.0843218e+14, 6.0843218e+14, 6.0843218e+14, ...,
          6.0843218e+14, 6.0843218e+14, 6.0843218e+14],
         [4.1022036e+16, 4.1022036e+16, 4.1022036e+16, ...,
          4.1022036e+16, 4.1022036e+16, 4.1022036e+16],
         [1.4274570e+16, 1.4274570e+16, 1.4274570e+16, ...,
          1.4274569e+16, 1.4274569e+16, 1.4274569e+16]],

        [[1.2738675e+17, 1.2738675e+17, 1.2738675e+17, ...,
          1.2738675e+17, 1.2738675e+17, 1.2738675e+17],
         [1.6977089e+15, 1.6977089e+15, 1.6977089e+15, ...,
          1.6977089e+15, 1.6977089e+15, 1.6977089e+15],
         [2.8151146e+19, 2.8151146e+19, 2.8151146e+19, ...,
          2.8151146e+19, 2.8151146e+19, 2.8151146e+19],
         ...,
         [5.4636058e+09, 5.4636058e+09, 5.4636058e+09, ...,
          5.4636052e+09, 5.4636052e+09, 5.4636052e+09],
         [2.3928963e+18, 2.3928963e+18, 2.3928963e+18, ...,
          2.3928963e+18, 2.3928963e+18, 2.3928963e+18],
         [2.8202977e+14, 2.8202977e+14, 2.8202977e+14, ...,
          2.8202977e+14, 2.8202977e+14, 2.8202977e+14]],

        [[5.2442667e+19, 5.2442667e+19, 5.2442667e+19, ...,
          5.2442667e+19, 5.2442667e+19, 5.2442667e+19],
         [9.6348381e+13, 9.6348381e+13, 9.6348381e+13, ...,
          9.6348381e+13, 9.6348381e+13, 9.6348381e+13],
         [1.3795117e+18, 1.3795117e+18, 1.3795117e+18, ...,
          1.3795117e+18, 1.3795117e+18, 1.3795117e+18],
         ...,
         [3.5068220e+15, 3.5068220e+15, 3.5068220e+15, ...,
          3.5068220e+15, 3.5068220e+15, 3.5068220e+15],
         [1.0585034e+19, 1.0585034e+19, 1.0585034e+19, ...,
          1.0585034e+19, 1.0585034e+19, 1.0585034e+19],
         [3.5815264e+12, 3.5815264e+12, 3.5815264e+12, ...,
          3.5815264e+12, 3.5815264e+12, 3.5815264e+12]]]], dtype=float32), 'output_shape': (1, 512, 16, 100), 'from': [6], 'to': []}
torch node:
{'name': 'linear', 'output': array([[[[3.1646693e+15, 3.1646693e+15, 3.1646693e+15, ...,
          3.1646693e+15, 3.1646693e+15, 3.1646693e+15],
         [5.4940581e+14, 5.4940581e+14, 5.4940581e+14, ...,
          5.4940577e+14, 5.4940577e+14, 5.4940577e+14],
         [2.1093620e+17, 2.1093620e+17, 2.1093620e+17, ...,
          2.1093619e+17, 2.1093619e+17, 2.1093619e+17],
         ...,
         [1.4627621e+16, 1.4627621e+16, 1.4627621e+16, ...,
          1.4627621e+16, 1.4627621e+16, 1.4627621e+16],
         [1.2473103e+11, 1.2473103e+11, 1.2473103e+11, ...,
          1.2473103e+11, 1.2473103e+11, 1.2473103e+11],
         [6.4739104e+20, 6.4739104e+20, 6.4739104e+20, ...,
          6.4739111e+20, 6.4739111e+20, 6.4739111e+20]],

        [[7.5717841e+12, 7.5717841e+12, 7.5717841e+12, ...,
          7.5717846e+12, 7.5717846e+12, 7.5717846e+12],
         [1.0262860e+14, 1.0262860e+14, 1.0262860e+14, ...,
          1.0262860e+14, 1.0262860e+14, 1.0262860e+14],
         [5.3498898e+11, 5.3498898e+11, 5.3498898e+11, ...,
          5.3498895e+11, 5.3498895e+11, 5.3498895e+11],
         ...,
         [6.0842567e+14, 6.0842567e+14, 6.0842567e+14, ...,
          6.0842567e+14, 6.0842567e+14, 6.0842567e+14],
         [4.1022302e+16, 4.1022302e+16, 4.1022302e+16, ...,
          4.1022298e+16, 4.1022298e+16, 4.1022298e+16],
         [1.4274696e+16, 1.4274696e+16, 1.4274696e+16, ...,
          1.4274695e+16, 1.4274695e+16, 1.4274695e+16]],

        [[1.2738771e+17, 1.2738771e+17, 1.2738771e+17, ...,
          1.2738771e+17, 1.2738771e+17, 1.2738771e+17],
         [1.6977094e+15, 1.6977094e+15, 1.6977094e+15, ...,
          1.6977094e+15, 1.6977094e+15, 1.6977094e+15],
         [2.8150829e+19, 2.8150829e+19, 2.8150829e+19, ...,
          2.8150829e+19, 2.8150829e+19, 2.8150829e+19],
         ...,
         [5.4636370e+09, 5.4636370e+09, 5.4636370e+09, ...,
          5.4636365e+09, 5.4636365e+09, 5.4636365e+09],
         [2.3928960e+18, 2.3928960e+18, 2.3928960e+18, ...,
          2.3928960e+18, 2.3928960e+18, 2.3928960e+18],
         [2.8203577e+14, 2.8203577e+14, 2.8203577e+14, ...,
          2.8203574e+14, 2.8203574e+14, 2.8203574e+14]],

        ...,

        [[7.5717841e+12, 7.5717841e+12, 7.5717841e+12, ...,
          7.5717846e+12, 7.5717846e+12, 7.5717846e+12],
         [1.0262860e+14, 1.0262860e+14, 1.0262860e+14, ...,
          1.0262860e+14, 1.0262860e+14, 1.0262860e+14],
         [5.3498898e+11, 5.3498898e+11, 5.3498898e+11, ...,
          5.3498895e+11, 5.3498895e+11, 5.3498895e+11],
         ...,
         [6.0842567e+14, 6.0842567e+14, 6.0842567e+14, ...,
          6.0842567e+14, 6.0842567e+14, 6.0842567e+14],
         [4.1022302e+16, 4.1022302e+16, 4.1022302e+16, ...,
          4.1022298e+16, 4.1022298e+16, 4.1022298e+16],
         [1.4274696e+16, 1.4274696e+16, 1.4274696e+16, ...,
          1.4274695e+16, 1.4274695e+16, 1.4274695e+16]],

        [[1.2738771e+17, 1.2738771e+17, 1.2738771e+17, ...,
          1.2738771e+17, 1.2738771e+17, 1.2738771e+17],
         [1.6977094e+15, 1.6977094e+15, 1.6977094e+15, ...,
          1.6977094e+15, 1.6977094e+15, 1.6977094e+15],
         [2.8150829e+19, 2.8150829e+19, 2.8150829e+19, ...,
          2.8150829e+19, 2.8150829e+19, 2.8150829e+19],
         ...,
         [5.4636370e+09, 5.4636370e+09, 5.4636370e+09, ...,
          5.4636365e+09, 5.4636365e+09, 5.4636365e+09],
         [2.3928960e+18, 2.3928960e+18, 2.3928960e+18, ...,
          2.3928960e+18, 2.3928960e+18, 2.3928960e+18],
         [2.8203577e+14, 2.8203577e+14, 2.8203577e+14, ...,
          2.8203574e+14, 2.8203574e+14, 2.8203574e+14]],

        [[5.2441181e+19, 5.2441181e+19, 5.2441181e+19, ...,
          5.2441181e+19, 5.2441181e+19, 5.2441181e+19],
         [9.6344757e+13, 9.6344757e+13, 9.6344757e+13, ...,
          9.6344757e+13, 9.6344757e+13, 9.6344757e+13],
         [1.3795599e+18, 1.3795599e+18, 1.3795599e+18, ...,
          1.3795599e+18, 1.3795599e+18, 1.3795599e+18],
         ...,
         [3.5067576e+15, 3.5067576e+15, 3.5067576e+15, ...,
          3.5067576e+15, 3.5067576e+15, 3.5067576e+15],
         [1.0585037e+19, 1.0585037e+19, 1.0585037e+19, ...,
          1.0585037e+19, 1.0585037e+19, 1.0585037e+19],
         [3.5814527e+12, 3.5814527e+12, 3.5814527e+12, ...,
          3.5814527e+12, 3.5814527e+12, 3.5814527e+12]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 16, 100]), 'from': [6], 'to': []}

pre layer res:
9:transpose
{'name': 'transpose', 'output': array([[[[      -inf,       -inf,       -inf, ...,  9.299987 ,
           9.119215 ,  9.052871 ],
         [      -inf,       -inf,       -inf, ...,  8.984114 ,
           9.4316025,  9.96423  ],
         [ 7.8739786,  7.0157123,  6.8931494, ...,  8.869117 ,
          10.01353  , 10.305948 ],
         ...,
         [ 9.569883 ,  9.49871  ,  8.551595 , ...,  9.706126 ,
           9.402643 ,  7.754696 ],
         [ 8.427706 ,  8.724207 ,  9.287672 , ...,  9.615664 ,
          10.107306 ,  9.790235 ],
         [ 9.662053 ,  9.966931 , 10.205516 , ...,  8.657911 ,
           9.89101  ,  9.797793 ]],

        [[      -inf,       -inf,       -inf, ...,  9.299987 ,
           9.119215 ,  9.052871 ],
         [      -inf,       -inf,       -inf, ...,  8.984114 ,
           9.4316025,  9.96423  ],
         [ 7.8739786,  7.0157123,  6.8931494, ...,  8.869117 ,
          10.01353  , 10.305948 ],
         ...,
         [ 9.569883 ,  9.49871  ,  8.551595 , ...,  9.706126 ,
           9.402643 ,  7.754696 ],
         [ 8.427706 ,  8.724207 ,  9.287672 , ...,  9.615664 ,
          10.107306 ,  9.790235 ],
         [ 9.662053 ,  9.966931 , 10.205516 , ...,  8.657911 ,
           9.89101  ,  9.797793 ]],

        [[      -inf,       -inf,       -inf, ...,  9.299987 ,
           9.119215 ,  9.052871 ],
         [      -inf,       -inf,       -inf, ...,  8.984114 ,
           9.4316025,  9.96423  ],
         [ 7.8739786,  7.0157123,  6.8931494, ...,  8.869117 ,
          10.01353  , 10.305948 ],
         ...,
         [ 9.569883 ,  9.49871  ,  8.551595 , ...,  9.706126 ,
           9.402643 ,  7.754696 ],
         [ 8.427706 ,  8.724207 ,  9.287672 , ...,  9.615664 ,
          10.107306 ,  9.790235 ],
         [ 9.662053 ,  9.966931 , 10.205516 , ...,  8.657911 ,
           9.89101  ,  9.797793 ]],

        ...,

        [[      -inf,       -inf,       -inf, ...,  9.299987 ,
           9.119215 ,  9.052871 ],
         [      -inf,       -inf,       -inf, ...,  8.984114 ,
           9.4316025,  9.96423  ],
         [ 7.8739786,  7.0157123,  6.8931494, ...,  8.869117 ,
          10.01353  , 10.305948 ],
         ...,
         [ 9.569883 ,  9.49871  ,  8.551595 , ...,  9.706126 ,
           9.402643 ,  7.754696 ],
         [ 8.427706 ,  8.724207 ,  9.287672 , ...,  9.615664 ,
          10.107306 ,  9.790235 ],
         [ 9.662053 ,  9.966931 , 10.205516 , ...,  8.657911 ,
           9.89101  ,  9.797793 ]],

        [[      -inf,       -inf,       -inf, ...,  9.299987 ,
           9.119215 ,  9.052871 ],
         [      -inf,       -inf,       -inf, ...,  8.984114 ,
           9.4316025,  9.96423  ],
         [ 7.8739786,  7.0157123,  6.8931494, ...,  8.869117 ,
          10.01353  , 10.305948 ],
         ...,
         [ 9.569883 ,  9.49871  ,  8.551595 , ...,  9.706126 ,
           9.402643 ,  7.754696 ],
         [ 8.427706 ,  8.724207 ,  9.287672 , ...,  9.615664 ,
          10.107306 ,  9.790235 ],
         [ 9.662053 ,  9.966931 , 10.205516 , ...,  8.657911 ,
           9.89101  ,  9.797793 ]],

        [[      -inf,       -inf,       -inf, ...,  9.299987 ,
           9.119215 ,  9.052871 ],
         [      -inf,       -inf,       -inf, ...,  8.984114 ,
           9.4316025,  9.96423  ],
         [ 7.8739786,  7.0157123,  6.8931494, ...,  8.869117 ,
          10.01353  , 10.305948 ],
         ...,
         [ 9.569883 ,  9.49871  ,  8.551595 , ...,  9.706126 ,
           9.402643 ,  7.754696 ],
         [ 8.427706 ,  8.724207 ,  9.287672 , ...,  9.615664 ,
          10.107306 ,  9.790235 ],
         [ 9.662053 ,  9.966931 , 10.205516 , ...,  8.657911 ,
           9.89101  ,  9.797793 ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [14], 'to': [10]}
13:reshape
{'name': 'reshape', 'output': array([[[[ -2.9414318 ,  -1.6178379 ,  -2.868614  , ...,   2.7609248 ,
            5.315072  ,   8.792069  ],
         [  3.039053  ,   4.065443  ,   1.3470256 , ...,  -4.04744   ,
            1.139155  ,   3.9295564 ],
         [ -6.857875  ,  -7.37444   ,  -8.9234    , ...,   1.8964272 ,
            5.380201  ,   9.639289  ],
         ...,
         [  3.9250162 ,   7.005211  ,   8.036162  , ...,  -1.3942261 ,
            7.645747  ,  10.81639   ],
         [ -2.4297853 ,  -5.150958  ,   1.5456855 , ...,   3.01604   ,
           -0.4484158 ,   0.83407634],
         [  6.0029316 ,  11.805578  ,  13.747632  , ...,  -0.06534821,
            7.9537554 ,   9.173494  ]],

        [[  0.62255585,  -0.7357667 ,   2.8865054 , ...,  -0.8190129 ,
           -3.977689  ,  -4.6429787 ],
         [ -3.47016   ,  -0.56902456,   5.807819  , ...,  -3.2657056 ,
            3.7418375 ,   6.165339  ],
         [  5.102202  ,   5.370358  ,   6.2121773 , ...,  -9.260876  ,
           -8.597561  ,  -6.676141  ],
         ...,
         [ -2.534844  ,   3.6794972 ,   8.282081  , ...,  -4.1779513 ,
            3.024547  ,   4.897195  ],
         [  0.8328937 ,  -7.08051   , -14.176247  , ...,   5.291119  ,
            2.9634233 ,   1.0649372 ],
         [  1.0351319 ,   6.076693  ,   8.113805  , ...,  -7.6279964 ,
           -6.217314  ,  -3.0911214 ]],

        [[  2.3670392 ,  -3.3926656 , -10.069206  , ...,  -1.9596987 ,
           -5.538036  ,  -6.131893  ],
         [ -2.7375245 ,   7.4360857 ,  10.612037  , ...,  -4.8612957 ,
           -7.2305293 ,  -4.2136197 ],
         [ -1.5707787 ,  -2.0105472 ,  -1.0795238 , ...,  -1.2697796 ,
           -1.8920354 ,   4.481628  ],
         ...,
         [ -0.24744722,   1.1642271 ,  -5.267624  , ...,  -3.9527075 ,
           -0.19654104,  -2.5151672 ],
         [ -4.3328886 ,  -5.286344  , -12.247514  , ...,   6.177184  ,
            9.880767  ,  11.318854  ],
         [  1.4403002 ,   1.9735734 ,  -2.030688  , ...,  -0.89558655,
            6.0863075 ,   0.76491356]],

        ...,

        [[  0.62255585,  -0.7357667 ,   2.8865054 , ...,  -0.8190129 ,
           -3.977689  ,  -4.6429787 ],
         [ -3.47016   ,  -0.56902456,   5.807819  , ...,  -3.2657056 ,
            3.7418375 ,   6.165339  ],
         [  5.102202  ,   5.370358  ,   6.2121773 , ...,  -9.260876  ,
           -8.597561  ,  -6.676141  ],
         ...,
         [ -2.534844  ,   3.6794972 ,   8.282081  , ...,  -4.1779513 ,
            3.024547  ,   4.897195  ],
         [  0.8328937 ,  -7.08051   , -14.176247  , ...,   5.291119  ,
            2.9634233 ,   1.0649372 ],
         [  1.0351319 ,   6.076693  ,   8.113805  , ...,  -7.6279964 ,
           -6.217314  ,  -3.0911214 ]],

        [[  2.3670392 ,  -3.3926656 , -10.069206  , ...,  -1.9596987 ,
           -5.538036  ,  -6.131893  ],
         [ -2.7375245 ,   7.4360857 ,  10.612037  , ...,  -4.8612957 ,
           -7.2305293 ,  -4.2136197 ],
         [ -1.5707787 ,  -2.0105472 ,  -1.0795238 , ...,  -1.2697796 ,
           -1.8920354 ,   4.481628  ],
         ...,
         [ -0.24744722,   1.1642271 ,  -5.267624  , ...,  -3.9527075 ,
           -0.19654104,  -2.5151672 ],
         [ -4.3328886 ,  -5.286344  , -12.247514  , ...,   6.177184  ,
            9.880767  ,  11.318854  ],
         [  1.4403002 ,   1.9735734 ,  -2.030688  , ...,  -0.89558655,
            6.0863075 ,   0.76491356]],

        [[ -0.05976933,   0.23076557,  -7.8799725 , ...,  10.742444  ,
           13.25986   ,  13.274892  ],
         [  4.3713617 ,   2.7661176 ,  -3.1445448 , ...,  -5.906303  ,
            0.35715413,   0.2904451 ],
         [ -1.6255814 ,   2.179765  ,  -0.8381072 , ...,   8.064068  ,
           10.118536  ,  10.452463  ],
         ...,
         [  2.3114898 ,  -0.8900165 ,   1.9072239 , ...,   8.162918  ,
            7.032765  ,   1.7223935 ],
         [  2.1998072 ,   0.652743  ,   4.557484  , ...,   6.5598993 ,
           10.726048  ,  12.049945  ],
         [  4.6130486 ,   3.7532084 ,   0.4402321 , ...,   2.6594045 ,
            2.6660056 ,   1.236124  ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [12], 'to': [10]}
tf node:
{'name': 'add', 'output': array([[[[       -inf,        -inf,        -inf, ..., 12.060911  ,
          14.434287  , 17.84494   ],
         [       -inf,        -inf,        -inf, ...,  4.9366736 ,
          10.570758  , 13.893785  ],
         [ 1.0161037 , -0.35872793, -2.0302505 , ..., 10.765544  ,
          15.39373   , 19.945236  ],
         ...,
         [13.4949    , 16.503922  , 16.587757  , ...,  8.3119    ,
          17.04839   , 18.571087  ],
         [ 5.9979205 ,  3.5732489 , 10.833358  , ..., 12.631703  ,
           9.65889   , 10.6243105 ],
         [15.664985  , 21.77251   , 23.953148  , ...,  8.592563  ,
          17.844765  , 18.971287  ]],

        [[       -inf,        -inf,        -inf, ...,  8.480974  ,
           5.141526  ,  4.409892  ],
         [       -inf,        -inf,        -inf, ...,  5.718408  ,
          13.17344   , 16.129568  ],
         [12.976181  , 12.38607   , 13.105327  , ..., -0.39175892,
           1.4159689 ,  3.6298075 ],
         ...,
         [ 7.0350394 , 13.178207  , 16.833675  , ...,  5.528175  ,
          12.427191  , 12.651891  ],
         [ 9.260599  ,  1.6436968 , -4.8885746 , ..., 14.906782  ,
          13.070728  , 10.855172  ],
         [10.6971855 , 16.043625  , 18.31932   , ...,  1.0299149 ,
           3.6736965 ,  6.7066717 ]],

        [[       -inf,        -inf,        -inf, ...,  7.340288  ,
           3.5811791 ,  2.9209776 ],
         [       -inf,        -inf,        -inf, ...,  4.122818  ,
           2.2010732 ,  5.75061   ],
         [ 6.3032    ,  5.005165  ,  5.8136253 , ...,  7.599337  ,
           8.121494  , 14.787577  ],
         ...,
         [ 9.322436  , 10.662937  ,  3.2839708 , ...,  5.753419  ,
           9.206102  ,  5.2395287 ],
         [ 4.094817  ,  3.4378629 , -2.9598417 , ..., 15.792848  ,
          19.988071  , 21.109089  ],
         [11.102353  , 11.940505  ,  8.174828  , ...,  7.762325  ,
          15.977318  , 10.562707  ]],

        ...,

        [[       -inf,        -inf,        -inf, ...,  8.480974  ,
           5.141526  ,  4.409892  ],
         [       -inf,        -inf,        -inf, ...,  5.718408  ,
          13.17344   , 16.129568  ],
         [12.976181  , 12.38607   , 13.105327  , ..., -0.39175892,
           1.4159689 ,  3.6298075 ],
         ...,
         [ 7.0350394 , 13.178207  , 16.833675  , ...,  5.528175  ,
          12.427191  , 12.651891  ],
         [ 9.260599  ,  1.6436968 , -4.8885746 , ..., 14.906782  ,
          13.070728  , 10.855172  ],
         [10.6971855 , 16.043625  , 18.31932   , ...,  1.0299149 ,
           3.6736965 ,  6.7066717 ]],

        [[       -inf,        -inf,        -inf, ...,  7.340288  ,
           3.5811791 ,  2.9209776 ],
         [       -inf,        -inf,        -inf, ...,  4.122818  ,
           2.2010732 ,  5.75061   ],
         [ 6.3032    ,  5.005165  ,  5.8136253 , ...,  7.599337  ,
           8.121494  , 14.787577  ],
         ...,
         [ 9.322436  , 10.662937  ,  3.2839708 , ...,  5.753419  ,
           9.206102  ,  5.2395287 ],
         [ 4.094817  ,  3.4378629 , -2.9598417 , ..., 15.792848  ,
          19.988071  , 21.109089  ],
         [11.102353  , 11.940505  ,  8.174828  , ...,  7.762325  ,
          15.977318  , 10.562707  ]],

        [[       -inf,        -inf,        -inf, ..., 20.04243   ,
          22.379074  , 22.327763  ],
         [       -inf,        -inf,        -inf, ...,  3.0778108 ,
           9.788756  , 10.254675  ],
         [ 6.2483974 ,  9.1954775 ,  6.0550423 , ..., 16.933186  ,
          20.132065  , 20.758411  ],
         ...,
         [11.881373  ,  8.608693  , 10.458818  , ..., 17.869045  ,
          16.435408  ,  9.477089  ],
         [10.627513  ,  9.37695   , 13.845156  , ..., 16.175564  ,
          20.833355  , 21.84018   ],
         [14.275102  , 13.7201395 , 10.645748  , ..., 11.317316  ,
          12.557016  , 11.033917  ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [9, 13], 'to': [15]}
ms node:
{'name': 'add', 'output': array([[[[       -inf,        -inf,        -inf, ..., 12.060923  ,
          14.434132  , 17.844845  ],
         [       -inf,        -inf,        -inf, ...,  4.936703  ,
          10.570657  , 13.89361   ],
         [ 1.0161996 , -0.35855722, -2.0300326 , ..., 10.765581  ,
          15.393642  , 19.945095  ],
         ...,
         [13.4950075 , 16.504005  , 16.587833  , ...,  8.311879  ,
          17.048317  , 18.571163  ],
         [ 5.9979796 ,  3.5734386 , 10.833611  , ..., 12.6317425 ,
           9.658855  , 10.62424   ],
         [15.664918  , 21.772505  , 23.95335   , ...,  8.592641  ,
          17.844713  , 18.971188  ]],

        [[       -inf,        -inf,        -inf, ...,  8.480986  ,
           5.141371  ,  4.4097967 ],
         [       -inf,        -inf,        -inf, ...,  5.7184377 ,
          13.173339  , 16.129393  ],
         [12.976276  , 12.386241  , 13.105545  , ..., -0.39172173,
           1.4158802 ,  3.6296644 ],
         ...,
         [ 7.035147  , 13.178291  , 16.833752  , ...,  5.528154  ,
          12.427116  , 12.651969  ],
         [ 9.260658  ,  1.6438866 , -4.888322  , ..., 14.906822  ,
          13.070694  , 10.855102  ],
         [10.697119  , 16.04362   , 18.319523  , ...,  1.029993  ,
           3.673644  ,  6.7065706 ]],

        [[       -inf,        -inf,        -inf, ...,  7.3402996 ,
           3.5810237 ,  2.9208822 ],
         [       -inf,        -inf,        -inf, ...,  4.1228476 ,
           2.200972  ,  5.7504334 ],
         [ 6.3032956 ,  5.005336  ,  5.8138437 , ...,  7.5993743 ,
           8.121406  , 14.787434  ],
         ...,
         [ 9.322544  , 10.663021  ,  3.2840462 , ...,  5.753398  ,
           9.206028  ,  5.239607  ],
         [ 4.0948763 ,  3.4380527 , -2.959589  , ..., 15.792887  ,
          19.988037  , 21.109018  ],
         [11.102286  , 11.9405    ,  8.175029  , ...,  7.762403  ,
          15.977265  , 10.562606  ]],

        ...,

        [[       -inf,        -inf,        -inf, ...,  8.480986  ,
           5.141371  ,  4.4097967 ],
         [       -inf,        -inf,        -inf, ...,  5.7184377 ,
          13.173339  , 16.129393  ],
         [12.976276  , 12.386241  , 13.105545  , ..., -0.39172173,
           1.4158802 ,  3.6296644 ],
         ...,
         [ 7.035147  , 13.178291  , 16.833752  , ...,  5.528154  ,
          12.427116  , 12.651969  ],
         [ 9.260658  ,  1.6438866 , -4.888322  , ..., 14.906822  ,
          13.070694  , 10.855102  ],
         [10.697119  , 16.04362   , 18.319523  , ...,  1.029993  ,
           3.673644  ,  6.7065706 ]],

        [[       -inf,        -inf,        -inf, ...,  7.3402996 ,
           3.5810237 ,  2.9208822 ],
         [       -inf,        -inf,        -inf, ...,  4.1228476 ,
           2.200972  ,  5.7504334 ],
         [ 6.3032956 ,  5.005336  ,  5.8138437 , ...,  7.5993743 ,
           8.121406  , 14.787434  ],
         ...,
         [ 9.322544  , 10.663021  ,  3.2840462 , ...,  5.753398  ,
           9.206028  ,  5.239607  ],
         [ 4.0948763 ,  3.4380527 , -2.959589  , ..., 15.792887  ,
          19.988037  , 21.109018  ],
         [11.102286  , 11.9405    ,  8.175029  , ...,  7.762403  ,
          15.977265  , 10.562606  ]],

        [[       -inf,        -inf,        -inf, ..., 20.042442  ,
          22.37892   , 22.327667  ],
         [       -inf,        -inf,        -inf, ...,  3.0778403 ,
           9.788655  , 10.2544985 ],
         [ 6.248493  ,  9.195648  ,  6.05526   , ..., 16.933222  ,
          20.131977  , 20.758268  ],
         ...,
         [11.881481  ,  8.608777  , 10.458894  , ..., 17.869022  ,
          16.435333  ,  9.477167  ],
         [10.627572  ,  9.37714   , 13.845409  , ..., 16.175602  ,
          20.83332   , 21.840109  ],
         [14.275035  , 13.720135  , 10.645949  , ..., 11.317394  ,
          12.556963  , 11.033816  ]]]], dtype=float32), 'output_shape': (1, 512, 16, 16), 'from': [9, 13], 'to': [15]}
torch node:
{'name': 'add', 'output': array([[[[       -inf,        -inf,        -inf, ..., 12.060926  ,
          14.434116  , 17.844831  ],
         [       -inf,        -inf,        -inf, ...,  4.9366937 ,
          10.57066   , 13.893614  ],
         [ 1.0161982 , -0.35855818, -2.0300293 , ..., 10.765574  ,
          15.393667  , 19.94511   ],
         ...,
         [13.495005  , 16.504019  , 16.587826  , ...,  8.311869  ,
          17.04831   , 18.571169  ],
         [ 5.9979796 ,  3.5734358 , 10.833598  , ..., 12.631744  ,
           9.658872  , 10.624239  ],
         [15.664903  , 21.772503  , 23.953358  , ...,  8.592633  ,
          17.84473   , 18.971195  ]],

        [[       -inf,        -inf,        -inf, ...,  8.4809885 ,
           5.1413555 ,  4.4097834 ],
         [       -inf,        -inf,        -inf, ...,  5.718428  ,
          13.173342  , 16.129396  ],
         [12.9762745 , 12.38624   , 13.105548  , ..., -0.3917284 ,
           1.415905  ,  3.6296806 ],
         ...,
         [ 7.0351443 , 13.178305  , 16.833744  , ...,  5.5281434 ,
          12.427109  , 12.651974  ],
         [ 9.260658  ,  1.6438837 , -4.8883343 , ..., 14.906824  ,
          13.070711  , 10.855101  ],
         [10.6971035 , 16.043617  , 18.31953   , ...,  1.0299854 ,
           3.6736622 ,  6.70658   ]],

        [[       -inf,        -inf,        -inf, ...,  7.3403025 ,
           3.5810084 ,  2.9208689 ],
         [       -inf,        -inf,        -inf, ...,  4.122838  ,
           2.200975  ,  5.750438  ],
         [ 6.303294  ,  5.005335  ,  5.8138466 , ...,  7.5993676 ,
           8.12143   , 14.787449  ],
         ...,
         [ 9.322541  , 10.663035  ,  3.2840385 , ...,  5.7533875 ,
           9.206021  ,  5.239612  ],
         [ 4.0948763 ,  3.4380498 , -2.9596014 , ..., 15.792889  ,
          19.988054  , 21.109016  ],
         [11.102271  , 11.940498  ,  8.175037  , ...,  7.7623954 ,
          15.9772835 , 10.562615  ]],

        ...,

        [[       -inf,        -inf,        -inf, ...,  8.4809885 ,
           5.1413555 ,  4.4097834 ],
         [       -inf,        -inf,        -inf, ...,  5.718428  ,
          13.173342  , 16.129396  ],
         [12.9762745 , 12.38624   , 13.105548  , ..., -0.3917284 ,
           1.415905  ,  3.6296806 ],
         ...,
         [ 7.0351443 , 13.178305  , 16.833744  , ...,  5.5281434 ,
          12.427109  , 12.651974  ],
         [ 9.260658  ,  1.6438837 , -4.8883343 , ..., 14.906824  ,
          13.070711  , 10.855101  ],
         [10.6971035 , 16.043617  , 18.31953   , ...,  1.0299854 ,
           3.6736622 ,  6.70658   ]],

        [[       -inf,        -inf,        -inf, ...,  7.3403025 ,
           3.5810084 ,  2.9208689 ],
         [       -inf,        -inf,        -inf, ...,  4.122838  ,
           2.200975  ,  5.750438  ],
         [ 6.303294  ,  5.005335  ,  5.8138466 , ...,  7.5993676 ,
           8.12143   , 14.787449  ],
         ...,
         [ 9.322541  , 10.663035  ,  3.2840385 , ...,  5.7533875 ,
           9.206021  ,  5.239612  ],
         [ 4.0948763 ,  3.4380498 , -2.9596014 , ..., 15.792889  ,
          19.988054  , 21.109016  ],
         [11.102271  , 11.940498  ,  8.175037  , ...,  7.7623954 ,
          15.9772835 , 10.562615  ]],

        [[       -inf,        -inf,        -inf, ..., 20.042446  ,
          22.378904  , 22.327654  ],
         [       -inf,        -inf,        -inf, ...,  3.0778308 ,
           9.788658  , 10.254503  ],
         [ 6.248492  ,  9.195647  ,  6.0552635 , ..., 16.933216  ,
          20.132002  , 20.758284  ],
         ...,
         [11.881478  ,  8.608791  , 10.458886  , ..., 17.869013  ,
          16.435328  ,  9.477173  ],
         [10.627572  ,  9.377137  , 13.845396  , ..., 16.175604  ,
          20.833336  , 21.840107  ],
         [14.27502   , 13.720133  , 10.645958  , ..., 11.317387  ,
          12.556982  , 11.033826  ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 16, 16]), 'from': [9, 13], 'to': [15]}

generate models:33

analyse output arrays in iter:38

pre layer res:
7:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[1.7229805, 1.7229805, 1.7229805, ..., 1.7229805, 1.7229805,
          1.7229805],
         [1.7014008, 1.7014008, 1.7014008, ..., 1.7014008, 1.7014008,
          1.7014008],
         [1.9033089, 1.9033089, 1.9033089, ..., 1.9033089, 1.9033089,
          1.9033089],
         ...,
         [1.866806 , 1.866806 , 1.866806 , ..., 1.866806 , 1.866806 ,
          1.866806 ],
         [1.9220161, 1.9220161, 1.9220161, ..., 1.9220161, 1.9220161,
          1.9220161],
         [1.9926665, 1.9926665, 1.9926665, ..., 1.9926665, 1.9926665,
          1.9926665]],

        [[1.9170876, 1.9170876, 1.9170876, ..., 1.9170876, 1.9170876,
          1.9170876],
         [1.9611759, 1.9611759, 1.9611759, ..., 1.9611759, 1.9611759,
          1.9611759],
         [1.9189072, 1.9189072, 1.9189072, ..., 1.9189072, 1.9189072,
          1.9189072],
         ...,
         [2.       , 2.       , 2.       , ..., 2.       , 2.       ,
          2.       ],
         [1.8471413, 1.8471413, 1.8471413, ..., 1.8471413, 1.8471413,
          1.8471413],
         [1.9692078, 1.9692078, 1.9692078, ..., 1.9692078, 1.9692078,
          1.9692078]],

        [[1.9908121, 1.9908121, 1.9908121, ..., 1.9908121, 1.9908121,
          1.9908121],
         [1.997271 , 1.997271 , 1.997271 , ..., 1.997271 , 1.997271 ,
          1.997271 ],
         [1.7440567, 1.7440567, 1.7440567, ..., 1.7440567, 1.7440567,
          1.7440567],
         ...,
         [1.9698534, 1.9698534, 1.9698534, ..., 1.9698534, 1.9698534,
          1.9698534],
         [1.9942436, 1.9942436, 1.9942436, ..., 1.9942436, 1.9942436,
          1.9942436],
         [1.8494644, 1.8494644, 1.8494644, ..., 1.8494644, 1.8494644,
          1.8494644]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 8, 50]), 'from': [6], 'to': [14]}
tf node:
{'name': 'cos', 'output': array([[[[-0.15159743, -0.15159743, -0.15159743, ..., -0.15159743,
          -0.15159743, -0.15159743],
         [-0.13023345, -0.13023345, -0.13023345, ..., -0.13023345,
          -0.13023345, -0.13023345],
         [-0.32641897, -0.32641897, -0.32641897, ..., -0.32641897,
          -0.32641897, -0.32641897],
         ...,
         [-0.2917058 , -0.2917058 , -0.2917058 , ..., -0.2917058 ,
          -0.2917058 , -0.2917058 ],
         [-0.3440434 , -0.3440434 , -0.3440434 , ..., -0.3440434 ,
          -0.3440434 , -0.3440434 ],
         [-0.40946734, -0.40946734, -0.40946734, ..., -0.40946734,
          -0.40946734, -0.40946734]],

        [[-0.33941153, -0.33941153, -0.33941153, ..., -0.33941153,
          -0.33941153, -0.33941153],
         [-0.38053948, -0.38053948, -0.38053948, ..., -0.38053948,
          -0.38053948, -0.38053948],
         [-0.34112257, -0.34112257, -0.34112257, ..., -0.34112257,
          -0.34112257, -0.34112257],
         ...,
         [-0.4161468 , -0.4161468 , -0.4161468 , ..., -0.4161468 ,
          -0.4161468 , -0.4161468 ],
         [-0.27284107, -0.27284107, -0.27284107, ..., -0.27284107,
          -0.27284107, -0.27284107],
         [-0.38795468, -0.38795468, -0.38795468, ..., -0.38795468,
          -0.38795468, -0.38795468]],

        [[-0.4077748 , -0.4077748 , -0.4077748 , ..., -0.4077748 ,
          -0.4077748 , -0.4077748 ],
         [-0.41366374, -0.41366374, -0.41366374, ..., -0.41366374,
          -0.41366374, -0.41366374],
         [-0.17239483, -0.17239483, -0.17239483, ..., -0.17239483,
          -0.17239483, -0.17239483],
         ...,
         [-0.38854966, -0.38854966, -0.38854966, ..., -0.38854966,
          -0.38854966, -0.38854966],
         [-0.4109057 , -0.4109057 , -0.4109057 , ..., -0.4109057 ,
          -0.4109057 , -0.4109057 ],
         [-0.27507535, -0.27507535, -0.27507535, ..., -0.27507535,
          -0.27507535, -0.27507535]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 8, 50]), 'from': [7], 'to': [9, 16]}
ms node:
{'name': 'cos', 'output': array([[[[-0.15187055, -0.15187055, -0.15187055, ..., -0.15187055,
          -0.15187043, -0.15187043],
         [-0.13033509, -0.13033509, -0.13033509, ..., -0.13033509,
          -0.13033509, -0.13033509],
         [-0.32642123, -0.32642123, -0.32642123, ..., -0.32642123,
          -0.32642135, -0.32642135],
         ...,
         [-0.29175243, -0.29175243, -0.29175243, ..., -0.29175243,
          -0.2917523 , -0.2917523 ],
         [-0.34425855, -0.34425855, -0.34425855, ..., -0.34425855,
          -0.34425855, -0.34425855],
         [-0.4092805 , -0.4092805 , -0.4092805 , ..., -0.4092805 ,
          -0.4092805 , -0.4092805 ]],

        [[-0.33929166, -0.33929166, -0.33929166, ..., -0.33929166,
          -0.3392919 , -0.3392919 ],
         [-0.3801385 , -0.3801385 , -0.3801385 , ..., -0.3801385 ,
          -0.3801386 , -0.3801386 ],
         [-0.34117413, -0.34117413, -0.34117413, ..., -0.34117413,
          -0.34117413, -0.34117413],
         ...,
         [-0.41614684, -0.41614684, -0.41614684, ..., -0.41614684,
          -0.41614684, -0.41614684],
         [-0.27302563, -0.27302563, -0.27302563, ..., -0.27302563,
          -0.27302572, -0.27302572],
         [-0.38783327, -0.38783327, -0.38783327, ..., -0.38783327,
          -0.38783318, -0.38783318]],

        [[-0.40800947, -0.40800947, -0.40800947, ..., -0.40800947,
          -0.40800938, -0.40800938],
         [-0.4136832 , -0.4136832 , -0.4136832 , ..., -0.4136832 ,
          -0.4136832 , -0.4136832 ],
         [-0.1726562 , -0.1726562 , -0.1726562 , ..., -0.1726562 ,
          -0.1726562 , -0.1726562 ],
         ...,
         [-0.38867202, -0.38867202, -0.38867202, ..., -0.38867202,
          -0.38867202, -0.38867202],
         [-0.4105678 , -0.4105678 , -0.4105678 , ..., -0.4105678 ,
          -0.4105679 , -0.4105679 ],
         [-0.2752672 , -0.2752672 , -0.2752672 , ..., -0.2752672 ,
          -0.2752671 , -0.2752671 ]]]], dtype=float32), 'output_shape': (1, 3, 8, 50), 'from': [7], 'to': [9, 16]}
torch node:
{'name': 'cos', 'output': array([[[[-0.15187043, -0.15187043, -0.15187043, ..., -0.15187043,
          -0.15187043, -0.15187043],
         [-0.13033521, -0.13033521, -0.13033521, ..., -0.13033521,
          -0.13033533, -0.13033533],
         [-0.32642123, -0.32642123, -0.32642123, ..., -0.32642123,
          -0.32642123, -0.32642123],
         ...,
         [-0.29175243, -0.29175243, -0.29175243, ..., -0.29175243,
          -0.29175243, -0.29175243],
         [-0.34425855, -0.34425855, -0.34425855, ..., -0.34425855,
          -0.34425855, -0.34425855],
         [-0.40928063, -0.40928063, -0.40928063, ..., -0.40928063,
          -0.4092805 , -0.4092805 ]],

        [[-0.339292  , -0.339292  , -0.339292  , ..., -0.339292  ,
          -0.3392921 , -0.3392921 ],
         [-0.3801385 , -0.3801385 , -0.3801385 , ..., -0.3801385 ,
          -0.3801386 , -0.3801386 ],
         [-0.34117413, -0.34117413, -0.34117413, ..., -0.34117413,
          -0.34117413, -0.34117413],
         ...,
         [-0.41614684, -0.41614684, -0.41614684, ..., -0.41614684,
          -0.41614684, -0.41614684],
         [-0.27302572, -0.27302572, -0.27302572, ..., -0.27302572,
          -0.27302572, -0.27302572],
         [-0.38783318, -0.38783318, -0.38783318, ..., -0.38783318,
          -0.38783306, -0.38783306]],

        [[-0.4080095 , -0.4080095 , -0.4080095 , ..., -0.4080095 ,
          -0.40800938, -0.40800938],
         [-0.4136832 , -0.4136832 , -0.4136832 , ..., -0.4136832 ,
          -0.4136832 , -0.4136832 ],
         [-0.17265609, -0.17265609, -0.17265609, ..., -0.17265609,
          -0.17265621, -0.17265621],
         ...,
         [-0.38867205, -0.38867205, -0.38867205, ..., -0.38867205,
          -0.38867205, -0.38867205],
         [-0.4105678 , -0.4105678 , -0.4105678 , ..., -0.4105678 ,
          -0.4105677 , -0.4105677 ],
         [-0.2752671 , -0.2752671 , -0.2752671 , ..., -0.2752671 ,
          -0.27526698, -0.27526698]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 8, 50]), 'from': [7], 'to': [9, 16]}

generate models:34

analyse output arrays in iter:42

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[ -8.901825  ,  -8.901825  ,  -8.901825  , ...,  -8.901825  ,
           -8.901825  ,  -8.901825  ],
         [ -4.419342  ,  -4.419342  ,  -4.419342  , ...,  -4.419342  ,
           -4.419342  ,  -4.419342  ],
         [ -2.3091888 ,  -2.3091888 ,  -2.3091888 , ...,  -2.3091888 ,
           -2.3091888 ,  -2.3091888 ],
         ...,
         [ 11.372711  ,  11.372711  ,  11.372711  , ...,  11.372711  ,
           11.372711  ,  11.372711  ],
         [ -2.7407532 ,  -2.7407532 ,  -2.7407532 , ...,  -2.7407532 ,
           -2.7407532 ,  -2.7407532 ],
         [  2.9835052 ,   2.9835052 ,   2.9835052 , ...,   2.9835052 ,
            2.9835052 ,   2.9835052 ]],

        [[  3.9828873 ,   3.9828873 ,   3.9828873 , ...,   3.9828873 ,
            3.9828873 ,   3.9828873 ],
         [ -6.0778046 ,  -6.0778046 ,  -6.0778046 , ...,  -6.0778046 ,
           -6.0778046 ,  -6.0778046 ],
         [ -3.3257294 ,  -3.3257294 ,  -3.3257294 , ...,  -3.3257294 ,
           -3.3257294 ,  -3.3257294 ],
         ...,
         [ -0.61813354,  -0.61813354,  -0.61813354, ...,  -0.61813354,
           -0.61813354,  -0.61813354],
         [-13.227905  , -13.227905  , -13.227905  , ..., -13.227905  ,
          -13.227905  , -13.227905  ],
         [ -8.602844  ,  -8.602844  ,  -8.602844  , ...,  -8.602844  ,
           -8.602844  ,  -8.602844  ]],

        [[  8.803558  ,   8.803558  ,   8.803558  , ...,   8.803558  ,
            8.803558  ,   8.803558  ],
         [ -4.9174194 ,  -4.9174194 ,  -4.9174194 , ...,  -4.9174194 ,
           -4.9174194 ,  -4.9174194 ],
         [  4.000244  ,   4.000244  ,   4.000244  , ...,   4.000244  ,
            4.000244  ,   4.000244  ],
         ...,
         [ -3.339511  ,  -3.339511  ,  -3.339511  , ...,  -3.339511  ,
           -3.339511  ,  -3.339511  ],
         [ -3.170227  ,  -3.170227  ,  -3.170227  , ...,  -3.170227  ,
           -3.170227  ,  -3.170227  ],
         [ -3.1507263 ,  -3.1507263 ,  -3.1507263 , ...,  -3.1507263 ,
           -3.1507263 ,  -3.1507263 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [4, 11]}
ms node:
{'name': 'linear', 'output': array([[[[ -8.902926 ,  -8.902926 ,  -8.902926 , ...,  -8.902926 ,
           -8.902926 ,  -8.902926 ],
         [ -4.4200153,  -4.4200153,  -4.4200153, ...,  -4.420015 ,
           -4.420015 ,  -4.420015 ],
         [ -2.30969  ,  -2.30969  ,  -2.30969  , ...,  -2.3096905,
           -2.3096905,  -2.3096905],
         ...,
         [ 11.373011 ,  11.373011 ,  11.373011 , ...,  11.373011 ,
           11.373011 ,  11.373011 ],
         [ -2.742429 ,  -2.742429 ,  -2.742429 , ...,  -2.7424288,
           -2.7424288,  -2.7424288],
         [  2.9857674,   2.9857674,   2.9857674, ...,   2.985767 ,
            2.985767 ,   2.985767 ]],

        [[  3.9835424,   3.9835424,   3.9835424, ...,   3.9835424,
            3.9835424,   3.9835424],
         [ -6.0786695,  -6.0786695,  -6.0786695, ...,  -6.0786695,
           -6.0786695,  -6.0786695],
         [ -3.324861 ,  -3.324861 ,  -3.324861 , ...,  -3.324861 ,
           -3.324861 ,  -3.324861 ],
         ...,
         [ -0.6179168,  -0.6179168,  -0.6179168, ...,  -0.6179173,
           -0.6179173,  -0.6179173],
         [-13.227902 , -13.227902 , -13.227902 , ..., -13.227902 ,
          -13.227902 , -13.227902 ],
         [ -8.604868 ,  -8.604868 ,  -8.604868 , ...,  -8.604866 ,
           -8.604866 ,  -8.604866 ]],

        [[  8.803595 ,   8.803595 ,   8.803595 , ...,   8.803595 ,
            8.803595 ,   8.803595 ],
         [ -4.9177217,  -4.9177217,  -4.9177217, ...,  -4.9177217,
           -4.9177217,  -4.9177217],
         [  4.001815 ,   4.001815 ,   4.001815 , ...,   4.0018144,
            4.0018144,   4.0018144],
         ...,
         [ -3.3386195,  -3.3386195,  -3.3386195, ...,  -3.3386192,
           -3.3386192,  -3.3386192],
         [ -3.170992 ,  -3.170992 ,  -3.170992 , ...,  -3.170992 ,
           -3.170992 ,  -3.170992 ],
         [ -3.1507123,  -3.1507123,  -3.1507123, ...,  -3.1507132,
           -3.1507132,  -3.1507132]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [4, 11]}
torch node:
{'name': 'linear', 'output': array([[[[ -8.902926 ,  -8.902926 ,  -8.902926 , ...,  -8.902926 ,
           -8.902926 ,  -8.902926 ],
         [ -4.4200153,  -4.4200153,  -4.4200153, ...,  -4.420015 ,
           -4.420015 ,  -4.420015 ],
         [ -2.30969  ,  -2.30969  ,  -2.30969  , ...,  -2.3096905,
           -2.3096905,  -2.3096905],
         ...,
         [ 11.373011 ,  11.373011 ,  11.373011 , ...,  11.373011 ,
           11.373011 ,  11.373011 ],
         [ -2.742429 ,  -2.742429 ,  -2.742429 , ...,  -2.7424288,
           -2.7424288,  -2.7424288],
         [  2.9857674,   2.9857674,   2.9857674, ...,   2.985767 ,
            2.985767 ,   2.985767 ]],

        [[  3.9835424,   3.9835424,   3.9835424, ...,   3.9835424,
            3.9835424,   3.9835424],
         [ -6.0786695,  -6.0786695,  -6.0786695, ...,  -6.0786695,
           -6.0786695,  -6.0786695],
         [ -3.324861 ,  -3.324861 ,  -3.324861 , ...,  -3.324861 ,
           -3.324861 ,  -3.324861 ],
         ...,
         [ -0.6179168,  -0.6179168,  -0.6179168, ...,  -0.6179173,
           -0.6179173,  -0.6179173],
         [-13.227902 , -13.227902 , -13.227902 , ..., -13.227902 ,
          -13.227902 , -13.227902 ],
         [ -8.604868 ,  -8.604868 ,  -8.604868 , ...,  -8.604866 ,
           -8.604866 ,  -8.604866 ]],

        [[  8.803595 ,   8.803595 ,   8.803595 , ...,   8.803595 ,
            8.803595 ,   8.803595 ],
         [ -4.9177217,  -4.9177217,  -4.9177217, ...,  -4.9177217,
           -4.9177217,  -4.9177217],
         [  4.001815 ,   4.001815 ,   4.001815 , ...,   4.0018144,
            4.0018144,   4.0018144],
         ...,
         [ -3.3386195,  -3.3386195,  -3.3386195, ...,  -3.3386192,
           -3.3386192,  -3.3386192],
         [ -3.170992 ,  -3.170992 ,  -3.170992 , ...,  -3.170992 ,
           -3.170992 ,  -3.170992 ],
         [ -3.1507123,  -3.1507123,  -3.1507123, ...,  -3.1507132,
           -3.1507132,  -3.1507132]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [4, 11]}

generate models:37

analyse output arrays in iter:43

pre layer res:
18:add
{'name': 'add', 'output': array([[[[20.715744, 22.064339, 19.106228, ..., 19.572815, 24.68055 ,
          23.115177],
         [20.889702, 19.420143, 17.429846, ..., 18.120884, 18.326012,
          13.991795],
         [25.174282, 23.153221, 22.891209, ..., 24.160175, 27.835716,
          23.173248],
         ...,
         [14.336304, 14.336304, 14.336304, ..., 14.336304, 14.336304,
          14.336304],
         [21.254639, 21.254639, 21.254639, ..., 21.254639, 21.254639,
          21.254639],
         [18.512234, 18.512234, 18.512234, ..., 18.512234, 18.512234,
          18.512234]],

        [[19.329224, 19.329224, 19.329224, ..., 19.329224, 19.329224,
          19.329224],
         [20.618774, 20.618774, 20.618774, ..., 20.618774, 20.618774,
          20.618774],
         [19.581581, 19.581581, 19.581581, ..., 19.581581, 19.581581,
          19.581581],
         ...,
         [19.47461 , 19.47461 , 19.47461 , ..., 19.47461 , 19.47461 ,
          19.47461 ],
         [16.079407, 16.079407, 16.079407, ..., 16.079407, 16.079407,
          16.079407],
         [19.37268 , 19.37268 , 19.37268 , ..., 19.37268 , 19.37268 ,
          19.37268 ]],

        [[13.162109, 13.162109, 13.162109, ..., 13.162109, 13.162109,
          13.162109],
         [15.01001 , 15.01001 , 15.01001 , ..., 15.01001 , 15.01001 ,
          15.01001 ],
         [18.30542 , 18.30542 , 18.30542 , ..., 18.30542 , 18.30542 ,
          18.30542 ],
         ...,
         [15.910334, 15.910334, 15.910334, ..., 15.910334, 15.910334,
          15.910334],
         [18.908783, 18.908783, 18.908783, ..., 18.908783, 18.908783,
          18.908783],
         [ 9.148499,  9.148499,  9.148499, ...,  9.148499,  9.148499,
           9.148499]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 100]), 'from': [4, 21], 'to': [8]}
tf node:
{'name': 'cos', 'output': array([[[[-0.29111466, -0.9973228 ,  0.9672402 , ...,  0.7496528 ,
           0.89949167, -0.4320528 ],
         [-0.4523063 ,  0.84158397,  0.15051205, ...,  0.74605936,
           0.8660527 ,  0.14486088],
         [ 0.9991373 , -0.39743856, -0.6215629 , ...,  0.5631811 ,
          -0.9053396 , -0.37898257],
         ...,
         [-0.19782323, -0.19782323, -0.19782323, ..., -0.19782323,
          -0.19782323, -0.19782323],
         [-0.7408174 , -0.7408174 , -0.7408174 , ..., -0.7408174 ,
          -0.7408174 , -0.7408174 ],
         [ 0.9436443 ,  0.9436443 ,  0.9436443 , ...,  0.9436443 ,
           0.9436443 ,  0.9436443 ]],

        [[ 0.8871483 ,  0.8871483 ,  0.8871483 , ...,  0.8871483 ,
           0.8871483 ,  0.8871483 ],
         [-0.1971227 , -0.1971227 , -0.1971227 , ..., -0.1971227 ,
          -0.1971227 , -0.1971227 ],
         [ 0.74382234,  0.74382234,  0.74382234, ...,  0.74382234,
           0.74382234,  0.74382234],
         ...,
         [ 0.81093186,  0.81093186,  0.81093186, ...,  0.81093186,
           0.81093186,  0.81093186],
         [-0.9318044 , -0.9318044 , -0.9318044 , ..., -0.9318044 ,
          -0.9318044 , -0.9318044 ],
         [ 0.8662623 ,  0.8662623 ,  0.8662623 , ...,  0.8662623 ,
           0.8662623 ,  0.8662623 ]],

        [[ 0.8277342 ,  0.8277342 ,  0.8277342 , ...,  0.8277342 ,
           0.8277342 ,  0.8277342 ],
         [-0.766159  , -0.766159  , -0.766159  , ..., -0.766159  ,
          -0.766159  , -0.766159  ],
         [ 0.8555749 ,  0.8555749 ,  0.8555749 , ...,  0.8555749 ,
           0.8555749 ,  0.8555749 ],
         ...,
         [-0.9795929 , -0.9795929 , -0.9795929 , ..., -0.9795929 ,
          -0.9795929 , -0.9795929 ],
         [ 0.9982466 ,  0.9982466 ,  0.9982466 , ...,  0.9982466 ,
           0.9982466 ,  0.9982466 ],
         [-0.96207696, -0.96207696, -0.96207696, ..., -0.96207696,
          -0.96207696, -0.96207696]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 100]), 'from': [18], 'to': [2]}
ms node:
{'name': 'cos', 'output': array([[[[-0.29107088, -0.99732614,  0.96725184, ...,  0.7496831 ,
           0.89947164, -0.43209407],
         [-0.45371425,  0.8407289 ,  0.15207317, ...,  0.7471113 ,
           0.8668421 ,  0.14329617],
         [ 0.9991044 , -0.39671734, -0.6209471 , ...,  0.56383026,
          -0.905673  , -0.37825525],
         ...,
         [-0.19755867, -0.19755867, -0.19755867, ..., -0.19755867,
          -0.19755867, -0.19755867],
         [-0.7424129 , -0.7424129 , -0.7424129 , ..., -0.7424142 ,
          -0.7424142 , -0.7424142 ],
         [ 0.9440916 ,  0.9440916 ,  0.9440916 , ...,  0.9440916 ,
           0.9440916 ,  0.9440916 ]],

        [[ 0.8874193 ,  0.8874193 ,  0.8874193 , ...,  0.8874184 ,
           0.8874184 ,  0.8874184 ],
         [-0.1957425 , -0.1957425 , -0.1957425 , ..., -0.19574624,
          -0.19574624, -0.19574624],
         [ 0.743895  ,  0.743895  ,  0.743895  , ...,  0.74389625,
           0.74389625,  0.74389625],
         ...,
         [ 0.8114806 ,  0.8114806 ,  0.8114806 , ...,  0.8114806 ,
           0.8114806 ,  0.8114806 ],
         [-0.93237025, -0.93237025, -0.93237025, ..., -0.93237025,
          -0.93237025, -0.93237025],
         [ 0.8666337 ,  0.8666337 ,  0.8666337 , ...,  0.8666337 ,
           0.8666337 ,  0.8666337 ]],

        [[ 0.82759076,  0.82759076,  0.82759076, ...,  0.82759076,
           0.82759076,  0.82759076],
         [-0.7673931 , -0.7673931 , -0.7673931 , ..., -0.7673919 ,
          -0.7673919 , -0.7673919 ],
         [ 0.8558611 ,  0.8558611 ,  0.8558611 , ...,  0.8558611 ,
           0.8558611 ,  0.8558611 ],
         ...,
         [-0.97943   , -0.97943   , -0.97943   , ..., -0.97943   ,
          -0.97943   , -0.97943   ],
         [ 0.99821424,  0.99821424,  0.99821424, ...,  0.99821424,
           0.99821424,  0.99821424],
         [-0.9622755 , -0.9622755 , -0.9622755 , ..., -0.9622755 ,
          -0.9622755 , -0.9622755 ]]]], dtype=float32), 'output_shape': (1, 3, 16, 100), 'from': [18], 'to': [2]}
torch node:
{'name': 'cos', 'output': array([[[[-0.29107088, -0.99732614,  0.96725184, ...,  0.7496831 ,
           0.89947164, -0.43209407],
         [-0.45371425,  0.8407289 ,  0.15207317, ...,  0.7471113 ,
           0.8668421 ,  0.14329617],
         [ 0.9991044 , -0.39671734, -0.6209471 , ...,  0.56383026,
          -0.905673  , -0.37825525],
         ...,
         [-0.19755867, -0.19755867, -0.19755867, ..., -0.19755867,
          -0.19755867, -0.19755867],
         [-0.7424129 , -0.7424129 , -0.7424129 , ..., -0.7424142 ,
          -0.7424142 , -0.7424142 ],
         [ 0.9440916 ,  0.9440916 ,  0.9440916 , ...,  0.9440916 ,
           0.9440916 ,  0.9440916 ]],

        [[ 0.8874193 ,  0.8874193 ,  0.8874193 , ...,  0.8874184 ,
           0.8874184 ,  0.8874184 ],
         [-0.1957425 , -0.1957425 , -0.1957425 , ..., -0.19574624,
          -0.19574624, -0.19574624],
         [ 0.743895  ,  0.743895  ,  0.743895  , ...,  0.74389625,
           0.74389625,  0.74389625],
         ...,
         [ 0.8114806 ,  0.8114806 ,  0.8114806 , ...,  0.8114806 ,
           0.8114806 ,  0.8114806 ],
         [-0.93237025, -0.93237025, -0.93237025, ..., -0.93237025,
          -0.93237025, -0.93237025],
         [ 0.8666337 ,  0.8666337 ,  0.8666337 , ...,  0.8666337 ,
           0.8666337 ,  0.8666337 ]],

        [[ 0.82759076,  0.82759076,  0.82759076, ...,  0.82759076,
           0.82759076,  0.82759076],
         [-0.7673931 , -0.7673931 , -0.7673931 , ..., -0.7673919 ,
          -0.7673919 , -0.7673919 ],
         [ 0.85586107,  0.85586107,  0.85586107, ...,  0.85586107,
           0.85586107,  0.85586107],
         ...,
         [-0.97943   , -0.97943   , -0.97943   , ..., -0.97943   ,
          -0.97943   , -0.97943   ],
         [ 0.99821424,  0.99821424,  0.99821424, ...,  0.99821424,
           0.99821424,  0.99821424],
         [-0.9622755 , -0.9622755 , -0.9622755 , ..., -0.9622755 ,
          -0.9622755 , -0.9622755 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 16, 100]), 'from': [18], 'to': [2]}

generate models:38

final statics:
total operators:28
tensorflow --> nums:10,distinct_bugs:5
mindspore --> nums:9,distinct_bugs:3
torch --> nums:10,distinct_bugs:4
tensorflow --> 
conv2d:2
linear:4
log:1
add:1
cos:2
mindspore --> 
conv2d:7
log:1
linear:1
torch --> 
conv2d:7
maxpool2d:1
log:1
linear:1

generate models:44

analyse output arrays in iter:54

pre layer res:
3:relu
{'name': 'relu', 'output': array([[[[7.9031044e-05, 4.9715170e-05, 9.9676490e-01, ...,
          8.1239744e-09, 1.3098264e-06, 7.2059600e-05],
         [3.8256238e-07, 1.6806047e-07, 9.9385026e-05, ...,
          4.0088768e-08, 4.4398352e-08, 6.4557341e-08],
         [6.3064323e-09, 2.4591149e-09, 7.6643425e-10, ...,
          7.1316703e-11, 1.4293092e-09, 1.6156509e-10],
         ...,
         [6.0634932e-04, 1.5682677e-03, 7.5247124e-05, ...,
          1.0919649e-05, 1.0445006e-06, 4.7737230e-06],
         [1.6142884e-01, 1.1536656e-01, 2.1701810e-07, ...,
          8.7563749e-06, 9.4940731e-08, 4.0340691e-08],
         [1.7871748e-01, 6.3387018e-01, 1.1007181e-06, ...,
          5.6035296e-06, 2.8358981e-08, 8.5127951e-08]],

        [[7.9031044e-05, 4.9715170e-05, 9.9676490e-01, ...,
          8.1239744e-09, 1.3098264e-06, 7.2059600e-05],
         [3.8256238e-07, 1.6806047e-07, 9.9385026e-05, ...,
          4.0088768e-08, 4.4398352e-08, 6.4557341e-08],
         [6.3064323e-09, 2.4591149e-09, 7.6643425e-10, ...,
          7.1316703e-11, 1.4293092e-09, 1.6156509e-10],
         ...,
         [6.0634932e-04, 1.5682677e-03, 7.5247124e-05, ...,
          1.0919649e-05, 1.0445006e-06, 4.7737230e-06],
         [1.6142884e-01, 1.1536656e-01, 2.1701810e-07, ...,
          8.7563749e-06, 9.4940731e-08, 4.0340691e-08],
         [1.7871748e-01, 6.3387018e-01, 1.1007181e-06, ...,
          5.6035296e-06, 2.8358981e-08, 8.5127951e-08]],

        [[7.9031044e-05, 4.9715170e-05, 9.9676490e-01, ...,
          8.1239744e-09, 1.3098264e-06, 7.2059600e-05],
         [3.8256238e-07, 1.6806047e-07, 9.9385026e-05, ...,
          4.0088768e-08, 4.4398352e-08, 6.4557341e-08],
         [6.3064323e-09, 2.4591149e-09, 7.6643425e-10, ...,
          7.1316703e-11, 1.4293092e-09, 1.6156509e-10],
         ...,
         [6.0634932e-04, 1.5682677e-03, 7.5247124e-05, ...,
          1.0919649e-05, 1.0445006e-06, 4.7737230e-06],
         [1.6142884e-01, 1.1536656e-01, 2.1701810e-07, ...,
          8.7563749e-06, 9.4940731e-08, 4.0340691e-08],
         [1.7871748e-01, 6.3387018e-01, 1.1007181e-06, ...,
          5.6035296e-06, 2.8358981e-08, 8.5127951e-08]],

        ...,

        [[7.9031044e-05, 4.9715170e-05, 9.9676490e-01, ...,
          8.1239744e-09, 1.3098264e-06, 7.2059600e-05],
         [3.8256238e-07, 1.6806047e-07, 9.9385026e-05, ...,
          4.0088768e-08, 4.4398352e-08, 6.4557341e-08],
         [6.3064323e-09, 2.4591149e-09, 7.6643425e-10, ...,
          7.1316703e-11, 1.4293092e-09, 1.6156509e-10],
         ...,
         [6.0634932e-04, 1.5682677e-03, 7.5247124e-05, ...,
          1.0919649e-05, 1.0445006e-06, 4.7737230e-06],
         [1.6142884e-01, 1.1536656e-01, 2.1701810e-07, ...,
          8.7563749e-06, 9.4940731e-08, 4.0340691e-08],
         [1.7871748e-01, 6.3387018e-01, 1.1007181e-06, ...,
          5.6035296e-06, 2.8358981e-08, 8.5127951e-08]],

        [[7.9031044e-05, 4.9715170e-05, 9.9676490e-01, ...,
          8.1239744e-09, 1.3098264e-06, 7.2059600e-05],
         [3.8256238e-07, 1.6806047e-07, 9.9385026e-05, ...,
          4.0088768e-08, 4.4398352e-08, 6.4557341e-08],
         [6.3064323e-09, 2.4591149e-09, 7.6643425e-10, ...,
          7.1316703e-11, 1.4293092e-09, 1.6156509e-10],
         ...,
         [6.0634932e-04, 1.5682677e-03, 7.5247124e-05, ...,
          1.0919649e-05, 1.0445006e-06, 4.7737230e-06],
         [1.6142884e-01, 1.1536656e-01, 2.1701810e-07, ...,
          8.7563749e-06, 9.4940731e-08, 4.0340691e-08],
         [1.7871748e-01, 6.3387018e-01, 1.1007181e-06, ...,
          5.6035296e-06, 2.8358981e-08, 8.5127951e-08]],

        [[7.9031044e-05, 4.9715170e-05, 9.9676490e-01, ...,
          8.1239744e-09, 1.3098264e-06, 7.2059600e-05],
         [3.8256238e-07, 1.6806047e-07, 9.9385026e-05, ...,
          4.0088768e-08, 4.4398352e-08, 6.4557341e-08],
         [6.3064323e-09, 2.4591149e-09, 7.6643425e-10, ...,
          7.1316703e-11, 1.4293092e-09, 1.6156509e-10],
         ...,
         [6.0634932e-04, 1.5682677e-03, 7.5247124e-05, ...,
          1.0919649e-05, 1.0445006e-06, 4.7737230e-06],
         [1.6142884e-01, 1.1536656e-01, 2.1701810e-07, ...,
          8.7563749e-06, 9.4940731e-08, 4.0340691e-08],
         [1.7871748e-01, 6.3387018e-01, 1.1007181e-06, ...,
          5.6035296e-06, 2.8358981e-08, 8.5127951e-08]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [7], 'to': [10]}
tf node:
{'name': 'log', 'output': array([[[[-9.44567013e+00, -9.90920067e+00, -3.24034598e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461140e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911100e-01, -1.37195482e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24034598e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461140e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911100e-01, -1.37195482e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24034598e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461140e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911100e-01, -1.37195482e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        ...,

        [[-9.44567013e+00, -9.90920067e+00, -3.24034598e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461140e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911100e-01, -1.37195482e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24034598e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461140e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911100e-01, -1.37195482e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24034598e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461140e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911100e-01, -1.37195482e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [3], 'to': [9]}
ms node:
{'name': 'log', 'output': array([[[[-9.44566631e+00, -9.90920258e+00, -3.24177626e-03, ...,
          -1.86284485e+01, -1.35456181e+01, -9.53801823e+00],
         [-1.47763767e+01, -1.55989389e+01, -9.21651173e+00, ...,
          -1.70321732e+01, -1.69300652e+01, -1.65557156e+01],
         [-1.88816986e+01, -1.98234653e+01, -2.09892750e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461121e+01],
         ...,
         [-7.40805340e+00, -6.45778608e+00, -9.49473095e+00, ...,
          -1.14249439e+01, -1.37719717e+01, -1.22523804e+01],
         [-1.82368803e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457319e+01, -1.61700153e+01, -1.70259075e+01],
         [-1.72194624e+00, -4.55908209e-01, -1.37195511e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791080e+01]],

        [[-9.44566631e+00, -9.90920258e+00, -3.24177626e-03, ...,
          -1.86284485e+01, -1.35456181e+01, -9.53801823e+00],
         [-1.47763767e+01, -1.55989389e+01, -9.21651173e+00, ...,
          -1.70321732e+01, -1.69300652e+01, -1.65557156e+01],
         [-1.88816986e+01, -1.98234653e+01, -2.09892750e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461121e+01],
         ...,
         [-7.40805340e+00, -6.45778608e+00, -9.49473095e+00, ...,
          -1.14249439e+01, -1.37719717e+01, -1.22523804e+01],
         [-1.82368803e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457319e+01, -1.61700153e+01, -1.70259075e+01],
         [-1.72194624e+00, -4.55908209e-01, -1.37195511e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791080e+01]],

        [[-9.44566631e+00, -9.90920258e+00, -3.24177626e-03, ...,
          -1.86284485e+01, -1.35456181e+01, -9.53801823e+00],
         [-1.47763767e+01, -1.55989389e+01, -9.21651173e+00, ...,
          -1.70321732e+01, -1.69300652e+01, -1.65557156e+01],
         [-1.88816986e+01, -1.98234653e+01, -2.09892750e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461121e+01],
         ...,
         [-7.40805340e+00, -6.45778608e+00, -9.49473095e+00, ...,
          -1.14249439e+01, -1.37719717e+01, -1.22523804e+01],
         [-1.82368803e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457319e+01, -1.61700153e+01, -1.70259075e+01],
         [-1.72194624e+00, -4.55908209e-01, -1.37195511e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791080e+01]],

        ...,

        [[-9.44566631e+00, -9.90920258e+00, -3.24177626e-03, ...,
          -1.86284485e+01, -1.35456181e+01, -9.53801823e+00],
         [-1.47763767e+01, -1.55989389e+01, -9.21651173e+00, ...,
          -1.70321732e+01, -1.69300652e+01, -1.65557156e+01],
         [-1.88816986e+01, -1.98234653e+01, -2.09892750e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461121e+01],
         ...,
         [-7.40805340e+00, -6.45778608e+00, -9.49473095e+00, ...,
          -1.14249439e+01, -1.37719717e+01, -1.22523804e+01],
         [-1.82368803e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457319e+01, -1.61700153e+01, -1.70259075e+01],
         [-1.72194624e+00, -4.55908209e-01, -1.37195511e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791080e+01]],

        [[-9.44566631e+00, -9.90920258e+00, -3.24177626e-03, ...,
          -1.86284485e+01, -1.35456181e+01, -9.53801823e+00],
         [-1.47763767e+01, -1.55989389e+01, -9.21651173e+00, ...,
          -1.70321732e+01, -1.69300652e+01, -1.65557156e+01],
         [-1.88816986e+01, -1.98234653e+01, -2.09892750e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461121e+01],
         ...,
         [-7.40805340e+00, -6.45778608e+00, -9.49473095e+00, ...,
          -1.14249439e+01, -1.37719717e+01, -1.22523804e+01],
         [-1.82368803e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457319e+01, -1.61700153e+01, -1.70259075e+01],
         [-1.72194624e+00, -4.55908209e-01, -1.37195511e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791080e+01]],

        [[-9.44566631e+00, -9.90920258e+00, -3.24177626e-03, ...,
          -1.86284485e+01, -1.35456181e+01, -9.53801823e+00],
         [-1.47763767e+01, -1.55989389e+01, -9.21651173e+00, ...,
          -1.70321732e+01, -1.69300652e+01, -1.65557156e+01],
         [-1.88816986e+01, -1.98234653e+01, -2.09892750e+01, ...,
          -2.33638897e+01, -2.03660755e+01, -2.25461121e+01],
         ...,
         [-7.40805340e+00, -6.45778608e+00, -9.49473095e+00, ...,
          -1.14249439e+01, -1.37719717e+01, -1.22523804e+01],
         [-1.82368803e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457319e+01, -1.61700153e+01, -1.70259075e+01],
         [-1.72194624e+00, -4.55908209e-01, -1.37195511e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791080e+01]]]],
      dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [3], 'to': [9]}
torch node:
{'name': 'log', 'output': array([[[[-9.44567013e+00, -9.90920067e+00, -3.24046565e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638916e+01, -2.03660736e+01, -2.25461121e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911219e-01, -1.37195473e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24046565e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638916e+01, -2.03660736e+01, -2.25461121e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911219e-01, -1.37195473e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24046565e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638916e+01, -2.03660736e+01, -2.25461121e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911219e-01, -1.37195473e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        ...,

        [[-9.44567013e+00, -9.90920067e+00, -3.24046565e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638916e+01, -2.03660736e+01, -2.25461121e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911219e-01, -1.37195473e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24046565e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638916e+01, -2.03660736e+01, -2.25461121e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911219e-01, -1.37195473e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]],

        [[-9.44567013e+00, -9.90920067e+00, -3.24046565e-03, ...,
          -1.86284466e+01, -1.35456161e+01, -9.53801727e+00],
         [-1.47763739e+01, -1.55989418e+01, -9.21650887e+00, ...,
          -1.70321693e+01, -1.69300632e+01, -1.65557117e+01],
         [-1.88816967e+01, -1.98234634e+01, -2.09892731e+01, ...,
          -2.33638916e+01, -2.03660736e+01, -2.25461121e+01],
         ...,
         [-7.40805435e+00, -6.45778370e+00, -9.49473286e+00, ...,
          -1.14249468e+01, -1.37719717e+01, -1.22523842e+01],
         [-1.82369089e+00, -2.15964079e+00, -1.53432856e+01, ...,
          -1.16457291e+01, -1.61700134e+01, -1.70259056e+01],
         [-1.72194910e+00, -4.55911219e-01, -1.37195473e+01, ...,
          -1.20921135e+01, -1.73783226e+01, -1.62791100e+01]]]],
      dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [3], 'to': [9]}

generate models:48

analyse the exceptions in iter:59
torch exception:
{'id': 4, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], grad_fn=<ReluBackward0>)]}
Given groups=1, weight of size [512, 128, 1, 1], expected input[1, 512, 16, 16] to have 128 channels, but got 512 channels instead
mindspore exception:
{'id': 4, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 512, 16, 16], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  ...
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 512, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:53

analyse output arrays in iter:69

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[  5.9806557 ,   5.9806557 ,   5.9806557 , ...,   5.9806557 ,
            5.9806557 ,   5.9806557 ],
         [  0.3791809 ,   0.3791809 ,   0.3791809 , ...,   0.3791809 ,
            0.3791809 ,   0.3791809 ],
         [ -6.3528748 ,  -6.3528748 ,  -6.3528748 , ...,  -6.3528748 ,
           -6.3528748 ,  -6.3528748 ],
         ...,
         [ -6.3980894 ,  -6.3980894 ,  -6.3980894 , ...,  -6.3980894 ,
           -6.3980894 ,  -6.3980894 ],
         [ -3.1759033 ,  -3.1759033 ,  -3.1759033 , ...,  -3.1759033 ,
           -3.1759033 ,  -3.1759033 ],
         [  1.5688171 ,   1.5688171 ,   1.5688171 , ...,   1.5688171 ,
            1.5688171 ,   1.5688171 ]],

        [[ -0.1665039 ,  -0.1665039 ,  -0.1665039 , ...,  -0.1665039 ,
           -0.1665039 ,  -0.1665039 ],
         [ -3.6884003 ,  -3.6884003 ,  -3.6884003 , ...,  -3.6884003 ,
           -3.6884003 ,  -3.6884003 ],
         [  3.852478  ,   3.852478  ,   3.852478  , ...,   3.852478  ,
            3.852478  ,   3.852478  ],
         ...,
         [ -0.6798096 ,  -0.6798096 ,  -0.6798096 , ...,  -0.6798096 ,
           -0.6798096 ,  -0.6798096 ],
         [ -9.876907  ,  -9.876907  ,  -9.876907  , ...,  -9.876907  ,
           -9.876907  ,  -9.876907  ],
         [ -0.11473846,  -0.11473846,  -0.11473846, ...,  -0.11473846,
           -0.11473846,  -0.11473846]],

        [[-12.687195  , -12.687195  , -12.687195  , ..., -12.687195  ,
          -12.687195  , -12.687195  ],
         [  2.3914795 ,   2.3914795 ,   2.3914795 , ...,   2.3914795 ,
            2.3914795 ,   2.3914795 ],
         [ -3.751419  ,  -3.751419  ,  -3.751419  , ...,  -3.751419  ,
           -3.751419  ,  -3.751419  ],
         ...,
         [ -8.059364  ,  -8.059364  ,  -8.059364  , ...,  -8.059364  ,
           -8.059364  ,  -8.059364  ],
         [  8.700684  ,   8.700684  ,   8.700684  , ...,   8.700684  ,
            8.700684  ,   8.700684  ],
         [ -6.578003  ,  -6.578003  ,  -6.578003  , ...,  -6.578003  ,
           -6.578003  ,  -6.578003  ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [11]}
ms node:
{'name': 'linear', 'output': array([[[[  5.9815803 ,   5.9815803 ,   5.9815803 , ...,   5.9815803 ,
            5.9815803 ,   5.9815803 ],
         [  0.3803146 ,   0.3803146 ,   0.3803146 , ...,   0.38031435,
            0.38031435,   0.38031435],
         [ -6.3533015 ,  -6.3533015 ,  -6.3533015 , ...,  -6.353302  ,
           -6.353302  ,  -6.353302  ],
         ...,
         [ -6.3984613 ,  -6.3984613 ,  -6.3984613 , ...,  -6.3984613 ,
           -6.3984613 ,  -6.3984613 ],
         [ -3.1759806 ,  -3.1759806 ,  -3.1759806 , ...,  -3.1759806 ,
           -3.1759806 ,  -3.1759806 ],
         [  1.567229  ,   1.567229  ,   1.567229  , ...,   1.5672278 ,
            1.5672278 ,   1.5672278 ]],

        [[ -0.16536975,  -0.16536975,  -0.16536975, ...,  -0.16536999,
           -0.16536999,  -0.16536999],
         [ -3.6877692 ,  -3.6877692 ,  -3.6877692 , ...,  -3.6877697 ,
           -3.6877697 ,  -3.6877697 ],
         [  3.8518653 ,   3.8518653 ,   3.8518653 , ...,   3.851864  ,
            3.851864  ,   3.851864  ],
         ...,
         [ -0.6784909 ,  -0.6784909 ,  -0.6784909 , ...,  -0.67849064,
           -0.67849064,  -0.67849064],
         [ -9.875851  ,  -9.875851  ,  -9.875851  , ...,  -9.87585   ,
           -9.87585   ,  -9.87585   ],
         [ -0.11667114,  -0.11667114,  -0.11667114, ...,  -0.11667079,
           -0.11667079,  -0.11667079]],

        [[-12.685438  , -12.685438  , -12.685438  , ..., -12.685438  ,
          -12.685438  , -12.685438  ],
         [  2.39348   ,   2.39348   ,   2.39348   , ...,   2.3934798 ,
            2.3934798 ,   2.3934798 ],
         [ -3.752373  ,  -3.752373  ,  -3.752373  , ...,  -3.7523735 ,
           -3.7523735 ,  -3.7523735 ],
         ...,
         [ -8.059976  ,  -8.059976  ,  -8.059976  , ...,  -8.059977  ,
           -8.059977  ,  -8.059977  ],
         [  8.701061  ,   8.701061  ,   8.701061  , ...,   8.701061  ,
            8.701061  ,   8.701061  ],
         [ -6.578836  ,  -6.578836  ,  -6.578836  , ...,  -6.5788345 ,
           -6.5788345 ,  -6.5788345 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [11]}
torch node:
{'name': 'linear', 'output': array([[[[  5.9815803 ,   5.9815803 ,   5.9815803 , ...,   5.9815803 ,
            5.9815803 ,   5.9815803 ],
         [  0.3803146 ,   0.3803146 ,   0.3803146 , ...,   0.38031435,
            0.38031435,   0.38031435],
         [ -6.3533015 ,  -6.3533015 ,  -6.3533015 , ...,  -6.353302  ,
           -6.353302  ,  -6.353302  ],
         ...,
         [ -6.3984613 ,  -6.3984613 ,  -6.3984613 , ...,  -6.3984613 ,
           -6.3984613 ,  -6.3984613 ],
         [ -3.1759806 ,  -3.1759806 ,  -3.1759806 , ...,  -3.1759806 ,
           -3.1759806 ,  -3.1759806 ],
         [  1.567229  ,   1.567229  ,   1.567229  , ...,   1.5672278 ,
            1.5672278 ,   1.5672278 ]],

        [[ -0.16536975,  -0.16536975,  -0.16536975, ...,  -0.16536999,
           -0.16536999,  -0.16536999],
         [ -3.6877692 ,  -3.6877692 ,  -3.6877692 , ...,  -3.6877697 ,
           -3.6877697 ,  -3.6877697 ],
         [  3.8518653 ,   3.8518653 ,   3.8518653 , ...,   3.851864  ,
            3.851864  ,   3.851864  ],
         ...,
         [ -0.6784909 ,  -0.6784909 ,  -0.6784909 , ...,  -0.67849064,
           -0.67849064,  -0.67849064],
         [ -9.875851  ,  -9.875851  ,  -9.875851  , ...,  -9.87585   ,
           -9.87585   ,  -9.87585   ],
         [ -0.11667114,  -0.11667114,  -0.11667114, ...,  -0.11667079,
           -0.11667079,  -0.11667079]],

        [[-12.685438  , -12.685438  , -12.685438  , ..., -12.685438  ,
          -12.685438  , -12.685438  ],
         [  2.39348   ,   2.39348   ,   2.39348   , ...,   2.3934798 ,
            2.3934798 ,   2.3934798 ],
         [ -3.752373  ,  -3.752373  ,  -3.752373  , ...,  -3.7523735 ,
           -3.7523735 ,  -3.7523735 ],
         ...,
         [ -8.059976  ,  -8.059976  ,  -8.059976  , ...,  -8.059977  ,
           -8.059977  ,  -8.059977  ],
         [  8.701061  ,   8.701061  ,   8.701061  , ...,   8.701061  ,
            8.701061  ,   8.701061  ],
         [ -6.578836  ,  -6.578836  ,  -6.578836  , ...,  -6.5788345 ,
           -6.5788345 ,  -6.5788345 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [11]}

generate models:61

analyse output arrays in iter:77

pre layer res:
18:log
{'name': 'log', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [10], 'to': [5]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [18], 'to': [6]}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [18], 'to': [6]}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [18], 'to': [6]}

generate models:68

analyse output arrays in iter:81

pre layer res:
3:cos
{'name': 'cos', 'output': array([[[[ 0.5403023 ,  0.5403023 ,  0.9999243 , ...,  0.49496138,
           0.5403023 ,  0.5403023 ],
         [ 0.5403023 , -0.9337475 ,  0.35852134, ..., -0.8608821 ,
          -0.05423886,  0.5403023 ],
         [ 0.28443342, -0.7784086 ,  0.5403023 , ...,  0.5403023 ,
           0.5403023 ,  0.5403023 ],
         ...,
         [-0.5434878 ,  0.5403023 ,  0.4036963 , ...,  0.3149272 ,
          -0.80341566,  0.5403023 ],
         [ 0.5403023 ,  0.7935583 , -0.76520365, ...,  0.5403023 ,
           0.5403023 ,  0.03234211],
         [ 0.5403023 , -0.8615223 ,  0.5403023 , ...,  0.30755815,
          -0.55886585,  0.5403023 ]],

        [[ 0.5403023 , -0.5562597 ,  0.5403023 , ..., -0.6215304 ,
           0.5403023 , -0.93972826],
         [ 0.5403023 , -0.2843913 , -0.01302889, ..., -0.48575264,
           0.5403023 ,  0.5403023 ],
         [ 0.35025415,  0.5403023 ,  0.5403023 , ...,  0.34650913,
          -0.2144638 ,  0.5403023 ],
         ...,
         [ 0.5403023 , -0.07157487,  0.5403023 , ...,  0.5403023 ,
           0.5403023 ,  0.38843843],
         [ 0.98104537,  0.5403023 ,  0.5403023 , ...,  0.08388017,
          -0.9960854 , -0.5317748 ],
         [-0.628251  ,  0.5403023 ,  0.99763906, ...,  0.5403023 ,
          -0.7224227 ,  0.5403023 ]],

        [[ 0.5403023 ,  0.5403023 ,  0.4275534 , ...,  0.50381196,
           0.5403023 ,  0.5403023 ],
         [ 0.5403023 ,  0.31071132,  0.49402365, ...,  0.15110378,
           0.5403023 ,  0.5403023 ],
         [ 0.4003256 ,  0.5403023 ,  0.25744787, ...,  0.5403023 ,
          -0.45917386,  0.5403023 ],
         ...,
         [ 0.5403023 , -0.7147759 ,  0.5403023 , ...,  0.5403023 ,
           0.28572953,  0.5403023 ],
         [ 0.5403023 ,  0.21338853,  0.10450886, ...,  0.5403023 ,
           0.23285165,  0.5403023 ],
         [-0.9999042 ,  0.15670034,  0.99723816, ...,  0.5403023 ,
           0.5403023 , -0.51872575]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [9], 'to': [7]}
tf node:
{'name': 'log', 'output': array([[[[-6.1562651e-01, -6.1562651e-01, -7.5700766e-05, ...,
          -7.0327556e-01, -6.1562651e-01, -6.1562651e-01],
         [-6.1562651e-01,            nan, -1.0257671e+00, ...,
                     nan,            nan, -6.1562651e-01],
         [-1.2572560e+00,            nan, -6.1562651e-01, ...,
          -6.1562651e-01, -6.1562651e-01, -6.1562651e-01],
         ...,
         [           nan, -6.1562651e-01, -9.0709245e-01, ...,
          -1.1554139e+00,            nan, -6.1562651e-01],
         [-6.1562651e-01, -2.3122828e-01,            nan, ...,
          -6.1562651e-01, -6.1562651e-01, -3.4313850e+00],
         [-6.1562651e-01,            nan, -6.1562651e-01, ...,
          -1.1790911e+00,            nan, -6.1562651e-01]],

        [[-6.1562651e-01,            nan, -6.1562651e-01, ...,
                     nan, -6.1562651e-01,            nan],
         [-6.1562651e-01,            nan,            nan, ...,
                     nan, -6.1562651e-01, -6.1562651e-01],
         [-1.0490962e+00, -6.1562651e-01, -6.1562651e-01, ...,
          -1.0598462e+00,            nan, -6.1562651e-01],
         ...,
         [-6.1562651e-01,            nan, -6.1562651e-01, ...,
          -6.1562651e-01, -6.1562651e-01, -9.4562060e-01],
         [-1.9136576e-02, -6.1562651e-01, -6.1562651e-01, ...,
          -2.4783661e+00,            nan,            nan],
         [           nan, -6.1562651e-01, -2.3637314e-03, ...,
          -6.1562651e-01,            nan, -6.1562651e-01]],

        [[-6.1562651e-01, -6.1562651e-01, -8.4967613e-01, ...,
          -6.8555218e-01, -6.1562651e-01, -6.1562651e-01],
         [-6.1562651e-01, -1.1688910e+00, -7.0517188e-01, ...,
          -1.8897884e+00, -6.1562651e-01, -6.1562651e-01],
         [-9.1547710e-01, -6.1562651e-01, -1.3569380e+00, ...,
          -6.1562651e-01,            nan, -6.1562651e-01],
         ...,
         [-6.1562651e-01,            nan, -6.1562651e-01, ...,
          -6.1562651e-01, -1.2527096e+00, -6.1562651e-01],
         [-6.1562651e-01, -1.5446407e+00, -2.2584834e+00, ...,
          -6.1562651e-01, -1.4573537e+00, -6.1562651e-01],
         [           nan, -1.8534199e+00, -2.7656618e-03, ...,
          -6.1562651e-01, -6.1562651e-01,            nan]]]],
      dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [3], 'to': [8]}
ms node:
{'name': 'log', 'output': array([[[[-6.1562943e-01, -6.1562943e-01, -7.7131277e-05, ...,
          -7.0327699e-01, -6.1562943e-01, -6.1562943e-01],
         [-6.1562943e-01,            nan, -1.0257640e+00, ...,
                     nan,            nan, -6.1562943e-01],
         [-1.2572596e+00,            nan, -6.1562943e-01, ...,
          -6.1562943e-01, -6.1562943e-01, -6.1562943e-01],
         ...,
         [           nan, -6.1562943e-01, -9.0709454e-01, ...,
          -1.1554110e+00,            nan, -6.1562943e-01],
         [-6.1562943e-01, -2.3123068e-01,            nan, ...,
          -6.1562943e-01, -6.1562943e-01, -3.4313817e+00],
         [-6.1562943e-01,            nan, -6.1562943e-01, ...,
          -1.1790903e+00,            nan, -6.1562943e-01]],

        [[-6.1562943e-01,            nan, -6.1562943e-01, ...,
                     nan, -6.1562943e-01,            nan],
         [-6.1562943e-01,            nan,            nan, ...,
                     nan, -6.1562943e-01, -6.1562943e-01],
         [-1.0490931e+00, -6.1562943e-01, -6.1562943e-01, ...,
          -1.0598433e+00,            nan, -6.1562943e-01],
         ...,
         [-6.1562943e-01,            nan, -6.1562943e-01, ...,
          -6.1562943e-01, -6.1562943e-01, -9.4562250e-01],
         [-1.9137826e-02, -6.1562943e-01, -6.1562943e-01, ...,
          -2.4783695e+00,            nan,            nan],
         [           nan, -6.1562943e-01, -2.3652215e-03, ...,
          -6.1562943e-01,            nan, -6.1562943e-01]],

        [[-6.1562943e-01, -6.1562943e-01, -8.4967941e-01, ...,
          -6.8555361e-01, -6.1562943e-01, -6.1562943e-01],
         [-6.1562943e-01, -1.1688904e+00, -7.0517308e-01, ...,
          -1.8897930e+00, -6.1562943e-01, -6.1562943e-01],
         [-9.1547924e-01, -6.1562943e-01, -1.3569404e+00, ...,
          -6.1562943e-01,            nan, -6.1562943e-01],
         ...,
         [-6.1562943e-01,            nan, -6.1562943e-01, ...,
          -6.1562943e-01, -1.2527128e+00, -6.1562943e-01],
         [-6.1562943e-01, -1.5446445e+00, -2.2584879e+00, ...,
          -6.1562943e-01, -1.4573542e+00, -6.1562943e-01],
         [           nan, -1.8534163e+00, -2.7670325e-03, ...,
          -6.1562943e-01, -6.1562943e-01,            nan]]]],
      dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [3], 'to': [8]}
torch node:
{'name': 'log', 'output': array([[[[-6.1562639e-01, -6.1562639e-01, -7.5700766e-05, ...,
          -7.0327556e-01, -6.1562639e-01, -6.1562639e-01],
         [-6.1562639e-01,            nan, -1.0257671e+00, ...,
                     nan,            nan, -6.1562639e-01],
         [-1.2572565e+00,            nan, -6.1562639e-01, ...,
          -6.1562639e-01, -6.1562639e-01, -6.1562639e-01],
         ...,
         [           nan, -6.1562639e-01, -9.0709245e-01, ...,
          -1.1554139e+00,            nan, -6.1562639e-01],
         [-6.1562639e-01, -2.3122835e-01,            nan, ...,
          -6.1562639e-01, -6.1562639e-01, -3.4313850e+00],
         [-6.1562639e-01,            nan, -6.1562639e-01, ...,
          -1.1790911e+00,            nan, -6.1562639e-01]],

        [[-6.1562639e-01,            nan, -6.1562639e-01, ...,
                     nan, -6.1562639e-01,            nan],
         [-6.1562639e-01,            nan,            nan, ...,
                     nan, -6.1562639e-01, -6.1562639e-01],
         [-1.0490963e+00, -6.1562639e-01, -6.1562639e-01, ...,
          -1.0598462e+00,            nan, -6.1562639e-01],
         ...,
         [-6.1562639e-01,            nan, -6.1562639e-01, ...,
          -6.1562639e-01, -6.1562639e-01, -9.4562060e-01],
         [-1.9136455e-02, -6.1562639e-01, -6.1562639e-01, ...,
          -2.4783661e+00,            nan,            nan],
         [           nan, -6.1562639e-01, -2.3637912e-03, ...,
          -6.1562639e-01,            nan, -6.1562639e-01]],

        [[-6.1562639e-01, -6.1562639e-01, -8.4967637e-01, ...,
          -6.8555218e-01, -6.1562639e-01, -6.1562639e-01],
         [-6.1562639e-01, -1.1688910e+00, -7.0517182e-01, ...,
          -1.8897884e+00, -6.1562639e-01, -6.1562639e-01],
         [-9.1547716e-01, -6.1562639e-01, -1.3569385e+00, ...,
          -6.1562639e-01,            nan, -6.1562639e-01],
         ...,
         [-6.1562639e-01,            nan, -6.1562639e-01, ...,
          -6.1562639e-01, -1.2527097e+00, -6.1562639e-01],
         [-6.1562639e-01, -1.5446407e+00, -2.2584834e+00, ...,
          -6.1562639e-01, -1.4573537e+00, -6.1562639e-01],
         [           nan, -1.8534199e+00, -2.7656618e-03, ...,
          -6.1562639e-01, -6.1562639e-01,            nan]]]],
      dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [3], 'to': [8]}

generate models:71

analyse output arrays in iter:83

pre layer res:
7:cos
{'name': 'cos', 'output': array([[[[ 0.36364824,  0.9981986 ,  0.42217156, ...,  0.96008074,
           0.8754313 ,  0.6008419 ],
         [ 0.00394208, -0.7899257 , -0.93713534, ..., -0.2771769 ,
          -0.85824734,  0.5939451 ],
         [ 0.22466552,  0.9392608 ,  0.9207708 , ..., -0.8474646 ,
          -0.64264333,  0.7330974 ],
         ...,
         [ 0.93170553,  0.604088  ,  0.8472917 , ...,  0.88698655,
          -0.44225293, -0.972301  ],
         [ 0.9134093 ,  0.88153243, -0.2869728 , ..., -0.34056297,
           0.00556462, -0.59043074],
         [ 0.684946  ,  0.38001603, -0.95891523, ...,  0.7749175 ,
          -0.9330499 ,  0.88154304]],

        [[ 0.36364824,  0.9981986 ,  0.42217156, ...,  0.96008074,
           0.8754313 ,  0.6008419 ],
         [ 0.00394208, -0.7899257 , -0.93713534, ..., -0.2771769 ,
          -0.85824734,  0.5939451 ],
         [ 0.22466552,  0.9392608 ,  0.9207708 , ..., -0.8474646 ,
          -0.64264333,  0.7330974 ],
         ...,
         [ 0.93170553,  0.604088  ,  0.8472917 , ...,  0.88698655,
          -0.44225293, -0.972301  ],
         [ 0.9134093 ,  0.88153243, -0.2869728 , ..., -0.34056297,
           0.00556462, -0.59043074],
         [ 0.684946  ,  0.38001603, -0.95891523, ...,  0.7749175 ,
          -0.9330499 ,  0.88154304]],

        [[ 0.36364824,  0.9981986 ,  0.42217156, ...,  0.96008074,
           0.8754313 ,  0.6008419 ],
         [ 0.00394208, -0.7899257 , -0.93713534, ..., -0.2771769 ,
          -0.85824734,  0.5939451 ],
         [ 0.22466552,  0.9392608 ,  0.9207708 , ..., -0.8474646 ,
          -0.64264333,  0.7330974 ],
         ...,
         [ 0.93170553,  0.604088  ,  0.8472917 , ...,  0.88698655,
          -0.44225293, -0.972301  ],
         [ 0.9134093 ,  0.88153243, -0.2869728 , ..., -0.34056297,
           0.00556462, -0.59043074],
         [ 0.684946  ,  0.38001603, -0.95891523, ...,  0.7749175 ,
          -0.9330499 ,  0.88154304]],

        ...,

        [[ 0.36364824,  0.9981986 ,  0.42217156, ...,  0.96008074,
           0.8754313 ,  0.6008419 ],
         [ 0.00394208, -0.7899257 , -0.93713534, ..., -0.2771769 ,
          -0.85824734,  0.5939451 ],
         [ 0.22466552,  0.9392608 ,  0.9207708 , ..., -0.8474646 ,
          -0.64264333,  0.7330974 ],
         ...,
         [ 0.93170553,  0.604088  ,  0.8472917 , ...,  0.88698655,
          -0.44225293, -0.972301  ],
         [ 0.9134093 ,  0.88153243, -0.2869728 , ..., -0.34056297,
           0.00556462, -0.59043074],
         [ 0.684946  ,  0.38001603, -0.95891523, ...,  0.7749175 ,
          -0.9330499 ,  0.88154304]],

        [[ 0.36364824,  0.9981986 ,  0.42217156, ...,  0.96008074,
           0.8754313 ,  0.6008419 ],
         [ 0.00394208, -0.7899257 , -0.93713534, ..., -0.2771769 ,
          -0.85824734,  0.5939451 ],
         [ 0.22466552,  0.9392608 ,  0.9207708 , ..., -0.8474646 ,
          -0.64264333,  0.7330974 ],
         ...,
         [ 0.93170553,  0.604088  ,  0.8472917 , ...,  0.88698655,
          -0.44225293, -0.972301  ],
         [ 0.9134093 ,  0.88153243, -0.2869728 , ..., -0.34056297,
           0.00556462, -0.59043074],
         [ 0.684946  ,  0.38001603, -0.95891523, ...,  0.7749175 ,
          -0.9330499 ,  0.88154304]],

        [[ 0.36364824,  0.9981986 ,  0.42217156, ...,  0.96008074,
           0.8754313 ,  0.6008419 ],
         [ 0.00394208, -0.7899257 , -0.93713534, ..., -0.2771769 ,
          -0.85824734,  0.5939451 ],
         [ 0.22466552,  0.9392608 ,  0.9207708 , ..., -0.8474646 ,
          -0.64264333,  0.7330974 ],
         ...,
         [ 0.93170553,  0.604088  ,  0.8472917 , ...,  0.88698655,
          -0.44225293, -0.972301  ],
         [ 0.9134093 ,  0.88153243, -0.2869728 , ..., -0.34056297,
           0.00556462, -0.59043074],
         [ 0.684946  ,  0.38001603, -0.95891523, ...,  0.7749175 ,
          -0.9330499 ,  0.88154304]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [10], 'to': [3]}
tf node:
{'name': 'conv2d', 'output': array([[[[  294.84113 ,    31.172058,   689.1431  , ...,   164.47572 ,
            970.18384 ,   620.5294  ],
         [  890.77466 ,  1098.5508  ,  1494.6367  , ...,  -872.34357 ,
            582.57465 ,   666.8272  ],
         [  338.21014 ,  -178.14648 ,  -100.404175, ..., -2055.9216  ,
           -619.54553 ,   203.08429 ],
         ...,
         [ 2411.221   ,  2550.364   ,   755.7779  , ...,   829.7627  ,
             10.424194,  -781.2906  ],
         [ 2250.5999  ,  2046.5264  ,  1259.5496  , ...,   425.07788 ,
           -373.53473 , -1050.0637  ],
         [ 1464.2856  ,   826.39575 ,   777.7566  , ...,  -214.06445 ,
           -103.43765 ,  -325.82278 ]],

        [[  294.84113 ,    31.172058,   689.1431  , ...,   164.47572 ,
            970.18384 ,   620.5294  ],
         [  890.77466 ,  1098.5508  ,  1494.6367  , ...,  -872.34357 ,
            582.57465 ,   666.8272  ],
         [  338.21014 ,  -178.14648 ,  -100.404175, ..., -2055.9216  ,
           -619.54553 ,   203.08429 ],
         ...,
         [ 2411.221   ,  2550.364   ,   755.7779  , ...,   829.7627  ,
             10.424194,  -781.2906  ],
         [ 2250.5999  ,  2046.5264  ,  1259.5496  , ...,   425.07788 ,
           -373.53473 , -1050.0637  ],
         [ 1464.2856  ,   826.39575 ,   777.7566  , ...,  -214.06445 ,
           -103.43765 ,  -325.82278 ]],

        [[  294.84113 ,    31.172058,   689.1431  , ...,   164.47572 ,
            970.18384 ,   620.5294  ],
         [  890.77466 ,  1098.5508  ,  1494.6367  , ...,  -872.34357 ,
            582.57465 ,   666.8272  ],
         [  338.21014 ,  -178.14648 ,  -100.404175, ..., -2055.9216  ,
           -619.54553 ,   203.08429 ],
         ...,
         [ 2411.221   ,  2550.364   ,   755.7779  , ...,   829.7627  ,
             10.424194,  -781.2906  ],
         [ 2250.5999  ,  2046.5264  ,  1259.5496  , ...,   425.07788 ,
           -373.53473 , -1050.0637  ],
         [ 1464.2856  ,   826.39575 ,   777.7566  , ...,  -214.06445 ,
           -103.43765 ,  -325.82278 ]],

        ...,

        [[  294.84113 ,    31.172058,   689.1431  , ...,   164.47572 ,
            970.18384 ,   620.5294  ],
         [  890.77466 ,  1098.5508  ,  1494.6367  , ...,  -872.34357 ,
            582.57465 ,   666.8272  ],
         [  338.21014 ,  -178.14648 ,  -100.404175, ..., -2055.9216  ,
           -619.54553 ,   203.08429 ],
         ...,
         [ 2411.221   ,  2550.364   ,   755.7779  , ...,   829.7627  ,
             10.424194,  -781.2906  ],
         [ 2250.5999  ,  2046.5264  ,  1259.5496  , ...,   425.07788 ,
           -373.53473 , -1050.0637  ],
         [ 1464.2856  ,   826.39575 ,   777.7566  , ...,  -214.06445 ,
           -103.43765 ,  -325.82278 ]],

        [[  294.84113 ,    31.172058,   689.1431  , ...,   164.47572 ,
            970.18384 ,   620.5294  ],
         [  890.77466 ,  1098.5508  ,  1494.6367  , ...,  -872.34357 ,
            582.57465 ,   666.8272  ],
         [  338.21014 ,  -178.14648 ,  -100.404175, ..., -2055.9216  ,
           -619.54553 ,   203.08429 ],
         ...,
         [ 2411.221   ,  2550.364   ,   755.7779  , ...,   829.7627  ,
             10.424194,  -781.2906  ],
         [ 2250.5999  ,  2046.5264  ,  1259.5496  , ...,   425.07788 ,
           -373.53473 , -1050.0637  ],
         [ 1464.2856  ,   826.39575 ,   777.7566  , ...,  -214.06445 ,
           -103.43765 ,  -325.82278 ]],

        [[  294.84113 ,    31.172058,   689.1431  , ...,   164.47572 ,
            970.18384 ,   620.5294  ],
         [  890.77466 ,  1098.5508  ,  1494.6367  , ...,  -872.34357 ,
            582.57465 ,   666.8272  ],
         [  338.21014 ,  -178.14648 ,  -100.404175, ..., -2055.9216  ,
           -619.54553 ,   203.08429 ],
         ...,
         [ 2411.221   ,  2550.364   ,   755.7779  , ...,   829.7627  ,
             10.424194,  -781.2906  ],
         [ 2250.5999  ,  2046.5264  ,  1259.5496  , ...,   425.07788 ,
           -373.53473 , -1050.0637  ],
         [ 1464.2856  ,   826.39575 ,   777.7566  , ...,  -214.06445 ,
           -103.43765 ,  -325.82278 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [7], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[  294.84213 ,    31.18045 ,   689.1354  , ...,   164.4776  ,
            970.17535 ,   620.5287  ],
         [  890.77203 ,  1098.5461  ,  1494.6394  , ...,  -872.33997 ,
            582.5858  ,   666.8412  ],
         [  338.22015 ,  -178.13338 ,  -100.40691 , ..., -2055.9155  ,
           -619.53796 ,   203.08528 ],
         ...,
         [ 2411.214   ,  2550.3499  ,   755.78845 , ...,   829.76904 ,
             10.432372,  -781.2953  ],
         [ 2250.5955  ,  2046.5138  ,  1259.5599  , ...,   425.08426 ,
           -373.548   , -1050.0748  ],
         [ 1464.2699  ,   826.3763  ,   777.769   , ...,  -214.0651  ,
           -103.43343 ,  -325.82312 ]],

        [[  294.84213 ,    31.18045 ,   689.1354  , ...,   164.4776  ,
            970.17535 ,   620.5287  ],
         [  890.77203 ,  1098.5461  ,  1494.6394  , ...,  -872.33997 ,
            582.5858  ,   666.8412  ],
         [  338.22015 ,  -178.13338 ,  -100.40691 , ..., -2055.9155  ,
           -619.53796 ,   203.08528 ],
         ...,
         [ 2411.214   ,  2550.3499  ,   755.78845 , ...,   829.76904 ,
             10.432372,  -781.2953  ],
         [ 2250.5955  ,  2046.5138  ,  1259.5599  , ...,   425.08426 ,
           -373.548   , -1050.0748  ],
         [ 1464.2699  ,   826.3763  ,   777.769   , ...,  -214.0651  ,
           -103.43343 ,  -325.82312 ]],

        [[  294.84213 ,    31.18045 ,   689.1354  , ...,   164.4776  ,
            970.17535 ,   620.5287  ],
         [  890.77203 ,  1098.5461  ,  1494.6394  , ...,  -872.33997 ,
            582.5858  ,   666.8412  ],
         [  338.22015 ,  -178.13338 ,  -100.40691 , ..., -2055.9155  ,
           -619.53796 ,   203.08528 ],
         ...,
         [ 2411.214   ,  2550.3499  ,   755.78845 , ...,   829.76904 ,
             10.432372,  -781.2953  ],
         [ 2250.5955  ,  2046.5138  ,  1259.5599  , ...,   425.08426 ,
           -373.548   , -1050.0748  ],
         [ 1464.2699  ,   826.3763  ,   777.769   , ...,  -214.0651  ,
           -103.43343 ,  -325.82312 ]],

        ...,

        [[  294.84213 ,    31.18045 ,   689.1354  , ...,   164.4776  ,
            970.17535 ,   620.5287  ],
         [  890.77203 ,  1098.5461  ,  1494.6394  , ...,  -872.33997 ,
            582.5858  ,   666.8412  ],
         [  338.22015 ,  -178.13338 ,  -100.40691 , ..., -2055.9155  ,
           -619.53796 ,   203.08528 ],
         ...,
         [ 2411.214   ,  2550.3499  ,   755.78845 , ...,   829.76904 ,
             10.432372,  -781.2953  ],
         [ 2250.5955  ,  2046.5138  ,  1259.5599  , ...,   425.08426 ,
           -373.548   , -1050.0748  ],
         [ 1464.2699  ,   826.3763  ,   777.769   , ...,  -214.0651  ,
           -103.43343 ,  -325.82312 ]],

        [[  294.84213 ,    31.18045 ,   689.1354  , ...,   164.4776  ,
            970.17535 ,   620.5287  ],
         [  890.77203 ,  1098.5461  ,  1494.6394  , ...,  -872.33997 ,
            582.5858  ,   666.8412  ],
         [  338.22015 ,  -178.13338 ,  -100.40691 , ..., -2055.9155  ,
           -619.53796 ,   203.08528 ],
         ...,
         [ 2411.214   ,  2550.3499  ,   755.78845 , ...,   829.76904 ,
             10.432372,  -781.2953  ],
         [ 2250.5955  ,  2046.5138  ,  1259.5599  , ...,   425.08426 ,
           -373.548   , -1050.0748  ],
         [ 1464.2699  ,   826.3763  ,   777.769   , ...,  -214.0651  ,
           -103.43343 ,  -325.82312 ]],

        [[  294.84213 ,    31.18045 ,   689.1354  , ...,   164.4776  ,
            970.17535 ,   620.5287  ],
         [  890.77203 ,  1098.5461  ,  1494.6394  , ...,  -872.33997 ,
            582.5858  ,   666.8412  ],
         [  338.22015 ,  -178.13338 ,  -100.40691 , ..., -2055.9155  ,
           -619.53796 ,   203.08528 ],
         ...,
         [ 2411.214   ,  2550.3499  ,   755.78845 , ...,   829.76904 ,
             10.432372,  -781.2953  ],
         [ 2250.5955  ,  2046.5138  ,  1259.5599  , ...,   425.08426 ,
           -373.548   , -1050.0748  ],
         [ 1464.2699  ,   826.3763  ,   777.769   , ...,  -214.0651  ,
           -103.43343 ,  -325.82312 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [7], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[  294.83994 ,    31.180277,   689.1349  , ...,   164.47948 ,
            970.1623  ,   620.51935 ],
         [  890.7779  ,  1098.5493  ,  1494.6326  , ...,  -872.34174 ,
            582.575   ,   666.83057 ],
         [  338.2167  ,  -178.13428 ,  -100.40514 , ..., -2055.9304  ,
           -619.55035 ,   203.08691 ],
         ...,
         [ 2411.2368  ,  2550.3826  ,   755.7792  , ...,   829.7691  ,
             10.431473,  -781.2993  ],
         [ 2250.6338  ,  2046.5579  ,  1259.5586  , ...,   425.08414 ,
           -373.54703 , -1050.083   ],
         [ 1464.275   ,   826.3591  ,   777.7567  , ...,  -214.06436 ,
           -103.43375 ,  -325.82022 ]],

        [[  294.83994 ,    31.180277,   689.1349  , ...,   164.47948 ,
            970.1623  ,   620.51935 ],
         [  890.7779  ,  1098.5493  ,  1494.6326  , ...,  -872.34174 ,
            582.575   ,   666.83057 ],
         [  338.2167  ,  -178.13428 ,  -100.40514 , ..., -2055.9304  ,
           -619.55035 ,   203.08691 ],
         ...,
         [ 2411.2368  ,  2550.3826  ,   755.7792  , ...,   829.7691  ,
             10.431473,  -781.2993  ],
         [ 2250.6338  ,  2046.5579  ,  1259.5586  , ...,   425.08414 ,
           -373.54703 , -1050.083   ],
         [ 1464.275   ,   826.3591  ,   777.7567  , ...,  -214.06436 ,
           -103.43375 ,  -325.82022 ]],

        [[  294.83994 ,    31.180277,   689.1349  , ...,   164.47948 ,
            970.1623  ,   620.51935 ],
         [  890.7779  ,  1098.5493  ,  1494.6326  , ...,  -872.34174 ,
            582.575   ,   666.83057 ],
         [  338.2167  ,  -178.13428 ,  -100.40514 , ..., -2055.9304  ,
           -619.55035 ,   203.08691 ],
         ...,
         [ 2411.2368  ,  2550.3826  ,   755.7792  , ...,   829.7691  ,
             10.431473,  -781.2993  ],
         [ 2250.6338  ,  2046.5579  ,  1259.5586  , ...,   425.08414 ,
           -373.54703 , -1050.083   ],
         [ 1464.275   ,   826.3591  ,   777.7567  , ...,  -214.06436 ,
           -103.43375 ,  -325.82022 ]],

        ...,

        [[  294.83994 ,    31.180277,   689.1349  , ...,   164.47948 ,
            970.1623  ,   620.51935 ],
         [  890.7779  ,  1098.5493  ,  1494.6326  , ...,  -872.34174 ,
            582.575   ,   666.83057 ],
         [  338.2167  ,  -178.13428 ,  -100.40514 , ..., -2055.9304  ,
           -619.55035 ,   203.08691 ],
         ...,
         [ 2411.2368  ,  2550.3826  ,   755.7792  , ...,   829.7691  ,
             10.431473,  -781.2993  ],
         [ 2250.6338  ,  2046.5579  ,  1259.5586  , ...,   425.08414 ,
           -373.54703 , -1050.083   ],
         [ 1464.275   ,   826.3591  ,   777.7567  , ...,  -214.06436 ,
           -103.43375 ,  -325.82022 ]],

        [[  294.83994 ,    31.180277,   689.1349  , ...,   164.47948 ,
            970.1623  ,   620.51935 ],
         [  890.7779  ,  1098.5493  ,  1494.6326  , ...,  -872.34174 ,
            582.575   ,   666.83057 ],
         [  338.2167  ,  -178.13428 ,  -100.40514 , ..., -2055.9304  ,
           -619.55035 ,   203.08691 ],
         ...,
         [ 2411.2368  ,  2550.3826  ,   755.7792  , ...,   829.7691  ,
             10.431473,  -781.2993  ],
         [ 2250.6338  ,  2046.5579  ,  1259.5586  , ...,   425.08414 ,
           -373.54703 , -1050.083   ],
         [ 1464.275   ,   826.3591  ,   777.7567  , ...,  -214.06436 ,
           -103.43375 ,  -325.82022 ]],

        [[  294.83994 ,    31.180277,   689.1349  , ...,   164.47948 ,
            970.1623  ,   620.51935 ],
         [  890.7779  ,  1098.5493  ,  1494.6326  , ...,  -872.34174 ,
            582.575   ,   666.83057 ],
         [  338.2167  ,  -178.13428 ,  -100.40514 , ..., -2055.9304  ,
           -619.55035 ,   203.08691 ],
         ...,
         [ 2411.2368  ,  2550.3826  ,   755.7792  , ...,   829.7691  ,
             10.431473,  -781.2993  ],
         [ 2250.6338  ,  2046.5579  ,  1259.5586  , ...,   425.08414 ,
           -373.54703 , -1050.083   ],
         [ 1464.275   ,   826.3591  ,   777.7567  , ...,  -214.06436 ,
           -103.43375 ,  -325.82022 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [7], 'to': []}

generate models:73

analyse the exceptions in iter:86
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]], grad_fn=<ConvolutionBackward0>)]}
Given groups=1, weight of size [64, 64, 1, 1], expected input[1, 256, 32, 32] to have 64 channels, but got 256 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  ...
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:76

analyse the exceptions in iter:87
torch exception:
{'id': 1, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[1.1179, 0.2512, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          [0.0494, 0.0000, 0.0000,  ..., 2.9525, 0.0000, 1.1679],
          [0.0000, 0.0000, 1.2982,  ..., 0.7806, 1.2526, 0.0000],
          ...,
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.2059],
          [0.6832, 0.0000, 0.4272,  ..., 0.0000, 0.7221, 0.0000],
          [0.0000, 0.8573, 0.0000,  ..., 2.2770, 0.0000, 0.0000]],

         [[0.6216, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.6624],
          [0.0000, 0.8997, 0.0000,  ..., 0.0000, 0.1244, 0.0000],
          [0.0000, 0.5609, 1.1093,  ..., 1.2098, 0.0000, 0.7352],
          ...,
          [1.8582, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 1.3345],
          [0.2434, 0.6561, 0.0000,  ..., 0.3232, 2.6361, 0.0000],
          [1.5235, 0.0000, 1.8716,  ..., 0.0000, 0.0000, 1.5703]],

         [[0.0000, 0.0000, 1.1227,  ..., 0.0000, 0.0000, 0.0000],
          [0.7241, 0.0000, 0.0000,  ..., 0.0000, 0.7009, 0.6061],
          [0.0244, 0.4311, 0.4069,  ..., 1.5320, 1.7511, 0.0139],
          ...,
          [2.3977, 1.6818, 0.0000,  ..., 0.0000, 0.0000, 1.6014],
          [0.0000, 0.0000, 0.4806,  ..., 0.0000, 1.4908, 0.0578],
          [0.0000, 0.0000, 1.1791,  ..., 0.0000, 0.3210, 0.0000]]]])]}
mat1 and mat2 shapes cannot be multiplied (96x32 and 100x100)
mindspore exception:
{'id': 1, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[1.11794353e+000, 2.51164436e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [4.93520796e-002, 0.00000000e+000, 0.00000000e+000 ... 2.95248652e+000, 0.00000000e+000, 1.16787803e+000],
   [0.00000000e+000, 0.00000000e+000, 1.29816735e+000 ... 7.80575335e-001, 1.25260556e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 2.05920160e-001],
   [6.83150649e-001, 0.00000000e+000, 4.27196622e-001 ... 0.00000000e+000, 7.22055554e-001, 0.00000000e+000],
   [0.00000000e+000, 8.57279837e-001, 0.00000000e+000 ... 2.27700830e+000, 0.00000000e+000, 0.00000000e+000]],
  [[6.21632397e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 6.62357092e-001],
   [0.00000000e+000, 8.99652898e-001, 0.00000000e+000 ... 0.00000000e+000, 1.24393255e-001, 0.00000000e+000],
   [0.00000000e+000, 5.60875773e-001, 1.10931420e+000 ... 1.20978653e+000, 0.00000000e+000, 7.35177577e-001],
   ...
   [1.85820961e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 1.33446014e+000],
   [2.43389025e-001, 6.56143486e-001, 0.00000000e+000 ... 3.23241681e-001, 2.63613224e+000, 0.00000000e+000],
   [1.52347708e+000, 0.00000000e+000, 1.87163293e+000 ... 0.00000000e+000, 0.00000000e+000, 1.57026410e+000]],
  [[0.00000000e+000, 0.00000000e+000, 1.12272167e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [7.24073052e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 7.00938582e-001, 6.06098115e-001],
   [2.43641939e-002, 4.31097299e-001, 4.06920642e-001 ... 1.53202903e+000, 1.75105262e+000, 1.39216231e-002],
   ...
   [2.39768648e+000, 1.68178523e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 1.60139322e+000],
   [0.00000000e+000, 0.00000000e+000, 4.80572909e-001 ... 0.00000000e+000, 1.49082160e+000, 5.78152016e-002],
   [0.00000000e+000, 0.00000000e+000, 1.17910051e+000 ... 0.00000000e+000, 3.21024984e-001, 0.00000000e+000]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 100. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:77

analyse the exceptions in iter:98
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.0000, 0.2546, 0.2050,  ..., 0.0000, 0.0000, 1.0793],
          [1.3998, 0.0072, 0.1612,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.1218, 0.2359],
          ...,
          [0.0000, 0.0000, 1.0812,  ..., 0.2170, 0.1279, 0.0000],
          [0.2814, 0.0000, 0.0000,  ..., 0.0000, 0.4068, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.3864]],

         [[0.0000, 0.0000, 1.3996,  ..., 0.0000, 0.0000, 0.0000],
          [0.9212, 0.0000, 0.0000,  ..., 0.2875, 0.0000, 0.0000],
          [1.4719, 0.0674, 0.0423,  ..., 0.0000, 0.8228, 0.0000],
          ...,
          [0.1231, 0.5736, 1.4905,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.3849,  ..., 0.8068, 0.4723, 0.0000],
          [1.0109, 1.6066, 1.7867,  ..., 0.0000, 0.0000, 0.6971]],

         [[0.0000, 1.0952, 0.0000,  ..., 0.9426, 0.0000, 0.0000],
          [1.3385, 1.7473, 0.0000,  ..., 0.3373, 0.0000, 0.9269],
          [1.1862, 0.0000, 0.0665,  ..., 0.0000, 0.0000, 0.2789],
          ...,
          [0.0000, 0.0000, 0.0000,  ..., 0.6419, 0.8949, 0.9597],
          [0.0000, 0.0000, 0.7034,  ..., 0.0000, 0.2696, 0.8905],
          [0.5080, 0.0000, 0.4842,  ..., 0.4630, 0.6988, 0.3491]]]])]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 2.54567772e-001, 2.05014944e-001 ... 0.00000000e+000, 0.00000000e+000, 1.07934344e+000],
   [1.39980114e+000, 7.21254246e-003, 1.61237746e-001 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.21752806e-001, 2.35911578e-001],
   ...
   [0.00000000e+000, 0.00000000e+000, 1.08124173e+000 ... 2.16964737e-001, 1.27908498e-001, 0.00000000e+000],
   [2.81377822e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 4.06788081e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 3.86407137e-001]],
  [[0.00000000e+000, 0.00000000e+000, 1.39958286e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [9.21155095e-001, 0.00000000e+000, 0.00000000e+000 ... 2.87467450e-001, 0.00000000e+000, 0.00000000e+000],
   [1.47186625e+000, 6.74209446e-002, 4.22872566e-002 ... 0.00000000e+000, 8.22787642e-001, 0.00000000e+000],
   ...
   [1.23052619e-001, 5.73572457e-001, 1.49048436e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 3.84929538e-001 ... 8.06795478e-001, 4.72342670e-001, 0.00000000e+000],
   [1.01088667e+000, 1.60660172e+000, 1.78673446e+000 ... 0.00000000e+000, 0.00000000e+000, 6.97083652e-001]],
  [[0.00000000e+000, 1.09516835e+000, 0.00000000e+000 ... 9.42579031e-001, 0.00000000e+000, 0.00000000e+000],
   [1.33854699e+000, 1.74732435e+000, 0.00000000e+000 ... 3.37256759e-001, 0.00000000e+000, 9.26914036e-001],
   [1.18617129e+000, 0.00000000e+000, 6.65306598e-002 ... 0.00000000e+000, 0.00000000e+000, 2.78881818e-001],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 6.41934752e-001, 8.94861400e-001, 9.59713161e-001],
   [0.00000000e+000, 0.00000000e+000, 7.03431189e-001 ... 0.00000000e+000, 2.69555718e-001, 8.90523970e-001],
   [5.07971048e-001, 0.00000000e+000, 4.84214902e-001 ... 4.63003039e-001, 6.98810637e-001, 3.49076480e-001]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:87

final statics:
total operators:28
tensorflow --> nums:14,distinct_bugs:5
mindspore --> nums:15,distinct_bugs:3
torch --> nums:15,distinct_bugs:4
tensorflow --> 
conv2d:4
linear:5
log:2
add:1
cos:2
mindspore --> 
conv2d:10
log:3
linear:2
torch --> 
conv2d:10
maxpool2d:1
log:2
linear:2

generate models:88

analyse output arrays in iter:104

pre layer res:
10:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[ 1.4283245 ,  0.7963796 , -0.295008  , ...,  0.20894766,
          -1.3432282 ,  0.9974204 ],
         [ 3.896171  , -2.8067207 , -1.7194437 , ...,  0.7580006 ,
          -1.9603077 , -1.829236  ],
         [-1.9823563 , -0.7734194 , -1.1098983 , ..., -0.6721126 ,
          -2.132063  ,  0.5293674 ],
         ...,
         [ 2.4272554 , -1.8636742 ,  0.21720266, ..., -0.28581578,
          -1.8184297 , -0.15536748],
         [-3.8308854 ,  2.4294915 ,  0.5446373 , ..., -1.1540211 ,
           1.1559033 , -2.2375305 ],
         [-1.7844622 ,  1.7857718 , -0.38078335, ...,  0.9819007 ,
          -3.3980508 , -0.642899  ]],

        [[ 1.4283245 ,  0.7963796 , -0.295008  , ...,  0.20894766,
          -1.3432282 ,  0.9974204 ],
         [ 3.896171  , -2.8067207 , -1.7194437 , ...,  0.7580006 ,
          -1.9603077 , -1.829236  ],
         [-1.9823563 , -0.7734194 , -1.1098983 , ..., -0.6721126 ,
          -2.132063  ,  0.5293674 ],
         ...,
         [ 2.4272554 , -1.8636742 ,  0.21720266, ..., -0.28581578,
          -1.8184297 , -0.15536748],
         [-3.8308854 ,  2.4294915 ,  0.5446373 , ..., -1.1540211 ,
           1.1559033 , -2.2375305 ],
         [-1.7844622 ,  1.7857718 , -0.38078335, ...,  0.9819007 ,
          -3.3980508 , -0.642899  ]],

        [[ 1.4283245 ,  0.7963796 , -0.295008  , ...,  0.20894766,
          -1.3432282 ,  0.9974204 ],
         [ 3.896171  , -2.8067207 , -1.7194437 , ...,  0.7580006 ,
          -1.9603077 , -1.829236  ],
         [-1.9823563 , -0.7734194 , -1.1098983 , ..., -0.6721126 ,
          -2.132063  ,  0.5293674 ],
         ...,
         [ 2.4272554 , -1.8636742 ,  0.21720266, ..., -0.28581578,
          -1.8184297 , -0.15536748],
         [-3.8308854 ,  2.4294915 ,  0.5446373 , ..., -1.1540211 ,
           1.1559033 , -2.2375305 ],
         [-1.7844622 ,  1.7857718 , -0.38078335, ...,  0.9819007 ,
          -3.3980508 , -0.642899  ]],

        ...,

        [[ 1.4283245 ,  0.7963796 , -0.295008  , ...,  0.20894766,
          -1.3432282 ,  0.9974204 ],
         [ 3.896171  , -2.8067207 , -1.7194437 , ...,  0.7580006 ,
          -1.9603077 , -1.829236  ],
         [-1.9823563 , -0.7734194 , -1.1098983 , ..., -0.6721126 ,
          -2.132063  ,  0.5293674 ],
         ...,
         [ 2.4272554 , -1.8636742 ,  0.21720266, ..., -0.28581578,
          -1.8184297 , -0.15536748],
         [-3.8308854 ,  2.4294915 ,  0.5446373 , ..., -1.1540211 ,
           1.1559033 , -2.2375305 ],
         [-1.7844622 ,  1.7857718 , -0.38078335, ...,  0.9819007 ,
          -3.3980508 , -0.642899  ]],

        [[ 1.4283245 ,  0.7963796 , -0.295008  , ...,  0.20894766,
          -1.3432282 ,  0.9974204 ],
         [ 3.896171  , -2.8067207 , -1.7194437 , ...,  0.7580006 ,
          -1.9603077 , -1.829236  ],
         [-1.9823563 , -0.7734194 , -1.1098983 , ..., -0.6721126 ,
          -2.132063  ,  0.5293674 ],
         ...,
         [ 2.4272554 , -1.8636742 ,  0.21720266, ..., -0.28581578,
          -1.8184297 , -0.15536748],
         [-3.8308854 ,  2.4294915 ,  0.5446373 , ..., -1.1540211 ,
           1.1559033 , -2.2375305 ],
         [-1.7844622 ,  1.7857718 , -0.38078335, ...,  0.9819007 ,
          -3.3980508 , -0.642899  ]],

        [[ 1.4283245 ,  0.7963796 , -0.295008  , ...,  0.20894766,
          -1.3432282 ,  0.9974204 ],
         [ 3.896171  , -2.8067207 , -1.7194437 , ...,  0.7580006 ,
          -1.9603077 , -1.829236  ],
         [-1.9823563 , -0.7734194 , -1.1098983 , ..., -0.6721126 ,
          -2.132063  ,  0.5293674 ],
         ...,
         [ 2.4272554 , -1.8636742 ,  0.21720266, ..., -0.28581578,
          -1.8184297 , -0.15536748],
         [-3.8308854 ,  2.4294915 ,  0.5446373 , ..., -1.1540211 ,
           1.1559033 , -2.2375305 ],
         [-1.7844622 ,  1.7857718 , -0.38078335, ...,  0.9819007 ,
          -3.3980508 , -0.642899  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 32, 32]), 'from': [11], 'to': [1]}
tf node:
{'name': 'linear', 'output': array([[[[ 1.159584  ,  1.159584  ,  1.159584  , ...,  1.159584  ,
           1.159584  ,  1.159584  ],
         [-4.91687   , -4.91687   , -4.91687   , ..., -4.91687   ,
          -4.91687   , -4.91687   ],
         [-0.77508545, -0.77508545, -0.77508545, ..., -0.77508545,
          -0.77508545, -0.77508545],
         ...,
         [-2.6174316 , -2.6174316 , -2.6174316 , ..., -2.6174316 ,
          -2.6174316 , -2.6174316 ],
         [ 0.26037598,  0.26037598,  0.26037598, ...,  0.26037598,
           0.26037598,  0.26037598],
         [-2.8223877 , -2.8223877 , -2.8223877 , ..., -2.8223877 ,
          -2.8223877 , -2.8223877 ]],

        [[ 1.159584  ,  1.159584  ,  1.159584  , ...,  1.159584  ,
           1.159584  ,  1.159584  ],
         [-4.91687   , -4.91687   , -4.91687   , ..., -4.91687   ,
          -4.91687   , -4.91687   ],
         [-0.77508545, -0.77508545, -0.77508545, ..., -0.77508545,
          -0.77508545, -0.77508545],
         ...,
         [-2.6174316 , -2.6174316 , -2.6174316 , ..., -2.6174316 ,
          -2.6174316 , -2.6174316 ],
         [ 0.26037598,  0.26037598,  0.26037598, ...,  0.26037598,
           0.26037598,  0.26037598],
         [-2.8223877 , -2.8223877 , -2.8223877 , ..., -2.8223877 ,
          -2.8223877 , -2.8223877 ]],

        [[ 1.159584  ,  1.159584  ,  1.159584  , ...,  1.159584  ,
           1.159584  ,  1.159584  ],
         [-4.91687   , -4.91687   , -4.91687   , ..., -4.91687   ,
          -4.91687   , -4.91687   ],
         [-0.77508545, -0.77508545, -0.77508545, ..., -0.77508545,
          -0.77508545, -0.77508545],
         ...,
         [-2.6174316 , -2.6174316 , -2.6174316 , ..., -2.6174316 ,
          -2.6174316 , -2.6174316 ],
         [ 0.26037598,  0.26037598,  0.26037598, ...,  0.26037598,
           0.26037598,  0.26037598],
         [-2.8223877 , -2.8223877 , -2.8223877 , ..., -2.8223877 ,
          -2.8223877 , -2.8223877 ]],

        ...,

        [[ 1.159584  ,  1.159584  ,  1.159584  , ...,  1.159584  ,
           1.159584  ,  1.159584  ],
         [-4.91687   , -4.91687   , -4.91687   , ..., -4.91687   ,
          -4.91687   , -4.91687   ],
         [-0.77508545, -0.77508545, -0.77508545, ..., -0.77508545,
          -0.77508545, -0.77508545],
         ...,
         [-2.6174316 , -2.6174316 , -2.6174316 , ..., -2.6174316 ,
          -2.6174316 , -2.6174316 ],
         [ 0.26037598,  0.26037598,  0.26037598, ...,  0.26037598,
           0.26037598,  0.26037598],
         [-2.8223877 , -2.8223877 , -2.8223877 , ..., -2.8223877 ,
          -2.8223877 , -2.8223877 ]],

        [[ 1.159584  ,  1.159584  ,  1.159584  , ...,  1.159584  ,
           1.159584  ,  1.159584  ],
         [-4.91687   , -4.91687   , -4.91687   , ..., -4.91687   ,
          -4.91687   , -4.91687   ],
         [-0.77508545, -0.77508545, -0.77508545, ..., -0.77508545,
          -0.77508545, -0.77508545],
         ...,
         [-2.6174316 , -2.6174316 , -2.6174316 , ..., -2.6174316 ,
          -2.6174316 , -2.6174316 ],
         [ 0.26037598,  0.26037598,  0.26037598, ...,  0.26037598,
           0.26037598,  0.26037598],
         [-2.8223877 , -2.8223877 , -2.8223877 , ..., -2.8223877 ,
          -2.8223877 , -2.8223877 ]],

        [[ 1.159584  ,  1.159584  ,  1.159584  , ...,  1.159584  ,
           1.159584  ,  1.159584  ],
         [-4.91687   , -4.91687   , -4.91687   , ..., -4.91687   ,
          -4.91687   , -4.91687   ],
         [-0.77508545, -0.77508545, -0.77508545, ..., -0.77508545,
          -0.77508545, -0.77508545],
         ...,
         [-2.6174316 , -2.6174316 , -2.6174316 , ..., -2.6174316 ,
          -2.6174316 , -2.6174316 ],
         [ 0.26037598,  0.26037598,  0.26037598, ...,  0.26037598,
           0.26037598,  0.26037598],
         [-2.8223877 , -2.8223877 , -2.8223877 , ..., -2.8223877 ,
          -2.8223877 , -2.8223877 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 32, 100]), 'from': [10], 'to': [2]}
ms node:
{'name': 'linear', 'output': array([[[[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        ...,

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218622 , -2.8218622 , -2.8218622 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]]]], dtype=float32), 'output_shape': (1, 128, 32, 100), 'from': [10], 'to': [2]}
torch node:
{'name': 'linear', 'output': array([[[[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        ...,

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]],

        [[ 1.1568873 ,  1.1568873 ,  1.1568873 , ...,  1.1568875 ,
           1.1568875 ,  1.1568875 ],
         [-4.9169726 , -4.9169726 , -4.9169726 , ..., -4.916973  ,
          -4.916973  , -4.916973  ],
         [-0.7736191 , -0.7736191 , -0.7736191 , ..., -0.7736187 ,
          -0.7736187 , -0.7736187 ],
         ...,
         [-2.6201737 , -2.6201737 , -2.6201737 , ..., -2.6201744 ,
          -2.6201744 , -2.6201744 ],
         [ 0.26119685,  0.26119685,  0.26119685, ...,  0.26119685,
           0.26119685,  0.26119685],
         [-2.8218617 , -2.8218617 , -2.8218617 , ..., -2.8218622 ,
          -2.8218622 , -2.8218622 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 32, 100]), 'from': [10], 'to': [2]}

generate models:92

analyse output arrays in iter:105

pre layer res:
8:add
{'name': 'add', 'output': array([[[[ 0.9999984 ,  0.9998328 ,  0.13726276, ...,  0.999859  ,
           0.9966832 , -0.8891446 ],
         [-0.9999989 , -0.9999936 , -0.9998848 , ...,  0.9931378 ,
           0.9969076 ,  0.9999453 ],
         [ 0.9977395 ,  0.89299774, -0.99680775, ..., -0.99784976,
           0.99999505,  0.99997026],
         ...,
         [ 0.8041946 ,  0.992628  , -0.4798087 , ...,  0.9986856 ,
           0.99999964,  0.998594  ],
         [ 0.9999404 ,  0.9999987 ,  0.9999947 , ..., -0.60774225,
           0.96336406, -0.9947006 ],
         [-0.98870164, -0.99907756,  0.98543924, ..., -0.99787605,
           0.94870156,  0.98126155]],

        [[-0.99986404, -0.9999281 , -0.99996513, ..., -0.30200863,
          -0.87329775,  0.99991655],
         [ 0.9736196 ,  0.99999917,  1.        , ...,  0.9925727 ,
           0.9999868 ,  0.99929535],
         [-0.99467564, -0.99995434,  0.1787936 , ...,  0.92978346,
          -0.46831834, -0.999343  ],
         ...,
         [ 0.14485179, -0.99960536, -0.999015  , ..., -0.9739249 ,
          -0.7188955 , -0.86487037],
         [-0.9520531 ,  0.9462361 ,  0.99871445, ...,  0.99990946,
           1.        ,  0.992513  ],
         [-0.9096104 , -0.99999535,  0.11604343, ..., -0.9982736 ,
          -0.9935965 , -0.9997154 ]],

        [[-0.9673471 ,  0.03690211, -0.64491093, ..., -0.7704558 ,
          -0.98578364, -0.999649  ],
         [-0.93553615,  0.9893698 ,  0.99920136, ..., -0.9999922 ,
          -0.73295283,  0.9971366 ],
         [ 1.        ,  0.9908892 , -0.71581745, ..., -1.        ,
          -0.99999964,  0.99999815],
         ...,
         [-0.99999833, -0.99884766, -0.9906522 , ...,  0.9985398 ,
           0.8716283 , -0.99928725],
         [-0.9704872 ,  0.9932078 ,  1.        , ...,  0.9786252 ,
           0.9864696 , -0.9987685 ],
         [-0.7573686 , -0.99959826, -0.7934925 , ...,  0.9996947 ,
           0.77316266, -0.97361094]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 100]), 'from': [3, 11], 'to': [4]}
tf node:
{'name': 'conv2d', 'output': array([[[[  38.384277 ,    4.3384094,  -59.430176 , ...,   -7.428711 ,
            14.647949 ,  -54.043457 ],
         [ -49.200684 ,   32.157227 ,   67.987305 , ...,    2.7963867,
            47.71338  ,   29.386658 ],
         [  37.20996  ,   32.286133 , -118.26648  , ...,  -22.712402 ,
           -69.92578  ,  -37.353027 ],
         ...,
         [ -15.229126 ,  -40.546875 ,  -88.98682  , ...,   13.220215 ,
            -5.121582 ,   22.580322 ],
         [   3.1103516,   82.40234  ,   11.592285 , ...,   48.81201  ,
            59.976074 ,  -80.48291  ],
         [-129.9043   ,  -57.512085 ,   56.612854 , ...,   36.78662  ,
            60.291016 ,   -1.2651367]],

        [[  38.384277 ,    4.3384094,  -59.430176 , ...,   -7.428711 ,
            14.647949 ,  -54.043457 ],
         [ -49.200684 ,   32.157227 ,   67.987305 , ...,    2.7963867,
            47.71338  ,   29.386658 ],
         [  37.20996  ,   32.286133 , -118.26648  , ...,  -22.712402 ,
           -69.92578  ,  -37.353027 ],
         ...,
         [ -15.229126 ,  -40.546875 ,  -88.98682  , ...,   13.220215 ,
            -5.121582 ,   22.580322 ],
         [   3.1103516,   82.40234  ,   11.592285 , ...,   48.81201  ,
            59.976074 ,  -80.48291  ],
         [-129.9043   ,  -57.512085 ,   56.612854 , ...,   36.78662  ,
            60.291016 ,   -1.2651367]],

        [[  38.384277 ,    4.3384094,  -59.430176 , ...,   -7.428711 ,
            14.647949 ,  -54.043457 ],
         [ -49.200684 ,   32.157227 ,   67.987305 , ...,    2.7963867,
            47.71338  ,   29.386658 ],
         [  37.20996  ,   32.286133 , -118.26648  , ...,  -22.712402 ,
           -69.92578  ,  -37.353027 ],
         ...,
         [ -15.229126 ,  -40.546875 ,  -88.98682  , ...,   13.220215 ,
            -5.121582 ,   22.580322 ],
         [   3.1103516,   82.40234  ,   11.592285 , ...,   48.81201  ,
            59.976074 ,  -80.48291  ],
         [-129.9043   ,  -57.512085 ,   56.612854 , ...,   36.78662  ,
            60.291016 ,   -1.2651367]],

        ...,

        [[  38.384277 ,    4.3384094,  -59.430176 , ...,   -7.428711 ,
            14.647949 ,  -54.043457 ],
         [ -49.200684 ,   32.157227 ,   67.987305 , ...,    2.7963867,
            47.71338  ,   29.386658 ],
         [  37.20996  ,   32.286133 , -118.26648  , ...,  -22.712402 ,
           -69.92578  ,  -37.353027 ],
         ...,
         [ -15.229126 ,  -40.546875 ,  -88.98682  , ...,   13.220215 ,
            -5.121582 ,   22.580322 ],
         [   3.1103516,   82.40234  ,   11.592285 , ...,   48.81201  ,
            59.976074 ,  -80.48291  ],
         [-129.9043   ,  -57.512085 ,   56.612854 , ...,   36.78662  ,
            60.291016 ,   -1.2651367]],

        [[  38.384277 ,    4.3384094,  -59.430176 , ...,   -7.428711 ,
            14.647949 ,  -54.043457 ],
         [ -49.200684 ,   32.157227 ,   67.987305 , ...,    2.7963867,
            47.71338  ,   29.386658 ],
         [  37.20996  ,   32.286133 , -118.26648  , ...,  -22.712402 ,
           -69.92578  ,  -37.353027 ],
         ...,
         [ -15.229126 ,  -40.546875 ,  -88.98682  , ...,   13.220215 ,
            -5.121582 ,   22.580322 ],
         [   3.1103516,   82.40234  ,   11.592285 , ...,   48.81201  ,
            59.976074 ,  -80.48291  ],
         [-129.9043   ,  -57.512085 ,   56.612854 , ...,   36.78662  ,
            60.291016 ,   -1.2651367]],

        [[  38.384277 ,    4.3384094,  -59.430176 , ...,   -7.428711 ,
            14.647949 ,  -54.043457 ],
         [ -49.200684 ,   32.157227 ,   67.987305 , ...,    2.7963867,
            47.71338  ,   29.386658 ],
         [  37.20996  ,   32.286133 , -118.26648  , ...,  -22.712402 ,
           -69.92578  ,  -37.353027 ],
         ...,
         [ -15.229126 ,  -40.546875 ,  -88.98682  , ...,   13.220215 ,
            -5.121582 ,   22.580322 ],
         [   3.1103516,   82.40234  ,   11.592285 , ...,   48.81201  ,
            59.976074 ,  -80.48291  ],
         [-129.9043   ,  -57.512085 ,   56.612854 , ...,   36.78662  ,
            60.291016 ,   -1.2651367]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 100]), 'from': [8], 'to': [14]}
ms node:
{'name': 'conv2d', 'output': array([[[[  38.38371  ,    4.337854 ,  -59.425037 , ...,   -7.4333606,
            14.657411 ,  -54.04161  ],
         [ -49.20144  ,   32.165733 ,   68.00119  , ...,    2.7871642,
            47.713856 ,   29.386778 ],
         [  37.214756 ,   32.286995 , -118.26738  , ...,  -22.706434 ,
           -69.92427  ,  -37.34974  ],
         ...,
         [ -15.230782 ,  -40.550056 ,  -88.98394  , ...,   13.218802 ,
            -5.1142764,   22.585644 ],
         [   3.1254416,   82.408295 ,   11.600164 , ...,   48.81345  ,
            59.982384 ,  -80.495636 ],
         [-129.90129  ,  -57.512516 ,   56.619545 , ...,   36.79916  ,
            60.28756  ,   -1.2750726]],

        [[  38.38371  ,    4.337854 ,  -59.425037 , ...,   -7.4333606,
            14.657411 ,  -54.04161  ],
         [ -49.20144  ,   32.165733 ,   68.00119  , ...,    2.7871642,
            47.713856 ,   29.386778 ],
         [  37.214756 ,   32.286995 , -118.26738  , ...,  -22.706434 ,
           -69.92427  ,  -37.34974  ],
         ...,
         [ -15.230782 ,  -40.550056 ,  -88.98394  , ...,   13.218802 ,
            -5.1142764,   22.585644 ],
         [   3.1254416,   82.408295 ,   11.600164 , ...,   48.81345  ,
            59.982384 ,  -80.495636 ],
         [-129.90129  ,  -57.512516 ,   56.619545 , ...,   36.79916  ,
            60.28756  ,   -1.2750726]],

        [[  38.38371  ,    4.337854 ,  -59.425037 , ...,   -7.4333606,
            14.657411 ,  -54.04161  ],
         [ -49.20144  ,   32.165733 ,   68.00119  , ...,    2.7871642,
            47.713856 ,   29.386778 ],
         [  37.214756 ,   32.286995 , -118.26738  , ...,  -22.706434 ,
           -69.92427  ,  -37.34974  ],
         ...,
         [ -15.230782 ,  -40.550056 ,  -88.98394  , ...,   13.218802 ,
            -5.1142764,   22.585644 ],
         [   3.1254416,   82.408295 ,   11.600164 , ...,   48.81345  ,
            59.982384 ,  -80.495636 ],
         [-129.90129  ,  -57.512516 ,   56.619545 , ...,   36.79916  ,
            60.28756  ,   -1.2750726]],

        ...,

        [[  38.38371  ,    4.337854 ,  -59.425037 , ...,   -7.4333606,
            14.657411 ,  -54.04161  ],
         [ -49.20144  ,   32.165733 ,   68.00119  , ...,    2.7871642,
            47.713856 ,   29.386778 ],
         [  37.214756 ,   32.286995 , -118.26738  , ...,  -22.706434 ,
           -69.92427  ,  -37.34974  ],
         ...,
         [ -15.230782 ,  -40.550056 ,  -88.98394  , ...,   13.218802 ,
            -5.1142764,   22.585644 ],
         [   3.1254416,   82.408295 ,   11.600164 , ...,   48.81345  ,
            59.982384 ,  -80.495636 ],
         [-129.90129  ,  -57.512516 ,   56.619545 , ...,   36.79916  ,
            60.28756  ,   -1.2750726]],

        [[  38.38371  ,    4.337854 ,  -59.425037 , ...,   -7.4333606,
            14.657411 ,  -54.04161  ],
         [ -49.20144  ,   32.165733 ,   68.00119  , ...,    2.7871642,
            47.713856 ,   29.386778 ],
         [  37.214756 ,   32.286995 , -118.26738  , ...,  -22.706434 ,
           -69.92427  ,  -37.34974  ],
         ...,
         [ -15.230782 ,  -40.550056 ,  -88.98394  , ...,   13.218802 ,
            -5.1142764,   22.585644 ],
         [   3.1254416,   82.408295 ,   11.600164 , ...,   48.81345  ,
            59.982384 ,  -80.495636 ],
         [-129.90129  ,  -57.512516 ,   56.619545 , ...,   36.79916  ,
            60.28756  ,   -1.2750726]],

        [[  38.38371  ,    4.337854 ,  -59.425037 , ...,   -7.4333606,
            14.657411 ,  -54.04161  ],
         [ -49.20144  ,   32.165733 ,   68.00119  , ...,    2.7871642,
            47.713856 ,   29.386778 ],
         [  37.214756 ,   32.286995 , -118.26738  , ...,  -22.706434 ,
           -69.92427  ,  -37.34974  ],
         ...,
         [ -15.230782 ,  -40.550056 ,  -88.98394  , ...,   13.218802 ,
            -5.1142764,   22.585644 ],
         [   3.1254416,   82.408295 ,   11.600164 , ...,   48.81345  ,
            59.982384 ,  -80.495636 ],
         [-129.90129  ,  -57.512516 ,   56.619545 , ...,   36.79916  ,
            60.28756  ,   -1.2750726]]]], dtype=float32), 'output_shape': (1, 256, 32, 100), 'from': [8], 'to': [14]}
torch node:
{'name': 'conv2d', 'output': array([[[[  38.383675 ,    4.3378577,  -59.42504  , ...,   -7.433364 ,
            14.657412 ,  -54.041615 ],
         [ -49.20143  ,   32.165733 ,   68.001205 , ...,    2.7871642,
            47.713852 ,   29.38676  ],
         [  37.214764 ,   32.286995 , -118.267334 , ...,  -22.706432 ,
           -69.92427  ,  -37.349735 ],
         ...,
         [ -15.230786 ,  -40.55004  ,  -88.98394  , ...,   13.2188   ,
            -5.114276 ,   22.585634 ],
         [   3.1254394,   82.4083   ,   11.600165 , ...,   48.813457 ,
            59.982388 ,  -80.49564  ],
         [-129.9013   ,  -57.51251  ,   56.61954  , ...,   36.79917  ,
            60.287567 ,   -1.2750726]],

        [[  38.383675 ,    4.3378577,  -59.42504  , ...,   -7.433364 ,
            14.657412 ,  -54.041615 ],
         [ -49.20143  ,   32.165733 ,   68.001205 , ...,    2.7871642,
            47.713852 ,   29.38676  ],
         [  37.214764 ,   32.286995 , -118.267334 , ...,  -22.706432 ,
           -69.92427  ,  -37.349735 ],
         ...,
         [ -15.230786 ,  -40.55004  ,  -88.98394  , ...,   13.2188   ,
            -5.114276 ,   22.585634 ],
         [   3.1254394,   82.4083   ,   11.600165 , ...,   48.813457 ,
            59.982388 ,  -80.49564  ],
         [-129.9013   ,  -57.51251  ,   56.61954  , ...,   36.79917  ,
            60.287567 ,   -1.2750726]],

        [[  38.383675 ,    4.3378577,  -59.42504  , ...,   -7.433364 ,
            14.657412 ,  -54.041615 ],
         [ -49.20143  ,   32.165733 ,   68.001205 , ...,    2.7871642,
            47.713852 ,   29.38676  ],
         [  37.214764 ,   32.286995 , -118.267334 , ...,  -22.706432 ,
           -69.92427  ,  -37.349735 ],
         ...,
         [ -15.230786 ,  -40.55004  ,  -88.98394  , ...,   13.2188   ,
            -5.114276 ,   22.585634 ],
         [   3.1254394,   82.4083   ,   11.600165 , ...,   48.813457 ,
            59.982388 ,  -80.49564  ],
         [-129.9013   ,  -57.51251  ,   56.61954  , ...,   36.79917  ,
            60.287567 ,   -1.2750726]],

        ...,

        [[  38.383675 ,    4.3378577,  -59.42504  , ...,   -7.433364 ,
            14.657412 ,  -54.041615 ],
         [ -49.20143  ,   32.165733 ,   68.001205 , ...,    2.7871642,
            47.713852 ,   29.38676  ],
         [  37.214764 ,   32.286995 , -118.267334 , ...,  -22.706432 ,
           -69.92427  ,  -37.349735 ],
         ...,
         [ -15.230786 ,  -40.55004  ,  -88.98394  , ...,   13.2188   ,
            -5.114276 ,   22.585634 ],
         [   3.1254394,   82.4083   ,   11.600165 , ...,   48.813457 ,
            59.982388 ,  -80.49564  ],
         [-129.9013   ,  -57.51251  ,   56.61954  , ...,   36.79917  ,
            60.287567 ,   -1.2750726]],

        [[  38.383675 ,    4.3378577,  -59.42504  , ...,   -7.433364 ,
            14.657412 ,  -54.041615 ],
         [ -49.20143  ,   32.165733 ,   68.001205 , ...,    2.7871642,
            47.713852 ,   29.38676  ],
         [  37.214764 ,   32.286995 , -118.267334 , ...,  -22.706432 ,
           -69.92427  ,  -37.349735 ],
         ...,
         [ -15.230786 ,  -40.55004  ,  -88.98394  , ...,   13.2188   ,
            -5.114276 ,   22.585634 ],
         [   3.1254394,   82.4083   ,   11.600165 , ...,   48.813457 ,
            59.982388 ,  -80.49564  ],
         [-129.9013   ,  -57.51251  ,   56.61954  , ...,   36.79917  ,
            60.287567 ,   -1.2750726]],

        [[  38.383675 ,    4.3378577,  -59.42504  , ...,   -7.433364 ,
            14.657412 ,  -54.041615 ],
         [ -49.20143  ,   32.165733 ,   68.001205 , ...,    2.7871642,
            47.713852 ,   29.38676  ],
         [  37.214764 ,   32.286995 , -118.267334 , ...,  -22.706432 ,
           -69.92427  ,  -37.349735 ],
         ...,
         [ -15.230786 ,  -40.55004  ,  -88.98394  , ...,   13.2188   ,
            -5.114276 ,   22.585634 ],
         [   3.1254394,   82.4083   ,   11.600165 , ...,   48.813457 ,
            59.982388 ,  -80.49564  ],
         [-129.9013   ,  -57.51251  ,   56.61954  , ...,   36.79917  ,
            60.287567 ,   -1.2750726]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 100]), 'from': [8], 'to': [14]}

generate models:93

analyse output arrays in iter:107

pre layer res:
16:add
{'name': 'add', 'output': array([[[[     -inf,      -inf],
         [     -inf,      -inf]],

        [[ 8.847647,      -inf],
         [16.392359,      -inf]],

        [[     -inf,      -inf],
         [11.250208,      -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 2, 2]), 'from': [5, 19], 'to': [14]}
tf node:
{'name': 'sin', 'output': array([[[[       nan,        nan],
         [       nan,        nan]],

        [[ 0.5456221,        nan],
         [-0.6322048,        nan]],

        [[       nan,        nan],
         [-0.9677557,        nan]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 2, 2]), 'from': [16], 'to': [6]}
ms node:
{'name': 'sin', 'output': array([[[[        nan,         nan],
         [        nan,         nan]],

        [[ 0.54561967,         nan],
         [-0.6322033 ,         nan]],

        [[        nan,         nan],
         [-0.9677564 ,         nan]]]], dtype=float32), 'output_shape': (1, 3, 2, 2), 'from': [16], 'to': [6]}
torch node:
{'name': 'sin', 'output': array([[[[       nan,        nan],
         [       nan,        nan]],

        [[ 0.5456221,        nan],
         [-0.6322048,        nan]],

        [[       nan,        nan],
         [-0.9677557,        nan]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 2, 2]), 'from': [16], 'to': [6]}

pre layer res:
17:flatten
{'name': 'flatten', 'output': array([[0.       , 0.       , 0.       , ..., 2.133512 , 1.1675457,
        0.       ]], dtype=float32), 'output_shape': TensorShape([1, 3072]), 'from': [0], 'to': [24]}
tf node:
{'name': 'log', 'output': array([[      -inf,       -inf,       -inf, ..., 0.75776947, 0.15490383,
              -inf]], dtype=float32), 'output_shape': TensorShape([1, 3072]), 'from': [17], 'to': [20]}
ms node:
{'name': 'log', 'output': array([[      -inf,       -inf,       -inf, ..., 0.75776654, 0.15490235,
              -inf]], dtype=float32), 'output_shape': (1, 3072), 'from': [17], 'to': [20]}
torch node:
{'name': 'log', 'output': array([[      -inf,       -inf,       -inf, ..., 0.75776947, 0.15490383,
              -inf]], dtype=float32), 'output_shape': torch.Size([1, 3072]), 'from': [17], 'to': [20]}

generate models:95

analyse the exceptions in iter:113
torch exception:
{'id': 0, 'name': 'linear', 'frame_work': 'torch', 'input_datas': tensor([[[[[-0.2244,  0.9178,  0.7749,  ...,  0.5059, -0.8622, -1.2170],
           [-1.5040, -0.7380, -1.0003,  ...,  1.8242,  0.7274,  1.3046],
           [ 0.1557,  1.0011,  1.1868,  ...,  0.7435,  0.2568, -0.4800],
           ...,
           [ 0.4100,  0.5954,  1.5973,  ...,  0.4192,  0.0337, -0.7481],
           [-0.5061,  0.4595, -0.3169,  ...,  2.5035,  0.2093, -0.3435],
           [-0.7852,  1.1998, -1.1574,  ..., -1.3968, -0.9617, -0.9830]],

          [[ 0.6297, -0.8150,  0.8033,  ...,  0.7281,  1.6808, -1.1740],
           [ 0.8585, -0.7301,  0.1826,  ..., -0.1670, -2.4586, -0.0038],
           [-0.8181, -0.5599,  0.2354,  ..., -0.1821, -0.6610, -0.1497],
           ...,
           [ 1.1436, -0.6391, -1.4831,  ...,  1.5940, -1.4444,  1.8035],
           [-1.1267, -1.2465, -0.1365,  ...,  1.9221,  0.5375, -0.0335],
           [ 0.6362, -1.1281,  0.0686,  ..., -0.1839,  0.4179, -0.0850]],

          [[-0.8522,  0.5471, -0.9907,  ..., -0.2770,  1.2182,  0.2604],
           [ 1.2847,  0.4115, -0.5816,  ...,  1.0717, -0.7254, -0.3325],
           [ 1.6499,  1.0009,  0.0526,  ...,  1.5073, -0.8653,  0.8041],
           ...,
           [ 0.6683,  0.6801, -2.2132,  ...,  0.2040, -1.0454,  0.7933],
           [ 0.8368, -0.5040,  0.6114,  ...,  1.1601, -1.1408,  0.9055],
           [-1.0719,  0.4279, -0.0971,  ..., -0.1040,  1.9234, -0.1916]]]]])}
mat1 and mat2 shapes cannot be multiplied (96x32 and 100x100)
mindspore exception:
{'id': 0, 'name': 'linear', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-2.24399820e-001, 9.17847216e-001, 7.74851382e-001 ... 5.05868495e-001, -8.62161994e-001, -1.21699953e+000],
    [-1.50398421e+000, -7.38030791e-001, -1.00025165e+000 ... 1.82420647e+000, 7.27409065e-001, 1.30464518e+000],
    [1.55658364e-001, 1.00109076e+000, 1.18683088e+000 ... 7.43476152e-001, 2.56752253e-001, -4.79997665e-001],
    ...
    [4.09995794e-001, 5.95382094e-001, 1.59728682e+000 ... 4.19207692e-001, 3.37356851e-002, -7.48124838e-001],
    [-5.06059051e-001, 4.59479302e-001, -3.16866308e-001 ... 2.50348806e+000, 2.09287956e-001, -3.43544841e-001],
    [-7.85165071e-001, 1.19984508e+000, -1.15736687e+000 ... -1.39675403e+000, -9.61718500e-001, -9.82978642e-001]],
   [[6.29662335e-001, -8.14981759e-001, 8.03308189e-001 ... 7.28079796e-001, 1.68084133e+000, -1.17403889e+000],
    [8.58476758e-001, -7.30146289e-001, 1.82563722e-001 ... -1.66967154e-001, -2.45862889e+000, -3.83147178e-003],
    [-8.18068981e-001, -5.59882700e-001, 2.35376239e-001 ... -1.82083428e-001, -6.61037445e-001, -1.49736181e-001],
    ...
    [1.14356589e+000, -6.39149845e-001, -1.48313141e+000 ... 1.59399378e+000, -1.44439447e+000, 1.80352032e+000],
    [-1.12667763e+000, -1.24649036e+000, -1.36474267e-001 ... 1.92211854e+000, 5.37450194e-001, -3.35102752e-002],
    [6.36232615e-001, -1.12811661e+000, 6.85765743e-002 ... -1.83912739e-001, 4.17852461e-001, -8.49551484e-002]],
   [[-8.52218986e-001, 5.47097564e-001, -9.90654767e-001 ... -2.76999891e-001, 1.21817327e+000, 2.60443896e-001],
    [1.28472817e+000, 4.11452353e-001, -5.81610024e-001 ... 1.07174885e+000, -7.25444794e-001, -3.32510114e-001],
    [1.64994895e+000, 1.00091851e+000, 5.25770374e-002 ... 1.50725627e+000, -8.65298271e-001, 8.04143488e-001],
    ...
    [6.68277204e-001, 6.80099785e-001, -2.21319199e+000 ... 2.04042822e-001, -1.04536140e+000, 7.93310106e-001],
    [8.36760700e-001, -5.03996193e-001, 6.11431658e-001 ... 1.16013956e+000, -1.14076698e+000, 9.05511498e-001],
    [-1.07188427e+000, 4.27861691e-001, -9.71284360e-002 ... -1.04045294e-001, 1.92336118e+000, -1.91606745e-001]]]]])}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 100. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:100

analyse output arrays in iter:119

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[ 3.493229  ,  5.3491035 ,  2.3623898 , ..., -1.748336  ,
          -0.8580628 , -3.7870698 ],
         [ 2.779244  ,  6.134643  ,  2.657433  , ..., -1.399637  ,
           1.2643508 ,  0.60866094],
         [-0.06804575,  2.4756215 ,  0.6867025 , ..., -2.939789  ,
          -0.86120284,  1.205564  ],
         ...,
         [ 5.3260064 ,  1.0144781 , -2.884241  , ...,  5.904003  ,
          13.671805  ,  8.033111  ],
         [10.581244  ,  5.834064  , -0.46848804, ...,  0.7998767 ,
           7.7629232 ,  6.9266605 ],
         [ 6.1709948 ,  1.6482759 , -2.8214927 , ...,  0.08565879,
           0.5250732 ,  2.084279  ]],

        [[ 3.493229  ,  5.3491035 ,  2.3623898 , ..., -1.748336  ,
          -0.8580628 , -3.7870698 ],
         [ 2.779244  ,  6.134643  ,  2.657433  , ..., -1.399637  ,
           1.2643508 ,  0.60866094],
         [-0.06804575,  2.4756215 ,  0.6867025 , ..., -2.939789  ,
          -0.86120284,  1.205564  ],
         ...,
         [ 5.3260064 ,  1.0144781 , -2.884241  , ...,  5.904003  ,
          13.671805  ,  8.033111  ],
         [10.581244  ,  5.834064  , -0.46848804, ...,  0.7998767 ,
           7.7629232 ,  6.9266605 ],
         [ 6.1709948 ,  1.6482759 , -2.8214927 , ...,  0.08565879,
           0.5250732 ,  2.084279  ]],

        [[ 3.493229  ,  5.3491035 ,  2.3623898 , ..., -1.748336  ,
          -0.8580628 , -3.7870698 ],
         [ 2.779244  ,  6.134643  ,  2.657433  , ..., -1.399637  ,
           1.2643508 ,  0.60866094],
         [-0.06804575,  2.4756215 ,  0.6867025 , ..., -2.939789  ,
          -0.86120284,  1.205564  ],
         ...,
         [ 5.3260064 ,  1.0144781 , -2.884241  , ...,  5.904003  ,
          13.671805  ,  8.033111  ],
         [10.581244  ,  5.834064  , -0.46848804, ...,  0.7998767 ,
           7.7629232 ,  6.9266605 ],
         [ 6.1709948 ,  1.6482759 , -2.8214927 , ...,  0.08565879,
           0.5250732 ,  2.084279  ]],

        ...,

        [[ 3.493229  ,  5.3491035 ,  2.3623898 , ..., -1.748336  ,
          -0.8580628 , -3.7870698 ],
         [ 2.779244  ,  6.134643  ,  2.657433  , ..., -1.399637  ,
           1.2643508 ,  0.60866094],
         [-0.06804575,  2.4756215 ,  0.6867025 , ..., -2.939789  ,
          -0.86120284,  1.205564  ],
         ...,
         [ 5.3260064 ,  1.0144781 , -2.884241  , ...,  5.904003  ,
          13.671805  ,  8.033111  ],
         [10.581244  ,  5.834064  , -0.46848804, ...,  0.7998767 ,
           7.7629232 ,  6.9266605 ],
         [ 6.1709948 ,  1.6482759 , -2.8214927 , ...,  0.08565879,
           0.5250732 ,  2.084279  ]],

        [[ 3.493229  ,  5.3491035 ,  2.3623898 , ..., -1.748336  ,
          -0.8580628 , -3.7870698 ],
         [ 2.779244  ,  6.134643  ,  2.657433  , ..., -1.399637  ,
           1.2643508 ,  0.60866094],
         [-0.06804575,  2.4756215 ,  0.6867025 , ..., -2.939789  ,
          -0.86120284,  1.205564  ],
         ...,
         [ 5.3260064 ,  1.0144781 , -2.884241  , ...,  5.904003  ,
          13.671805  ,  8.033111  ],
         [10.581244  ,  5.834064  , -0.46848804, ...,  0.7998767 ,
           7.7629232 ,  6.9266605 ],
         [ 6.1709948 ,  1.6482759 , -2.8214927 , ...,  0.08565879,
           0.5250732 ,  2.084279  ]],

        [[ 3.493229  ,  5.3491035 ,  2.3623898 , ..., -1.748336  ,
          -0.8580628 , -3.7870698 ],
         [ 2.779244  ,  6.134643  ,  2.657433  , ..., -1.399637  ,
           1.2643508 ,  0.60866094],
         [-0.06804575,  2.4756215 ,  0.6867025 , ..., -2.939789  ,
          -0.86120284,  1.205564  ],
         ...,
         [ 5.3260064 ,  1.0144781 , -2.884241  , ...,  5.904003  ,
          13.671805  ,  8.033111  ],
         [10.581244  ,  5.834064  , -0.46848804, ...,  0.7998767 ,
           7.7629232 ,  6.9266605 ],
         [ 6.1709948 ,  1.6482759 , -2.8214927 , ...,  0.08565879,
           0.5250732 ,  2.084279  ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'linear', 'output': array([[[[ 35.479248,  35.479248,  35.479248, ...,  35.479248,
           35.479248,  35.479248],
         [ 29.40686 ,  29.40686 ,  29.40686 , ...,  29.40686 ,
           29.40686 ,  29.40686 ],
         [ 16.412903,  16.412903,  16.412903, ...,  16.412903,
           16.412903,  16.412903],
         ...,
         [-11.579102, -11.579102, -11.579102, ..., -11.579102,
          -11.579102, -11.579102],
         [-21.736694, -21.736694, -21.736694, ..., -21.736694,
          -21.736694, -21.736694],
         [-36.755188, -36.755188, -36.755188, ..., -36.755188,
          -36.755188, -36.755188]],

        [[ 35.479248,  35.479248,  35.479248, ...,  35.479248,
           35.479248,  35.479248],
         [ 29.40686 ,  29.40686 ,  29.40686 , ...,  29.40686 ,
           29.40686 ,  29.40686 ],
         [ 16.412903,  16.412903,  16.412903, ...,  16.412903,
           16.412903,  16.412903],
         ...,
         [-11.579102, -11.579102, -11.579102, ..., -11.579102,
          -11.579102, -11.579102],
         [-21.736694, -21.736694, -21.736694, ..., -21.736694,
          -21.736694, -21.736694],
         [-36.755188, -36.755188, -36.755188, ..., -36.755188,
          -36.755188, -36.755188]],

        [[ 35.479248,  35.479248,  35.479248, ...,  35.479248,
           35.479248,  35.479248],
         [ 29.40686 ,  29.40686 ,  29.40686 , ...,  29.40686 ,
           29.40686 ,  29.40686 ],
         [ 16.412903,  16.412903,  16.412903, ...,  16.412903,
           16.412903,  16.412903],
         ...,
         [-11.579102, -11.579102, -11.579102, ..., -11.579102,
          -11.579102, -11.579102],
         [-21.736694, -21.736694, -21.736694, ..., -21.736694,
          -21.736694, -21.736694],
         [-36.755188, -36.755188, -36.755188, ..., -36.755188,
          -36.755188, -36.755188]],

        ...,

        [[ 35.479248,  35.479248,  35.479248, ...,  35.479248,
           35.479248,  35.479248],
         [ 29.40686 ,  29.40686 ,  29.40686 , ...,  29.40686 ,
           29.40686 ,  29.40686 ],
         [ 16.412903,  16.412903,  16.412903, ...,  16.412903,
           16.412903,  16.412903],
         ...,
         [-11.579102, -11.579102, -11.579102, ..., -11.579102,
          -11.579102, -11.579102],
         [-21.736694, -21.736694, -21.736694, ..., -21.736694,
          -21.736694, -21.736694],
         [-36.755188, -36.755188, -36.755188, ..., -36.755188,
          -36.755188, -36.755188]],

        [[ 35.479248,  35.479248,  35.479248, ...,  35.479248,
           35.479248,  35.479248],
         [ 29.40686 ,  29.40686 ,  29.40686 , ...,  29.40686 ,
           29.40686 ,  29.40686 ],
         [ 16.412903,  16.412903,  16.412903, ...,  16.412903,
           16.412903,  16.412903],
         ...,
         [-11.579102, -11.579102, -11.579102, ..., -11.579102,
          -11.579102, -11.579102],
         [-21.736694, -21.736694, -21.736694, ..., -21.736694,
          -21.736694, -21.736694],
         [-36.755188, -36.755188, -36.755188, ..., -36.755188,
          -36.755188, -36.755188]],

        [[ 35.479248,  35.479248,  35.479248, ...,  35.479248,
           35.479248,  35.479248],
         [ 29.40686 ,  29.40686 ,  29.40686 , ...,  29.40686 ,
           29.40686 ,  29.40686 ],
         [ 16.412903,  16.412903,  16.412903, ...,  16.412903,
           16.412903,  16.412903],
         ...,
         [-11.579102, -11.579102, -11.579102, ..., -11.579102,
          -11.579102, -11.579102],
         [-21.736694, -21.736694, -21.736694, ..., -21.736694,
          -21.736694, -21.736694],
         [-36.755188, -36.755188, -36.755188, ..., -36.755188,
          -36.755188, -36.755188]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 100]), 'from': [0], 'to': [2]}
ms node:
{'name': 'linear', 'output': array([[[[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.75814 , -36.75814 , -36.75814 , ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.75814 , -36.75814 , -36.75814 , ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.75814 , -36.75814 , -36.75814 , ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        ...,

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.75814 , -36.75814 , -36.75814 , ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.75814 , -36.75814 , -36.75814 , ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725784, -21.725784, -21.725784, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.75814 , -36.75814 , -36.75814 , ..., -36.75814 ,
          -36.75814 , -36.75814 ]]]], dtype=float32), 'output_shape': (1, 512, 32, 100), 'from': [0], 'to': [2]}
torch node:
{'name': 'linear', 'output': array([[[[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.758137, -36.758137, -36.758137, ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.758137, -36.758137, -36.758137, ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.758137, -36.758137, -36.758137, ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        ...,

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.758137, -36.758137, -36.758137, ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.758137, -36.758137, -36.758137, ..., -36.75814 ,
          -36.75814 , -36.75814 ]],

        [[ 35.475384,  35.475384,  35.475384, ...,  35.47538 ,
           35.47538 ,  35.47538 ],
         [ 29.414413,  29.414413,  29.414413, ...,  29.414423,
           29.414423,  29.414423],
         [ 16.409275,  16.409275,  16.409275, ...,  16.409271,
           16.409271,  16.409271],
         ...,
         [-11.571149, -11.571149, -11.571149, ..., -11.57115 ,
          -11.57115 , -11.57115 ],
         [-21.725786, -21.725786, -21.725786, ..., -21.725784,
          -21.725784, -21.725784],
         [-36.758137, -36.758137, -36.758137, ..., -36.75814 ,
          -36.75814 , -36.75814 ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 100]), 'from': [0], 'to': [2]}

generate models:105

analyse the exceptions in iter:128
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.0000, 0.5316, 0.0000,  ..., 0.1136, 0.0000, 0.2600],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.2769, 0.5492],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.1335, 0.6018],
          ...,
          [0.0071, 0.0000, 0.9553,  ..., 1.2565, 0.0000, 0.6248],
          [0.0000, 1.0207, 0.0000,  ..., 0.0000, 1.6163, 0.0000],
          [0.8380, 0.0000, 0.0000,  ..., 0.2410, 0.0000, 0.1901]],

         [[0.0000, 0.0000, 1.1045,  ..., 0.0000, 0.7580, 0.7758],
          [0.0000, 0.3500, 0.1487,  ..., 0.0000, 0.0000, 0.8427],
          [0.0000, 0.2412, 2.0021,  ..., 1.5813, 0.0000, 0.2427],
          ...,
          [0.7316, 0.7976, 1.2861,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.8645, 0.1379,  ..., 0.8418, 0.3655, 0.2405],
          [0.0000, 0.0000, 0.4841,  ..., 0.0000, 0.0000, 0.0000]],

         [[0.0589, 0.0000, 0.0255,  ..., 1.0820, 0.0000, 0.2845],
          [0.0000, 0.0000, 1.8525,  ..., 0.9465, 0.1592, 0.8853],
          [1.2075, 0.1274, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          ...,
          [0.4325, 0.0000, 0.0000,  ..., 0.0000, 0.3840, 0.0000],
          [0.0000, 0.3271, 0.0000,  ..., 0.0000, 0.0000, 1.0164],
          [0.2600, 0.3092, 0.8854,  ..., 0.0000, 1.8172, 0.0000]]]])]}
Given groups=1, weight of size [64, 64, 1, 1], expected input[1, 3, 32, 32] to have 64 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 5.31569839e-001, 0.00000000e+000 ... 1.13610089e-001, 0.00000000e+000, 2.59969920e-001],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.27687871e+000, 5.49183905e-001],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.33496404e-001, 6.01784170e-001],
   ...
   [7.14606093e-003, 0.00000000e+000, 9.55272853e-001 ... 1.25647616e+000, 0.00000000e+000, 6.24774396e-001],
   [0.00000000e+000, 1.02074635e+000, 0.00000000e+000 ... 0.00000000e+000, 1.61631191e+000, 0.00000000e+000],
   [8.37989032e-001, 0.00000000e+000, 0.00000000e+000 ... 2.41005912e-001, 0.00000000e+000, 1.90074742e-001]],
  [[0.00000000e+000, 0.00000000e+000, 1.10452080e+000 ... 0.00000000e+000, 7.58010626e-001, 7.75824666e-001],
   [0.00000000e+000, 3.49956691e-001, 1.48679465e-001 ... 0.00000000e+000, 0.00000000e+000, 8.42658579e-001],
   [0.00000000e+000, 2.41166785e-001, 2.00210476e+000 ... 1.58130419e+000, 0.00000000e+000, 2.42742717e-001],
   ...
   [7.31619537e-001, 7.97633052e-001, 1.28608549e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 8.64534795e-001, 1.37941301e-001 ... 8.41815770e-001, 3.65528286e-001, 2.40542814e-001],
   [0.00000000e+000, 0.00000000e+000, 4.84073788e-001 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[5.88879064e-002, 0.00000000e+000, 2.55032014e-002 ... 1.08204734e+000, 0.00000000e+000, 2.84491420e-001],
   [0.00000000e+000, 0.00000000e+000, 1.85250127e+000 ... 9.46455956e-001, 1.59206197e-001, 8.85337472e-001],
   [1.20747709e+000, 1.27424926e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [4.32474405e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 3.84049952e-001, 0.00000000e+000],
   [0.00000000e+000, 3.27087253e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 1.01643729e+000],
   [2.60029882e-001, 3.09174180e-001, 8.85354042e-001 ... 0.00000000e+000, 1.81722629e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:113

analyse output arrays in iter:139

pre layer res:
10:add
{'name': 'add', 'output': array([[[[2.6875822e+09, 2.6875822e+09, 2.6875822e+09, ...,
          2.6875822e+09, 2.6875822e+09, 2.6875822e+09],
         [2.7138949e+09, 2.7138949e+09, 2.7138949e+09, ...,
          2.7138949e+09, 2.7138949e+09, 2.7138949e+09],
         [2.6899907e+09, 2.6899907e+09, 2.6899907e+09, ...,
          2.6899907e+09, 2.6899907e+09, 2.6899907e+09],
         ...,
         [2.7138949e+09, 2.7138949e+09, 2.7138949e+09, ...,
          2.7138949e+09, 2.7138949e+09, 2.7138949e+09],
         [2.6899907e+09, 2.6899907e+09, 2.6899907e+09, ...,
          2.6899907e+09, 2.6899907e+09, 2.6899907e+09],
         [2.6933002e+09, 2.6933002e+09, 2.6933002e+09, ...,
          2.6933002e+09, 2.6933002e+09, 2.6933002e+09]],

        [[2.6875822e+09, 2.6875822e+09, 2.6875822e+09, ...,
          2.6875822e+09, 2.6875822e+09, 2.6875822e+09],
         [2.7138949e+09, 2.7138949e+09, 2.7138949e+09, ...,
          2.7138949e+09, 2.7138949e+09, 2.7138949e+09],
         [2.6899907e+09, 2.6899907e+09, 2.6899907e+09, ...,
          2.6899907e+09, 2.6899907e+09, 2.6899907e+09],
         ...,
         [2.7138949e+09, 2.7138949e+09, 2.7138949e+09, ...,
          2.7138949e+09, 2.7138949e+09, 2.7138949e+09],
         [2.6899907e+09, 2.6899907e+09, 2.6899907e+09, ...,
          2.6899907e+09, 2.6899907e+09, 2.6899907e+09],
         [2.6933002e+09, 2.6933002e+09, 2.6933002e+09, ...,
          2.6933002e+09, 2.6933002e+09, 2.6933002e+09]],

        [[2.6875822e+09, 2.6875822e+09, 2.6875822e+09, ...,
          2.6875822e+09, 2.6875822e+09, 2.6875822e+09],
         [2.7138949e+09, 2.7138949e+09, 2.7138949e+09, ...,
          2.7138949e+09, 2.7138949e+09, 2.7138949e+09],
         [2.6899907e+09, 2.6899907e+09, 2.6899907e+09, ...,
          2.6899907e+09, 2.6899907e+09, 2.6899907e+09],
         ...,
         [2.7138949e+09, 2.7138949e+09, 2.7138949e+09, ...,
          2.7138949e+09, 2.7138949e+09, 2.7138949e+09],
         [2.6899907e+09, 2.6899907e+09, 2.6899907e+09, ...,
          2.6899907e+09, 2.6899907e+09, 2.6899907e+09],
         [2.6933002e+09, 2.6933002e+09, 2.6933002e+09, ...,
          2.6933002e+09, 2.6933002e+09, 2.6933002e+09]],

        ...,

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 100]), 'from': [8, 7], 'to': [11]}
tf node:
{'name': 'cos', 'output': array([[[[-0.6800935 , -0.6800935 , -0.6800935 , ..., -0.6800935 ,
          -0.6800935 , -0.6800935 ],
         [-0.16724968, -0.16724968, -0.16724968, ..., -0.16724968,
          -0.16724968, -0.16724968],
         [ 0.14656082,  0.14656082,  0.14656082, ...,  0.14656082,
           0.14656082,  0.14656082],
         ...,
         [-0.16724968, -0.16724968, -0.16724968, ..., -0.16724968,
          -0.16724968, -0.16724968],
         [ 0.14656082,  0.14656082,  0.14656082, ...,  0.14656082,
           0.14656082,  0.14656082],
         [ 0.7294371 ,  0.7294371 ,  0.7294371 , ...,  0.7294371 ,
           0.7294371 ,  0.7294371 ]],

        [[-0.6800935 , -0.6800935 , -0.6800935 , ..., -0.6800935 ,
          -0.6800935 , -0.6800935 ],
         [-0.16724968, -0.16724968, -0.16724968, ..., -0.16724968,
          -0.16724968, -0.16724968],
         [ 0.14656082,  0.14656082,  0.14656082, ...,  0.14656082,
           0.14656082,  0.14656082],
         ...,
         [-0.16724968, -0.16724968, -0.16724968, ..., -0.16724968,
          -0.16724968, -0.16724968],
         [ 0.14656082,  0.14656082,  0.14656082, ...,  0.14656082,
           0.14656082,  0.14656082],
         [ 0.7294371 ,  0.7294371 ,  0.7294371 , ...,  0.7294371 ,
           0.7294371 ,  0.7294371 ]],

        [[-0.6800935 , -0.6800935 , -0.6800935 , ..., -0.6800935 ,
          -0.6800935 , -0.6800935 ],
         [-0.16724968, -0.16724968, -0.16724968, ..., -0.16724968,
          -0.16724968, -0.16724968],
         [ 0.14656082,  0.14656082,  0.14656082, ...,  0.14656082,
           0.14656082,  0.14656082],
         ...,
         [-0.16724968, -0.16724968, -0.16724968, ..., -0.16724968,
          -0.16724968, -0.16724968],
         [ 0.14656082,  0.14656082,  0.14656082, ...,  0.14656082,
           0.14656082,  0.14656082],
         [ 0.7294371 ,  0.7294371 ,  0.7294371 , ...,  0.7294371 ,
           0.7294371 ,  0.7294371 ]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 100]), 'from': [10], 'to': [17]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.76460254,  0.76460254,  0.76460254, ..., -0.7109315 ,
          -0.7109315 , -0.7109315 ],
         [ 0.3643488 ,  0.3643488 ,  0.3643488 , ..., -0.94502276,
          -0.94502276, -0.94502276],
         [-0.3692309 , -0.3692309 , -0.3692309 , ...,  0.87873775,
           0.87873775,  0.87873775],
         ...,
         [ 0.3643488 ,  0.3643488 ,  0.3643488 , ..., -0.94502276,
          -0.94502276, -0.94502276],
         [-0.3692309 , -0.3692309 , -0.3692309 , ...,  0.87873775,
           0.87873775,  0.87873775],
         [-0.19973683, -0.19973683, -0.19973683, ...,  0.12118819,
           0.12118819,  0.12118819]],

        [[ 0.76460254,  0.76460254,  0.76460254, ..., -0.7109315 ,
          -0.7109315 , -0.7109315 ],
         [ 0.3643488 ,  0.3643488 ,  0.3643488 , ..., -0.94502276,
          -0.94502276, -0.94502276],
         [-0.3692309 , -0.3692309 , -0.3692309 , ...,  0.87873775,
           0.87873775,  0.87873775],
         ...,
         [ 0.3643488 ,  0.3643488 ,  0.3643488 , ..., -0.94502276,
          -0.94502276, -0.94502276],
         [-0.3692309 , -0.3692309 , -0.3692309 , ...,  0.87873775,
           0.87873775,  0.87873775],
         [-0.19973683, -0.19973683, -0.19973683, ...,  0.12118819,
           0.12118819,  0.12118819]],

        [[ 0.76460254,  0.76460254,  0.76460254, ..., -0.7109315 ,
          -0.7109315 , -0.7109315 ],
         [ 0.3643488 ,  0.3643488 ,  0.3643488 , ..., -0.94502276,
          -0.94502276, -0.94502276],
         [-0.3692309 , -0.3692309 , -0.3692309 , ...,  0.87873775,
           0.87873775,  0.87873775],
         ...,
         [ 0.3643488 ,  0.3643488 ,  0.3643488 , ..., -0.94502276,
          -0.94502276, -0.94502276],
         [-0.3692309 , -0.3692309 , -0.3692309 , ...,  0.87873775,
           0.87873775,  0.87873775],
         [-0.19973683, -0.19973683, -0.19973683, ...,  0.12118819,
           0.12118819,  0.12118819]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': (1, 512, 16, 100), 'from': [10], 'to': [17]}
torch node:
{'name': 'cos', 'output': array([[[[-0.7109315 , -0.7109315 , -0.7109315 , ..., -0.7109315 ,
          -0.7109315 , -0.7109315 ],
         [-0.28914246, -0.28914246, -0.28914246, ..., -0.28914246,
          -0.28914246, -0.28914246],
         [ 0.4419612 ,  0.4419612 ,  0.4419612 , ..., -0.8380006 ,
          -0.8380006 , -0.8380006 ],
         ...,
         [-0.28914246, -0.28914246, -0.28914246, ..., -0.28914246,
          -0.28914246, -0.28914246],
         [ 0.4419612 ,  0.4419612 ,  0.4419612 , ..., -0.8380006 ,
          -0.8380006 , -0.8380006 ],
         [-0.9966656 , -0.9966656 , -0.9966656 , ..., -0.04187203,
          -0.04187203, -0.04187203]],

        [[-0.7109315 , -0.7109315 , -0.7109315 , ..., -0.7109315 ,
          -0.7109315 , -0.7109315 ],
         [-0.28914246, -0.28914246, -0.28914246, ..., -0.28914246,
          -0.28914246, -0.28914246],
         [ 0.4419612 ,  0.4419612 ,  0.4419612 , ..., -0.8380006 ,
          -0.8380006 , -0.8380006 ],
         ...,
         [-0.28914246, -0.28914246, -0.28914246, ..., -0.28914246,
          -0.28914246, -0.28914246],
         [ 0.4419612 ,  0.4419612 ,  0.4419612 , ..., -0.8380006 ,
          -0.8380006 , -0.8380006 ],
         [-0.9966656 , -0.9966656 , -0.9966656 , ..., -0.04187203,
          -0.04187203, -0.04187203]],

        [[-0.7109315 , -0.7109315 , -0.7109315 , ..., -0.7109315 ,
          -0.7109315 , -0.7109315 ],
         [-0.28914246, -0.28914246, -0.28914246, ..., -0.28914246,
          -0.28914246, -0.28914246],
         [ 0.4419612 ,  0.4419612 ,  0.4419612 , ..., -0.8380006 ,
          -0.8380006 , -0.8380006 ],
         ...,
         [-0.28914246, -0.28914246, -0.28914246, ..., -0.28914246,
          -0.28914246, -0.28914246],
         [ 0.4419612 ,  0.4419612 ,  0.4419612 , ..., -0.8380006 ,
          -0.8380006 , -0.8380006 ],
         [-0.9966656 , -0.9966656 , -0.9966656 , ..., -0.04187203,
          -0.04187203, -0.04187203]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 16, 100]), 'from': [10], 'to': [17]}

generate models:123

analyse output arrays in iter:154

pre layer res:
3:relu
{'name': 'relu', 'output': array([[[[ 9.955864 ,  9.955864 ,  9.955864 , ...,  9.955864 ,
           9.955864 ,  9.955864 ],
         [14.203125 , 14.203125 , 14.203125 , ..., 14.203125 ,
          14.203125 , 14.203125 ],
         [12.390961 , 12.390961 , 12.390961 , ..., 12.390961 ,
          12.390961 , 12.390961 ],
         ...,
         [11.029205 , 11.029205 , 11.029205 , ..., 11.029205 ,
          11.029205 , 11.029205 ],
         [11.390381 , 11.390381 , 11.390381 , ..., 11.390381 ,
          11.390381 , 11.390381 ],
         [ 9.370132 ,  9.370132 ,  9.370132 , ...,  9.370132 ,
           9.370132 ,  9.370132 ]],

        [[11.384033 , 11.384033 , 11.384033 , ..., 11.384033 ,
          11.384033 , 11.384033 ],
         [10.143311 , 10.143311 , 10.143311 , ..., 10.143311 ,
          10.143311 , 10.143311 ],
         [12.369621 , 12.369621 , 12.369621 , ..., 12.369621 ,
          12.369621 , 12.369621 ],
         ...,
         [11.501167 , 11.501167 , 11.501167 , ..., 11.501167 ,
          11.501167 , 11.501167 ],
         [17.901321 , 17.901321 , 17.901321 , ..., 17.901321 ,
          17.901321 , 17.901321 ],
         [13.31604  , 13.31604  , 13.31604  , ..., 13.31604  ,
          13.31604  , 13.31604  ]],

        [[ 7.937023 ,  7.937023 ,  7.937023 , ...,  7.937023 ,
           7.937023 ,  7.937023 ],
         [20.068237 , 20.068237 , 20.068237 , ..., 20.068237 ,
          20.068237 , 20.068237 ],
         [15.890015 , 15.890015 , 15.890015 , ..., 15.890015 ,
          15.890015 , 15.890015 ],
         ...,
         [14.104015 , 14.104015 , 14.104015 , ..., 14.104015 ,
          14.104015 , 14.104015 ],
         [11.019287 , 11.019287 , 11.019287 , ..., 11.019287 ,
          11.019287 , 11.019287 ],
         [ 7.0101013,  7.0101013,  7.0101013, ...,  7.0101013,
           7.0101013,  7.0101013]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [5], 'to': [18]}
tf node:
{'name': 'cos', 'output': array([[[[-0.8622576 , -0.8622576 , -0.8622576 , ..., -0.8622576 ,
          -0.8622576 , -0.8622576 ],
         [-0.06591024, -0.06591024, -0.06591024, ..., -0.06591024,
          -0.06591024, -0.06591024],
         [ 0.9846551 ,  0.9846551 ,  0.9846551 , ...,  0.9846551 ,
           0.9846551 ,  0.9846551 ],
         ...,
         [ 0.03362469,  0.03362469,  0.03362469, ...,  0.03362469,
           0.03362469,  0.03362469],
         [ 0.38462964,  0.38462964,  0.38462964, ...,  0.38462964,
           0.38462964,  0.38462964],
         [-0.9985073 , -0.9985073 , -0.9985073 , ..., -0.9985073 ,
          -0.9985073 , -0.9985073 ]],

        [[ 0.3787626 ,  0.3787626 ,  0.3787626 , ...,  0.3787626 ,
           0.3787626 ,  0.3787626 ],
         [-0.7527725 , -0.7527725 , -0.7527725 , ..., -0.7527725 ,
          -0.7527725 , -0.7527725 ],
         [ 0.9807072 ,  0.9807072 ,  0.9807072 , ...,  0.9807072 ,
           0.9807072 ,  0.9807072 ],
         ...,
         [ 0.48432633,  0.48432633,  0.48432633, ...,  0.48432633,
           0.48432633,  0.48432633],
         [ 0.58311826,  0.58311826,  0.58311826, ...,  0.58311826,
           0.58311826,  0.58311826],
         [ 0.73191416,  0.73191416,  0.73191416, ...,  0.73191416,
           0.73191416,  0.73191416]],

        [[-0.08294612, -0.08294612, -0.08294612, ..., -0.08294612,
          -0.08294612, -0.08294612],
         [ 0.34488377,  0.34488377,  0.34488377, ...,  0.34488377,
           0.34488377,  0.34488377],
         [-0.9834744 , -0.9834744 , -0.9834744 , ..., -0.9834744 ,
          -0.9834744 , -0.9834744 ],
         ...,
         [ 0.03314552,  0.03314552,  0.03314552, ...,  0.03314552,
           0.03314552,  0.03314552],
         [ 0.0237106 ,  0.0237106 ,  0.0237106 , ...,  0.0237106 ,
           0.0237106 ,  0.0237106 ],
         [ 0.7472275 ,  0.7472275 ,  0.7472275 , ...,  0.7472275 ,
           0.7472275 ,  0.7472275 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [3], 'to': [12]}
ms node:
{'name': 'cos', 'output': array([[[[-0.8632042 , -0.8632042 , -0.8632042 , ..., -0.8632037 ,
          -0.8632037 , -0.8632037 ],
         [-0.06638318, -0.06638318, -0.06638318, ..., -0.06638223,
          -0.06638223, -0.06638223],
         [ 0.98456794,  0.98456794,  0.98456794, ...,  0.98456794,
           0.98456794,  0.98456794],
         ...,
         [ 0.03344741,  0.03344741,  0.03344741, ...,  0.03344741,
           0.03344741,  0.03344741],
         [ 0.38526514,  0.38526514,  0.38526514, ...,  0.38526514,
           0.38526514,  0.38526514],
         [-0.9985615 , -0.9985615 , -0.9985615 , ..., -0.9985615 ,
          -0.9985615 , -0.9985615 ]],

        [[ 0.3783548 ,  0.3783548 ,  0.3783548 , ...,  0.3783548 ,
           0.3783548 ,  0.3783548 ],
         [-0.7524956 , -0.7524956 , -0.7524956 , ..., -0.7524956 ,
          -0.7524956 , -0.7524956 ],
         [ 0.9807407 ,  0.9807407 ,  0.9807407 , ...,  0.98074037,
           0.98074037,  0.98074037],
         ...,
         [ 0.48415446,  0.48415446,  0.48415446, ...,  0.48415446,
           0.48415446,  0.48415446],
         [ 0.583095  ,  0.583095  ,  0.583095  , ...,  0.58309656,
           0.58309656,  0.58309656],
         [ 0.73182577,  0.73182577,  0.73182577, ...,  0.73182446,
           0.73182446,  0.73182446]],

        [[-0.08340705, -0.08340705, -0.08340705, ..., -0.08340753,
          -0.08340753, -0.08340753],
         [ 0.34575906,  0.34575906,  0.34575906, ...,  0.34576088,
           0.34576088,  0.34576088],
         [-0.98338705, -0.98338705, -0.98338705, ..., -0.98338723,
          -0.98338723, -0.98338723],
         ...,
         [ 0.03375648,  0.03375648,  0.03375648, ...,  0.03375553,
           0.03375553,  0.03375553],
         [ 0.02395848,  0.02395848,  0.02395848, ...,  0.02395848,
           0.02395848,  0.02395848],
         [ 0.7461503 ,  0.7461503 ,  0.7461503 , ...,  0.7461503 ,
           0.7461503 ,  0.7461503 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [3], 'to': [12]}
torch node:
{'name': 'cos', 'output': array([[[[-0.8632042 , -0.8632042 , -0.8632042 , ..., -0.8632037 ,
          -0.8632037 , -0.8632037 ],
         [-0.06638318, -0.06638318, -0.06638318, ..., -0.06638223,
          -0.06638223, -0.06638223],
         [ 0.98456794,  0.98456794,  0.98456794, ...,  0.98456794,
           0.98456794,  0.98456794],
         ...,
         [ 0.03344741,  0.03344741,  0.03344741, ...,  0.03344741,
           0.03344741,  0.03344741],
         [ 0.38526514,  0.38526514,  0.38526514, ...,  0.38526514,
           0.38526514,  0.38526514],
         [-0.9985615 , -0.9985615 , -0.9985615 , ..., -0.9985615 ,
          -0.9985615 , -0.9985615 ]],

        [[ 0.3783548 ,  0.3783548 ,  0.3783548 , ...,  0.3783548 ,
           0.3783548 ,  0.3783548 ],
         [-0.7524956 , -0.7524956 , -0.7524956 , ..., -0.7524956 ,
          -0.7524956 , -0.7524956 ],
         [ 0.9807407 ,  0.9807407 ,  0.9807407 , ...,  0.98074037,
           0.98074037,  0.98074037],
         ...,
         [ 0.48415446,  0.48415446,  0.48415446, ...,  0.48415446,
           0.48415446,  0.48415446],
         [ 0.583095  ,  0.583095  ,  0.583095  , ...,  0.58309656,
           0.58309656,  0.58309656],
         [ 0.73182577,  0.73182577,  0.73182577, ...,  0.73182446,
           0.73182446,  0.73182446]],

        [[-0.08340705, -0.08340705, -0.08340705, ..., -0.08340753,
          -0.08340753, -0.08340753],
         [ 0.3457591 ,  0.3457591 ,  0.3457591 , ...,  0.34576088,
           0.34576088,  0.34576088],
         [-0.98338705, -0.98338705, -0.98338705, ..., -0.98338723,
          -0.98338723, -0.98338723],
         ...,
         [ 0.03375648,  0.03375648,  0.03375648, ...,  0.03375553,
           0.03375553,  0.03375553],
         [ 0.02395848,  0.02395848,  0.02395848, ...,  0.02395848,
           0.02395848,  0.02395848],
         [ 0.7461503 ,  0.7461503 ,  0.7461503 , ...,  0.7461503 ,
           0.7461503 ,  0.7461503 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [3], 'to': [12]}

generate models:135

analyse the exceptions in iter:158
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-0.6936, -0.3321,  1.1683,  ..., -0.8065,  0.3971,  0.1406],
           [-0.4735, -0.7862,  0.0430,  ...,  0.0173, -1.1838, -0.1205],
           [-0.4039, -0.6703,  1.3808,  ...,  0.3942, -0.0077, -0.4945],
           ...,
           [ 0.6537,  0.0253, -0.4549,  ...,  0.2572, -0.9306, -0.1605],
           [-1.1415,  1.2336,  0.1682,  ...,  0.9082, -0.5288, -1.3120],
           [ 1.0578,  0.6560, -0.1435,  ..., -0.2461,  1.1189,  0.1261]],

          [[-0.5242,  0.5713,  0.4331,  ...,  1.7819, -0.3962, -0.0701],
           [-0.5672,  1.4533,  0.7594,  ..., -1.4796,  2.2386, -0.1029],
           [ 0.0655,  1.4380,  1.7035,  ...,  0.5250, -0.2612, -1.3784],
           ...,
           [-0.2978,  0.8884,  1.2299,  ..., -0.6722, -0.2326, -0.4408],
           [-0.5159, -1.3474,  0.2621,  ...,  1.8036,  0.0313, -0.5812],
           [ 0.3024,  1.7731, -0.0374,  ...,  0.9299,  3.5693,  0.9945]],

          [[ 0.7127, -0.8767, -1.0780,  ..., -0.1665,  0.9102, -0.2031],
           [ 0.9040,  0.3709, -0.4953,  ..., -0.0693,  0.1919, -0.7370],
           [ 0.1048,  0.1202,  0.6654,  ..., -0.8557,  0.1110,  0.8962],
           ...,
           [ 0.1548, -0.2012, -0.2298,  ...,  1.0039,  0.0095,  0.0625],
           [ 0.1554,  1.0134,  0.7832,  ..., -0.1505,  0.4612,  0.0991],
           [-0.3244,  0.7868,  0.8911,  ..., -0.5315, -0.4149,  1.1212]]]]])}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-6.93630338e-001, -3.32092315e-001, 1.16830599e+000 ... -8.06525230e-001, 3.97143841e-001, 1.40559256e-001],
    [-4.73504275e-001, -7.86192179e-001, 4.29844260e-002 ... 1.73209626e-002, -1.18384409e+000, -1.20517671e-001],
    [-4.03897882e-001, -6.70283198e-001, 1.38084185e+000 ... 3.94209117e-001, -7.73438253e-003, -4.94478166e-001],
    ...
    [6.53730750e-001, 2.53417119e-002, -4.54894781e-001 ... 2.57158786e-001, -9.30607915e-001, -1.60532340e-001],
    [-1.14149570e+000, 1.23361838e+000, 1.68162107e-001 ... 9.08231497e-001, -5.28837681e-001, -1.31197298e+000],
    [1.05784512e+000, 6.56025767e-001, -1.43467277e-001 ... -2.46086955e-001, 1.11889482e+000, 1.26144469e-001]],
   [[-5.24200201e-001, 5.71276844e-001, 4.33148980e-001 ... 1.78187323e+000, -3.96224648e-001, -7.00616911e-002],
    [-5.67150891e-001, 1.45327532e+000, 7.59396911e-001 ... -1.47962725e+000, 2.23858166e+000, -1.02896318e-001],
    [6.54799715e-002, 1.43796897e+000, 1.70353436e+000 ... 5.25038838e-001, -2.61206299e-001, -1.37842464e+000],
    ...
    [-2.97837734e-001, 8.88368964e-001, 1.22988033e+000 ... -6.72174275e-001, -2.32632294e-001, -4.40834910e-001],
    [-5.15905380e-001, -1.34736133e+000, 2.62090862e-001 ... 1.80363417e+000, 3.13072242e-002, -5.81223428e-001],
    [3.02392930e-001, 1.77307749e+000, -3.74349877e-002 ... 9.29912806e-001, 3.56927228e+000, 9.94451284e-001]],
   [[7.12748766e-001, -8.76689792e-001, -1.07798707e+000 ... -1.66518927e-001, 9.10180569e-001, -2.03051656e-001],
    [9.03991282e-001, 3.70895684e-001, -4.95252550e-001 ... -6.93399757e-002, 1.91903189e-001, -7.36951888e-001],
    [1.04793347e-001, 1.20175466e-001, 6.65438831e-001 ... -8.55735421e-001, 1.11016184e-001, 8.96183133e-001],
    ...
    [1.54778391e-001, -2.01207697e-001, -2.29781047e-001 ... 1.00390840e+000, 9.49338172e-003, 6.25097528e-002],
    [1.55413538e-001, 1.01336157e+000, 7.83187568e-001 ... -1.50467813e-001, 4.61215824e-001, 9.91449580e-002],
    [-3.24433535e-001, 7.86793649e-001, 8.91081393e-001 ... -5.31494677e-001, -4.14904326e-001, 1.12117076e+000]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:139

analyse the exceptions in iter:159
torch exception:
{'id': 7, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 506.7139,  506.7139,  506.7139,  ...,  506.7139,  506.7139,
            506.7139],
          [ 233.8548,  233.8548,  233.8548,  ...,  233.8550,  233.8550,
            233.8550],
          [ 244.8191,  244.8191,  244.8191,  ...,  244.8192,  244.8192,
            244.8192],
          ...,
          [ 468.8629,  468.8629,  468.8629,  ...,  468.8629,  468.8629,
            468.8629],
          [ 330.0441,  330.0441,  330.0441,  ...,  330.0441,  330.0441,
            330.0441],
          [ -13.3629,  -13.3629,  -13.3629,  ...,  -13.3629,  -13.3629,
            -13.3629]],

         [[ 378.7140,  378.7140,  378.7140,  ...,  378.7140,  378.7140,
            378.7140],
          [ 105.8549,  105.8549,  105.8549,  ...,  105.8550,  105.8550,
            105.8550],
          [ 139.8033,  139.8033,  139.8033,  ...,  139.8033,  139.8033,
            139.8033],
          ...,
          [ 183.3153,  183.3153,  183.3153,  ...,  183.3154,  183.3154,
            183.3154],
          [ 193.6066,  193.6066,  193.6066,  ...,  193.6066,  193.6066,
            193.6066],
          [-149.8004, -149.8004, -149.8004,  ..., -149.8004, -149.8004,
           -149.8004]],

         [[ 178.0129,  178.0129,  178.0129,  ...,  178.0129,  178.0129,
            178.0129],
          [ -94.8461,  -94.8461,  -94.8461,  ...,  -94.8461,  -94.8461,
            -94.8461],
          [ 433.2612,  433.2612,  433.2612,  ...,  433.2614,  433.2614,
            433.2614],
          ...,
          [  31.7836,   31.7836,   31.7836,  ...,   31.7836,   31.7836,
             31.7836],
          [ 187.7347,  187.7347,  187.7347,  ...,  187.7346,  187.7346,
            187.7346],
          [-155.6724, -155.6724, -155.6724,  ..., -155.6724, -155.6724,
           -155.6724]],

         ...,

         [[   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          ...,
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000]],

         [[   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          ...,
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000]],

         [[   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          ...,
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000],
          [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
              0.0000]]]], grad_fn=<UnsafeViewBackward0>)]}
Given groups=1, weight of size [64, 512, 1, 1], expected input[1, 256, 16, 100] to have 512 channels, but got 256 channels instead
mindspore exception:
{'id': 7, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 16, 100], dtype=Float32, value=
[[[[5.06713898e+002, 5.06713898e+002, 5.06713898e+002 ... 5.06713898e+002, 5.06713898e+002, 5.06713898e+002],
   [2.33854843e+002, 2.33854843e+002, 2.33854843e+002 ... 2.33854965e+002, 2.33854965e+002, 2.33854965e+002],
   [2.44819061e+002, 2.44819061e+002, 2.44819061e+002 ... 2.44819229e+002, 2.44819229e+002, 2.44819229e+002],
   ...
   [4.68862885e+002, 4.68862885e+002, 4.68862885e+002 ... 4.68862854e+002, 4.68862854e+002, 4.68862854e+002],
   [3.30044098e+002, 3.30044098e+002, 3.30044098e+002 ... 3.30044067e+002, 3.30044067e+002, 3.30044067e+002],
   [-1.33629189e+001, -1.33629189e+001, -1.33629189e+001 ... -1.33629122e+001, -1.33629122e+001, -1.33629122e+001]],
  [[3.78713989e+002, 3.78713989e+002, 3.78713989e+002 ... 3.78713989e+002, 3.78713989e+002, 3.78713989e+002],
   [1.05854889e+002, 1.05854889e+002, 1.05854889e+002 ... 1.05854942e+002, 1.05854942e+002, 1.05854942e+002],
   [1.39803299e+002, 1.39803299e+002, 1.39803299e+002 ... 1.39803299e+002, 1.39803299e+002, 1.39803299e+002],
   ...
   [1.83315292e+002, 1.83315292e+002, 1.83315292e+002 ... 1.83315308e+002, 1.83315308e+002, 1.83315308e+002],
   [1.93606567e+002, 1.93606567e+002, 1.93606567e+002 ... 1.93606567e+002, 1.93606567e+002, 1.93606567e+002],
   [-1.49800415e+002, -1.49800415e+002, -1.49800415e+002 ... -1.49800446e+002, -1.49800446e+002, -1.49800446e+002]],
  [[1.78012863e+002, 1.78012863e+002, 1.78012863e+002 ... 1.78012878e+002, 1.78012878e+002, 1.78012878e+002],
   [-9.48460846e+001, -9.48460846e+001, -9.48460846e+001 ... -9.48461456e+001, -9.48461456e+001, -9.48461456e+001],
   [4.33261230e+002, 4.33261230e+002, 4.33261230e+002 ... 4.33261353e+002, 4.33261353e+002, 4.33261353e+002],
   ...
   [3.17835197e+001, 3.17835197e+001, 3.17835197e+001 ... 3.17835388e+001, 3.17835388e+001, 3.17835388e+001],
   [1.87734726e+002, 1.87734726e+002, 1.87734726e+002 ... 1.87734619e+002, 1.87734619e+002, 1.87734619e+002],
   [-1.55672394e+002, -1.55672394e+002, -1.55672394e+002 ... -1.55672333e+002, -1.55672333e+002, -1.55672333e+002]],
  ...
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:140

analyse output arrays in iter:175

pre layer res:
7:add
{'name': 'add', 'output': array([[[[ -28.108774 ,  323.2502   ,  357.85352  , ...,   -3.7893066,
           633.73236  , -119.91444  ],
         [ 301.51694  , -106.0486   ,  542.11255  , ...,  633.14044  ,
           413.31558  ,  360.41174  ],
         [  65.2324   ,  514.8491   ,  -63.114742 , ...,  595.15076  ,
           576.39026  ,  460.80994  ],
         ...,
         [-257.78723  ,  688.4132   ,  638.555    , ...,  -68.77712  ,
           125.68348  ,  393.53436  ],
         [ 588.6786   ,  376.26147  ,  573.1622   , ...,  451.01422  ,
           444.51184  ,  139.78317  ],
         [ -96.11135  ,   55.24981  ,  360.26175  , ...,   61.709732 ,
           472.2337   ,  711.8473   ]],

        [[ -28.108774 ,  323.2502   ,  357.85352  , ...,   -3.7893066,
           633.73236  , -119.91444  ],
         [ 301.51694  , -106.0486   ,  542.11255  , ...,  633.14044  ,
           413.31558  ,  360.41174  ],
         [  65.2324   ,  514.8491   ,  -63.114742 , ...,  595.15076  ,
           576.39026  ,  460.80994  ],
         ...,
         [-257.78723  ,  688.4132   ,  638.555    , ...,  -68.77712  ,
           125.68348  ,  393.53436  ],
         [ 588.6786   ,  376.26147  ,  573.1622   , ...,  451.01422  ,
           444.51184  ,  139.78317  ],
         [ -96.11135  ,   55.24981  ,  360.26175  , ...,   61.709732 ,
           472.2337   ,  711.8473   ]],

        [[ -28.108774 ,  323.2502   ,  357.85352  , ...,   -3.7893066,
           633.73236  , -119.91444  ],
         [ 301.51694  , -106.0486   ,  542.11255  , ...,  633.14044  ,
           413.31558  ,  360.41174  ],
         [  65.2324   ,  514.8491   ,  -63.114742 , ...,  595.15076  ,
           576.39026  ,  460.80994  ],
         ...,
         [-257.78723  ,  688.4132   ,  638.555    , ...,  -68.77712  ,
           125.68348  ,  393.53436  ],
         [ 588.6786   ,  376.26147  ,  573.1622   , ...,  451.01422  ,
           444.51184  ,  139.78317  ],
         [ -96.11135  ,   55.24981  ,  360.26175  , ...,   61.709732 ,
           472.2337   ,  711.8473   ]],

        ...,

        [[ -28.108774 ,  323.24872  ,  357.85645  , ...,   -3.7893066,
           633.7168   , -121.560684 ],
         [ 301.5139   , -107.10937  ,  542.1123   , ...,  633.1394   ,
           413.31442  ,  360.4145   ],
         [  65.23095  ,  514.8257   ,  -63.114742 , ...,  595.15     ,
           576.3871   ,  460.80963  ],
         ...,
         [-265.9011   ,  688.4064   ,  638.5448   , ...,  -68.79803  ,
           123.9364   ,  393.5358   ],
         [ 588.6781   ,  376.25665  ,  573.16     , ...,  451.01508  ,
           444.5094   ,  137.44626  ],
         [ -96.79602  ,   55.24981  ,  360.2417   , ...,   61.709732 ,
           472.23422  ,  711.8445   ]],

        [[ -28.108774 ,  323.24872  ,  357.85645  , ...,   -3.7893066,
           633.7168   , -121.560684 ],
         [ 301.5139   , -107.10937  ,  542.1123   , ...,  633.1394   ,
           413.31442  ,  360.4145   ],
         [  65.23095  ,  514.8257   ,  -63.114742 , ...,  595.15     ,
           576.3871   ,  460.80963  ],
         ...,
         [-265.9011   ,  688.4064   ,  638.5448   , ...,  -68.79803  ,
           123.9364   ,  393.5358   ],
         [ 588.6781   ,  376.25665  ,  573.16     , ...,  451.01508  ,
           444.5094   ,  137.44626  ],
         [ -96.79602  ,   55.24981  ,  360.2417   , ...,   61.709732 ,
           472.23422  ,  711.8445   ]],

        [[ -28.108774 ,  323.24872  ,  357.85645  , ...,   -3.7893066,
           633.7168   , -121.560684 ],
         [ 301.5139   , -107.10937  ,  542.1123   , ...,  633.1394   ,
           413.31442  ,  360.4145   ],
         [  65.23095  ,  514.8257   ,  -63.114742 , ...,  595.15     ,
           576.3871   ,  460.80963  ],
         ...,
         [-265.9011   ,  688.4064   ,  638.5448   , ...,  -68.79803  ,
           123.9364   ,  393.5358   ],
         [ 588.6781   ,  376.25665  ,  573.16     , ...,  451.01508  ,
           444.5094   ,  137.44626  ],
         [ -96.79602  ,   55.24981  ,  360.2417   , ...,   61.709732 ,
           472.23422  ,  711.8445   ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [6, 1], 'to': [16]}
tf node:
{'name': 'log', 'output': array([[[[      nan, 5.7784266, 5.8801236, ...,       nan, 6.451627 ,
                nan],
         [5.708826 ,       nan, 6.2954736, ..., 6.450692 , 6.0242114,
          5.887247 ],
         [4.177956 , 6.243874 ,       nan, ..., 6.388815 , 6.356785 ,
          6.1329856],
         ...,
         [      nan, 6.5343895, 6.459208 , ...,       nan, 4.8337665,
          5.975168 ],
         [6.3778806, 5.9302845, 6.3511686, ..., 6.111499 , 6.0969768,
          4.9400926],
         [      nan, 4.0118647, 5.886831 , ..., 4.122442 , 6.157474 ,
          6.5678635]],

        [[      nan, 5.7784266, 5.8801236, ...,       nan, 6.451627 ,
                nan],
         [5.708826 ,       nan, 6.2954736, ..., 6.450692 , 6.0242114,
          5.887247 ],
         [4.177956 , 6.243874 ,       nan, ..., 6.388815 , 6.356785 ,
          6.1329856],
         ...,
         [      nan, 6.5343895, 6.459208 , ...,       nan, 4.8337665,
          5.975168 ],
         [6.3778806, 5.9302845, 6.3511686, ..., 6.111499 , 6.0969768,
          4.9400926],
         [      nan, 4.0118647, 5.886831 , ..., 4.122442 , 6.157474 ,
          6.5678635]],

        [[      nan, 5.7784266, 5.8801236, ...,       nan, 6.451627 ,
                nan],
         [5.708826 ,       nan, 6.2954736, ..., 6.450692 , 6.0242114,
          5.887247 ],
         [4.177956 , 6.243874 ,       nan, ..., 6.388815 , 6.356785 ,
          6.1329856],
         ...,
         [      nan, 6.5343895, 6.459208 , ...,       nan, 4.8337665,
          5.975168 ],
         [6.3778806, 5.9302845, 6.3511686, ..., 6.111499 , 6.0969768,
          4.9400926],
         [      nan, 4.0118647, 5.886831 , ..., 4.122442 , 6.157474 ,
          6.5678635]],

        ...,

        [[      nan, 5.778422 , 5.8801317, ...,       nan, 6.451602 ,
                nan],
         [5.708816 ,       nan, 6.295473 , ..., 6.4506907, 6.0242085,
          5.8872547],
         [4.177934 , 6.2438283,       nan, ..., 6.3888135, 6.3567796,
          6.132985 ],
         ...,
         [      nan, 6.5343795, 6.459192 , ...,       nan, 4.8197684,
          5.975172 ],
         [6.3778796, 5.9302716, 6.351165 , ..., 6.1115007, 6.096971 ,
          4.923233 ],
         [      nan, 4.0118647, 5.886775 , ..., 4.122442 , 6.157475 ,
          6.5678596]],

        [[      nan, 5.778422 , 5.8801317, ...,       nan, 6.451602 ,
                nan],
         [5.708816 ,       nan, 6.295473 , ..., 6.4506907, 6.0242085,
          5.8872547],
         [4.177934 , 6.2438283,       nan, ..., 6.3888135, 6.3567796,
          6.132985 ],
         ...,
         [      nan, 6.5343795, 6.459192 , ...,       nan, 4.8197684,
          5.975172 ],
         [6.3778796, 5.9302716, 6.351165 , ..., 6.1115007, 6.096971 ,
          4.923233 ],
         [      nan, 4.0118647, 5.886775 , ..., 4.122442 , 6.157475 ,
          6.5678596]],

        [[      nan, 5.778422 , 5.8801317, ...,       nan, 6.451602 ,
                nan],
         [5.708816 ,       nan, 6.295473 , ..., 6.4506907, 6.0242085,
          5.8872547],
         [4.177934 , 6.2438283,       nan, ..., 6.3888135, 6.3567796,
          6.132985 ],
         ...,
         [      nan, 6.5343795, 6.459192 , ...,       nan, 4.8197684,
          5.975172 ],
         [6.3778796, 5.9302716, 6.351165 , ..., 6.1115007, 6.096971 ,
          4.923233 ],
         [      nan, 4.0118647, 5.886775 , ..., 4.122442 , 6.157475 ,
          6.5678596]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [7], 'to': [11]}
ms node:
{'name': 'log', 'output': array([[[[      nan, 5.7784276, 5.880128 , ...,       nan, 6.451628 ,
                nan],
         [5.7088246,       nan, 6.2954774, ..., 6.450692 , 6.024209 ,
          5.88725  ],
         [4.1779547, 6.243872 ,       nan, ..., 6.3888144, 6.3567824,
          6.132984 ],
         ...,
         [      nan, 6.5343876, 6.4592085, ...,       nan, 4.833765 ,
          5.9751678],
         [6.377877 , 5.930284 , 6.3511696, ..., 6.111497 , 6.096976 ,
          4.9400897],
         [      nan, 4.0118637, 5.8868327, ..., 4.122442 , 6.157474 ,
          6.5678673]],

        [[      nan, 5.7784276, 5.880128 , ...,       nan, 6.451628 ,
                nan],
         [5.7088246,       nan, 6.2954774, ..., 6.450692 , 6.024209 ,
          5.88725  ],
         [4.1779547, 6.243872 ,       nan, ..., 6.3888144, 6.3567824,
          6.132984 ],
         ...,
         [      nan, 6.5343876, 6.4592085, ...,       nan, 4.833765 ,
          5.9751678],
         [6.377877 , 5.930284 , 6.3511696, ..., 6.111497 , 6.096976 ,
          4.9400897],
         [      nan, 4.0118637, 5.8868327, ..., 4.122442 , 6.157474 ,
          6.5678673]],

        [[      nan, 5.7784276, 5.880128 , ...,       nan, 6.451628 ,
                nan],
         [5.7088246,       nan, 6.2954774, ..., 6.450692 , 6.024209 ,
          5.88725  ],
         [4.1779547, 6.243872 ,       nan, ..., 6.3888144, 6.3567824,
          6.132984 ],
         ...,
         [      nan, 6.5343876, 6.4592085, ...,       nan, 4.833765 ,
          5.9751678],
         [6.377877 , 5.930284 , 6.3511696, ..., 6.111497 , 6.096976 ,
          4.9400897],
         [      nan, 4.0118637, 5.8868327, ..., 4.122442 , 6.157474 ,
          6.5678673]],

        ...,

        [[      nan, 5.7784233, 5.880136 , ...,       nan, 6.451604 ,
                nan],
         [5.7088146,       nan, 6.295477 , ..., 6.4506907, 6.0242066,
          5.887257 ],
         [4.1779327, 6.2438264,       nan, ..., 6.3888135, 6.3567767,
          6.1329837],
         ...,
         [      nan, 6.5343776, 6.4591928, ...,       nan, 4.8197684,
          5.975171 ],
         [6.3778763, 5.930271 , 6.351166 , ..., 6.111499 , 6.09697  ,
          4.92323  ],
         [      nan, 4.0118637, 5.886777 , ..., 4.122442 , 6.1574755,
          6.5678635]],

        [[      nan, 5.7784233, 5.880136 , ...,       nan, 6.451604 ,
                nan],
         [5.7088146,       nan, 6.295477 , ..., 6.4506907, 6.0242066,
          5.887257 ],
         [4.1779327, 6.2438264,       nan, ..., 6.3888135, 6.3567767,
          6.1329837],
         ...,
         [      nan, 6.5343776, 6.4591928, ...,       nan, 4.8197684,
          5.975171 ],
         [6.3778763, 5.930271 , 6.351166 , ..., 6.111499 , 6.09697  ,
          4.92323  ],
         [      nan, 4.0118637, 5.886777 , ..., 4.122442 , 6.1574755,
          6.5678635]],

        [[      nan, 5.7784233, 5.880136 , ...,       nan, 6.451604 ,
                nan],
         [5.7088146,       nan, 6.295477 , ..., 6.4506907, 6.0242066,
          5.887257 ],
         [4.1779327, 6.2438264,       nan, ..., 6.3888135, 6.3567767,
          6.1329837],
         ...,
         [      nan, 6.5343776, 6.4591928, ...,       nan, 4.8197684,
          5.975171 ],
         [6.3778763, 5.930271 , 6.351166 , ..., 6.111499 , 6.09697  ,
          4.92323  ],
         [      nan, 4.0118637, 5.886777 , ..., 4.122442 , 6.1574755,
          6.5678635]]]], dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [7], 'to': [11]}
torch node:
{'name': 'log', 'output': array([[[[      nan, 5.778425 , 5.880125 , ...,       nan, 6.4516273,
                nan],
         [5.708826 ,       nan, 6.2954736, ..., 6.4506917, 6.024212 ,
          5.8872466],
         [4.177956 , 6.243874 ,       nan, ..., 6.388816 , 6.356786 ,
          6.1329856],
         ...,
         [      nan, 6.5343895, 6.4592075, ...,       nan, 4.8337665,
          5.9751697],
         [6.3778806, 5.9302845, 6.3511696, ..., 6.1114984, 6.0969768,
          4.9400926],
         [      nan, 4.0118647, 5.88683  , ..., 4.122442 , 6.157475 ,
          6.5678644]],

        [[      nan, 5.778425 , 5.880125 , ...,       nan, 6.4516273,
                nan],
         [5.708826 ,       nan, 6.2954736, ..., 6.4506917, 6.024212 ,
          5.8872466],
         [4.177956 , 6.243874 ,       nan, ..., 6.388816 , 6.356786 ,
          6.1329856],
         ...,
         [      nan, 6.5343895, 6.4592075, ...,       nan, 4.8337665,
          5.9751697],
         [6.3778806, 5.9302845, 6.3511696, ..., 6.1114984, 6.0969768,
          4.9400926],
         [      nan, 4.0118647, 5.88683  , ..., 4.122442 , 6.157475 ,
          6.5678644]],

        [[      nan, 5.778425 , 5.880125 , ...,       nan, 6.4516273,
                nan],
         [5.708826 ,       nan, 6.2954736, ..., 6.4506917, 6.024212 ,
          5.8872466],
         [4.177956 , 6.243874 ,       nan, ..., 6.388816 , 6.356786 ,
          6.1329856],
         ...,
         [      nan, 6.5343895, 6.4592075, ...,       nan, 4.8337665,
          5.9751697],
         [6.3778806, 5.9302845, 6.3511696, ..., 6.1114984, 6.0969768,
          4.9400926],
         [      nan, 4.0118647, 5.88683  , ..., 4.122442 , 6.157475 ,
          6.5678644]],

        ...,

        [[      nan, 5.7784204, 5.880133 , ...,       nan, 6.4516025,
                nan],
         [5.708816 ,       nan, 6.295473 , ..., 6.4506903, 6.024209 ,
          5.887254 ],
         [4.177934 , 6.2438283,       nan, ..., 6.388815 , 6.35678  ,
          6.132985 ],
         ...,
         [      nan, 6.5343795, 6.4591913, ...,       nan, 4.8197684,
          5.9751735],
         [6.3778796, 5.9302716, 6.351166 , ..., 6.1115003, 6.096971 ,
          4.923233 ],
         [      nan, 4.0118647, 5.886774 , ..., 4.122442 , 6.157476 ,
          6.56786  ]],

        [[      nan, 5.7784204, 5.880133 , ...,       nan, 6.4516025,
                nan],
         [5.708816 ,       nan, 6.295473 , ..., 6.4506903, 6.024209 ,
          5.887254 ],
         [4.177934 , 6.2438283,       nan, ..., 6.388815 , 6.35678  ,
          6.132985 ],
         ...,
         [      nan, 6.5343795, 6.4591913, ...,       nan, 4.8197684,
          5.9751735],
         [6.3778796, 5.9302716, 6.351166 , ..., 6.1115003, 6.096971 ,
          4.923233 ],
         [      nan, 4.0118647, 5.886774 , ..., 4.122442 , 6.157476 ,
          6.56786  ]],

        [[      nan, 5.7784204, 5.880133 , ...,       nan, 6.4516025,
                nan],
         [5.708816 ,       nan, 6.295473 , ..., 6.4506903, 6.024209 ,
          5.887254 ],
         [4.177934 , 6.2438283,       nan, ..., 6.388815 , 6.35678  ,
          6.132985 ],
         ...,
         [      nan, 6.5343795, 6.4591913, ...,       nan, 4.8197684,
          5.9751735],
         [6.3778796, 5.9302716, 6.351166 , ..., 6.1115003, 6.096971 ,
          4.923233 ],
         [      nan, 4.0118647, 5.886774 , ..., 4.122442 , 6.157476 ,
          6.56786  ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [7], 'to': [11]}

generate models:152

analyse output arrays in iter:183

pre layer res:
0:dropout
{'name': 'dropout', 'output': array([[[[ 8.1053418e-01, -9.9058139e-01,  9.1552979e-01, ...,
           2.4994853e+00,  9.0217775e-01,  9.2374992e-01],
         [-5.4122788e-01, -7.5467891e-01,  1.3324707e+00, ...,
           9.1521633e-01,  2.8975439e-01, -4.7873473e-01],
         [-9.3817860e-02,  3.4316519e-01, -4.4713682e-01, ...,
          -6.6228563e-01, -2.9570445e-01, -4.9863389e-01],
         ...,
         [ 2.1395215e-01,  1.4820487e+00, -1.1525341e+00, ...,
           1.8494333e+00,  1.0297114e+00, -1.0084373e+00],
         [-4.1312450e-01,  1.9671719e+00,  1.6234127e-01, ...,
           1.2819154e+00,  1.0866295e+00, -8.8416755e-02],
         [ 6.0671496e-01, -1.0214353e+00, -1.3697045e+00, ...,
           7.7785116e-01,  3.6097038e-01, -1.1006793e+00]],

        [[ 1.2326230e+00, -1.2620822e+00,  2.8738481e-01, ...,
          -6.4017946e-01, -5.9638667e-01, -2.3300831e+00],
         [ 1.0807008e+00,  1.0872267e+00,  1.0960399e+00, ...,
          -4.9371812e-01,  3.9503562e-01,  1.6626891e-01],
         [-7.0002681e-01, -9.6178971e-02, -7.5650867e-04, ...,
           1.6054679e-01,  5.5702400e-01, -1.2374626e+00],
         ...,
         [ 1.3006720e-01, -5.8572578e-01, -7.1157187e-01, ...,
           4.4722003e-01, -1.4275074e+00,  9.2413761e-02],
         [-9.5808774e-02, -6.0787439e-01, -1.6279803e-01, ...,
           1.1016861e+00,  9.3112296e-01,  3.4896690e-01],
         [-2.8996673e-01,  2.8184772e-01, -7.9120052e-01, ...,
           6.8852800e-01, -5.7529718e-01,  1.2193991e+00]],

        [[ 5.3953981e-01, -2.8192696e-01,  1.5440558e+00, ...,
           4.5030403e-01, -6.9116747e-01,  7.9660994e-01],
         [-5.3437597e-01,  5.4360950e-01, -3.4853527e-01, ...,
           5.2347171e-01, -1.4296448e+00, -5.8072037e-01],
         [-4.5926476e-01,  1.3177415e+00, -4.4823471e-01, ...,
          -5.6574750e-01, -1.3402437e+00,  8.2117802e-01],
         ...,
         [-1.6724087e+00, -1.5159537e+00, -1.7061281e-01, ...,
          -6.1100119e-01,  2.4071673e-01,  9.8321277e-01],
         [ 1.6504996e+00,  1.6610118e+00,  8.3357561e-01, ...,
          -1.2249854e+00, -2.0767457e+00,  1.4175135e-01],
         [ 1.1744633e+00,  1.6051453e+00,  1.8078721e+00, ...,
           2.6746649e-01,  1.0302373e+00,  1.3941737e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [4]}
tf node:
{'name': 'log', 'output': array([[[[-0.21006177,         nan, -0.08825238, ...,  0.9160848 ,
          -0.10294371, -0.07931389],
         [        nan,         nan,  0.28703487, ..., -0.08859482,
          -1.2387216 ,         nan],
         [        nan, -1.0695434 ,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [-1.5420029 ,  0.39342543,         nan, ...,  0.61487925,
           0.02927854,         nan],
         [        nan,  0.67659694, -1.8180546 , ...,  0.24835539,
           0.08308071,         nan],
         [-0.4996962 ,         nan,         nan, ..., -0.25122008,
          -1.0189594 ,         nan]],

        [[ 0.20914441,         nan, -1.2469332 , ...,         nan,
                  nan,         nan],
         [ 0.07760968,  0.08363019,  0.09170359, ...,         nan,
          -0.92877936, -1.7941488 ],
         [        nan,         nan,         nan, ..., -1.8291699 ,
          -0.58514696,         nan],
         ...,
         [-2.039704  ,         nan,         nan, ..., -0.80470455,
                  nan, -2.3814793 ],
         [        nan,         nan,         nan, ...,  0.09684184,
          -0.07136394, -1.0527782 ],
         [        nan, -1.2663884 ,         nan, ..., -0.37319928,
                  nan,  0.1983582 ]],

        [[-0.6170387 ,         nan,  0.4344126 , ..., -0.7978323 ,
                  nan, -0.22739014],
         [        nan, -0.60952413,         nan, ..., -0.6472723 ,
                  nan,         nan],
         [        nan,  0.2759193 ,         nan, ...,         nan,
                  nan, -0.19701536],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -1.4241345 , -0.01692973],
         [ 0.501078  ,  0.507427  , -0.18203087, ...,         nan,
                  nan, -1.9536809 ],
         [ 0.16081126,  0.47321433,  0.5921505 , ..., -1.318761  ,
           0.02978918,  0.33230194]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [5, 10]}
ms node:
{'name': 'log', 'output': array([[[[-0.21006417,         nan, -0.08825336, ...,  0.9160856 ,
          -0.1029447 , -0.07931387],
         [        nan,         nan,  0.28703293, ..., -0.08859581,
          -1.2387232 ,         nan],
         [        nan, -1.0695453 ,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [-1.5420061 ,  0.39342538,         nan, ...,  0.6148793 ,
           0.0292771 ,         nan],
         [        nan,  0.6765955 , -1.8180518 , ...,  0.24835819,
           0.08307781,         nan],
         [-0.49969766,         nan,         nan, ..., -0.2512223 ,
          -1.0189594 ,         nan]],

        [[ 0.2091452 ,         nan, -1.2469363 , ...,         nan,
                  nan,         nan],
         [ 0.07760677,  0.08362728,  0.09170416, ...,         nan,
          -0.92878175, -1.7941507 ],
         [        nan,         nan,         nan, ..., -1.829167  ,
          -0.58514637,         nan],
         ...,
         [-2.0397007 ,         nan,         nan, ..., -0.80470556,
                  nan, -2.3814795 ],
         [        nan,         nan,         nan, ...,  0.09684242,
          -0.07136392, -1.0527754 ],
         [        nan, -1.2663915 ,         nan, ..., -0.37319645,
                  nan,  0.198359  ]],

        [[-0.6170416 ,         nan,  0.4344104 , ..., -0.79783326,
                  nan, -0.22739254],
         [        nan, -0.60952705,         nan, ..., -0.6472689 ,
                  nan,         nan],
         [        nan,  0.27591738,         nan, ...,         nan,
                  nan, -0.19701777],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -1.4241344 , -0.01693117],
         [ 0.5010756 ,  0.50742364, -0.18203416, ...,         nan,
                  nan, -1.953684  ],
         [ 0.16080977,  0.47321188,  0.5921495 , ..., -1.318764  ,
           0.02978775,  0.3323048 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [5, 10]}
torch node:
{'name': 'log', 'output': array([[[[-0.21006177,         nan, -0.08825238, ...,  0.9160848 ,
          -0.10294371, -0.07931389],
         [        nan,         nan,  0.28703487, ..., -0.08859482,
          -1.2387216 ,         nan],
         [        nan, -1.0695434 ,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [-1.5420029 ,  0.39342543,         nan, ...,  0.61487925,
           0.02927854,         nan],
         [        nan,  0.67659694, -1.8180546 , ...,  0.24835539,
           0.08308071,         nan],
         [-0.4996962 ,         nan,         nan, ..., -0.25122008,
          -1.0189594 ,         nan]],

        [[ 0.2091444 ,         nan, -1.2469332 , ...,         nan,
                  nan,         nan],
         [ 0.07760968,  0.08363019,  0.09170359, ...,         nan,
          -0.92877936, -1.7941488 ],
         [        nan,         nan,         nan, ..., -1.8291699 ,
          -0.58514696,         nan],
         ...,
         [-2.039704  ,         nan,         nan, ..., -0.80470455,
                  nan, -2.3814793 ],
         [        nan,         nan,         nan, ...,  0.09684184,
          -0.07136394, -1.0527782 ],
         [        nan, -1.2663884 ,         nan, ..., -0.37319928,
                  nan,  0.1983582 ]],

        [[-0.6170387 ,         nan,  0.4344126 , ..., -0.7978323 ,
                  nan, -0.22739014],
         [        nan, -0.60952413,         nan, ..., -0.6472723 ,
                  nan,         nan],
         [        nan,  0.2759193 ,         nan, ...,         nan,
                  nan, -0.19701536],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -1.4241345 , -0.01692973],
         [ 0.501078  ,  0.507427  , -0.18203087, ...,         nan,
                  nan, -1.9536809 ],
         [ 0.16081126,  0.47321433,  0.5921505 , ..., -1.318761  ,
           0.02978918,  0.33230194]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [5, 10]}

generate models:158

analyse the exceptions in iter:186
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-2.0006, -0.2470,  0.6952,  ..., -1.1009,  0.4233, -0.2853],
           [-0.6893, -0.9273,  1.6755,  ..., -2.9432, -0.1838,  0.1152],
           [ 0.2933,  0.7679, -0.7727,  ...,  0.1085, -0.0753,  1.4290],
           ...,
           [ 0.2018, -0.5784, -0.5435,  ..., -1.6998,  0.6916,  0.5225],
           [ 0.4311,  0.4609,  0.0324,  ...,  0.1847,  1.3805,  0.5080],
           [-1.4586,  0.4441, -0.2880,  ..., -1.0408,  0.6670, -0.1102]],

          [[ 0.2334, -2.7185,  0.6427,  ...,  0.4922,  0.9280,  0.4612],
           [ 1.8706, -0.8189,  0.2935,  ..., -0.0580, -1.3561, -0.1848],
           [ 2.3607,  0.8216, -0.4977,  ..., -0.7226, -0.6770, -1.1679],
           ...,
           [-0.8833,  1.2432, -1.1707,  ...,  1.4218, -0.7963,  2.0541],
           [ 0.6759,  1.3914, -1.5332,  ..., -0.6314, -1.1179, -0.0890],
           [-0.6302,  0.4199, -0.6124,  ..., -1.1633, -1.0565,  1.5934]],

          [[-0.7616, -1.2226, -0.2362,  ..., -0.1456, -0.4491, -1.7495],
           [-0.0453, -0.2000, -0.0381,  ...,  0.3114, -0.0611,  1.4325],
           [ 1.0755,  0.5212, -1.3816,  ..., -1.4331,  0.2793, -0.7012],
           ...,
           [ 1.0920, -0.7643, -0.9154,  ..., -0.0430, -0.2207, -0.5908],
           [ 0.2225,  0.2946, -0.9948,  ...,  0.2177,  1.5463, -1.6903],
           [-0.8787,  0.4454, -1.0949,  ..., -1.6712,  0.4820,  0.2021]]]]])}
Given groups=1, weight of size [64, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-2.00064754e+000, -2.46976599e-001, 6.95216894e-001 ... -1.10087347e+000, 4.23343718e-001, -2.85252333e-001],
    [-6.89271510e-001, -9.27337289e-001, 1.67545855e+000 ... -2.94316483e+000, -1.83835745e-001, 1.15157396e-001],
    [2.93329805e-001, 7.67921627e-001, -7.72653162e-001 ... 1.08482853e-001, -7.53108039e-002, 1.42897415e+000],
    ...
    [2.01763973e-001, -5.78384161e-001, -5.43546796e-001 ... -1.69983900e+000, 6.91553593e-001, 5.22549152e-001],
    [4.31142062e-001, 4.60940957e-001, 3.23855393e-002 ... 1.84698641e-001, 1.38045084e+000, 5.07987201e-001],
    [-1.45862412e+000, 4.44101065e-001, -2.87969112e-001 ... -1.04079425e+000, 6.66977465e-001, -1.10239707e-001]],
   [[2.33415857e-001, -2.71849084e+000, 6.42721593e-001 ... 4.92191792e-001, 9.28003132e-001, 4.61180449e-001],
    [1.87063253e+000, -8.18894982e-001, 2.93505698e-001 ... -5.79544492e-002, -1.35610199e+000, -1.84808090e-001],
    [2.36073160e+000, 8.21584105e-001, -4.97651637e-001 ... -7.22631633e-001, -6.76979303e-001, -1.16786897e+000],
    ...
    [-8.83340180e-001, 1.24324286e+000, -1.17071128e+000 ... 1.42183089e+000, -7.96258628e-001, 2.05410981e+000],
    [6.75885975e-001, 1.39144003e+000, -1.53317761e+000 ... -6.31429255e-001, -1.11794209e+000, -8.89869258e-002],
    [-6.30194902e-001, 4.19873059e-001, -6.12370968e-001 ... -1.16331005e+000, -1.05654752e+000, 1.59338844e+000]],
   [[-7.61567533e-001, -1.22259653e+000, -2.36249149e-001 ... -1.45572260e-001, -4.49066311e-001, -1.74947703e+000],
    [-4.52662744e-002, -1.99959680e-001, -3.81412655e-002 ... 3.11433583e-001, -6.10521995e-002, 1.43252122e+000],
    [1.07553935e+000, 5.21175504e-001, -1.38156092e+000 ... -1.43311369e+000, 2.79282689e-001, -7.01241136e-001],
    ...
    [1.09203577e+000, -7.64267683e-001, -9.15383160e-001 ... -4.30405363e-002, -2.20726594e-001, -5.90766907e-001],
    [2.22464070e-001, 2.94611633e-001, -9.94805276e-001 ... 2.17665330e-001, 1.54633236e+000, -1.69028485e+000],
    [-8.78741503e-001, 4.45378482e-001, -1.09494150e+000 ... -1.67120504e+000, 4.82010484e-001, 2.02126384e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:161

analyse output arrays in iter:188

pre layer res:
11:add
{'name': 'add', 'output': array([[[[-3.5645847 , -1.8561769 , -1.0140843 , ..., -2.2631083 ,
           1.9470857 ,  3.838089  ],
         [ 0.76673204,  0.37241983, -1.1209502 , ...,  3.1804893 ,
          -1.7824472 , -0.40912366],
         [ 1.1964765 , -0.07525751, -0.9918021 , ...,  2.004745  ,
           0.91488695, -0.68400687],
         ...,
         [-1.1286501 ,  0.99565476,  1.1151559 , ..., -0.711444  ,
           1.6746316 ,  2.3052034 ],
         [ 0.24393004, -0.8518648 ,  0.47452873, ...,  0.09635116,
           0.28366327,  0.29824308],
         [-1.1267263 , -1.262594  , -1.8025718 , ..., -1.6300976 ,
          -0.22542623, -0.43518522]],

        [[-0.5866654 , -2.118884  , -1.223968  , ..., -0.3265233 ,
          -0.03128435,  0.38573706],
         [-0.73361456,  0.11124921,  4.7186413 , ...,  2.6268053 ,
           0.9547147 ,  0.29301235],
         [ 2.6074936 ,  0.17019057, -0.08632338, ...,  1.3433659 ,
          -0.97532725, -0.21909449],
         ...,
         [ 1.6597373 , -2.6635838 ,  1.6167456 , ...,  1.313704  ,
          -1.6038084 ,  0.8709126 ],
         [ 1.0765442 , -0.01539809,  0.815225  , ...,  1.4225963 ,
           2.2983627 ,  1.7637901 ],
         [-1.7255118 ,  0.7990457 ,  1.221543  , ...,  3.0953674 ,
           0.4254435 , -0.29614592]],

        [[-0.8655591 ,  0.03486693,  0.90280724, ..., -1.5901453 ,
          -0.7113358 , -0.9126723 ],
         [ 3.3907948 , -3.5978432 , -0.08618629, ...,  0.35265756,
          -0.90394664, -0.66326106],
         [-1.85542   , -0.5554565 ,  0.7544557 , ...,  0.2513855 ,
          -1.5354898 ,  0.6871085 ],
         ...,
         [ 0.54189616,  2.1839018 ,  2.7135668 , ...,  1.9165378 ,
           0.8572726 ,  0.516701  ],
         [-0.6073035 , -0.55740684, -0.19365716, ...,  1.7867988 ,
          -0.07360291, -0.6292888 ],
         [ 0.59417677,  1.7401111 ,  1.2203788 , ...,  1.7591733 ,
           0.43600193,  3.2660954 ]],

        ...,

        [[-0.5866654 , -2.118884  , -1.223968  , ..., -0.3265233 ,
          -0.03128435,  0.38573706],
         [-0.73361456,  0.11124921,  4.7186413 , ...,  2.6268053 ,
           0.9547147 ,  0.29301235],
         [ 2.6074936 ,  0.17019057, -0.08632338, ...,  1.3433659 ,
          -0.97532725, -0.21909449],
         ...,
         [ 1.6597373 , -2.6635838 ,  1.6167456 , ...,  1.313704  ,
          -1.6038084 ,  0.8709126 ],
         [ 1.0765442 , -0.01539809,  0.815225  , ...,  1.4225963 ,
           2.2983627 ,  1.7637901 ],
         [-1.7255118 ,  0.7990457 ,  1.221543  , ...,  3.0953674 ,
           0.4254435 , -0.29614592]],

        [[-0.8655591 ,  0.03486693,  0.90280724, ..., -1.5901453 ,
          -0.7113358 , -0.9126723 ],
         [ 3.3907948 , -3.5978432 , -0.08618629, ...,  0.35265756,
          -0.90394664, -0.66326106],
         [-1.85542   , -0.5554565 ,  0.7544557 , ...,  0.2513855 ,
          -1.5354898 ,  0.6871085 ],
         ...,
         [ 0.54189616,  2.1839018 ,  2.7135668 , ...,  1.9165378 ,
           0.8572726 ,  0.516701  ],
         [-0.6073035 , -0.55740684, -0.19365716, ...,  1.7867988 ,
          -0.07360291, -0.6292888 ],
         [ 0.59417677,  1.7401111 ,  1.2203788 , ...,  1.7591733 ,
           0.43600193,  3.2660954 ]],

        [[ 1.9521656 , -2.5744228 , -1.3585904 , ...,  1.2676401 ,
           0.20800567, -1.6679302 ],
         [ 0.8671373 ,  2.2931402 ,  2.8712776 , ..., -3.4583852 ,
          -3.2435544 ,  0.48297837],
         [-0.28667557,  0.3359598 ,  1.7650471 , ...,  1.792925  ,
           1.7366507 , -3.006116  ],
         ...,
         [-0.7006767 , -1.590543  , -3.5921059 , ...,  0.15911335,
           2.2084782 , -0.2838905 ],
         [-0.17919934,  1.3478158 , -0.34013197, ...,  1.6328359 ,
          -0.7149432 , -1.3324502 ],
         [ 3.553035  ,  1.9556711 ,  2.6691341 , ..., -1.6741161 ,
           0.19026989,  3.473061  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [4, 14], 'to': [5]}
tf node:
{'name': 'linear', 'output': array([[[[-8.8415527e+00, -8.8415527e+00, -8.8415527e+00, ...,
          -8.8415527e+00, -8.8415527e+00, -8.8415527e+00],
         [ 4.4050293e+00,  4.4050293e+00,  4.4050293e+00, ...,
           4.4050293e+00,  4.4050293e+00,  4.4050293e+00],
         [ 3.9786377e+00,  3.9786377e+00,  3.9786377e+00, ...,
           3.9786377e+00,  3.9786377e+00,  3.9786377e+00],
         ...,
         [-5.9240723e+00, -5.9240723e+00, -5.9240723e+00, ...,
          -5.9240723e+00, -5.9240723e+00, -5.9240723e+00],
         [ 6.4993286e-01,  6.4993286e-01,  6.4993286e-01, ...,
           6.4993286e-01,  6.4993286e-01,  6.4993286e-01],
         [-3.4451904e+00, -3.4451904e+00, -3.4451904e+00, ...,
          -3.4451904e+00, -3.4451904e+00, -3.4451904e+00]],

        [[-3.1296692e+00, -3.1296692e+00, -3.1296692e+00, ...,
          -3.1296692e+00, -3.1296692e+00, -3.1296692e+00],
         [ 4.1851807e-01,  4.1851807e-01,  4.1851807e-01, ...,
           4.1851807e-01,  4.1851807e-01,  4.1851807e-01],
         [-4.0493164e+00, -4.0493164e+00, -4.0493164e+00, ...,
          -4.0493164e+00, -4.0493164e+00, -4.0493164e+00],
         ...,
         [-2.3571777e+00, -2.3571777e+00, -2.3571777e+00, ...,
          -2.3571777e+00, -2.3571777e+00, -2.3571777e+00],
         [ 4.0457611e+00,  4.0457611e+00,  4.0457611e+00, ...,
           4.0457611e+00,  4.0457611e+00,  4.0457611e+00],
         [-4.6906738e+00, -4.6906738e+00, -4.6906738e+00, ...,
          -4.6906738e+00, -4.6906738e+00, -4.6906738e+00]],

        [[-2.8991699e-03, -2.8991699e-03, -2.8991699e-03, ...,
          -2.8991699e-03, -2.8991699e-03, -2.8991699e-03],
         [-2.7148438e+00, -2.7148438e+00, -2.7148438e+00, ...,
          -2.7148438e+00, -2.7148438e+00, -2.7148438e+00],
         [ 1.9113770e+00,  1.9113770e+00,  1.9113770e+00, ...,
           1.9113770e+00,  1.9113770e+00,  1.9113770e+00],
         ...,
         [ 1.8393555e+00,  1.8393555e+00,  1.8393555e+00, ...,
           1.8393555e+00,  1.8393555e+00,  1.8393555e+00],
         [-1.0520752e+01, -1.0520752e+01, -1.0520752e+01, ...,
          -1.0520752e+01, -1.0520752e+01, -1.0520752e+01],
         [ 1.6131226e+01,  1.6131226e+01,  1.6131226e+01, ...,
           1.6131226e+01,  1.6131226e+01,  1.6131226e+01]],

        ...,

        [[-3.1296692e+00, -3.1296692e+00, -3.1296692e+00, ...,
          -3.1296692e+00, -3.1296692e+00, -3.1296692e+00],
         [ 4.1851807e-01,  4.1851807e-01,  4.1851807e-01, ...,
           4.1851807e-01,  4.1851807e-01,  4.1851807e-01],
         [-4.0493164e+00, -4.0493164e+00, -4.0493164e+00, ...,
          -4.0493164e+00, -4.0493164e+00, -4.0493164e+00],
         ...,
         [-2.3571777e+00, -2.3571777e+00, -2.3571777e+00, ...,
          -2.3571777e+00, -2.3571777e+00, -2.3571777e+00],
         [ 4.0457611e+00,  4.0457611e+00,  4.0457611e+00, ...,
           4.0457611e+00,  4.0457611e+00,  4.0457611e+00],
         [-4.6906738e+00, -4.6906738e+00, -4.6906738e+00, ...,
          -4.6906738e+00, -4.6906738e+00, -4.6906738e+00]],

        [[-2.8991699e-03, -2.8991699e-03, -2.8991699e-03, ...,
          -2.8991699e-03, -2.8991699e-03, -2.8991699e-03],
         [-2.7148438e+00, -2.7148438e+00, -2.7148438e+00, ...,
          -2.7148438e+00, -2.7148438e+00, -2.7148438e+00],
         [ 1.9113770e+00,  1.9113770e+00,  1.9113770e+00, ...,
           1.9113770e+00,  1.9113770e+00,  1.9113770e+00],
         ...,
         [ 1.8393555e+00,  1.8393555e+00,  1.8393555e+00, ...,
           1.8393555e+00,  1.8393555e+00,  1.8393555e+00],
         [-1.0520752e+01, -1.0520752e+01, -1.0520752e+01, ...,
          -1.0520752e+01, -1.0520752e+01, -1.0520752e+01],
         [ 1.6131226e+01,  1.6131226e+01,  1.6131226e+01, ...,
           1.6131226e+01,  1.6131226e+01,  1.6131226e+01]],

        [[ 2.7658691e+00,  2.7658691e+00,  2.7658691e+00, ...,
           2.7658691e+00,  2.7658691e+00,  2.7658691e+00],
         [-1.5565186e+00, -1.5565186e+00, -1.5565186e+00, ...,
          -1.5565186e+00, -1.5565186e+00, -1.5565186e+00],
         [ 1.2592407e+01,  1.2592407e+01,  1.2592407e+01, ...,
           1.2592407e+01,  1.2592407e+01,  1.2592407e+01],
         ...,
         [ 1.4404297e+00,  1.4404297e+00,  1.4404297e+00, ...,
           1.4404297e+00,  1.4404297e+00,  1.4404297e+00],
         [-2.8688812e+00, -2.8688812e+00, -2.8688812e+00, ...,
          -2.8688812e+00, -2.8688812e+00, -2.8688812e+00],
         [ 1.7571777e+01,  1.7571777e+01,  1.7571777e+01, ...,
           1.7571777e+01,  1.7571777e+01,  1.7571777e+01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 100]), 'from': [11], 'to': [6]}
ms node:
{'name': 'linear', 'output': array([[[[-8.8413391e+00, -8.8413391e+00, -8.8413391e+00, ...,
          -8.8413391e+00, -8.8413391e+00, -8.8413391e+00],
         [ 4.4051580e+00,  4.4051580e+00,  4.4051580e+00, ...,
           4.4051590e+00,  4.4051590e+00,  4.4051590e+00],
         [ 3.9796045e+00,  3.9796045e+00,  3.9796045e+00, ...,
           3.9796038e+00,  3.9796038e+00,  3.9796038e+00],
         ...,
         [-5.9221716e+00, -5.9221716e+00, -5.9221716e+00, ...,
          -5.9221730e+00, -5.9221730e+00, -5.9221730e+00],
         [ 6.5064836e-01,  6.5064836e-01,  6.5064836e-01, ...,
           6.5064812e-01,  6.5064812e-01,  6.5064812e-01],
         [-3.4466531e+00, -3.4466531e+00, -3.4466531e+00, ...,
          -3.4466529e+00, -3.4466529e+00, -3.4466529e+00]],

        [[-3.1308799e+00, -3.1308799e+00, -3.1308799e+00, ...,
          -3.1308804e+00, -3.1308804e+00, -3.1308804e+00],
         [ 4.1827908e-01,  4.1827908e-01,  4.1827908e-01, ...,
           4.1827917e-01,  4.1827917e-01,  4.1827917e-01],
         [-4.0501480e+00, -4.0501480e+00, -4.0501480e+00, ...,
          -4.0501480e+00, -4.0501480e+00, -4.0501480e+00],
         ...,
         [-2.3565536e+00, -2.3565536e+00, -2.3565536e+00, ...,
          -2.3565533e+00, -2.3565533e+00, -2.3565533e+00],
         [ 4.0463781e+00,  4.0463781e+00,  4.0463781e+00, ...,
           4.0463777e+00,  4.0463777e+00,  4.0463777e+00],
         [-4.6894994e+00, -4.6894994e+00, -4.6894994e+00, ...,
          -4.6894994e+00, -4.6894994e+00, -4.6894994e+00]],

        [[-2.3292303e-03, -2.3292303e-03, -2.3292303e-03, ...,
          -2.3292303e-03, -2.3292303e-03, -2.3292303e-03],
         [-2.7156911e+00, -2.7156911e+00, -2.7156911e+00, ...,
          -2.7156920e+00, -2.7156920e+00, -2.7156920e+00],
         [ 1.9126632e+00,  1.9126632e+00,  1.9126632e+00, ...,
           1.9126632e+00,  1.9126632e+00,  1.9126632e+00],
         ...,
         [ 1.8405848e+00,  1.8405848e+00,  1.8405848e+00, ...,
           1.8405848e+00,  1.8405848e+00,  1.8405848e+00],
         [-1.0523234e+01, -1.0523234e+01, -1.0523234e+01, ...,
          -1.0523234e+01, -1.0523234e+01, -1.0523234e+01],
         [ 1.6131548e+01,  1.6131548e+01,  1.6131548e+01, ...,
           1.6131546e+01,  1.6131546e+01,  1.6131546e+01]],

        ...,

        [[-3.1308799e+00, -3.1308799e+00, -3.1308799e+00, ...,
          -3.1308804e+00, -3.1308804e+00, -3.1308804e+00],
         [ 4.1827908e-01,  4.1827908e-01,  4.1827908e-01, ...,
           4.1827917e-01,  4.1827917e-01,  4.1827917e-01],
         [-4.0501480e+00, -4.0501480e+00, -4.0501480e+00, ...,
          -4.0501480e+00, -4.0501480e+00, -4.0501480e+00],
         ...,
         [-2.3565536e+00, -2.3565536e+00, -2.3565536e+00, ...,
          -2.3565533e+00, -2.3565533e+00, -2.3565533e+00],
         [ 4.0463781e+00,  4.0463781e+00,  4.0463781e+00, ...,
           4.0463777e+00,  4.0463777e+00,  4.0463777e+00],
         [-4.6894994e+00, -4.6894994e+00, -4.6894994e+00, ...,
          -4.6894994e+00, -4.6894994e+00, -4.6894994e+00]],

        [[-2.3292303e-03, -2.3292303e-03, -2.3292303e-03, ...,
          -2.3292303e-03, -2.3292303e-03, -2.3292303e-03],
         [-2.7156911e+00, -2.7156911e+00, -2.7156911e+00, ...,
          -2.7156920e+00, -2.7156920e+00, -2.7156920e+00],
         [ 1.9126632e+00,  1.9126632e+00,  1.9126632e+00, ...,
           1.9126632e+00,  1.9126632e+00,  1.9126632e+00],
         ...,
         [ 1.8405848e+00,  1.8405848e+00,  1.8405848e+00, ...,
           1.8405848e+00,  1.8405848e+00,  1.8405848e+00],
         [-1.0523234e+01, -1.0523234e+01, -1.0523234e+01, ...,
          -1.0523234e+01, -1.0523234e+01, -1.0523234e+01],
         [ 1.6131548e+01,  1.6131548e+01,  1.6131548e+01, ...,
           1.6131546e+01,  1.6131546e+01,  1.6131546e+01]],

        [[ 2.7642226e+00,  2.7642226e+00,  2.7642226e+00, ...,
           2.7642217e+00,  2.7642217e+00,  2.7642217e+00],
         [-1.5553827e+00, -1.5553827e+00, -1.5553827e+00, ...,
          -1.5553825e+00, -1.5553825e+00, -1.5553825e+00],
         [ 1.2593680e+01,  1.2593680e+01,  1.2593680e+01, ...,
           1.2593680e+01,  1.2593680e+01,  1.2593680e+01],
         ...,
         [ 1.4379315e+00,  1.4379315e+00,  1.4379315e+00, ...,
           1.4379301e+00,  1.4379301e+00,  1.4379301e+00],
         [-2.8675303e+00, -2.8675303e+00, -2.8675303e+00, ...,
          -2.8675303e+00, -2.8675303e+00, -2.8675303e+00],
         [ 1.7572668e+01,  1.7572668e+01,  1.7572668e+01, ...,
           1.7572668e+01,  1.7572668e+01,  1.7572668e+01]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 100), 'from': [11], 'to': [6]}
torch node:
{'name': 'linear', 'output': array([[[[-8.8413391e+00, -8.8413391e+00, -8.8413391e+00, ...,
          -8.8413391e+00, -8.8413391e+00, -8.8413391e+00],
         [ 4.4051580e+00,  4.4051580e+00,  4.4051580e+00, ...,
           4.4051590e+00,  4.4051590e+00,  4.4051590e+00],
         [ 3.9796045e+00,  3.9796045e+00,  3.9796045e+00, ...,
           3.9796038e+00,  3.9796038e+00,  3.9796038e+00],
         ...,
         [-5.9221716e+00, -5.9221716e+00, -5.9221716e+00, ...,
          -5.9221730e+00, -5.9221730e+00, -5.9221730e+00],
         [ 6.5064836e-01,  6.5064836e-01,  6.5064836e-01, ...,
           6.5064812e-01,  6.5064812e-01,  6.5064812e-01],
         [-3.4466531e+00, -3.4466531e+00, -3.4466531e+00, ...,
          -3.4466529e+00, -3.4466529e+00, -3.4466529e+00]],

        [[-3.1308799e+00, -3.1308799e+00, -3.1308799e+00, ...,
          -3.1308804e+00, -3.1308804e+00, -3.1308804e+00],
         [ 4.1827908e-01,  4.1827908e-01,  4.1827908e-01, ...,
           4.1827917e-01,  4.1827917e-01,  4.1827917e-01],
         [-4.0501480e+00, -4.0501480e+00, -4.0501480e+00, ...,
          -4.0501480e+00, -4.0501480e+00, -4.0501480e+00],
         ...,
         [-2.3565536e+00, -2.3565536e+00, -2.3565536e+00, ...,
          -2.3565533e+00, -2.3565533e+00, -2.3565533e+00],
         [ 4.0463781e+00,  4.0463781e+00,  4.0463781e+00, ...,
           4.0463777e+00,  4.0463777e+00,  4.0463777e+00],
         [-4.6894994e+00, -4.6894994e+00, -4.6894994e+00, ...,
          -4.6894994e+00, -4.6894994e+00, -4.6894994e+00]],

        [[-2.3292303e-03, -2.3292303e-03, -2.3292303e-03, ...,
          -2.3292303e-03, -2.3292303e-03, -2.3292303e-03],
         [-2.7156911e+00, -2.7156911e+00, -2.7156911e+00, ...,
          -2.7156920e+00, -2.7156920e+00, -2.7156920e+00],
         [ 1.9126632e+00,  1.9126632e+00,  1.9126632e+00, ...,
           1.9126632e+00,  1.9126632e+00,  1.9126632e+00],
         ...,
         [ 1.8405848e+00,  1.8405848e+00,  1.8405848e+00, ...,
           1.8405848e+00,  1.8405848e+00,  1.8405848e+00],
         [-1.0523234e+01, -1.0523234e+01, -1.0523234e+01, ...,
          -1.0523234e+01, -1.0523234e+01, -1.0523234e+01],
         [ 1.6131548e+01,  1.6131548e+01,  1.6131548e+01, ...,
           1.6131546e+01,  1.6131546e+01,  1.6131546e+01]],

        ...,

        [[-3.1308799e+00, -3.1308799e+00, -3.1308799e+00, ...,
          -3.1308804e+00, -3.1308804e+00, -3.1308804e+00],
         [ 4.1827908e-01,  4.1827908e-01,  4.1827908e-01, ...,
           4.1827917e-01,  4.1827917e-01,  4.1827917e-01],
         [-4.0501480e+00, -4.0501480e+00, -4.0501480e+00, ...,
          -4.0501480e+00, -4.0501480e+00, -4.0501480e+00],
         ...,
         [-2.3565536e+00, -2.3565536e+00, -2.3565536e+00, ...,
          -2.3565533e+00, -2.3565533e+00, -2.3565533e+00],
         [ 4.0463781e+00,  4.0463781e+00,  4.0463781e+00, ...,
           4.0463777e+00,  4.0463777e+00,  4.0463777e+00],
         [-4.6894994e+00, -4.6894994e+00, -4.6894994e+00, ...,
          -4.6894994e+00, -4.6894994e+00, -4.6894994e+00]],

        [[-2.3292303e-03, -2.3292303e-03, -2.3292303e-03, ...,
          -2.3292303e-03, -2.3292303e-03, -2.3292303e-03],
         [-2.7156911e+00, -2.7156911e+00, -2.7156911e+00, ...,
          -2.7156920e+00, -2.7156920e+00, -2.7156920e+00],
         [ 1.9126632e+00,  1.9126632e+00,  1.9126632e+00, ...,
           1.9126632e+00,  1.9126632e+00,  1.9126632e+00],
         ...,
         [ 1.8405848e+00,  1.8405848e+00,  1.8405848e+00, ...,
           1.8405848e+00,  1.8405848e+00,  1.8405848e+00],
         [-1.0523234e+01, -1.0523234e+01, -1.0523234e+01, ...,
          -1.0523234e+01, -1.0523234e+01, -1.0523234e+01],
         [ 1.6131548e+01,  1.6131548e+01,  1.6131548e+01, ...,
           1.6131546e+01,  1.6131546e+01,  1.6131546e+01]],

        [[ 2.7642226e+00,  2.7642226e+00,  2.7642226e+00, ...,
           2.7642217e+00,  2.7642217e+00,  2.7642217e+00],
         [-1.5553827e+00, -1.5553827e+00, -1.5553827e+00, ...,
          -1.5553825e+00, -1.5553825e+00, -1.5553825e+00],
         [ 1.2593680e+01,  1.2593680e+01,  1.2593680e+01, ...,
           1.2593680e+01,  1.2593680e+01,  1.2593680e+01],
         ...,
         [ 1.4379315e+00,  1.4379315e+00,  1.4379315e+00, ...,
           1.4379301e+00,  1.4379301e+00,  1.4379301e+00],
         [-2.8675303e+00, -2.8675303e+00, -2.8675303e+00, ...,
          -2.8675303e+00, -2.8675303e+00, -2.8675303e+00],
         [ 1.7572668e+01,  1.7572668e+01,  1.7572668e+01, ...,
           1.7572668e+01,  1.7572668e+01,  1.7572668e+01]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 100]), 'from': [11], 'to': [6]}

generate models:163

analyse the exceptions in iter:189
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-0.1361, -0.0232, -1.3562,  ..., -1.4178, -0.3988, -1.5288],
           [ 1.0591,  0.8882, -1.3537,  ..., -0.6686,  0.0122, -0.1061],
           [-0.6760,  0.4588, -0.4478,  ...,  0.2216, -0.2048, -0.0547],
           ...,
           [ 0.2408, -0.0631, -0.7690,  ...,  0.4260,  0.1603,  0.9270],
           [ 0.4597, -0.2814, -2.0190,  ...,  0.3009, -0.1364,  0.2816],
           [-0.8801, -0.2788, -1.2819,  ...,  1.5773,  0.3525,  0.2464]],

          [[-1.0978, -0.1180, -1.4472,  ...,  2.8325,  0.8646, -0.0439],
           [-1.3802, -0.4503,  0.4866,  ...,  0.5975, -1.3292, -1.1482],
           [-0.8276, -0.2848,  0.8926,  ..., -0.1818, -0.3215,  0.3209],
           ...,
           [ 0.4292, -1.1942,  0.4400,  ...,  0.7490, -0.6469,  1.4566],
           [ 0.3726,  0.4447, -0.0336,  ..., -1.1362,  0.2048,  1.4820],
           [ 0.6667, -0.2213, -0.1484,  ..., -0.8221,  0.2787,  2.4391]],

          [[ 1.0494, -1.1198, -0.8247,  ..., -1.5742, -0.0161,  1.0261],
           [ 0.6983, -1.7021,  1.6880,  ...,  0.2442,  0.5533, -0.3101],
           [-0.0832, -1.7320, -0.1814,  ..., -0.4011, -0.9410, -0.6703],
           ...,
           [-1.0144,  0.2468, -1.4906,  ...,  0.0310,  0.6644, -0.6116],
           [-0.4410, -1.2203,  0.6098,  ...,  0.1939,  0.3774,  1.1003],
           [-0.0355, -0.5802,  0.1490,  ...,  1.1594,  0.3679,  2.3396]]]]])}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-1.36110395e-001, -2.32490059e-002, -1.35622287e+000 ... -1.41775358e+000, -3.98844600e-001, -1.52884972e+000],
    [1.05913889e+000, 8.88231575e-001, -1.35365748e+000 ... -6.68604374e-001, 1.22193713e-002, -1.06077462e-001],
    [-6.76020503e-001, 4.58843172e-001, -4.47767526e-001 ... 2.21615076e-001, -2.04827145e-001, -5.47133759e-002],
    ...
    [2.40766838e-001, -6.30988553e-002, -7.69001544e-001 ... 4.25971031e-001, 1.60261944e-001, 9.27009404e-001],
    [4.59733069e-001, -2.81352967e-001, -2.01896048e+000 ... 3.00879240e-001, -1.36396885e-001, 2.81579703e-001],
    [-8.80055666e-001, -2.78806090e-001, -1.28193557e+000 ... 1.57734215e+000, 3.52501750e-001, 2.46422559e-001]],
   [[-1.09780693e+000, -1.18025593e-001, -1.44715309e+000 ... 2.83245015e+000, 8.64584386e-001, -4.39408757e-002],
    [-1.38021564e+000, -4.50316280e-001, 4.86556113e-001 ... 5.97452343e-001, -1.32920921e+000, -1.14816368e+000],
    [-8.27636063e-001, -2.84840196e-001, 8.92589509e-001 ... -1.81822807e-001, -3.21541011e-001, 3.20922613e-001],
    ...
    [4.29225266e-001, -1.19420290e+000, 4.39951211e-001 ... 7.49017656e-001, -6.46866858e-001, 1.45658970e+000],
    [3.72614712e-001, 4.44694221e-001, -3.35518047e-002 ... -1.13618577e+000, 2.04785541e-001, 1.48202276e+000],
    [6.66653335e-001, -2.21259668e-001, -1.48367479e-001 ... -8.22138309e-001, 2.78688401e-001, 2.43911576e+000]],
   [[1.04944754e+000, -1.11979377e+000, -8.24663818e-001 ... -1.57419348e+000, -1.60922874e-002, 1.02608514e+000],
    [6.98323488e-001, -1.70206249e+000, 1.68800783e+000 ... 2.44166210e-001, 5.53297818e-001, -3.10057133e-001],
    [-8.31608251e-002, -1.73200703e+000, -1.81419581e-001 ... -4.01093751e-001, -9.41047788e-001, -6.70293808e-001],
    ...
    [-1.01436424e+000, 2.46772721e-001, -1.49064076e+000 ... 3.09695173e-002, 6.64407730e-001, -6.11562431e-001],
    [-4.41045314e-001, -1.22033203e+000, 6.09756947e-001 ... 1.93895787e-001, 3.77366394e-001, 1.10029244e+000],
    [-3.54764499e-002, -5.80240309e-001, 1.49008796e-001 ... 1.15942562e+000, 3.67909521e-001, 2.33964729e+000]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:164

analyse output arrays in iter:192

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[ 9.740204  ,  9.740204  ,  9.740204  , ...,  9.740204  ,
           9.740204  ,  9.740204  ],
         [ 2.0632782 ,  2.0632782 ,  2.0632782 , ...,  2.0632782 ,
           2.0632782 ,  2.0632782 ],
         [-0.6466675 , -0.6466675 , -0.6466675 , ..., -0.6466675 ,
          -0.6466675 , -0.6466675 ],
         ...,
         [ 2.1707764 ,  2.1707764 ,  2.1707764 , ...,  2.1707764 ,
           2.1707764 ,  2.1707764 ],
         [-4.8757935 , -4.8757935 , -4.8757935 , ..., -4.8757935 ,
          -4.8757935 , -4.8757935 ],
         [ 0.8368225 ,  0.8368225 ,  0.8368225 , ...,  0.8368225 ,
           0.8368225 ,  0.8368225 ]],

        [[ 0.03166199,  0.03166199,  0.03166199, ...,  0.03166199,
           0.03166199,  0.03166199],
         [ 2.6157227 ,  2.6157227 ,  2.6157227 , ...,  2.6157227 ,
           2.6157227 ,  2.6157227 ],
         [-5.53479   , -5.53479   , -5.53479   , ..., -5.53479   ,
          -5.53479   , -5.53479   ],
         ...,
         [ 2.0069275 ,  2.0069275 ,  2.0069275 , ...,  2.0069275 ,
           2.0069275 ,  2.0069275 ],
         [-3.2357178 , -3.2357178 , -3.2357178 , ..., -3.2357178 ,
          -3.2357178 , -3.2357178 ],
         [ 4.9103928 ,  4.9103928 ,  4.9103928 , ...,  4.9103928 ,
           4.9103928 ,  4.9103928 ]],

        [[ 1.0833893 ,  1.0833893 ,  1.0833893 , ...,  1.0833893 ,
           1.0833893 ,  1.0833893 ],
         [ 0.07897949,  0.07897949,  0.07897949, ...,  0.07897949,
           0.07897949,  0.07897949],
         [-3.022644  , -3.022644  , -3.022644  , ..., -3.022644  ,
          -3.022644  , -3.022644  ],
         ...,
         [ 4.9403076 ,  4.9403076 ,  4.9403076 , ...,  4.9403076 ,
           4.9403076 ,  4.9403076 ],
         [ 6.250145  ,  6.250145  ,  6.250145  , ...,  6.250145  ,
           6.250145  ,  6.250145  ],
         [-8.178101  , -8.178101  , -8.178101  , ..., -8.178101  ,
          -8.178101  , -8.178101  ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [4, 10, 17]}
ms node:
{'name': 'linear', 'output': array([[[[ 9.738071  ,  9.738071  ,  9.738071  , ...,  9.738071  ,
           9.738071  ,  9.738071  ],
         [ 2.0647628 ,  2.0647628 ,  2.0647628 , ...,  2.0647628 ,
           2.0647628 ,  2.0647628 ],
         [-0.6468935 , -0.6468935 , -0.6468935 , ..., -0.6468935 ,
          -0.6468935 , -0.6468935 ],
         ...,
         [ 2.1705837 ,  2.1705837 ,  2.1705837 , ...,  2.170584  ,
           2.170584  ,  2.170584  ],
         [-4.8747416 , -4.8747416 , -4.8747416 , ..., -4.8747416 ,
          -4.8747416 , -4.8747416 ],
         [ 0.83697057,  0.83697057,  0.83697057, ...,  0.83697045,
           0.83697045,  0.83697045]],

        [[ 0.03215677,  0.03215677,  0.03215677, ...,  0.03215599,
           0.03215599,  0.03215599],
         [ 2.6139753 ,  2.6139753 ,  2.6139753 , ...,  2.6139753 ,
           2.6139753 ,  2.6139753 ],
         [-5.53577   , -5.53577   , -5.53577   , ..., -5.5357685 ,
          -5.5357685 , -5.5357685 ],
         ...,
         [ 2.0059702 ,  2.0059702 ,  2.0059702 , ...,  2.0059714 ,
           2.0059714 ,  2.0059714 ],
         [-3.2345552 , -3.2345552 , -3.2345552 , ..., -3.2345557 ,
          -3.2345557 , -3.2345557 ],
         [ 4.910676  ,  4.910676  ,  4.910676  , ...,  4.9106755 ,
           4.9106755 ,  4.9106755 ]],

        [[ 1.0818886 ,  1.0818886 ,  1.0818886 , ...,  1.0818882 ,
           1.0818882 ,  1.0818882 ],
         [ 0.07747597,  0.07747597,  0.07747597, ...,  0.0774765 ,
           0.0774765 ,  0.0774765 ],
         [-3.0213459 , -3.0213459 , -3.0213459 , ..., -3.021347  ,
          -3.021347  , -3.021347  ],
         ...,
         [ 4.9394608 ,  4.9394608 ,  4.9394608 , ...,  4.9394617 ,
           4.9394617 ,  4.9394617 ],
         [ 6.251363  ,  6.251363  ,  6.251363  , ...,  6.251363  ,
           6.251363  ,  6.251363  ],
         [-8.179525  , -8.179525  , -8.179525  , ..., -8.179525  ,
          -8.179525  , -8.179525  ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [4, 10, 17]}
torch node:
{'name': 'linear', 'output': array([[[[ 9.738071  ,  9.738071  ,  9.738071  , ...,  9.738071  ,
           9.738071  ,  9.738071  ],
         [ 2.0647628 ,  2.0647628 ,  2.0647628 , ...,  2.0647628 ,
           2.0647628 ,  2.0647628 ],
         [-0.6468935 , -0.6468935 , -0.6468935 , ..., -0.6468935 ,
          -0.6468935 , -0.6468935 ],
         ...,
         [ 2.1705837 ,  2.1705837 ,  2.1705837 , ...,  2.170584  ,
           2.170584  ,  2.170584  ],
         [-4.8747416 , -4.8747416 , -4.8747416 , ..., -4.8747416 ,
          -4.8747416 , -4.8747416 ],
         [ 0.83697057,  0.83697057,  0.83697057, ...,  0.83697045,
           0.83697045,  0.83697045]],

        [[ 0.03215677,  0.03215677,  0.03215677, ...,  0.03215599,
           0.03215599,  0.03215599],
         [ 2.6139753 ,  2.6139753 ,  2.6139753 , ...,  2.6139753 ,
           2.6139753 ,  2.6139753 ],
         [-5.53577   , -5.53577   , -5.53577   , ..., -5.5357685 ,
          -5.5357685 , -5.5357685 ],
         ...,
         [ 2.0059702 ,  2.0059702 ,  2.0059702 , ...,  2.0059714 ,
           2.0059714 ,  2.0059714 ],
         [-3.2345552 , -3.2345552 , -3.2345552 , ..., -3.2345557 ,
          -3.2345557 , -3.2345557 ],
         [ 4.910676  ,  4.910676  ,  4.910676  , ...,  4.9106755 ,
           4.9106755 ,  4.9106755 ]],

        [[ 1.0818886 ,  1.0818886 ,  1.0818886 , ...,  1.0818882 ,
           1.0818882 ,  1.0818882 ],
         [ 0.07747597,  0.07747597,  0.07747597, ...,  0.0774765 ,
           0.0774765 ,  0.0774765 ],
         [-3.0213459 , -3.0213459 , -3.0213459 , ..., -3.021347  ,
          -3.021347  , -3.021347  ],
         ...,
         [ 4.9394608 ,  4.9394608 ,  4.9394608 , ...,  4.9394617 ,
           4.9394617 ,  4.9394617 ],
         [ 6.251363  ,  6.251363  ,  6.251363  , ...,  6.251363  ,
           6.251363  ,  6.251363  ],
         [-8.179525  , -8.179525  , -8.179525  , ..., -8.179525  ,
          -8.179525  , -8.179525  ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [4, 10, 17]}

generate models:166

analyse the exceptions in iter:197
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[-2510.2839, -2131.3955, -1458.6357,  ...,  -827.1251,
             477.7547,    74.4864],
          [-2948.9817, -2591.5972, -1642.7684,  ..., -1358.3286,
             434.6015,   -19.2765],
          [-1278.2977, -1235.5062,  -973.6551,  ...,  -121.1886,
             736.7743,  -803.0061],
          ...,
          [-1670.6006, -1851.1946, -2405.4578,  ...,   761.3719,
             425.4872,    19.6921],
          [-1705.3514, -1651.5703,  -939.5409,  ...,  -524.1074,
             320.9274,   496.6265],
          [ -997.7825,  -974.2980,   258.1726,  ...,  -776.5573,
            -446.8499,  -513.4593]],

         [[-2510.2839, -2131.3955, -1458.6357,  ...,  -827.1251,
             477.7547,    74.4864],
          [-2948.9817, -2591.5972, -1642.7684,  ..., -1358.3286,
             434.6015,   -19.2765],
          [-1278.2977, -1235.5062,  -973.6551,  ...,  -121.1886,
             736.7743,  -803.0061],
          ...,
          [-1670.6006, -1851.1946, -2405.4578,  ...,   761.3719,
             425.4872,    19.6921],
          [-1705.3514, -1651.5703,  -939.5409,  ...,  -524.1074,
             320.9274,   496.6265],
          [ -997.7825,  -974.2980,   258.1726,  ...,  -776.5573,
            -446.8499,  -513.4593]],

         [[-2510.2839, -2131.3955, -1458.6357,  ...,  -827.1251,
             477.7547,    74.4864],
          [-2948.9817, -2591.5972, -1642.7684,  ..., -1358.3286,
             434.6015,   -19.2765],
          [-1278.2977, -1235.5062,  -973.6551,  ...,  -121.1886,
             736.7743,  -803.0061],
          ...,
          [-1670.6006, -1851.1946, -2405.4578,  ...,   761.3719,
             425.4872,    19.6921],
          [-1705.3514, -1651.5703,  -939.5409,  ...,  -524.1074,
             320.9274,   496.6265],
          [ -997.7825,  -974.2980,   258.1726,  ...,  -776.5573,
            -446.8499,  -513.4593]],

         ...,

         [[-2510.2839, -2131.3955, -1458.6357,  ...,  -827.1251,
             477.7547,    74.4864],
          [-2948.9817, -2591.5972, -1642.7684,  ..., -1358.3286,
             434.6015,   -19.2765],
          [-1278.2977, -1235.5062,  -973.6551,  ...,  -121.1886,
             736.7743,  -803.0061],
          ...,
          [-1670.6006, -1851.1946, -2405.4578,  ...,   761.3719,
             425.4872,    19.6921],
          [-1705.3514, -1651.5703,  -939.5409,  ...,  -524.1074,
             320.9274,   496.6265],
          [ -997.7825,  -974.2980,   258.1726,  ...,  -776.5573,
            -446.8499,  -513.4593]],

         [[-2510.2839, -2131.3955, -1458.6357,  ...,  -827.1251,
             477.7547,    74.4864],
          [-2948.9817, -2591.5972, -1642.7684,  ..., -1358.3286,
             434.6015,   -19.2765],
          [-1278.2977, -1235.5062,  -973.6551,  ...,  -121.1886,
             736.7743,  -803.0061],
          ...,
          [-1670.6006, -1851.1946, -2405.4578,  ...,   761.3719,
             425.4872,    19.6921],
          [-1705.3514, -1651.5703,  -939.5409,  ...,  -524.1074,
             320.9274,   496.6265],
          [ -997.7825,  -974.2980,   258.1726,  ...,  -776.5573,
            -446.8499,  -513.4593]],

         [[-2510.2839, -2131.3955, -1458.6357,  ...,  -827.1251,
             477.7547,    74.4864],
          [-2948.9817, -2591.5972, -1642.7684,  ..., -1358.3286,
             434.6015,   -19.2765],
          [-1278.2977, -1235.5062,  -973.6551,  ...,  -121.1886,
             736.7743,  -803.0061],
          ...,
          [-1670.6006, -1851.1946, -2405.4578,  ...,   761.3719,
             425.4872,    19.6921],
          [-1705.3514, -1651.5703,  -939.5409,  ...,  -524.1074,
             320.9274,   496.6265],
          [ -997.7825,  -974.2980,   258.1726,  ...,  -776.5573,
            -446.8499,  -513.4593]]]], grad_fn=<ConvolutionBackward0>)]}
Given groups=1, weight of size [128, 512, 1, 1], expected input[1, 128, 32, 32] to have 512 channels, but got 128 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 128, 32, 32], dtype=Float32, value=
[[[[-2.51029688e+003, -2.13140625e+003, -1.45864062e+003 ... -8.27125244e+002, 4.77753784e+002, 7.44860840e+001],
   [-2.94900269e+003, -2.59160962e+003, -1.64277588e+003 ... -1.35831836e+003, 4.34598145e+002, -1.92764912e+001],
   [-1.27830298e+003, -1.23550769e+003, -9.73649597e+002 ... -1.21187019e+002, 7.36769531e+002, -8.03008850e+002],
   ...
   [-1.67060168e+003, -1.85119971e+003, -2.40545947e+003 ... 7.61374023e+002, 4.25487915e+002, 1.96922016e+001],
   [-1.70535400e+003, -1.65157214e+003, -9.39536865e+002 ... -5.24105896e+002, 3.20926788e+002, 4.96626831e+002],
   [-9.97786865e+002, -9.74302673e+002, 2.58169952e+002 ... -7.76562439e+002, -4.46848816e+002, -5.13458130e+002]],
  [[-2.51029688e+003, -2.13140625e+003, -1.45864062e+003 ... -8.27125244e+002, 4.77753784e+002, 7.44860840e+001],
   [-2.94900269e+003, -2.59160962e+003, -1.64277588e+003 ... -1.35831836e+003, 4.34598145e+002, -1.92764912e+001],
   [-1.27830298e+003, -1.23550769e+003, -9.73649597e+002 ... -1.21187019e+002, 7.36769531e+002, -8.03008850e+002],
   ...
   [-1.67060168e+003, -1.85119971e+003, -2.40545947e+003 ... 7.61374023e+002, 4.25487915e+002, 1.96922016e+001],
   [-1.70535400e+003, -1.65157214e+003, -9.39536865e+002 ... -5.24105896e+002, 3.20926788e+002, 4.96626831e+002],
   [-9.97786865e+002, -9.74302673e+002, 2.58169952e+002 ... -7.76562439e+002, -4.46848816e+002, -5.13458130e+002]],
  [[-2.51029688e+003, -2.13140625e+003, -1.45864062e+003 ... -8.27125244e+002, 4.77753784e+002, 7.44860840e+001],
   [-2.94900269e+003, -2.59160962e+003, -1.64277588e+003 ... -1.35831836e+003, 4.34598145e+002, -1.92764912e+001],
   [-1.27830298e+003, -1.23550769e+003, -9.73649597e+002 ... -1.21187019e+002, 7.36769531e+002, -8.03008850e+002],
   ...
   [-1.67060168e+003, -1.85119971e+003, -2.40545947e+003 ... 7.61374023e+002, 4.25487915e+002, 1.96922016e+001],
   [-1.70535400e+003, -1.65157214e+003, -9.39536865e+002 ... -5.24105896e+002, 3.20926788e+002, 4.96626831e+002],
   [-9.97786865e+002, -9.74302673e+002, 2.58169952e+002 ... -7.76562439e+002, -4.46848816e+002, -5.13458130e+002]],
  ...
  [[-2.51029688e+003, -2.13140625e+003, -1.45864062e+003 ... -8.27125244e+002, 4.77753784e+002, 7.44860840e+001],
   [-2.94900269e+003, -2.59160962e+003, -1.64277588e+003 ... -1.35831836e+003, 4.34598145e+002, -1.92764912e+001],
   [-1.27830298e+003, -1.23550769e+003, -9.73649597e+002 ... -1.21187019e+002, 7.36769531e+002, -8.03008850e+002],
   ...
   [-1.67060168e+003, -1.85119971e+003, -2.40545947e+003 ... 7.61374023e+002, 4.25487915e+002, 1.96922016e+001],
   [-1.70535400e+003, -1.65157214e+003, -9.39536865e+002 ... -5.24105896e+002, 3.20926788e+002, 4.96626831e+002],
   [-9.97786865e+002, -9.74302673e+002, 2.58169952e+002 ... -7.76562439e+002, -4.46848816e+002, -5.13458130e+002]],
  [[-2.51029688e+003, -2.13140625e+003, -1.45864062e+003 ... -8.27125244e+002, 4.77753784e+002, 7.44860840e+001],
   [-2.94900269e+003, -2.59160962e+003, -1.64277588e+003 ... -1.35831836e+003, 4.34598145e+002, -1.92764912e+001],
   [-1.27830298e+003, -1.23550769e+003, -9.73649597e+002 ... -1.21187019e+002, 7.36769531e+002, -8.03008850e+002],
   ...
   [-1.67060168e+003, -1.85119971e+003, -2.40545947e+003 ... 7.61374023e+002, 4.25487915e+002, 1.96922016e+001],
   [-1.70535400e+003, -1.65157214e+003, -9.39536865e+002 ... -5.24105896e+002, 3.20926788e+002, 4.96626831e+002],
   [-9.97786865e+002, -9.74302673e+002, 2.58169952e+002 ... -7.76562439e+002, -4.46848816e+002, -5.13458130e+002]],
  [[-2.51029688e+003, -2.13140625e+003, -1.45864062e+003 ... -8.27125244e+002, 4.77753784e+002, 7.44860840e+001],
   [-2.94900269e+003, -2.59160962e+003, -1.64277588e+003 ... -1.35831836e+003, 4.34598145e+002, -1.92764912e+001],
   [-1.27830298e+003, -1.23550769e+003, -9.73649597e+002 ... -1.21187019e+002, 7.36769531e+002, -8.03008850e+002],
   ...
   [-1.67060168e+003, -1.85119971e+003, -2.40545947e+003 ... 7.61374023e+002, 4.25487915e+002, 1.96922016e+001],
   [-1.70535400e+003, -1.65157214e+003, -9.39536865e+002 ... -5.24105896e+002, 3.20926788e+002, 4.96626831e+002],
   [-9.97786865e+002, -9.74302673e+002, 2.58169952e+002 ... -7.76562439e+002, -4.46848816e+002, -5.13458130e+002]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 128, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:171

analyse the exceptions in iter:198
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])]}
Given groups=1, weight of size [128, 128, 3, 3], expected input[1, 3, 32, 32] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:172

analyse the exceptions in iter:199
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])]}
Given groups=1, weight of size [128, 256, 3, 3], expected input[1, 512, 32, 32] to have 256 channels, but got 512 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 512, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  ...
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 256, but got 'C_in' of input 'x' shape: 512, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:173

analyse output arrays in iter:202

pre layer res:
3:transpose
{'name': 'transpose', 'output': array([[[[-0.5408632 ,  0.8078722 ,  0.78306204,  0.67906785,
           2.1191604 ,  1.5037187 ,  1.564741  ,  0.6742406 ,
           1.1638898 ,  0.57187396,  2.2059562 ,  0.70509326,
          -0.17687488,  2.380718  ,  1.2801192 , -0.50892466],
         [ 0.7206536 ,  0.18982665,  1.9746287 ,  1.6946701 ,
           0.36456478, -0.0995973 ,  0.94419855, -0.14918938,
           0.91631174,  0.23373185,  2.1135957 ,  1.034778  ,
           0.45969385,  2.2338557 ,  0.11964018, -0.60760623],
         [ 2.1189063 ,  1.2053227 , -0.1725607 ,  1.4345795 ,
           0.7142093 , -0.2967352 ,  0.91065955,  1.4248837 ,
           0.34699526,  0.74498785,  1.6019158 ,  2.5956218 ,
           1.5362111 ,  1.2076588 ,  0.9262891 , -0.24212696],
         [ 0.9860566 ,  0.9643237 ,  1.7763381 ,  0.22298187,
           0.6180877 ,  1.5801986 ,  0.8278849 ,  0.87757254,
           1.2326356 , -0.36955148,  0.6095924 ,  0.66130024,
           1.2032409 ,  1.2503554 ,  0.6721429 ,  0.9669052 ],
         [-0.5161276 ,  2.0294604 ,  1.0682001 ,  1.4405191 ,
           0.27324998,  0.21177872,  1.2016933 ,  0.41606364,
           0.7497829 ,  0.60621023,  0.21290252,  0.35779175,
           0.8567157 ,  1.8415933 ,  0.11005102,  1.2279668 ],
         [ 1.918761  ,  0.35306233,  1.9790963 ,  1.4398234 ,
           0.54512984,  0.32599336,  2.1400418 ,  0.69437516,
           0.8910924 ,  0.47928762,  1.1485339 ,  1.1363494 ,
           1.1670471 ,  1.1574138 ,  1.1436715 ,  0.6071004 ],
         [ 0.2651425 ,  0.33816588,  0.81341   ,  1.0630931 ,
           0.35512775,  0.23505302,  1.1766318 ,  1.0025418 ,
           0.80523515,  1.3043482 ,  1.6735717 ,  0.46368802,
           2.0614696 ,  0.8827996 ,  0.85846937,  0.8534218 ],
         [ 2.3788958 ,  0.6915692 , -0.04297909,  1.3372517 ,
          -0.22379039,  0.8654443 ,  1.67481   ,  1.3076721 ,
           0.2466337 ,  0.32115337,  1.5345438 ,  0.45434362,
           0.73117   ,  1.3941038 ,  1.04477   ,  0.9216967 ],
         [ 1.4412459 ,  0.90427357,  1.171832  ,  2.0639608 ,
           1.8699732 ,  0.9760486 ,  1.144475  ,  1.1424987 ,
           2.0196683 , -0.00378841,  0.6779869 ,  1.0675967 ,
           0.94610727,  1.2594788 ,  0.51026165,  0.53810817],
         [ 0.4605452 ,  1.5040212 , -0.01857541,  1.4300905 ,
           1.4465965 ,  1.3676236 ,  1.8758221 ,  1.2805676 ,
           1.1202796 ,  1.9299529 ,  1.5086443 ,  1.7334976 ,
           0.32544035,  2.2328115 ,  1.37303   , -0.28770977],
         [ 0.3811282 ,  1.2748017 ,  0.6826821 ,  0.698093  ,
           0.9768461 ,  0.43596724,  1.5870506 ,  0.3252882 ,
           0.48334873,  2.4270298 ,  0.53886193,  0.12987378,
           0.98512554,  1.7734848 ,  2.777018  ,  1.3479064 ],
         [ 0.5910712 ,  1.5606755 ,  2.6656268 , -0.03484286,
           0.7065056 ,  0.88740236,  1.8283463 ,  1.8406396 ,
           2.285408  ,  0.38247722,  1.2677795 ,  1.6905031 ,
           2.2436924 ,  0.889105  ,  2.2706852 ,  0.88181245],
         [ 1.3095266 ,  0.78700817,  0.9097678 ,  1.4720565 ,
           1.5232372 ,  2.0866828 ,  1.947797  ,  2.0098987 ,
           1.3128512 ,  1.7808149 ,  1.8333617 ,  1.6919782 ,
           1.2064487 ,  0.04578435,  0.2390071 ,  1.2243234 ],
         [ 1.7914354 ,  2.1981223 ,  0.2381211 ,  0.47393838,
           1.0284176 ,  0.74248356,  0.5001167 ,  0.9790514 ,
           1.0242561 ,  0.54235053,  0.27759156,  0.45762745,
           1.9726986 ,  0.6342564 ,  1.440967  ,  0.63719994],
         [ 0.6304446 ,  0.1843108 ,  0.86276805,  0.69127107,
           1.2084061 ,  0.2821509 ,  0.39476112,  0.13316904,
           1.1078575 ,  0.70021284,  0.75808084,  0.7322019 ,
           1.6961263 ,  0.6640148 ,  0.5072895 ,  2.33052   ],
         [ 1.2576069 ,  1.6565369 , -0.14191984,  0.04898768,
           0.3845091 ,  2.466585  ,  1.2322217 ,  2.221075  ,
          -0.0690586 ,  0.33818817,  0.8300002 ,  1.291712  ,
           2.3372662 ,  0.6422281 ,  1.873657  ,  0.73617405]],

        [[ 2.1709287 ,  0.88024914,  1.4608623 ,  0.60709244,
           1.7261645 ,  1.3376869 ,  2.0859993 ,  1.7351314 ,
           0.62267745,  1.9782207 ,  1.1174933 ,  0.8392398 ,
           0.33145064,  0.9677067 ,  1.872201  ,  1.092764  ],
         [ 0.4585035 ,  0.56702065,  0.8259978 ,  0.09902046,
           0.47644216, -0.11727358,  1.8101429 ,  1.1050824 ,
           0.06032432,  0.8534489 ,  0.68801004,  0.49445996,
           1.5761222 , -0.04234139,  0.97051466,  0.90193415],
         [ 1.2118292 ,  2.9107227 , -0.3555935 ,  1.8804618 ,
           1.3235477 ,  2.5051408 ,  1.9809338 ,  0.41927803,
          -0.16220893,  0.9975264 ,  1.7800337 ,  1.3816125 ,
           0.6986903 ,  2.3991637 ,  1.3760214 ,  2.2197776 ],
         [ 3.054583  ,  0.46165568, -0.96193135,  1.6660942 ,
           1.0782814 ,  0.8490795 ,  1.197554  ,  0.32208708,
           0.659497  ,  0.72574544,  2.5311596 ,  0.37861603,
           1.6254001 ,  1.2355382 ,  1.5071008 ,  1.1954527 ],
         [ 0.44828767,  1.7730885 ,  0.7337322 ,  1.259642  ,
           0.24209018,  1.1353375 ,  1.4460756 ,  1.3758901 ,
           0.78122014,  0.1508322 ,  2.420634  ,  0.8244426 ,
           1.3620249 ,  0.36280397,  1.8062701 ,  2.0412543 ],
         [ 1.4658684 ,  1.053638  ,  0.24847163, -0.04249388,
           1.2858782 ,  2.6225114 ,  1.555605  ,  2.063343  ,
           1.7269931 ,  1.424039  ,  0.799001  ,  0.99872214,
           1.151596  , -0.45985618,  0.5148505 ,  0.7948704 ],
         [ 1.2878942 ,  0.8402095 ,  0.58941054,  0.7606583 ,
           0.5579607 ,  2.1279929 ,  1.5864238 ,  0.7175701 ,
           0.8956204 ,  1.8221143 ,  0.09812305,  0.20799758,
           1.1925902 ,  0.0941028 ,  0.41586   ,  1.047609  ],
         [-0.07117919, -0.66095334,  0.8208893 ,  1.9872459 ,
           2.0412016 ,  1.0910323 ,  0.43610808,  2.0515115 ,
           1.7592539 ,  1.8295374 ,  1.0921504 ,  0.80766577,
           1.0540284 ,  0.7613724 ,  0.77156496,  1.0406921 ],
         [ 1.1250167 ,  1.0803365 ,  1.704373  ,  1.4855027 ,
           0.99674094,  0.05520067,  0.5511841 ,  2.9248314 ,
          -0.03009958,  0.6031929 ,  0.09639683,  2.1083863 ,
           1.0952977 ,  1.5444076 ,  0.55326754,  1.4642259 ],
         [ 1.1546934 ,  1.4078772 ,  1.0573092 ,  0.7666494 ,
           1.792458  ,  2.7228284 ,  1.1570637 , -0.03045563,
           1.3781312 ,  0.64797395,  0.5165565 ,  0.288616  ,
           1.1243767 , -0.47188124, -0.11708716,  1.397405  ],
         [ 1.1285269 ,  1.385961  ,  1.9003137 ,  1.485703  ,
           1.5640775 ,  1.0980756 ,  0.78944653,  2.611954  ,
           2.0247052 , -0.33044803,  0.64780927,  0.699114  ,
           0.9997468 ,  0.31525883,  1.021056  ,  0.26115808],
         [ 0.26777145,  0.9180378 ,  0.8448708 ,  0.8020653 ,
           0.5932404 ,  0.16352403,  0.36238015,  1.3455861 ,
           1.3138435 ,  1.6239802 ,  0.17283821,  1.4659152 ,
           2.1781185 ,  2.426253  , -0.32722583,  1.1863075 ],
         [ 1.7681646 ,  0.24446684,  1.2233387 ,  1.3554626 ,
           0.7972375 ,  1.0413271 ,  0.75404036,  1.4522587 ,
           0.5596518 ,  1.3696722 ,  1.580543  ,  1.0679942 ,
           2.1935685 ,  2.8906977 ,  0.791401  ,  1.3122977 ],
         [ 1.998843  ,  0.503024  ,  1.7033709 ,  1.6955897 ,
           0.52902275,  0.5574267 ,  1.9012471 ,  0.44466722,
           1.3170912 ,  0.48620015,  1.5859729 ,  1.2021321 ,
           0.5055511 ,  0.9860216 , -0.39117235,  1.6338348 ],
         [ 1.1469084 ,  0.9657982 ,  0.36005196,  0.8790921 ,
           0.6816597 ,  1.2038735 ,  0.62275434,  2.0064356 ,
           0.8762751 ,  2.6895068 ,  1.073628  ,  0.8612972 ,
           1.204541  , -0.04051939, -0.04478607,  0.458918  ],
         [ 1.5124962 ,  1.1372036 ,  1.1984414 , -0.194124  ,
           0.3808284 ,  0.7461315 ,  0.41661575,  2.5297577 ,
           1.2669114 ,  0.01972421,  1.2626061 ,  0.58627206,
          -0.512544  ,  1.0559871 ,  0.03754813,  0.4373938 ]],

        [[ 1.5333498 ,  0.98880476,  0.19538774,  0.96606135,
           0.75324196,  2.5894272 ,  0.97565764,  1.171267  ,
           0.80722564,  1.0708865 , -0.2217814 ,  0.904821  ,
           1.6901053 ,  1.468381  ,  1.5192572 ,  0.40854198],
         [ 0.93092275,  1.8831326 ,  0.5242354 ,  0.9309253 ,
           1.6723175 ,  1.4477022 ,  0.30670923,  1.6607466 ,
           0.6752977 ,  1.2225345 ,  0.66319656,  0.0379288 ,
           0.03120098,  1.041681  ,  0.36818126,  1.711244  ],
         [ 1.1372128 ,  0.6414476 ,  1.5749732 ,  1.8700024 ,
           0.40349886,  0.0868344 ,  0.70914733, -0.14666137,
           1.6258699 ,  0.33793122,  0.05857476,  0.5241724 ,
           0.8344021 ,  0.8913915 ,  0.41174203,  0.43242985],
         [ 0.5443737 ,  1.4776028 ,  0.43465957,  1.3630157 ,
           0.04313315, -0.49154532,  1.8563923 ,  1.1449538 ,
           1.274559  ,  1.0702055 ,  1.1345578 ,  2.0317385 ,
           0.30049926,  1.2593675 ,  0.8887822 ,  2.2035074 ],
         [ 1.6603775 ,  2.1760447 ,  1.1667206 ,  1.8807217 ,
          -0.13915212,  0.5086333 ,  1.0283976 ,  0.6929203 ,
           1.5622464 , -0.29427868,  1.6288179 ,  1.8944201 ,
           0.87626547,  0.8730195 ,  1.7769604 ,  1.9191724 ],
         [ 0.40972283,  0.9685613 ,  1.0668322 ,  1.0854127 ,
           0.91874313,  1.2102482 ,  0.85561305,  0.7002308 ,
           0.07784682,  0.9733189 ,  1.6095695 ,  0.5462888 ,
           0.42313603,  1.0352088 , -0.80870414,  1.6128813 ],
         [ 1.6436579 ,  0.28437006,  1.5391493 ,  1.2771691 ,
           0.7700078 ,  0.19577844,  1.1618494 ,  1.7143381 ,
           0.12566635,  1.0218666 ,  1.3210998 ,  1.6825187 ,
          -0.2535856 ,  1.5210744 ,  1.7163258 ,  0.30788597],
         [ 1.5240476 ,  0.5823005 ,  1.3850214 , -0.28119856,
           0.30121723,  1.9617518 ,  0.5011672 ,  0.9399579 ,
           2.696975  ,  1.8541898 ,  1.3478473 ,  1.2841188 ,
          -0.07465392,  0.5636901 ,  1.5260589 ,  0.30405718],
         [ 2.3737378 ,  0.6614884 ,  1.2405249 ,  0.6566785 ,
           0.8137319 ,  1.6212791 ,  2.6340702 , -0.02547338,
           1.6937037 ,  2.2858856 ,  3.2727065 ,  0.4982411 ,
           0.5559305 ,  0.63546145,  0.72412366,  1.8793602 ],
         [ 0.86818385,  0.59674627,  0.775226  ,  1.1730049 ,
           0.7489093 ,  1.4211845 ,  0.5572732 ,  1.911063  ,
           0.0813885 ,  0.81651896,  0.631233  ,  0.71315044,
           1.2932657 ,  0.84474325, -0.00453171,  0.57751715],
         [ 0.8422163 ,  0.8287179 ,  2.214455  ,  1.3905401 ,
           0.27891013,  1.8601637 ,  0.93152004,  0.63656056,
           1.7893958 ,  0.6192389 , -0.418222  ,  0.15377133,
           1.0457712 ,  1.7928431 ,  1.8401446 ,  1.2886497 ],
         [ 0.63483465,  1.5599492 ,  0.7634762 ,  0.27936554,
           0.61483103,  0.2770352 ,  1.1053383 ,  0.71768725,
           0.15542078,  0.3538343 ,  1.2938612 ,  3.117601  ,
           1.0132614 ,  1.5539899 , -0.08481225,  1.0331061 ],
         [ 0.6062792 ,  1.8253253 ,  0.5197062 ,  1.4286634 ,
           1.0866079 ,  2.1244311 ,  0.80028427,  1.0585252 ,
           1.8266239 ,  1.6068991 ,  1.0941789 ,  0.8896348 ,
           0.57371944,  2.1785715 , -0.9779234 ,  3.235434  ],
         [-0.21277171,  0.28270644,  0.3696794 ,  1.4088796 ,
           2.0622985 ,  1.9791816 ,  0.18204169,  0.89927727,
           0.5547544 ,  1.5323343 ,  0.9465677 ,  1.0589482 ,
           2.6801093 ,  1.492687  ,  2.3898695 ,  1.5174775 ],
         [ 1.0598702 ,  1.9734591 ,  0.29118875,  0.10945993,
           1.323966  , -0.13366184,  1.0602212 ,  1.1595713 ,
           0.73494464,  1.0854453 ,  0.69279313,  1.7829239 ,
           0.6083794 ,  0.20144261,  0.37543434,  0.84581417],
         [ 1.439992  ,  0.07631755,  0.23064499,  1.1641403 ,
           0.5039587 ,  0.69070935, -0.01244077,  1.326706  ,
           0.9574526 ,  1.4169555 ,  1.3807592 ,  2.445572  ,
           0.36461112,  1.1726072 ,  1.0913492 ,  1.5279325 ]]]],
      dtype=float32), 'output_shape': TensorShape([1, 3, 16, 16]), 'from': [0], 'to': [6, 7]}
tf node:
{'name': 'log', 'output': array([[[[            nan, -2.13351429e-01, -2.44543344e-01,
          -3.87034237e-01,  7.51019955e-01,  4.07941192e-01,
           4.47720349e-01, -3.94168288e-01,  1.51767641e-01,
          -5.58836639e-01,  7.91161060e-01, -3.49425197e-01,
                      nan,  8.67402136e-01,  2.46953189e-01,
                      nan],
         [-3.27596724e-01, -1.66164398e+00,  6.80380404e-01,
           5.27488112e-01, -1.00905108e+00,             nan,
          -5.74188083e-02,             nan, -8.73986408e-02,
          -1.45358074e+00,  7.48390615e-01,  3.41869108e-02,
          -7.77194560e-01,  8.03729117e-01, -2.12326646e+00,
                      nan],
         [ 7.50900030e-01,  1.86747372e-01,             nan,
           3.60871762e-01, -3.36579204e-01,             nan,
          -9.35861617e-02,  3.54090214e-01, -1.05844414e+00,
          -2.94387370e-01,  4.71200317e-01,  9.53826070e-01,
           4.29319084e-01,  1.88683584e-01, -7.65689090e-02,
                      nan],
         [-1.40414964e-02, -3.63282524e-02,  5.74554026e-01,
          -1.50066483e+00, -4.81124908e-01,  4.57550585e-01,
          -1.88881129e-01, -1.30595669e-01,  2.09154651e-01,
                      nan, -4.94964778e-01, -4.13547307e-01,
           1.85018644e-01,  2.23427802e-01, -3.97284269e-01,
          -3.36548463e-02],
         [            nan,  7.07769990e-01,  6.59750924e-02,
           3.65003526e-01, -1.29736817e+00, -1.55221331e+00,
           1.83731645e-01, -8.76917064e-01, -2.87971556e-01,
          -5.00528455e-01, -1.54692090e+00, -1.02780414e+00,
          -1.54649183e-01,  6.10631108e-01, -2.20681119e+00,
           2.05359787e-01],
         [ 6.51679695e-01, -1.04111063e+00,  6.82640314e-01,
           3.64520460e-01, -6.06731296e-01, -1.12087822e+00,
           7.60825396e-01, -3.64742905e-01, -1.15307130e-01,
          -7.35454381e-01,  1.38486296e-01,  1.27820879e-01,
           1.54476747e-01,  1.46188065e-01,  1.34243712e-01,
          -4.99061048e-01],
         [-1.32748783e+00, -1.08421874e+00, -2.06520006e-01,
           6.11826442e-02, -1.03527772e+00, -1.44794416e+00,
           1.62655964e-01,  2.53855553e-03, -2.16620937e-01,
           2.65703470e-01,  5.14960110e-01, -7.68543363e-01,
           7.23419130e-01, -1.24657027e-01, -1.52604282e-01,
          -1.58501357e-01],
         [ 8.66636395e-01, -3.68792057e-01,             nan,
           2.90616512e-01,             nan, -1.44512266e-01,
           5.15699744e-01,  2.68248558e-01, -1.39985108e+00,
          -1.13583648e+00,  4.28233117e-01, -7.88901508e-01,
          -3.13109279e-01,  3.32251757e-01,  4.37967665e-02,
          -8.15390423e-02],
         [ 3.65507960e-01, -1.00623339e-01,  1.58568308e-01,
           7.24626839e-01,  6.25924110e-01, -2.42429096e-02,
           1.34946004e-01,  1.33217737e-01,  7.02933311e-01,
                      nan, -3.88627291e-01,  6.54100254e-02,
          -5.53993247e-02,  2.30697989e-01, -6.72831655e-01,
          -6.19695663e-01],
         [-7.75344253e-01,  4.08142298e-01,             nan,
           3.57737750e-01,  3.69213551e-01,  3.13074619e-01,
           6.29046977e-01,  2.47303456e-01,  1.13578252e-01,
           6.57495558e-01,  4.11211461e-01,  5.50141096e-01,
          -1.12257612e+00,  8.03261518e-01,  3.17019939e-01,
                      nan],
         [-9.64619517e-01,  2.42790654e-01, -3.81725997e-01,
          -3.59402955e-01, -2.34261639e-02, -8.30188155e-01,
           4.61877286e-01, -1.12304378e+00, -7.27016866e-01,
           8.86668205e-01, -6.18295908e-01, -2.04119229e+00,
          -1.49861928e-02,  5.72946429e-01,  1.02137768e+00,
           2.98552543e-01],
         [-5.25818825e-01,  4.45118725e-01,  9.80439186e-01,
                      nan, -3.47424150e-01, -1.19456783e-01,
           6.03411853e-01,  6.10113144e-01,  8.26544583e-01,
          -9.61086154e-01,  2.37266928e-01,  5.25026202e-01,
           8.08122873e-01, -1.17539912e-01,  8.20081651e-01,
          -1.25775889e-01],
         [ 2.69665658e-01, -2.39516661e-01, -9.45658684e-02,
           3.86660397e-01,  4.20837820e-01,  7.35575616e-01,
           6.66698933e-01,  6.98084295e-01,  2.72201240e-01,
           5.77071071e-01,  6.06151283e-01,  5.25898397e-01,
           1.87681064e-01, -3.08381295e+00, -1.43126202e+00,
           2.02388361e-01],
         [ 5.83017170e-01,  7.87603498e-01, -1.43497586e+00,
          -7.46677995e-01,  2.80212983e-02, -2.97754556e-01,
          -6.92913771e-01, -2.11711247e-02,  2.39666030e-02,
          -6.11842752e-01, -1.28160453e+00, -7.81699896e-01,
           6.79402411e-01, -4.55301940e-01,  3.65314394e-01,
          -4.50671792e-01],
         [-4.61329997e-01, -1.69113183e+00, -1.47609398e-01,
          -3.69223267e-01,  1.89302206e-01, -1.26531327e+00,
          -9.29474473e-01, -2.01613593e+00,  1.02427937e-01,
          -3.56370926e-01, -2.76965261e-01, -3.11699033e-01,
           5.28347015e-01, -4.09450829e-01, -6.78673387e-01,
           8.46091390e-01],
         [ 2.29210600e-01,  5.04729271e-01,             nan,
          -3.01618648e+00, -9.55787897e-01,  9.02834594e-01,
           2.08818823e-01,  7.97991335e-01,             nan,
          -1.08415282e+00, -1.86329305e-01,  2.55968511e-01,
           8.48981977e-01, -4.42811698e-01,  6.27892137e-01,
          -3.06288719e-01]],

        [[ 7.75155067e-01, -1.27550289e-01,  3.79026860e-01,
          -4.99074221e-01,  5.45901895e-01,  2.90941924e-01,
           7.35247970e-01,  5.51083148e-01, -4.73726630e-01,
           6.82197809e-01,  1.11088030e-01, -1.75258830e-01,
          -1.10427642e+00, -3.28262523e-02,  6.27114713e-01,
           8.87102857e-02],
         [-7.79787302e-01, -5.67359567e-01, -1.91163138e-01,
          -2.31242871e+00, -7.41408944e-01,             nan,
           5.93405783e-01,  9.99198928e-02, -2.80801988e+00,
          -1.58469573e-01, -3.73951852e-01, -7.04289138e-01,
           4.54967499e-01,             nan, -2.99287755e-02,
          -1.03213772e-01],
         [ 1.92130938e-01,  1.06840146e+00,             nan,
           6.31517410e-01,  2.80315787e-01,  9.18344915e-01,
           6.83568358e-01, -8.69221032e-01,             nan,
          -2.47665704e-03,  5.76632321e-01,  3.23251337e-01,
          -3.58547717e-01,  8.75120223e-01,  3.19196284e-01,
           7.97407031e-01],
         [ 1.11664307e+00, -7.72935987e-01,             nan,
           5.10482073e-01,  7.53684789e-02, -1.63602471e-01,
           1.80281132e-01, -1.13293338e+00, -4.16277826e-01,
          -3.20555955e-01,  9.28677559e-01, -9.71232653e-01,
           4.85753983e-01,  2.11506695e-01,  4.10187811e-01,
           1.78524941e-01],
         [-8.02320123e-01,  5.72722912e-01, -3.09611142e-01,
           2.30827555e-01, -1.41844499e+00,  1.26929939e-01,
           3.68853390e-01,  3.19100887e-01, -2.46898308e-01,
          -1.89158726e+00,  8.84029508e-01, -1.93047732e-01,
           3.08972478e-01, -1.01389265e+00,  5.91264009e-01,
           7.13564456e-01],
         [ 3.82447809e-01,  5.22489212e-02, -1.39242661e+00,
                      nan,  2.51441896e-01,  9.64132428e-01,
           4.41864580e-01,  7.24327505e-01,  5.46381831e-01,
           3.53497207e-01, -2.24393114e-01, -1.27868110e-03,
           1.41148761e-01,             nan, -6.63878739e-01,
          -2.29576230e-01],
         [ 2.53008515e-01, -1.74104035e-01, -5.28632343e-01,
          -2.73571014e-01, -5.83466768e-01,  7.55179226e-01,
           4.61482286e-01, -3.31884593e-01, -1.10238612e-01,
           5.99997580e-01, -2.32153296e+00, -1.57022882e+00,
           1.76127613e-01, -2.36336756e+00, -8.77406597e-01,
           4.65103984e-02],
         [            nan,             nan, -1.97367027e-01,
           6.86749697e-01,  7.13538647e-01,  8.71242806e-02,
          -8.29865158e-01,  7.18576849e-01,  5.64889789e-01,
           6.04063153e-01,  8.81486386e-02, -2.13606969e-01,
           5.26193865e-02, -2.72632688e-01, -2.59334415e-01,
           3.98859642e-02],
         [ 1.17797874e-01,  7.72725195e-02,  5.33197284e-01,
           3.95753235e-01, -3.26438504e-03, -2.89678025e+00,
          -5.95686376e-01,  1.07323682e+00,             nan,
          -5.05518198e-01, -2.33928204e+00,  7.45922863e-01,
           9.10261944e-02,  4.34640408e-01, -5.91913581e-01,
           3.81326705e-01],
         [ 1.43834829e-01,  3.42083037e-01,  5.57271428e-02,
          -2.65725642e-01,  5.83587885e-01,  1.00167120e+00,
           1.45885527e-01,             nan,  3.20728332e-01,
          -4.33904767e-01, -6.60570621e-01, -1.24265814e+00,
           1.17228799e-01,             nan,             nan,
           3.34616959e-01],
         [ 1.20913178e-01,  3.26393813e-01,  6.42018974e-01,
           3.95888060e-01,  4.47296202e-01,  9.35592204e-02,
          -2.36423165e-01,  9.60098624e-01,  7.05424070e-01,
                      nan, -4.34158981e-01, -3.57941419e-01,
          -2.53232603e-04, -1.15436125e+00,  2.08374411e-02,
          -1.34262943e+00],
         [-1.31762147e+00, -8.55167434e-02, -1.68571562e-01,
          -2.20565230e-01, -5.22155583e-01, -1.81079531e+00,
          -1.01506150e+00,  2.96829641e-01,  2.72956789e-01,
           4.84880030e-01, -1.75539935e+00,  3.82479757e-01,
           7.78461397e-01,  8.86348128e-01,             nan,
           1.70845583e-01],
         [ 5.69942057e-01, -1.40867555e+00,  2.01583788e-01,
           3.04142743e-01, -2.26602629e-01,  4.04959768e-02,
          -2.82309383e-01,  3.73120070e-01, -5.80440521e-01,
           3.14571440e-01,  4.57768500e-01,  6.57823458e-02,
           7.85529673e-01,  1.06149793e+00, -2.33950451e-01,
           2.71779567e-01],
         [ 6.92568481e-01, -6.87117457e-01,  5.32609224e-01,
           5.28030574e-01, -6.36723816e-01, -5.84424257e-01,
           6.42510056e-01, -8.10429096e-01,  2.75425702e-01,
          -7.21134901e-01,  4.61198032e-01,  1.84096739e-01,
          -6.82106137e-01, -1.40770404e-02,             nan,
           4.90929902e-01],
         [ 1.37069970e-01, -3.48003693e-02, -1.02150691e+00,
          -1.28865615e-01, -3.83224726e-01,  1.85544282e-01,
          -4.73603159e-01,  6.96359813e-01, -1.32075176e-01,
           9.89357829e-01,  7.10435212e-02, -1.49315670e-01,
           1.86098561e-01,             nan,             nan,
          -7.78883696e-01],
         [ 4.13761407e-01,  1.28572240e-01,  1.81021869e-01,
                      nan, -9.65406418e-01, -2.92853445e-01,
          -8.75590920e-01,  9.28123534e-01,  2.36581966e-01,
          -3.92590857e+00,  2.33177960e-01, -5.33971310e-01,
                      nan,  5.44759892e-02, -3.28213167e+00,
          -8.26921344e-01]],

        [[ 4.27454710e-01, -1.12583805e-02, -1.63276935e+00,
          -3.45279351e-02, -2.83368766e-01,  9.51436698e-01,
          -2.46435311e-02,  1.58086091e-01, -2.14152038e-01,
           6.84868023e-02,             nan, -1.00018166e-01,
           5.24790883e-01,  3.84160459e-01,  4.18221533e-01,
          -8.95160615e-01],
         [-7.15789869e-02,  6.32936656e-01, -6.45814419e-01,
          -7.15762302e-02,  5.14210403e-01,  3.69977593e-01,
          -1.18185508e+00,  5.07267237e-01, -3.92601669e-01,
           2.00926200e-01, -4.10683870e-01, -3.27204442e+00,
          -3.46730590e+00,  4.08358052e-02, -9.99179900e-01,
           5.37220597e-01],
         [ 1.28580317e-01, -4.44027781e-01,  4.54238266e-01,
           6.25939727e-01, -9.07581627e-01, -2.44375229e+00,
          -3.43691975e-01,             nan,  4.86042976e-01,
          -1.08491290e+00, -2.83745146e+00, -6.45934582e-01,
          -1.81039870e-01, -1.14971533e-01, -8.87358248e-01,
          -8.38335156e-01],
         [-6.08119369e-01,  3.90421063e-01, -8.33192170e-01,
           3.09699625e-01, -3.14346361e+00,             nan,
           6.18634939e-01,  1.35364324e-01,  2.42600247e-01,
           6.78506419e-02,  1.26243010e-01,  7.08891869e-01,
          -1.20230997e+00,  2.30609581e-01, -1.17903061e-01,
           7.90050387e-01],
         [ 5.07044971e-01,  7.77508855e-01,  1.54196933e-01,
           6.31655574e-01,             nan, -6.76027954e-01,
           2.80018244e-02, -3.66840273e-01,  4.46124792e-01,
                      nan,  4.87854540e-01,  6.38912797e-01,
          -1.32086188e-01, -1.35797366e-01,  5.74904263e-01,
           6.51894033e-01],
         [-8.92274380e-01, -3.19435112e-02,  6.46936819e-02,
           8.19603205e-02, -8.47487003e-02,  1.90825492e-01,
          -1.55937046e-01, -3.56345326e-01, -2.55301237e+00,
          -2.70435270e-02,  4.75966781e-01, -6.04607522e-01,
          -8.60061586e-01,  3.46031673e-02,             nan,
           4.78022218e-01],
         [ 4.96924222e-01, -1.25747883e+00,  4.31229860e-01,
           2.44645998e-01, -2.61354655e-01, -1.63077164e+00,
           1.50013030e-01,  5.39027035e-01, -2.07412481e+00,
           2.16309149e-02,  2.78464526e-01,  5.20291924e-01,
                      nan,  4.19416934e-01,  5.40185809e-01,
          -1.17802572e+00],
         [ 4.21369702e-01, -5.40768683e-01,  3.25715631e-01,
                      nan, -1.19992363e+00,  6.73837841e-01,
          -6.90815568e-01, -6.19201735e-02,  9.92130756e-01,
           6.17447793e-01,  2.98508763e-01,  2.50072688e-01,
                      nan, -5.73250592e-01,  4.22688544e-01,
          -1.19053948e+00],
         [ 8.64465833e-01, -4.13262814e-01,  2.15534583e-01,
          -4.20560747e-01, -2.06124321e-01,  4.83215421e-01,
           9.68530238e-01,             nan,  5.26917636e-01,
           8.26753497e-01,  1.18561733e+00, -6.96671188e-01,
          -5.87112010e-01, -4.53403860e-01, -3.22793096e-01,
           6.30931377e-01],
         [-1.41351774e-01, -5.16263247e-01, -2.54600674e-01,
           1.59568727e-01, -2.89137393e-01,  3.51490706e-01,
          -5.84699631e-01,  6.47659600e-01, -2.50852132e+00,
          -2.02705145e-01, -4.60080266e-01, -3.38062882e-01,
           2.57170558e-01, -1.68722540e-01,             nan,
          -5.49017131e-01],
         [-1.71718389e-01, -1.87875479e-01,  7.95006275e-01,
           3.29692245e-01, -1.27686572e+00,  6.20664477e-01,
          -7.09375665e-02, -4.51675713e-01,  5.81878006e-01,
          -4.79264110e-01,             nan, -1.87228870e+00,
           4.47546430e-02,  5.83802700e-01,  6.09844208e-01,
           2.53594905e-01],
         [-4.54390705e-01,  4.44653213e-01, -2.69873351e-01,
          -1.27523422e+00, -4.86407816e-01, -1.28361070e+00,
           1.00151472e-01, -3.31721395e-01, -1.86161911e+00,
          -1.03892660e+00,  2.57630885e-01,  1.13706374e+00,
           1.31742740e-02,  4.40825760e-01,             nan,
           3.25698853e-02],
         [-5.00414670e-01,  6.01758182e-01, -6.54491663e-01,
           3.56739312e-01,  8.30608532e-02,  7.53504038e-01,
          -2.22788289e-01,  5.68766221e-02,  6.02469444e-01,
           4.74306345e-01,  9.00042355e-02, -1.16944253e-01,
          -5.55614769e-01,  7.78669357e-01,             nan,
           1.17416310e+00],
         [            nan, -1.26334620e+00, -9.95119154e-01,
           3.42794806e-01,  7.23821163e-01,  6.82683468e-01,
          -1.70351958e+00, -1.06163874e-01, -5.89229822e-01,
           4.26792294e-01, -5.49127683e-02,  5.72761111e-02,
           9.85857606e-01,  4.00577843e-01,  8.71238708e-01,
           4.17049438e-01],
         [ 5.81464879e-02,  6.79787934e-01, -1.23378360e+00,
          -2.21219683e+00,  2.80631781e-01,             nan,
           5.84775619e-02,  1.48050353e-01, -3.07960093e-01,
           8.19903016e-02, -3.67023855e-01,  5.78254700e-01,
          -4.96956527e-01, -1.60225070e+00, -9.79671717e-01,
          -1.67455599e-01],
         [ 3.64637524e-01, -2.57285237e+00, -1.46687555e+00,
           1.51982918e-01, -6.85260952e-01, -3.70036185e-01,
                      nan,  2.82699227e-01, -4.34790663e-02,
           3.48510534e-01,  3.22633505e-01,  8.94279003e-01,
          -1.00892389e+00,  1.59229636e-01,  8.74147713e-02,
           4.23915535e-01]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 16]), 'from': [3], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[            nan, -2.13353842e-01, -2.44545758e-01,
          -3.87036145e-01,  7.51023412e-01,  4.07938987e-01,
           4.47717905e-01, -3.94170195e-01,  1.51766166e-01,
          -5.58839798e-01,  7.91161656e-01, -3.49422336e-01,
                      nan,  8.67400646e-01,  2.46955991e-01,
                      nan],
         [-3.27596754e-01, -1.66164625e+00,  6.80378973e-01,
           5.27484775e-01, -1.00905108e+00,             nan,
          -5.74187860e-02,             nan, -8.73996317e-02,
          -1.45358074e+00,  7.48394072e-01,  3.41903195e-02,
          -7.77195573e-01,  8.03729713e-01, -2.12326646e+00,
                      nan],
         [ 7.50903428e-01,  1.86745882e-01,             nan,
           3.60874623e-01, -3.36576343e-01,             nan,
          -9.35871452e-02,  3.54093075e-01, -1.05844128e+00,
          -2.94387430e-01,  4.71197903e-01,  9.53828931e-01,
           4.29316849e-01,  1.88682109e-01, -7.65688866e-02,
                      nan],
         [-1.40429260e-02, -3.63282301e-02,  5.74553013e-01,
          -1.50066578e+00, -4.81124103e-01,  4.57548141e-01,
          -1.88883543e-01, -1.30596653e-01,  2.09155455e-01,
                      nan, -4.94963974e-01, -4.13549244e-01,
           1.85017169e-01,  2.23430604e-01, -3.97286206e-01,
          -3.36548239e-02],
         [            nan,  7.07768559e-01,  6.59721866e-02,
           3.65003467e-01, -1.29737115e+00, -1.55221665e+00,
           1.83730155e-01, -8.76920342e-01, -2.87971616e-01,
          -5.00529945e-01, -1.54692423e+00, -1.02780128e+00,
          -1.54652461e-01,  6.10630095e-01, -2.20681214e+00,
           2.05360591e-01],
         [ 6.51679695e-01, -1.04110777e+00,  6.82638884e-01,
           3.64520401e-01, -6.06734216e-01, -1.12087548e+00,
           7.60822475e-01, -3.64740044e-01, -1.15308121e-01,
          -7.35454381e-01,  1.38483137e-01,  1.27817720e-01,
           1.54475272e-01,  1.46186590e-01,  1.34240553e-01,
          -4.99062538e-01],
         [-1.32748449e+00, -1.08422065e+00, -2.06522420e-01,
           6.11797422e-02, -1.03527486e+00, -1.44794416e+00,
           1.62654474e-01,  2.53712502e-03, -2.16623351e-01,
           2.65706301e-01,  5.14956832e-01, -7.68543303e-01,
           7.23417699e-01, -1.24658018e-01, -1.52607560e-01,
          -1.58504635e-01],
         [ 8.66634905e-01, -3.68789196e-01,             nan,
           2.90614575e-01,             nan, -1.44513249e-01,
           5.15696466e-01,  2.68251389e-01, -1.39985251e+00,
          -1.13583362e+00,  4.28230882e-01, -7.88902521e-01,
          -3.13109338e-01,  3.32254589e-01,  4.38001789e-02,
          -8.15400332e-02],
         [ 3.65507901e-01, -1.00624330e-01,  1.58566833e-01,
           7.24630237e-01,  6.25924110e-01, -2.42443401e-02,
           1.34942845e-01,  1.33214578e-01,  7.02931881e-01,
                      nan, -3.88629198e-01,  6.54071197e-02,
          -5.53993024e-02,  2.30700806e-01, -6.72833085e-01,
          -6.19698584e-01],
         [-7.75345206e-01,  4.08140063e-01,             nan,
           3.57740611e-01,  3.69213492e-01,  3.13072681e-01,
           6.29047036e-01,  2.47306257e-01,  1.13578826e-01,
           6.57495618e-01,  4.11209226e-01,  5.50140142e-01,
          -1.12257326e+00,  8.03262115e-01,  3.17018002e-01,
                      nan],
         [-9.64621723e-01,  2.42793471e-01, -3.81727904e-01,
          -3.59400094e-01, -2.34275945e-02, -8.30189168e-01,
           4.61874902e-01, -1.12304091e+00, -7.27016866e-01,
           8.86666775e-01, -6.18298829e-01, -2.04118872e+00,
          -1.49876233e-02,  5.72945476e-01,  1.02138054e+00,
           2.98550606e-01],
         [-5.25820315e-01,  4.45116520e-01,  9.80437279e-01,
                      nan, -3.47421288e-01, -1.19457774e-01,
           6.03410900e-01,  6.10112131e-01,  8.26541424e-01,
          -9.61088419e-01,  2.37269729e-01,  5.25022924e-01,
           8.08123469e-01, -1.17540903e-01,  8.20078492e-01,
          -1.25776872e-01],
         [ 2.69668490e-01, -2.39519060e-01, -9.45668593e-02,
           3.86660337e-01,  4.20835614e-01,  7.35579014e-01,
           6.66697502e-01,  6.98082864e-01,  2.72199333e-01,
           5.77070057e-01,  6.06150329e-01,  5.25895119e-01,
           1.87679589e-01, -3.08381295e+00, -1.43126202e+00,
           2.02389166e-01],
         [ 5.83016217e-01,  7.87604034e-01, -1.43497586e+00,
          -7.46677935e-01,  2.80198678e-02, -2.97754616e-01,
          -6.92915201e-01, -2.11725533e-02,  2.39651725e-02,
          -6.11845672e-01, -1.28160393e+00, -7.81700850e-01,
           6.79400980e-01, -4.55299139e-01,  3.65314335e-01,
          -4.50668991e-01],
         [-4.61327195e-01, -1.69113195e+00, -1.47610381e-01,
          -3.69220406e-01,  1.89300731e-01, -1.26531649e+00,
          -9.29476857e-01, -2.01613879e+00,  1.02428511e-01,
          -3.56368095e-01, -2.76967466e-01, -3.11699063e-01,
           5.28343737e-01, -4.09452736e-01, -6.78674817e-01,
           8.46089900e-01],
         [ 2.29213417e-01,  5.04725933e-01,             nan,
          -3.01618886e+00, -9.55790102e-01,  9.02835369e-01,
           2.08819628e-01,  7.97991931e-01,             nan,
          -1.08415473e+00, -1.86332598e-01,  2.55971313e-01,
           8.48980486e-01, -4.42808896e-01,  6.27892137e-01,
          -3.06288779e-01]],

        [[ 7.75152147e-01, -1.27551287e-01,  3.79026800e-01,
          -4.99075681e-01,  5.45900881e-01,  2.90940017e-01,
           7.35251427e-01,  5.51082134e-01, -4.73725826e-01,
           6.82196379e-01,  1.11088604e-01, -1.75262108e-01,
          -1.10427833e+00, -3.28262299e-02,  6.27114773e-01,
           8.87073800e-02],
         [-7.79788315e-01, -5.67362726e-01, -1.91165537e-01,
          -2.31243110e+00, -7.41408944e-01,             nan,
           5.93404770e-01,  9.99204665e-02, -2.80801988e+00,
          -1.58472866e-01, -3.73948991e-01, -7.04290569e-01,
           4.54965085e-01,             nan, -2.99302079e-02,
          -1.03214756e-01],
         [ 1.92129463e-01,  1.06840134e+00,             nan,
           6.31517410e-01,  2.80313879e-01,  9.18347716e-01,
           6.83566928e-01, -8.69224310e-01,             nan,
          -2.47808755e-03,  5.76631308e-01,  3.23254168e-01,
          -3.58544856e-01,  8.75118732e-01,  3.19199145e-01,
           7.97407568e-01],
         [ 1.11664093e+00, -7.72935927e-01,             nan,
           5.10478795e-01,  7.53655732e-02, -1.63605750e-01,
           1.80279657e-01, -1.13293052e+00, -4.16279733e-01,
          -3.20556015e-01,  9.28680360e-01, -9.71234918e-01,
           4.85751569e-01,  2.11507499e-01,  4.10185605e-01,
           1.78523451e-01],
         [-8.02321136e-01,  5.72721958e-01, -3.09611201e-01,
           2.30830371e-01, -1.41844499e+00,  1.26926780e-01,
           3.68853331e-01,  3.19103748e-01, -2.46900529e-01,
          -1.89158881e+00,  8.84028018e-01, -1.93050146e-01,
           3.08970571e-01, -1.01389265e+00,  5.91263056e-01,
           7.13563025e-01],
         [ 3.82447749e-01,  5.22523299e-02, -1.39242804e+00,
                      nan,  2.51444697e-01,  9.64135230e-01,
           4.41862345e-01,  7.24330902e-01,  5.46380818e-01,
           3.53500068e-01, -2.24395514e-01, -1.28011161e-03,
           1.41145602e-01,             nan, -6.63880169e-01,
          -2.29578644e-01],
         [ 2.53011316e-01, -1.74107313e-01, -5.28633773e-01,
          -2.73573220e-01, -5.83466172e-01,  7.55176306e-01,
           4.61479872e-01, -3.31881762e-01, -1.10239595e-01,
           5.99996567e-01, -2.32153535e+00, -1.57023215e+00,
           1.76126137e-01, -2.36336970e+00, -8.77409935e-01,
           4.65138108e-02],
         [            nan,             nan, -1.97369426e-01,
           6.86748266e-01,  7.13537216e-01,  8.71213824e-02,
          -8.29866171e-01,  7.18575418e-01,  5.64888775e-01,
           6.04062140e-01,  8.81457403e-02, -2.13609368e-01,
           5.26227988e-02, -2.72634923e-01, -2.59336650e-01,
           3.98893729e-02],
         [ 1.17794707e-01,  7.72696212e-02,  5.33194005e-01,
           3.95753205e-01, -3.26581555e-03, -2.89678121e+00,
          -5.95685780e-01,  1.07323682e+00,             nan,
          -5.05519688e-01, -2.33928418e+00,  7.45926261e-01,
           9.10267681e-02,  4.34638202e-01, -5.91913044e-01,
           3.81326646e-01],
         [ 1.43831670e-01,  3.42085898e-01,  5.57305552e-02,
          -2.65727878e-01,  5.83586931e-01,  1.00166929e+00,
           1.45884037e-01,             nan,  3.20731193e-01,
          -4.33901966e-01, -6.60567224e-01, -1.24266136e+00,
           1.17229372e-01,             nan,             nan,
           3.34619820e-01],
         [ 1.20910019e-01,  3.26396644e-01,  6.42019033e-01,
           3.95888001e-01,  4.47293788e-01,  9.35597941e-02,
          -2.36425579e-01,  9.60101426e-01,  7.05422640e-01,
                      nan, -4.34156150e-01, -3.57938558e-01,
          -2.54663086e-04, -1.15435851e+00,  2.08360106e-02,
          -1.34262598e+00],
         [-1.31762433e+00, -8.55177343e-02, -1.68574840e-01,
          -2.20567644e-01, -5.22157073e-01, -1.81079257e+00,
          -1.01506150e+00,  2.96827734e-01,  2.72954881e-01,
           4.84877616e-01, -1.75539649e+00,  3.82479697e-01,
           7.78458536e-01,  8.86346638e-01,             nan,
           1.70844108e-01],
         [ 5.69941103e-01, -1.40867698e+00,  2.01584592e-01,
           3.04140836e-01, -2.26605043e-01,  4.04993854e-02,
          -2.82311618e-01,  3.73120010e-01, -5.80439925e-01,
           3.14569503e-01,  4.57766086e-01,  6.57794401e-02,
           7.85530210e-01,  1.06149781e+00, -2.33952865e-01,
           2.71782368e-01],
         [ 6.92567050e-01, -6.87118888e-01,  5.32605886e-01,
           5.28027296e-01, -6.36720419e-01, -5.84423721e-01,
           6.42510056e-01, -8.10430110e-01,  2.75423765e-01,
          -7.21136332e-01,  4.61195618e-01,  1.84095249e-01,
          -6.82107568e-01, -1.40784709e-02,             nan,
           4.90927517e-01],
         [ 1.37066811e-01, -3.48003469e-02, -1.02150702e+00,
          -1.28866598e-01, -3.83226633e-01,  1.85542807e-01,
          -4.73602355e-01,  6.96358383e-01, -1.32076159e-01,
           9.89355922e-01,  7.10406154e-02, -1.49316654e-01,
           1.86097071e-01,             nan,             nan,
          -7.78884709e-01],
         [ 4.13759202e-01,  1.28569081e-01,  1.81020394e-01,
                      nan, -9.65408623e-01, -2.92853504e-01,
          -8.75594199e-01,  9.28126335e-01,  2.36584768e-01,
          -3.92590570e+00,  2.33180761e-01, -5.33972800e-01,
                      nan,  5.44793978e-02, -3.28213310e+00,
          -8.26922297e-01]],

        [[ 4.27452505e-01, -1.12598119e-02, -1.63277173e+00,
          -3.45279127e-02, -2.83371001e-01,  9.51439500e-01,
          -2.46449616e-02,  1.58084616e-01, -2.14154452e-01,
           6.84838966e-02,             nan, -1.00019157e-01,
           5.24787545e-01,  3.84160399e-01,  4.18219298e-01,
          -8.95163000e-01],
         [-7.15789646e-02,  6.32936656e-01, -6.45811021e-01,
          -7.15762079e-02,  5.14207125e-01,  3.69977534e-01,
          -1.18185437e+00,  5.07263958e-01, -3.92603606e-01,
           2.00927004e-01, -4.10685778e-01, -3.27204585e+00,
          -3.46730733e+00,  4.08392139e-02, -9.99179959e-01,
           5.37217319e-01],
         [ 1.28577158e-01, -4.44024980e-01,  4.54235852e-01,
           6.25939727e-01, -9.07584012e-01, -2.44374967e+00,
          -3.43689114e-01,             nan,  4.86040562e-01,
          -1.08491480e+00, -2.83745146e+00, -6.45931184e-01,
          -1.81043163e-01, -1.14972524e-01, -8.87360692e-01,
          -8.38336170e-01],
         [-6.08122230e-01,  3.90421003e-01, -8.33193123e-01,
           3.09697717e-01, -3.14346075e+00,             nan,
           6.18634999e-01,  1.35361165e-01,  2.42603064e-01,
           6.78477362e-02,  1.26239851e-01,  7.08890438e-01,
          -1.20231152e+00,  2.30612397e-01, -1.17904052e-01,
           7.90050924e-01],
         [ 5.07041693e-01,  7.77505994e-01,  1.54195458e-01,
           6.31655633e-01,             nan, -6.76029384e-01,
           2.80003939e-02, -3.66837412e-01,  4.46122587e-01,
                      nan,  4.87852126e-01,  6.38912797e-01,
          -1.32087171e-01, -1.35798350e-01,  5.74903250e-01,
           6.51894093e-01],
         [-8.92276764e-01, -3.19434889e-02,  6.46907762e-02,
           8.19574147e-02, -8.47496837e-02,  1.90824002e-01,
          -1.55940324e-01, -3.56342465e-01, -2.55301142e+00,
          -2.70449575e-02,  4.75964367e-01, -6.04610443e-01,
          -8.60064864e-01,  3.46065760e-02,             nan,
           4.78019804e-01],
         [ 4.96921778e-01, -1.25748205e+00,  4.31227624e-01,
           2.44648799e-01, -2.61356860e-01, -1.63077402e+00,
           1.50011554e-01,  5.39023757e-01, -2.07412624e+00,
           2.16294862e-02,  2.78462619e-01,  5.20288646e-01,
                      nan,  4.19414729e-01,  5.40182531e-01,
          -1.17802501e+00],
         [ 4.21367466e-01, -5.40770173e-01,  3.25718492e-01,
                      nan, -1.19992507e+00,  6.73836410e-01,
          -6.90816998e-01, -6.19201511e-02,  9.92128849e-01,
           6.17447853e-01,  2.98506826e-01,  2.50075519e-01,
                      nan, -5.73253751e-01,  4.22686309e-01,
          -1.19054103e+00],
         [ 8.64464343e-01, -4.13264722e-01,  2.15535387e-01,
          -4.20562655e-01, -2.06126735e-01,  4.83213007e-01,
           9.68528330e-01,             nan,  5.26914358e-01,
           8.26750338e-01,  1.18561494e+00, -6.96672618e-01,
          -5.87111413e-01, -4.53401029e-01, -3.22793156e-01,
           6.30931437e-01],
         [-1.41352773e-01, -5.16264737e-01, -2.54602909e-01,
           1.59567237e-01, -2.89137453e-01,  3.51493567e-01,
          -5.84699094e-01,  6.47659659e-01, -2.50851846e+00,
          -2.02707559e-01, -4.60077465e-01, -3.38060021e-01,
           2.57173389e-01, -1.68725833e-01,             nan,
          -5.49020290e-01],
         [-1.71721682e-01, -1.87878773e-01,  7.95006871e-01,
           3.29695106e-01, -1.27686512e+00,  6.20664537e-01,
          -7.09375441e-02, -4.51672912e-01,  5.81877053e-01,
          -4.79263306e-01,             nan, -1.87228787e+00,
           4.47580554e-02,  5.83801687e-01,  6.09843194e-01,
           2.53597707e-01],
         [-4.54387903e-01,  4.44651008e-01, -2.69875556e-01,
          -1.27523363e+00, -4.86406982e-01, -1.28361011e+00,
           1.00152045e-01, -3.31718534e-01, -1.86161828e+00,
          -1.03892374e+00,  2.57633686e-01,  1.13706160e+00,
           1.31728435e-02,  4.40823525e-01,             nan,
           3.25732939e-02],
         [-5.00416160e-01,  6.01757228e-01, -6.54488266e-01,
           3.56742144e-01,  8.30579549e-02,  7.53507495e-01,
          -2.22790688e-01,  5.68800345e-02,  6.02468431e-01,
           4.74303901e-01,  9.00048092e-02, -1.16945237e-01,
          -5.55617929e-01,  7.78666496e-01,             nan,
           1.17416072e+00],
         [            nan, -1.26334941e+00, -9.95119214e-01,
           3.42797667e-01,  7.23819733e-01,  6.82682037e-01,
          -1.70351958e+00, -1.06164858e-01, -5.89229226e-01,
           4.26790059e-01, -5.49127460e-02,  5.72795272e-02,
           9.85855639e-01,  4.00577784e-01,  8.71237278e-01,
           4.17047203e-01],
         [ 5.81499003e-02,  6.79786503e-01, -1.23378515e+00,
          -2.21219778e+00,  2.80629873e-01,             nan,
           5.84809706e-02,  1.48048878e-01, -3.07960153e-01,
           8.19874033e-02, -3.67020994e-01,  5.78253686e-01,
          -4.96958017e-01, -1.60225320e+00, -9.79673922e-01,
          -1.67458892e-01],
         [ 3.64637464e-01, -2.57285166e+00, -1.46687555e+00,
           1.51981428e-01, -6.85262382e-01, -3.70033324e-01,
                      nan,  2.82697290e-01, -4.34790477e-02,
           3.48513395e-01,  3.22636366e-01,  8.94279838e-01,
          -1.00892401e+00,  1.59228146e-01,  8.74118656e-02,
           4.23913300e-01]]]], dtype=float32), 'output_shape': (1, 3, 16, 16), 'from': [3], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[            nan, -2.13351429e-01, -2.44543344e-01,
          -3.87034237e-01,  7.51019955e-01,  4.07941192e-01,
           4.47720349e-01, -3.94168288e-01,  1.51767641e-01,
          -5.58836639e-01,  7.91161060e-01, -3.49425197e-01,
                      nan,  8.67402136e-01,  2.46953189e-01,
                      nan],
         [-3.27596724e-01, -1.66164398e+00,  6.80380344e-01,
           5.27488112e-01, -1.00905108e+00,             nan,
          -5.74188083e-02,             nan, -8.73986408e-02,
          -1.45358074e+00,  7.48390615e-01,  3.41869108e-02,
          -7.77194560e-01,  8.03729117e-01, -2.12326646e+00,
                      nan],
         [ 7.50900030e-01,  1.86747372e-01,             nan,
           3.60871762e-01, -3.36579204e-01,             nan,
          -9.35861617e-02,  3.54090214e-01, -1.05844414e+00,
          -2.94387370e-01,  4.71200317e-01,  9.53826070e-01,
           4.29319084e-01,  1.88683584e-01, -7.65689090e-02,
                      nan],
         [-1.40414964e-02, -3.63282524e-02,  5.74554026e-01,
          -1.50066483e+00, -4.81124908e-01,  4.57550585e-01,
          -1.88881129e-01, -1.30595669e-01,  2.09154651e-01,
                      nan, -4.94964778e-01, -4.13547307e-01,
           1.85018644e-01,  2.23427802e-01, -3.97284269e-01,
          -3.36548463e-02],
         [            nan,  7.07769990e-01,  6.59750924e-02,
           3.65003526e-01, -1.29736817e+00, -1.55221331e+00,
           1.83731645e-01, -8.76917064e-01, -2.87971556e-01,
          -5.00528455e-01, -1.54692090e+00, -1.02780414e+00,
          -1.54649183e-01,  6.10631108e-01, -2.20681119e+00,
           2.05359787e-01],
         [ 6.51679695e-01, -1.04111063e+00,  6.82640314e-01,
           3.64520460e-01, -6.06731296e-01, -1.12087822e+00,
           7.60825396e-01, -3.64742905e-01, -1.15307130e-01,
          -7.35454381e-01,  1.38486296e-01,  1.27820879e-01,
           1.54476747e-01,  1.46188065e-01,  1.34243712e-01,
          -4.99061048e-01],
         [-1.32748783e+00, -1.08421874e+00, -2.06520006e-01,
           6.11826442e-02, -1.03527772e+00, -1.44794416e+00,
           1.62655964e-01,  2.53855553e-03, -2.16620937e-01,
           2.65703470e-01,  5.14960110e-01, -7.68543363e-01,
           7.23419130e-01, -1.24657027e-01, -1.52604282e-01,
          -1.58501357e-01],
         [ 8.66636395e-01, -3.68792057e-01,             nan,
           2.90616512e-01,             nan, -1.44512266e-01,
           5.15699744e-01,  2.68248558e-01, -1.39985108e+00,
          -1.13583648e+00,  4.28233117e-01, -7.88901508e-01,
          -3.13109279e-01,  3.32251757e-01,  4.37967665e-02,
          -8.15390423e-02],
         [ 3.65507960e-01, -1.00623339e-01,  1.58568308e-01,
           7.24626839e-01,  6.25924110e-01, -2.42429096e-02,
           1.34946004e-01,  1.33217737e-01,  7.02933311e-01,
                      nan, -3.88627291e-01,  6.54100254e-02,
          -5.53993247e-02,  2.30697989e-01, -6.72831655e-01,
          -6.19695663e-01],
         [-7.75344253e-01,  4.08142298e-01,             nan,
           3.57737750e-01,  3.69213551e-01,  3.13074619e-01,
           6.29046977e-01,  2.47303456e-01,  1.13578252e-01,
           6.57495558e-01,  4.11211461e-01,  5.50141096e-01,
          -1.12257612e+00,  8.03261518e-01,  3.17019939e-01,
                      nan],
         [-9.64619517e-01,  2.42790654e-01, -3.81725967e-01,
          -3.59402955e-01, -2.34261639e-02, -8.30188155e-01,
           4.61877286e-01, -1.12304378e+00, -7.27016866e-01,
           8.86668205e-01, -6.18295908e-01, -2.04119229e+00,
          -1.49861928e-02,  5.72946429e-01,  1.02137768e+00,
           2.98552543e-01],
         [-5.25818825e-01,  4.45118725e-01,  9.80439186e-01,
                      nan, -3.47424150e-01, -1.19456783e-01,
           6.03411853e-01,  6.10113144e-01,  8.26544583e-01,
          -9.61086154e-01,  2.37266913e-01,  5.25026202e-01,
           8.08122873e-01, -1.17539912e-01,  8.20081651e-01,
          -1.25775889e-01],
         [ 2.69665658e-01, -2.39516661e-01, -9.45658684e-02,
           3.86660397e-01,  4.20837820e-01,  7.35575616e-01,
           6.66698933e-01,  6.98084295e-01,  2.72201240e-01,
           5.77071071e-01,  6.06151283e-01,  5.25898397e-01,
           1.87681064e-01, -3.08381295e+00, -1.43126202e+00,
           2.02388361e-01],
         [ 5.83017170e-01,  7.87603498e-01, -1.43497586e+00,
          -7.46677995e-01,  2.80212983e-02, -2.97754556e-01,
          -6.92913771e-01, -2.11711247e-02,  2.39666030e-02,
          -6.11842752e-01, -1.28160441e+00, -7.81699896e-01,
           6.79402411e-01, -4.55301940e-01,  3.65314394e-01,
          -4.50671792e-01],
         [-4.61329997e-01, -1.69113183e+00, -1.47609398e-01,
          -3.69223267e-01,  1.89302206e-01, -1.26531327e+00,
          -9.29474473e-01, -2.01613593e+00,  1.02427937e-01,
          -3.56370926e-01, -2.76965261e-01, -3.11699033e-01,
           5.28347015e-01, -4.09450829e-01, -6.78673387e-01,
           8.46091390e-01],
         [ 2.29210600e-01,  5.04729271e-01,             nan,
          -3.01618648e+00, -9.55787897e-01,  9.02834594e-01,
           2.08818823e-01,  7.97991335e-01,             nan,
          -1.08415282e+00, -1.86329305e-01,  2.55968511e-01,
           8.48981977e-01, -4.42811698e-01,  6.27892137e-01,
          -3.06288719e-01]],

        [[ 7.75155067e-01, -1.27550289e-01,  3.79026860e-01,
          -4.99074221e-01,  5.45901895e-01,  2.90941924e-01,
           7.35247970e-01,  5.51083148e-01, -4.73726630e-01,
           6.82197809e-01,  1.11088030e-01, -1.75258830e-01,
          -1.10427642e+00, -3.28262523e-02,  6.27114713e-01,
           8.87102857e-02],
         [-7.79787302e-01, -5.67359567e-01, -1.91163138e-01,
          -2.31242871e+00, -7.41408944e-01,             nan,
           5.93405783e-01,  9.99198928e-02, -2.80801988e+00,
          -1.58469573e-01, -3.73951852e-01, -7.04289079e-01,
           4.54967499e-01,             nan, -2.99287755e-02,
          -1.03213772e-01],
         [ 1.92130938e-01,  1.06840146e+00,             nan,
           6.31517410e-01,  2.80315787e-01,  9.18344915e-01,
           6.83568358e-01, -8.69221032e-01,             nan,
          -2.47665704e-03,  5.76632321e-01,  3.23251337e-01,
          -3.58547717e-01,  8.75120223e-01,  3.19196284e-01,
           7.97407031e-01],
         [ 1.11664307e+00, -7.72935987e-01,             nan,
           5.10482073e-01,  7.53684789e-02, -1.63602471e-01,
           1.80281132e-01, -1.13293338e+00, -4.16277826e-01,
          -3.20555955e-01,  9.28677559e-01, -9.71232653e-01,
           4.85753983e-01,  2.11506695e-01,  4.10187811e-01,
           1.78524941e-01],
         [-8.02320123e-01,  5.72722912e-01, -3.09611142e-01,
           2.30827555e-01, -1.41844499e+00,  1.26929939e-01,
           3.68853390e-01,  3.19100887e-01, -2.46898293e-01,
          -1.89158726e+00,  8.84029508e-01, -1.93047732e-01,
           3.08972508e-01, -1.01389265e+00,  5.91264009e-01,
           7.13564456e-01],
         [ 3.82447809e-01,  5.22489212e-02, -1.39242661e+00,
                      nan,  2.51441896e-01,  9.64132428e-01,
           4.41864580e-01,  7.24327505e-01,  5.46381831e-01,
           3.53497207e-01, -2.24393114e-01, -1.27868110e-03,
           1.41148761e-01,             nan, -6.63878739e-01,
          -2.29576230e-01],
         [ 2.53008515e-01, -1.74104035e-01, -5.28632343e-01,
          -2.73571014e-01, -5.83466768e-01,  7.55179226e-01,
           4.61482286e-01, -3.31884593e-01, -1.10238612e-01,
           5.99997580e-01, -2.32153296e+00, -1.57022882e+00,
           1.76127613e-01, -2.36336756e+00, -8.77406597e-01,
           4.65103984e-02],
         [            nan,             nan, -1.97367027e-01,
           6.86749697e-01,  7.13538647e-01,  8.71242806e-02,
          -8.29865158e-01,  7.18576849e-01,  5.64889789e-01,
           6.04063153e-01,  8.81486386e-02, -2.13606969e-01,
           5.26193865e-02, -2.72632688e-01, -2.59334415e-01,
           3.98859642e-02],
         [ 1.17797874e-01,  7.72725195e-02,  5.33197284e-01,
           3.95753235e-01, -3.26438504e-03, -2.89678025e+00,
          -5.95686376e-01,  1.07323682e+00,             nan,
          -5.05518198e-01, -2.33928204e+00,  7.45922863e-01,
           9.10261944e-02,  4.34640408e-01, -5.91913581e-01,
           3.81326705e-01],
         [ 1.43834829e-01,  3.42083037e-01,  5.57271428e-02,
          -2.65725642e-01,  5.83587885e-01,  1.00167120e+00,
           1.45885527e-01,             nan,  3.20728332e-01,
          -4.33904767e-01, -6.60570621e-01, -1.24265814e+00,
           1.17228799e-01,             nan,             nan,
           3.34616959e-01],
         [ 1.20913178e-01,  3.26393813e-01,  6.42018974e-01,
           3.95888060e-01,  4.47296202e-01,  9.35592204e-02,
          -2.36423165e-01,  9.60098624e-01,  7.05424070e-01,
                      nan, -4.34158981e-01, -3.57941419e-01,
          -2.53232603e-04, -1.15436125e+00,  2.08374411e-02,
          -1.34262943e+00],
         [-1.31762147e+00, -8.55167434e-02, -1.68571562e-01,
          -2.20565230e-01, -5.22155583e-01, -1.81079531e+00,
          -1.01506150e+00,  2.96829641e-01,  2.72956789e-01,
           4.84880030e-01, -1.75539935e+00,  3.82479757e-01,
           7.78461397e-01,  8.86348128e-01,             nan,
           1.70845583e-01],
         [ 5.69942057e-01, -1.40867555e+00,  2.01583788e-01,
           3.04142773e-01, -2.26602629e-01,  4.04959768e-02,
          -2.82309383e-01,  3.73120070e-01, -5.80440521e-01,
           3.14571440e-01,  4.57768500e-01,  6.57823458e-02,
           7.85529673e-01,  1.06149793e+00, -2.33950451e-01,
           2.71779567e-01],
         [ 6.92568481e-01, -6.87117457e-01,  5.32609224e-01,
           5.28030574e-01, -6.36723816e-01, -5.84424257e-01,
           6.42510056e-01, -8.10429096e-01,  2.75425702e-01,
          -7.21134901e-01,  4.61198032e-01,  1.84096739e-01,
          -6.82106137e-01, -1.40770404e-02,             nan,
           4.90929902e-01],
         [ 1.37069970e-01, -3.48003693e-02, -1.02150691e+00,
          -1.28865615e-01, -3.83224726e-01,  1.85544282e-01,
          -4.73603189e-01,  6.96359813e-01, -1.32075176e-01,
           9.89357829e-01,  7.10435212e-02, -1.49315670e-01,
           1.86098561e-01,             nan,             nan,
          -7.78883696e-01],
         [ 4.13761437e-01,  1.28572240e-01,  1.81021869e-01,
                      nan, -9.65406358e-01, -2.92853445e-01,
          -8.75590920e-01,  9.28123534e-01,  2.36581966e-01,
          -3.92590857e+00,  2.33177945e-01, -5.33971310e-01,
                      nan,  5.44759892e-02, -3.28213167e+00,
          -8.26921344e-01]],

        [[ 4.27454740e-01, -1.12583805e-02, -1.63276935e+00,
          -3.45279351e-02, -2.83368766e-01,  9.51436698e-01,
          -2.46435311e-02,  1.58086091e-01, -2.14152038e-01,
           6.84868023e-02,             nan, -1.00018166e-01,
           5.24790883e-01,  3.84160459e-01,  4.18221533e-01,
          -8.95160615e-01],
         [-7.15789869e-02,  6.32936656e-01, -6.45814419e-01,
          -7.15762302e-02,  5.14210403e-01,  3.69977593e-01,
          -1.18185508e+00,  5.07267237e-01, -3.92601669e-01,
           2.00926200e-01, -4.10683870e-01, -3.27204442e+00,
          -3.46730590e+00,  4.08358052e-02, -9.99179900e-01,
           5.37220597e-01],
         [ 1.28580317e-01, -4.44027781e-01,  4.54238296e-01,
           6.25939727e-01, -9.07581627e-01, -2.44375229e+00,
          -3.43691975e-01,             nan,  4.86042976e-01,
          -1.08491290e+00, -2.83745146e+00, -6.45934582e-01,
          -1.81039870e-01, -1.14971533e-01, -8.87358248e-01,
          -8.38335156e-01],
         [-6.08119369e-01,  3.90421063e-01, -8.33192170e-01,
           3.09699625e-01, -3.14346361e+00,             nan,
           6.18634939e-01,  1.35364324e-01,  2.42600247e-01,
           6.78506419e-02,  1.26243010e-01,  7.08891869e-01,
          -1.20230997e+00,  2.30609581e-01, -1.17903061e-01,
           7.90050387e-01],
         [ 5.07044971e-01,  7.77508855e-01,  1.54196933e-01,
           6.31655574e-01,             nan, -6.76027894e-01,
           2.80018244e-02, -3.66840243e-01,  4.46124792e-01,
                      nan,  4.87854540e-01,  6.38912797e-01,
          -1.32086188e-01, -1.35797366e-01,  5.74904263e-01,
           6.51894033e-01],
         [-8.92274380e-01, -3.19435112e-02,  6.46936819e-02,
           8.19603205e-02, -8.47487003e-02,  1.90825492e-01,
          -1.55937046e-01, -3.56345326e-01, -2.55301237e+00,
          -2.70435270e-02,  4.75966781e-01, -6.04607522e-01,
          -8.60061586e-01,  3.46031673e-02,             nan,
           4.78022218e-01],
         [ 4.96924222e-01, -1.25747883e+00,  4.31229860e-01,
           2.44645998e-01, -2.61354655e-01, -1.63077164e+00,
           1.50013030e-01,  5.39027035e-01, -2.07412481e+00,
           2.16309149e-02,  2.78464556e-01,  5.20291924e-01,
                      nan,  4.19416934e-01,  5.40185809e-01,
          -1.17802572e+00],
         [ 4.21369702e-01, -5.40768683e-01,  3.25715631e-01,
                      nan, -1.19992363e+00,  6.73837841e-01,
          -6.90815568e-01, -6.19201735e-02,  9.92130756e-01,
           6.17447793e-01,  2.98508763e-01,  2.50072688e-01,
                      nan, -5.73250592e-01,  4.22688544e-01,
          -1.19053948e+00],
         [ 8.64465833e-01, -4.13262814e-01,  2.15534583e-01,
          -4.20560747e-01, -2.06124321e-01,  4.83215421e-01,
           9.68530238e-01,             nan,  5.26917636e-01,
           8.26753497e-01,  1.18561733e+00, -6.96671188e-01,
          -5.87112010e-01, -4.53403860e-01, -3.22793096e-01,
           6.30931377e-01],
         [-1.41351774e-01, -5.16263247e-01, -2.54600674e-01,
           1.59568712e-01, -2.89137393e-01,  3.51490706e-01,
          -5.84699631e-01,  6.47659600e-01, -2.50852132e+00,
          -2.02705145e-01, -4.60080266e-01, -3.38062882e-01,
           2.57170558e-01, -1.68722540e-01,             nan,
          -5.49017131e-01],
         [-1.71718389e-01, -1.87875494e-01,  7.95006275e-01,
           3.29692245e-01, -1.27686572e+00,  6.20664477e-01,
          -7.09375665e-02, -4.51675713e-01,  5.81878006e-01,
          -4.79264110e-01,             nan, -1.87228870e+00,
           4.47546430e-02,  5.83802700e-01,  6.09844208e-01,
           2.53594905e-01],
         [-4.54390705e-01,  4.44653213e-01, -2.69873351e-01,
          -1.27523422e+00, -4.86407816e-01, -1.28361070e+00,
           1.00151472e-01, -3.31721395e-01, -1.86161911e+00,
          -1.03892660e+00,  2.57630885e-01,  1.13706374e+00,
           1.31742740e-02,  4.40825760e-01,             nan,
           3.25698853e-02],
         [-5.00414670e-01,  6.01758182e-01, -6.54491663e-01,
           3.56739312e-01,  8.30608532e-02,  7.53504038e-01,
          -2.22788289e-01,  5.68766221e-02,  6.02469444e-01,
           4.74306345e-01,  9.00042355e-02, -1.16944253e-01,
          -5.55614769e-01,  7.78669357e-01,             nan,
           1.17416310e+00],
         [            nan, -1.26334620e+00, -9.95119154e-01,
           3.42794806e-01,  7.23821163e-01,  6.82683468e-01,
          -1.70351958e+00, -1.06163874e-01, -5.89229822e-01,
           4.26792294e-01, -5.49127683e-02,  5.72761111e-02,
           9.85857606e-01,  4.00577843e-01,  8.71238708e-01,
           4.17049438e-01],
         [ 5.81464879e-02,  6.79787874e-01, -1.23378360e+00,
          -2.21219683e+00,  2.80631810e-01,             nan,
           5.84775619e-02,  1.48050353e-01, -3.07960093e-01,
           8.19903016e-02, -3.67023826e-01,  5.78254700e-01,
          -4.96956527e-01, -1.60225070e+00, -9.79671717e-01,
          -1.67455599e-01],
         [ 3.64637524e-01, -2.57285237e+00, -1.46687555e+00,
           1.51982918e-01, -6.85260952e-01, -3.70036155e-01,
                      nan,  2.82699227e-01, -4.34790663e-02,
           3.48510534e-01,  3.22633505e-01,  8.94279003e-01,
          -1.00892389e+00,  1.59229636e-01,  8.74147713e-02,
           4.23915535e-01]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 16, 16]), 'from': [3], 'to': [1]}

generate models:174

analyse the exceptions in iter:204
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 0.2176, -0.2119,  1.1573,  ..., -0.2492,  1.9087,  0.4428],
           [ 0.2691, -2.1520,  1.0352,  ...,  3.2076,  1.4425, -0.3011],
           [ 0.1773, -0.4165, -0.0464,  ...,  2.4636,  1.1781, -0.2383],
           ...,
           [-1.0115,  0.2252,  0.5459,  ...,  1.8216, -0.7644,  0.1262],
           [ 0.1746, -1.6391,  0.2450,  ...,  0.5559,  0.0365,  1.6311],
           [ 0.4136, -0.3058, -1.0751,  ...,  1.0822, -0.7239, -0.7381]],

          [[-1.3045,  0.7357, -0.6924,  ...,  0.8211,  0.3290,  0.8367],
           [-0.8955,  0.3115,  2.0371,  ...,  0.0943,  0.1017,  0.1019],
           [-0.7279, -0.7803,  0.2281,  ...,  0.8090, -0.2460,  0.3719],
           ...,
           [ 0.0664, -0.1380,  1.1711,  ..., -0.5744, -0.6659,  0.2661],
           [ 0.6050,  1.2005,  0.4948,  ...,  1.8841,  0.5078,  0.6485],
           [-0.8951, -0.5628,  0.4510,  ...,  1.1371,  0.3241,  0.5332]],

          [[-0.7809,  0.5308, -1.1294,  ..., -1.3444,  1.8067, -0.2279],
           [ 1.5245,  1.3333, -0.0725,  ...,  0.2802,  1.1404, -0.1220],
           [ 0.1405, -1.3491, -0.0552,  ..., -0.3868, -0.1261,  0.5594],
           ...,
           [-1.7247, -0.0780, -0.6770,  ..., -0.0299,  0.9988, -0.7524],
           [ 1.3138, -2.0614,  0.1880,  ...,  0.4839, -0.3930,  0.2615],
           [-0.1406, -2.0668,  0.6134,  ...,  1.7646,  1.9831,  1.2138]]]]])}
Given groups=1, weight of size [64, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[2.17578232e-001, -2.11863309e-001, 1.15726745e+000 ... -2.49236584e-001, 1.90873635e+000, 4.42773521e-001],
    [2.69114375e-001, -2.15196109e+000, 1.03516459e+000 ... 3.20761299e+000, 1.44250154e+000, -3.01100254e-001],
    [1.77286118e-001, -4.16521400e-001, -4.64111343e-002 ... 2.46363664e+000, 1.17808688e+000, -2.38256201e-001],
    ...
    [-1.01150668e+000, 2.25207239e-001, 5.45940816e-001 ... 1.82163000e+000, -7.64424741e-001, 1.26167193e-001],
    [1.74601421e-001, -1.63905239e+000, 2.44990841e-001 ... 5.55895448e-001, 3.65133844e-002, 1.63113701e+000],
    [4.13571864e-001, -3.05767298e-001, -1.07514250e+000 ... 1.08217824e+000, -7.23869503e-001, -7.38055706e-001]],
   [[-1.30452323e+000, 7.35728800e-001, -6.92394733e-001 ... 8.21077526e-001, 3.28954428e-001, 8.36703479e-001],
    [-8.95536900e-001, 3.11535001e-001, 2.03711319e+000 ... 9.42626745e-002, 1.01654045e-001, 1.01864353e-001],
    [-7.27921367e-001, -7.80303240e-001, 2.28103667e-001 ... 8.09038699e-001, -2.46012911e-001, 3.71920139e-001],
    ...
    [6.64296970e-002, -1.38038442e-001, 1.17106104e+000 ... -5.74356794e-001, -6.65948272e-001, 2.66112953e-001],
    [6.04962349e-001, 1.20048690e+000, 4.94835109e-001 ... 1.88409960e+000, 5.07808685e-001, 6.48470044e-001],
    [-8.95132661e-001, -5.62774658e-001, 4.51028466e-001 ... 1.13707340e+000, 3.24115664e-001, 5.33236742e-001]],
   [[-7.80920565e-001, 5.30775011e-001, -1.12944472e+000 ... -1.34443986e+000, 1.80674839e+000, -2.27943093e-001],
    [1.52452064e+000, 1.33334172e+000, -7.25020468e-002 ... 2.80183196e-001, 1.14043736e+000, -1.21977933e-001],
    [1.40527830e-001, -1.34905994e+000, -5.51865436e-002 ... -3.86817425e-001, -1.26126856e-001, 5.59421360e-001],
    ...
    [-1.72474325e+000, -7.79758096e-002, -6.77012920e-001 ... -2.99095474e-002, 9.98762667e-001, -7.52436221e-001],
    [1.31381547e+000, -2.06136560e+000, 1.88043788e-001 ... 4.83884126e-001, -3.93003166e-001, 2.61512339e-001],
    [-1.40625149e-001, -2.06677508e+000, 6.13400578e-001 ... 1.76464570e+000, 1.98313844e+000, 1.21377850e+000]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:176

analyse output arrays in iter:209

pre layer res:
4:conv2d
{'name': 'conv2d', 'output': array([[[[126758.97 , 120572.06 , 115291.78 , ..., 152283.44 ,
          183037.28 , 120826.97 ],
         [141303.98 , 216090.42 , 125255.74 , ...,  80928.02 ,
          133404.81 , 252825.69 ],
         [124319.94 , 131687.   , 128819.234, ..., 110351.03 ,
          148308.47 , 122255.99 ],
         ...,
         [111643.12 , 103540.305, 162931.17 , ..., 113867.125,
          136871.75 ,  96209.27 ],
         [141719.3  , 126976.78 , 114693.125, ..., 102681.195,
          132187.78 , 112445.09 ],
         [102283.99 , 118928.016, 144085.22 , ..., 153061.27 ,
          165151.8  , 122568.87 ]],

        [[126758.97 , 120572.06 , 115291.78 , ..., 152283.44 ,
          183037.28 , 120826.97 ],
         [141303.98 , 216090.42 , 125255.74 , ...,  80928.02 ,
          133404.81 , 252825.69 ],
         [124319.94 , 131687.   , 128819.234, ..., 110351.03 ,
          148308.47 , 122255.99 ],
         ...,
         [111643.12 , 103540.305, 162931.17 , ..., 113867.125,
          136871.75 ,  96209.27 ],
         [141719.3  , 126976.78 , 114693.125, ..., 102681.195,
          132187.78 , 112445.09 ],
         [102283.99 , 118928.016, 144085.22 , ..., 153061.27 ,
          165151.8  , 122568.87 ]],

        [[126758.97 , 120572.06 , 115291.78 , ..., 152283.44 ,
          183037.28 , 120826.97 ],
         [141303.98 , 216090.42 , 125255.74 , ...,  80928.02 ,
          133404.81 , 252825.69 ],
         [124319.94 , 131687.   , 128819.234, ..., 110351.03 ,
          148308.47 , 122255.99 ],
         ...,
         [111643.12 , 103540.305, 162931.17 , ..., 113867.125,
          136871.75 ,  96209.27 ],
         [141719.3  , 126976.78 , 114693.125, ..., 102681.195,
          132187.78 , 112445.09 ],
         [102283.99 , 118928.016, 144085.22 , ..., 153061.27 ,
          165151.8  , 122568.87 ]],

        ...,

        [[126758.97 , 120572.06 , 115291.78 , ..., 152283.44 ,
          183037.28 , 120826.97 ],
         [141303.98 , 216090.42 , 125255.74 , ...,  80928.02 ,
          133404.81 , 252825.69 ],
         [124319.94 , 131687.   , 128819.234, ..., 110351.03 ,
          148308.47 , 122255.99 ],
         ...,
         [111643.12 , 103540.305, 162931.17 , ..., 113867.125,
          136871.75 ,  96209.27 ],
         [141719.3  , 126976.78 , 114693.125, ..., 102681.195,
          132187.78 , 112445.09 ],
         [102283.99 , 118928.016, 144085.22 , ..., 153061.27 ,
          165151.8  , 122568.87 ]],

        [[126758.97 , 120572.06 , 115291.78 , ..., 152283.44 ,
          183037.28 , 120826.97 ],
         [141303.98 , 216090.42 , 125255.74 , ...,  80928.02 ,
          133404.81 , 252825.69 ],
         [124319.94 , 131687.   , 128819.234, ..., 110351.03 ,
          148308.47 , 122255.99 ],
         ...,
         [111643.12 , 103540.305, 162931.17 , ..., 113867.125,
          136871.75 ,  96209.27 ],
         [141719.3  , 126976.78 , 114693.125, ..., 102681.195,
          132187.78 , 112445.09 ],
         [102283.99 , 118928.016, 144085.22 , ..., 153061.27 ,
          165151.8  , 122568.87 ]],

        [[126758.97 , 120572.06 , 115291.78 , ..., 152283.44 ,
          183037.28 , 120826.97 ],
         [141303.98 , 216090.42 , 125255.74 , ...,  80928.02 ,
          133404.81 , 252825.69 ],
         [124319.94 , 131687.   , 128819.234, ..., 110351.03 ,
          148308.47 , 122255.99 ],
         ...,
         [111643.12 , 103540.305, 162931.17 , ..., 113867.125,
          136871.75 ,  96209.27 ],
         [141719.3  , 126976.78 , 114693.125, ..., 102681.195,
          132187.78 , 112445.09 ],
         [102283.99 , 118928.016, 144085.22 , ..., 153061.27 ,
          165151.8  , 122568.87 ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 8, 8]), 'from': [3], 'to': [11]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.9140785 , -0.76949364,  0.99906474, ..., -0.85043025,
           0.9715112 ,  0.9675362 ],
         [ 0.9901048 , -0.77531236,  0.4287321 , ...,  0.5619001 ,
           0.22023752,  0.26141024],
         [ 0.73996085, -0.75832486,  0.9797496 , ..., -0.52464664,
           0.16204168, -0.791997  ],
         ...,
         [-0.33259782, -0.30123687,  0.9483261 , ..., -0.09910767,
          -0.9162958 ,  0.9086393 ],
         [ 0.8863127 , -0.11039731, -0.1391443 , ...,  0.98204696,
           0.84833634,  0.9354368 ],
         [ 0.01857086, -0.1156102 , -0.70803684, ...,  0.26678017,
          -0.9875238 ,  0.36179474]],

        [[ 0.9140785 , -0.76949364,  0.99906474, ..., -0.85043025,
           0.9715112 ,  0.9675362 ],
         [ 0.9901048 , -0.77531236,  0.4287321 , ...,  0.5619001 ,
           0.22023752,  0.26141024],
         [ 0.73996085, -0.75832486,  0.9797496 , ..., -0.52464664,
           0.16204168, -0.791997  ],
         ...,
         [-0.33259782, -0.30123687,  0.9483261 , ..., -0.09910767,
          -0.9162958 ,  0.9086393 ],
         [ 0.8863127 , -0.11039731, -0.1391443 , ...,  0.98204696,
           0.84833634,  0.9354368 ],
         [ 0.01857086, -0.1156102 , -0.70803684, ...,  0.26678017,
          -0.9875238 ,  0.36179474]],

        [[ 0.9140785 , -0.76949364,  0.99906474, ..., -0.85043025,
           0.9715112 ,  0.9675362 ],
         [ 0.9901048 , -0.77531236,  0.4287321 , ...,  0.5619001 ,
           0.22023752,  0.26141024],
         [ 0.73996085, -0.75832486,  0.9797496 , ..., -0.52464664,
           0.16204168, -0.791997  ],
         ...,
         [-0.33259782, -0.30123687,  0.9483261 , ..., -0.09910767,
          -0.9162958 ,  0.9086393 ],
         [ 0.8863127 , -0.11039731, -0.1391443 , ...,  0.98204696,
           0.84833634,  0.9354368 ],
         [ 0.01857086, -0.1156102 , -0.70803684, ...,  0.26678017,
          -0.9875238 ,  0.36179474]],

        ...,

        [[ 0.9140785 , -0.76949364,  0.99906474, ..., -0.85043025,
           0.9715112 ,  0.9675362 ],
         [ 0.9901048 , -0.77531236,  0.4287321 , ...,  0.5619001 ,
           0.22023752,  0.26141024],
         [ 0.73996085, -0.75832486,  0.9797496 , ..., -0.52464664,
           0.16204168, -0.791997  ],
         ...,
         [-0.33259782, -0.30123687,  0.9483261 , ..., -0.09910767,
          -0.9162958 ,  0.9086393 ],
         [ 0.8863127 , -0.11039731, -0.1391443 , ...,  0.98204696,
           0.84833634,  0.9354368 ],
         [ 0.01857086, -0.1156102 , -0.70803684, ...,  0.26678017,
          -0.9875238 ,  0.36179474]],

        [[ 0.9140785 , -0.76949364,  0.99906474, ..., -0.85043025,
           0.9715112 ,  0.9675362 ],
         [ 0.9901048 , -0.77531236,  0.4287321 , ...,  0.5619001 ,
           0.22023752,  0.26141024],
         [ 0.73996085, -0.75832486,  0.9797496 , ..., -0.52464664,
           0.16204168, -0.791997  ],
         ...,
         [-0.33259782, -0.30123687,  0.9483261 , ..., -0.09910767,
          -0.9162958 ,  0.9086393 ],
         [ 0.8863127 , -0.11039731, -0.1391443 , ...,  0.98204696,
           0.84833634,  0.9354368 ],
         [ 0.01857086, -0.1156102 , -0.70803684, ...,  0.26678017,
          -0.9875238 ,  0.36179474]],

        [[ 0.9140785 , -0.76949364,  0.99906474, ..., -0.85043025,
           0.9715112 ,  0.9675362 ],
         [ 0.9901048 , -0.77531236,  0.4287321 , ...,  0.5619001 ,
           0.22023752,  0.26141024],
         [ 0.73996085, -0.75832486,  0.9797496 , ..., -0.52464664,
           0.16204168, -0.791997  ],
         ...,
         [-0.33259782, -0.30123687,  0.9483261 , ..., -0.09910767,
          -0.9162958 ,  0.9086393 ],
         [ 0.8863127 , -0.11039731, -0.1391443 , ...,  0.98204696,
           0.84833634,  0.9354368 ],
         [ 0.01857086, -0.1156102 , -0.70803684, ...,  0.26678017,
          -0.9875238 ,  0.36179474]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 8, 8]), 'from': [4], 'to': [10, 14]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.85597074, -0.8078811 ,  0.9859737 , ..., -0.99997467,
           0.7350169 ,  0.44028667],
         [ 0.9901048 ,  0.6251241 ,  0.18421818, ...,  0.58113164,
           0.7795412 , -0.954138  ],
         [ 0.6965028 ,  0.12332079,  0.59304243, ..., -0.9078961 ,
          -0.2863026 , -0.791997  ],
         ...,
         [ 0.19867484, -0.00911439,  0.49126643, ...,  0.4607627 ,
          -0.98425466,  0.9923336 ],
         [ 0.97885185,  0.5649022 ,  0.64738834, ...,  0.89664495,
           0.9203933 ,  0.9224149 ],
         [ 0.01857086, -0.10007649, -0.29775417, ...,  0.14454244,
          -0.9408629 , -0.3561857 ]],

        [[ 0.85597074, -0.8078811 ,  0.9859737 , ..., -0.99997467,
           0.7350169 ,  0.44028667],
         [ 0.9901048 ,  0.6251241 ,  0.18421818, ...,  0.58113164,
           0.7795412 , -0.954138  ],
         [ 0.6965028 ,  0.12332079,  0.59304243, ..., -0.9078961 ,
          -0.2863026 , -0.791997  ],
         ...,
         [ 0.19867484, -0.00911439,  0.49126643, ...,  0.4607627 ,
          -0.98425466,  0.9923336 ],
         [ 0.97885185,  0.5649022 ,  0.64738834, ...,  0.89664495,
           0.9203933 ,  0.9224149 ],
         [ 0.01857086, -0.10007649, -0.29775417, ...,  0.14454244,
          -0.9408629 , -0.3561857 ]],

        [[ 0.85597074, -0.8078811 ,  0.9859737 , ..., -0.99997467,
           0.7350169 ,  0.44028667],
         [ 0.9901048 ,  0.6251241 ,  0.18421818, ...,  0.58113164,
           0.7795412 , -0.954138  ],
         [ 0.6965028 ,  0.12332079,  0.59304243, ..., -0.9078961 ,
          -0.2863026 , -0.791997  ],
         ...,
         [ 0.19867484, -0.00911439,  0.49126643, ...,  0.4607627 ,
          -0.98425466,  0.9923336 ],
         [ 0.97885185,  0.5649022 ,  0.64738834, ...,  0.89664495,
           0.9203933 ,  0.9224149 ],
         [ 0.01857086, -0.10007649, -0.29775417, ...,  0.14454244,
          -0.9408629 , -0.3561857 ]],

        ...,

        [[ 0.85597074, -0.8078811 ,  0.9859737 , ..., -0.99997467,
           0.7350169 ,  0.44028667],
         [ 0.9901048 ,  0.6251241 ,  0.18421818, ...,  0.58113164,
           0.7795412 , -0.954138  ],
         [ 0.6965028 ,  0.12332079,  0.59304243, ..., -0.9078961 ,
          -0.2863026 , -0.791997  ],
         ...,
         [ 0.19867484, -0.00911439,  0.49126643, ...,  0.4607627 ,
          -0.98425466,  0.9923336 ],
         [ 0.97885185,  0.5649022 ,  0.64738834, ...,  0.89664495,
           0.9203933 ,  0.9224149 ],
         [ 0.01857086, -0.10007649, -0.29775417, ...,  0.14454244,
          -0.9408629 , -0.3561857 ]],

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]],

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]]]], dtype=float32), 'output_shape': (1, 512, 8, 8), 'from': [4], 'to': [10, 14]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]],

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]],

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]],

        ...,

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]],

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]],

        [[ 0.8599838 , -0.87505424,  0.8974916 , ..., -0.99997467,
           0.8943345 ,  0.5356632 ],
         [ 0.9901048 ,  0.6251241 , -0.28718442, ...,  0.61862665,
           0.42667034, -0.53426844],
         [ 0.6016076 ,  0.12332079,  0.89975476, ..., -0.7710096 ,
          -0.2863026 , -0.78720313],
         ...,
         [-0.19713223,  0.3210358 ,  0.5706467 , ...,  0.08033022,
          -0.9533395 ,  0.9991938 ],
         [ 0.99587595,  0.12343658,  0.629349  , ...,  0.9546204 ,
           0.99964327,  0.96743995],
         [ 0.01857086, -0.0767313 , -0.23754647, ...,  0.19074944,
          -0.74099   , -0.02824144]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 8, 8]), 'from': [4], 'to': [10, 14]}

generate models:181

analyse the exceptions in iter:213
torch exception:
{'id': 1, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.0000, 2.5183, 0.3756,  ..., 0.0000, 0.0000, 0.1789],
          [1.7889, 0.0000, 0.0000,  ..., 0.0000, 0.2610, 0.0000],
          [0.0000, 0.0000, 0.9000,  ..., 0.0000, 0.0928, 0.0000],
          ...,
          [1.4531, 0.4593, 1.9771,  ..., 0.4463, 0.0000, 0.2810],
          [0.0000, 0.1241, 0.0000,  ..., 0.4116, 0.2553, 0.5658],
          [0.0000, 0.7082, 0.0000,  ..., 0.3481, 0.0000, 0.0000]],

         [[0.0000, 0.0000, 0.7967,  ..., 0.0000, 0.0688, 0.2728],
          [1.2034, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          [1.2606, 1.7939, 1.6947,  ..., 0.0000, 1.2432, 0.4518],
          ...,
          [0.0000, 0.3094, 0.2288,  ..., 0.8691, 1.5512, 0.0000],
          [1.4745, 0.0000, 0.0000,  ..., 0.0000, 0.3829, 0.0478],
          [1.8029, 0.1305, 0.0000,  ..., 0.0000, 1.6508, 0.0000]],

         [[0.0000, 1.1029, 0.6670,  ..., 0.0000, 1.0654, 0.7331],
          [0.2710, 0.0000, 0.4256,  ..., 0.0000, 0.7645, 0.0000],
          [0.0000, 2.0977, 0.0000,  ..., 0.0000, 1.8848, 0.0762],
          ...,
          [0.0000, 0.0000, 0.9066,  ..., 0.0000, 0.0000, 0.1497],
          [0.7360, 0.0000, 0.0000,  ..., 0.0000, 0.1840, 0.0000],
          [3.0936, 0.5013, 1.3376,  ..., 0.4213, 0.9700, 0.3820]]]])]}
mat1 and mat2 shapes cannot be multiplied (96x32 and 100x100)
mindspore exception:
{'id': 1, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 2.51831388e+000, 3.75589758e-001 ... 0.00000000e+000, 0.00000000e+000, 1.78896457e-001],
   [1.78889167e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 2.60978013e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 8.99972737e-001 ... 0.00000000e+000, 9.28394571e-002, 0.00000000e+000],
   ...
   [1.45310760e+000, 4.59319502e-001, 1.97714305e+000 ... 4.46340859e-001, 0.00000000e+000, 2.81016499e-001],
   [0.00000000e+000, 1.24144539e-001, 0.00000000e+000 ... 4.11627650e-001, 2.55283594e-001, 5.65835059e-001],
   [0.00000000e+000, 7.08163857e-001, 0.00000000e+000 ... 3.48108619e-001, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 7.96690881e-001 ... 0.00000000e+000, 6.88382983e-002, 2.72801012e-001],
   [1.20337129e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [1.26062858e+000, 1.79386866e+000, 1.69465780e+000 ... 0.00000000e+000, 1.24321222e+000, 4.51753765e-001],
   ...
   [0.00000000e+000, 3.09361994e-001, 2.28805363e-001 ... 8.69100869e-001, 1.55120504e+000, 0.00000000e+000],
   [1.47446740e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 3.82948548e-001, 4.78461459e-002],
   [1.80293977e+000, 1.30495757e-001, 0.00000000e+000 ... 0.00000000e+000, 1.65082824e+000, 0.00000000e+000]],
  [[0.00000000e+000, 1.10286987e+000, 6.67027235e-001 ... 0.00000000e+000, 1.06544149e+000, 7.33109772e-001],
   [2.71001607e-001, 0.00000000e+000, 4.25629020e-001 ... 0.00000000e+000, 7.64483988e-001, 0.00000000e+000],
   [0.00000000e+000, 2.09767914e+000, 0.00000000e+000 ... 0.00000000e+000, 1.88482010e+000, 7.61879385e-002],
   ...
   [0.00000000e+000, 0.00000000e+000, 9.06644285e-001 ... 0.00000000e+000, 0.00000000e+000, 1.49724543e-001],
   [7.35980451e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.84044048e-001, 0.00000000e+000],
   [3.09363222e+000, 5.01289845e-001, 1.33764052e+000 ... 4.21345890e-001, 9.69978690e-001, 3.81993681e-001]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 100. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:184

analyse the exceptions in iter:215
torch exception:
{'id': 1, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.0000, 1.6702, 0.0000,  ..., 1.7301, 0.0000, 0.0169],
          [0.0000, 0.2740, 0.0000,  ..., 0.0000, 0.0000, 1.2356],
          [0.6500, 0.0000, 0.1425,  ..., 1.5470, 1.3962, 0.0868],
          ...,
          [2.6085, 0.0000, 1.3528,  ..., 0.0000, 0.0000, 0.0000],
          [0.4883, 0.1458, 0.7397,  ..., 0.0000, 0.6137, 0.0000],
          [0.2972, 0.5606, 0.0000,  ..., 0.1676, 0.0000, 0.0000]],

         [[0.0000, 1.4573, 0.0000,  ..., 0.0000, 0.3764, 0.0000],
          [0.0000, 0.6122, 0.7622,  ..., 1.1712, 0.0000, 0.0000],
          [1.5658, 0.1953, 0.7963,  ..., 0.0000, 0.4434, 0.5293],
          ...,
          [1.1848, 0.7934, 0.0000,  ..., 0.0000, 0.0285, 0.0000],
          [0.0000, 0.5874, 1.0779,  ..., 0.0000, 2.4870, 0.0000],
          [1.6699, 0.0000, 0.5175,  ..., 0.1581, 0.9780, 0.0000]],

         [[0.0000, 1.2321, 0.2083,  ..., 0.1060, 0.9879, 0.2206],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          [0.2310, 0.0000, 0.0000,  ..., 0.0000, 0.7915, 0.0000],
          ...,
          [0.0000, 0.0000, 0.0000,  ..., 0.1144, 0.0815, 1.6973],
          [0.0000, 0.0000, 0.0000,  ..., 0.6769, 0.0000, 0.0000],
          [1.5988, 0.0000, 0.7562,  ..., 0.0000, 0.1715, 2.6677]]]])]}
mat1 and mat2 shapes cannot be multiplied (96x32 and 50x100)
mindspore exception:
{'id': 1, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 1.67015839e+000, 0.00000000e+000 ... 1.73011184e+000, 0.00000000e+000, 1.69325620e-002],
   [0.00000000e+000, 2.74045557e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 1.23560333e+000],
   [6.49981260e-001, 0.00000000e+000, 1.42481253e-001 ... 1.54695332e+000, 1.39621520e+000, 8.67538080e-002],
   ...
   [2.60848665e+000, 0.00000000e+000, 1.35281479e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [4.88291711e-001, 1.45817608e-001, 7.39652693e-001 ... 0.00000000e+000, 6.13701940e-001, 0.00000000e+000],
   [2.97186613e-001, 5.60555398e-001, 0.00000000e+000 ... 1.67602822e-001, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 1.45725703e+000, 0.00000000e+000 ... 0.00000000e+000, 3.76413435e-001, 0.00000000e+000],
   [0.00000000e+000, 6.12167478e-001, 7.62188971e-001 ... 1.17122972e+000, 0.00000000e+000, 0.00000000e+000],
   [1.56576586e+000, 1.95297271e-001, 7.96345174e-001 ... 0.00000000e+000, 4.43366379e-001, 5.29343128e-001],
   ...
   [1.18475592e+000, 7.93414593e-001, 0.00000000e+000 ... 0.00000000e+000, 2.85149850e-002, 0.00000000e+000],
   [0.00000000e+000, 5.87445736e-001, 1.07792938e+000 ... 0.00000000e+000, 2.48704886e+000, 0.00000000e+000],
   [1.66994643e+000, 0.00000000e+000, 5.17520010e-001 ... 1.58099115e-001, 9.77972269e-001, 0.00000000e+000]],
  [[0.00000000e+000, 1.23207128e+000, 2.08324835e-001 ... 1.05994210e-001, 9.87858832e-001, 2.20563978e-001],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [2.31048852e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 7.91520536e-001, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 1.14431448e-001, 8.15101266e-002, 1.69725513e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 6.76901102e-001, 0.00000000e+000, 0.00000000e+000],
   [1.59877682e+000, 0.00000000e+000, 7.56207943e-001 ... 0.00000000e+000, 1.71464652e-001, 2.66768050e+000]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 50. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 50](transpose_b=True).

generate models:186

analyse the exceptions in iter:218
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 2.2429, -1.1554,  1.4613,  ..., -1.0560,  0.1626, -0.3392],
           [-0.3558,  1.3861,  0.2050,  ...,  0.6679, -0.4409,  0.0310],
           [ 0.6331,  0.1282, -2.0684,  ...,  0.5112, -0.1733,  0.9903],
           ...,
           [-0.4066, -1.4718,  0.0052,  ..., -2.1649, -0.5457,  1.0615],
           [-1.0361, -1.1336,  0.7764,  ...,  1.5363, -0.0538,  1.5989],
           [-0.1796, -1.4237, -0.4652,  ..., -0.0308, -0.0406,  2.3855]],

          [[ 1.2486,  2.1405, -1.2981,  ..., -0.6129, -0.0705, -0.7463],
           [ 2.1216, -0.2576,  1.0494,  ..., -1.7279,  0.5651, -0.2931],
           [ 1.3250,  0.5820,  0.1452,  ..., -0.2194, -0.1884, -0.3828],
           ...,
           [-1.4750, -1.4348,  1.2696,  ..., -1.1543, -0.8044, -0.0694],
           [-0.1276,  2.0327, -0.1503,  ..., -0.0222, -2.8101,  0.3124],
           [-0.0601,  1.5156,  1.6286,  ..., -0.4790, -1.1914, -0.1260]],

          [[ 0.1015, -1.3181,  0.1453,  ..., -1.4238,  0.1517,  0.5812],
           [-2.1895, -0.4771, -1.7368,  ...,  0.9938, -0.2551, -0.9335],
           [ 1.7105, -0.3157, -0.2703,  ...,  0.7390,  0.5416,  0.9042],
           ...,
           [ 0.0254,  0.2368, -1.3123,  ..., -0.7899,  1.1011, -0.7485],
           [ 0.0481,  1.7234,  0.7206,  ...,  0.0349, -1.1583,  2.5391],
           [-0.8590, -1.1704,  1.2451,  ...,  0.0719,  0.6202, -0.8025]]]]])}
Given groups=1, weight of size [128, 128, 1, 1], expected input[1, 3, 32, 32] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[2.24287772e+000, -1.15539193e+000, 1.46127796e+000 ... -1.05602109e+000, 1.62617922e-001, -3.39246631e-001],
    [-3.55780423e-001, 1.38610423e+000, 2.05047891e-001 ... 6.67901516e-001, -4.40926790e-001, 3.10320947e-002],
    [6.33061349e-001, 1.28211275e-001, -2.06841350e+000 ... 5.11186004e-001, -1.73285261e-001, 9.90318835e-001],
    ...
    [-4.06605184e-001, -1.47179055e+000, 5.22295386e-003 ... -2.16486263e+000, -5.45685828e-001, 1.06147742e+000],
    [-1.03613293e+000, -1.13357604e+000, 7.76398361e-001 ... 1.53626204e+000, -5.37647679e-002, 1.59887528e+000],
    [-1.79592684e-001, -1.42371142e+000, -4.65167761e-001 ... -3.07888277e-002, -4.05955762e-002, 2.38551927e+000]],
   [[1.24864340e+000, 2.14054561e+000, -1.29812443e+000 ... -6.12939179e-001, -7.05012009e-002, -7.46274948e-001],
    [2.12160087e+000, -2.57589579e-001, 1.04936182e+000 ... -1.72787964e+000, 5.65147161e-001, -2.93115735e-001],
    [1.32501888e+000, 5.82008064e-001, 1.45174757e-001 ... -2.19434083e-001, -1.88421667e-001, -3.82799685e-001],
    ...
    [-1.47501266e+000, -1.43479335e+000, 1.26961958e+000 ... -1.15430760e+000, -8.04395735e-001, -6.93645552e-002],
    [-1.27554312e-001, 2.03272963e+000, -1.50258362e-001 ... -2.22168006e-002, -2.81012440e+000, 3.12365532e-001],
    [-6.01095185e-002, 1.51562321e+000, 1.62856030e+000 ... -4.78965014e-001, -1.19140840e+000, -1.26038611e-001]],
   [[1.01465687e-001, -1.31808007e+000, 1.45310640e-001 ... -1.42382455e+000, 1.51742488e-001, 5.81151128e-001],
    [-2.18948984e+000, -4.77097809e-001, -1.73684061e+000 ... 9.93804872e-001, -2.55148083e-001, -9.33518708e-001],
    [1.71049190e+000, -3.15689176e-001, -2.70266265e-001 ... 7.39004135e-001, 5.41580081e-001, 9.04185355e-001],
    ...
    [2.53586005e-002, 2.36815333e-001, -1.31233454e+000 ... -7.89941251e-001, 1.10110533e+000, -7.48545527e-001],
    [4.80970591e-002, 1.72338808e+000, 7.20571697e-001 ... 3.48725505e-002, -1.15830362e+000, 2.53906870e+000],
    [-8.59004319e-001, -1.17040253e+000, 1.24513113e+000 ... 7.18696043e-002, 6.20191574e-001, -8.02468240e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:189

analyse output arrays in iter:221

pre layer res:
3:reshape
{'name': 'reshape', 'output': array([[[[-0.9433353 ,  0.67209566, -0.2861931 , ..., -0.9981154 ,
           0.3079749 ,  0.8112802 ],
         [ 0.9267148 ,  0.9987899 ,  0.98385286, ...,  0.9946239 ,
           0.07981926,  0.94064265],
         [ 0.06003382, -0.986908  ,  0.2603466 , ...,  0.09411449,
           0.6792129 ,  0.01247091],
         ...,
         [ 0.77729315,  0.42642304, -0.8065904 , ...,  0.0790859 ,
           0.61167157,  0.5993812 ],
         [ 0.83477426,  0.82939136,  0.5016583 , ...,  0.00631341,
          -0.6808323 , -0.51358074],
         [-0.91563445,  0.30585065, -0.739123  , ...,  0.8928513 ,
          -0.61297154,  0.897946  ]],

        [[-0.9433353 ,  0.67209566, -0.2861931 , ..., -0.9981154 ,
           0.3079749 ,  0.8112802 ],
         [ 0.9267148 ,  0.9987899 ,  0.98385286, ...,  0.9946239 ,
           0.07981926,  0.94064265],
         [ 0.06003382, -0.986908  ,  0.2603466 , ...,  0.09411449,
           0.6792129 ,  0.01247091],
         ...,
         [ 0.77729315,  0.42642304, -0.8065904 , ...,  0.0790859 ,
           0.61167157,  0.5993812 ],
         [ 0.83477426,  0.82939136,  0.5016583 , ...,  0.00631341,
          -0.6808323 , -0.51358074],
         [-0.91563445,  0.30585065, -0.739123  , ...,  0.8928513 ,
          -0.61297154,  0.897946  ]],

        [[-0.9433353 ,  0.67209566, -0.2861931 , ..., -0.9981154 ,
           0.3079749 ,  0.8112802 ],
         [ 0.9267148 ,  0.9987899 ,  0.98385286, ...,  0.9946239 ,
           0.07981926,  0.94064265],
         [ 0.06003382, -0.986908  ,  0.2603466 , ...,  0.09411449,
           0.6792129 ,  0.01247091],
         ...,
         [ 0.77729315,  0.42642304, -0.8065904 , ...,  0.0790859 ,
           0.61167157,  0.5993812 ],
         [ 0.83477426,  0.82939136,  0.5016583 , ...,  0.00631341,
          -0.6808323 , -0.51358074],
         [-0.91563445,  0.30585065, -0.739123  , ...,  0.8928513 ,
          -0.61297154,  0.897946  ]],

        ...,

        [[-0.9433353 ,  0.67209566, -0.2861931 , ..., -0.9981154 ,
           0.3079749 ,  0.8112802 ],
         [ 0.9267148 ,  0.9987899 ,  0.98385286, ...,  0.9946239 ,
           0.07981926,  0.94064265],
         [ 0.06003382, -0.986908  ,  0.2603466 , ...,  0.09411449,
           0.6792129 ,  0.01247091],
         ...,
         [ 0.77729315,  0.42642304, -0.8065904 , ...,  0.0790859 ,
           0.61167157,  0.5993812 ],
         [ 0.83477426,  0.82939136,  0.5016583 , ...,  0.00631341,
          -0.6808323 , -0.51358074],
         [-0.91563445,  0.30585065, -0.739123  , ...,  0.8928513 ,
          -0.61297154,  0.897946  ]],

        [[-0.9433353 ,  0.67209566, -0.2861931 , ..., -0.9981154 ,
           0.3079749 ,  0.8112802 ],
         [ 0.9267148 ,  0.9987899 ,  0.98385286, ...,  0.9946239 ,
           0.07981926,  0.94064265],
         [ 0.06003382, -0.986908  ,  0.2603466 , ...,  0.09411449,
           0.6792129 ,  0.01247091],
         ...,
         [ 0.77729315,  0.42642304, -0.8065904 , ...,  0.0790859 ,
           0.61167157,  0.5993812 ],
         [ 0.83477426,  0.82939136,  0.5016583 , ...,  0.00631341,
          -0.6808323 , -0.51358074],
         [-0.91563445,  0.30585065, -0.739123  , ...,  0.8928513 ,
          -0.61297154,  0.897946  ]],

        [[-0.9433353 ,  0.67209566, -0.2861931 , ..., -0.9981154 ,
           0.3079749 ,  0.8112802 ],
         [ 0.9267148 ,  0.9987899 ,  0.98385286, ...,  0.9946239 ,
           0.07981926,  0.94064265],
         [ 0.06003382, -0.986908  ,  0.2603466 , ...,  0.09411449,
           0.6792129 ,  0.01247091],
         ...,
         [ 0.77729315,  0.42642304, -0.8065904 , ...,  0.0790859 ,
           0.61167157,  0.5993812 ],
         [ 0.83477426,  0.82939136,  0.5016583 , ...,  0.00631341,
          -0.6808323 , -0.51358074],
         [-0.91563445,  0.30585065, -0.739123  , ...,  0.8928513 ,
          -0.61297154,  0.897946  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 32, 32]), 'from': [5], 'to': [6]}
tf node:
{'name': 'log', 'output': array([[[[           nan, -3.9735460e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109447e-02, -1.2108262e-03, -1.6278923e-02, ...,
          -5.3906036e-03, -2.5279903e+00, -6.1191961e-02],
         [-2.8128471e+00,            nan, -1.3457415e+00, ...,
          -2.3632433e+00, -3.8682061e-01, -4.3843570e+00],
         ...,
         [-2.5193772e-01, -8.5232335e-01,            nan, ...,
          -2.5372207e+00, -4.9155980e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706314e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846583e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735460e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109447e-02, -1.2108262e-03, -1.6278923e-02, ...,
          -5.3906036e-03, -2.5279903e+00, -6.1191961e-02],
         [-2.8128471e+00,            nan, -1.3457415e+00, ...,
          -2.3632433e+00, -3.8682061e-01, -4.3843570e+00],
         ...,
         [-2.5193772e-01, -8.5232335e-01,            nan, ...,
          -2.5372207e+00, -4.9155980e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706314e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846583e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735460e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109447e-02, -1.2108262e-03, -1.6278923e-02, ...,
          -5.3906036e-03, -2.5279903e+00, -6.1191961e-02],
         [-2.8128471e+00,            nan, -1.3457415e+00, ...,
          -2.3632433e+00, -3.8682061e-01, -4.3843570e+00],
         ...,
         [-2.5193772e-01, -8.5232335e-01,            nan, ...,
          -2.5372207e+00, -4.9155980e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706314e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846583e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        ...,

        [[           nan, -3.9735460e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109447e-02, -1.2108262e-03, -1.6278923e-02, ...,
          -5.3906036e-03, -2.5279903e+00, -6.1191961e-02],
         [-2.8128471e+00,            nan, -1.3457415e+00, ...,
          -2.3632433e+00, -3.8682061e-01, -4.3843570e+00],
         ...,
         [-2.5193772e-01, -8.5232335e-01,            nan, ...,
          -2.5372207e+00, -4.9155980e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706314e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846583e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735460e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109447e-02, -1.2108262e-03, -1.6278923e-02, ...,
          -5.3906036e-03, -2.5279903e+00, -6.1191961e-02],
         [-2.8128471e+00,            nan, -1.3457415e+00, ...,
          -2.3632433e+00, -3.8682061e-01, -4.3843570e+00],
         ...,
         [-2.5193772e-01, -8.5232335e-01,            nan, ...,
          -2.5372207e+00, -4.9155980e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706314e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846583e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735460e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109447e-02, -1.2108262e-03, -1.6278923e-02, ...,
          -5.3906036e-03, -2.5279903e+00, -6.1191961e-02],
         [-2.8128471e+00,            nan, -1.3457415e+00, ...,
          -2.3632433e+00, -3.8682061e-01, -4.3843570e+00],
         ...,
         [-2.5193772e-01, -8.5232335e-01,            nan, ...,
          -2.5372207e+00, -4.9155980e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706314e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846583e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 32, 32]), 'from': [3], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[           nan, -3.9735663e-01,            nan, ...,
                     nan, -1.1777362e+00, -2.0914420e-01],
         [-7.6109357e-02, -1.2121374e-03, -1.6280293e-02, ...,
          -5.3920341e-03, -2.5279875e+00, -6.1191875e-02],
         [-2.8128469e+00,            nan, -1.3457379e+00, ...,
          -2.3632452e+00, -3.8682261e-01, -4.3843594e+00],
         ...,
         [-2.5194001e-01, -8.5232657e-01,            nan, ...,
          -2.5372179e+00, -4.9155909e-01, -5.1185894e-01],
         [-1.8059723e-01, -1.8706651e-01, -6.8983746e-01, ...,
          -5.0650816e+00,            nan,            nan],
         [           nan, -1.1846576e+00,            nan, ...,
          -1.1333623e-01,            nan, -1.0764633e-01]],

        [[           nan, -3.9735663e-01,            nan, ...,
                     nan, -1.1777362e+00, -2.0914420e-01],
         [-7.6109357e-02, -1.2121374e-03, -1.6280293e-02, ...,
          -5.3920341e-03, -2.5279875e+00, -6.1191875e-02],
         [-2.8128469e+00,            nan, -1.3457379e+00, ...,
          -2.3632452e+00, -3.8682261e-01, -4.3843594e+00],
         ...,
         [-2.5194001e-01, -8.5232657e-01,            nan, ...,
          -2.5372179e+00, -4.9155909e-01, -5.1185894e-01],
         [-1.8059723e-01, -1.8706651e-01, -6.8983746e-01, ...,
          -5.0650816e+00,            nan,            nan],
         [           nan, -1.1846576e+00,            nan, ...,
          -1.1333623e-01,            nan, -1.0764633e-01]],

        [[           nan, -3.9735663e-01,            nan, ...,
                     nan, -1.1777362e+00, -2.0914420e-01],
         [-7.6109357e-02, -1.2121374e-03, -1.6280293e-02, ...,
          -5.3920341e-03, -2.5279875e+00, -6.1191875e-02],
         [-2.8128469e+00,            nan, -1.3457379e+00, ...,
          -2.3632452e+00, -3.8682261e-01, -4.3843594e+00],
         ...,
         [-2.5194001e-01, -8.5232657e-01,            nan, ...,
          -2.5372179e+00, -4.9155909e-01, -5.1185894e-01],
         [-1.8059723e-01, -1.8706651e-01, -6.8983746e-01, ...,
          -5.0650816e+00,            nan,            nan],
         [           nan, -1.1846576e+00,            nan, ...,
          -1.1333623e-01,            nan, -1.0764633e-01]],

        ...,

        [[           nan, -3.9735663e-01,            nan, ...,
                     nan, -1.1777362e+00, -2.0914420e-01],
         [-7.6109357e-02, -1.2121374e-03, -1.6280293e-02, ...,
          -5.3920341e-03, -2.5279875e+00, -6.1191875e-02],
         [-2.8128469e+00,            nan, -1.3457379e+00, ...,
          -2.3632452e+00, -3.8682261e-01, -4.3843594e+00],
         ...,
         [-2.5194001e-01, -8.5232657e-01,            nan, ...,
          -2.5372179e+00, -4.9155909e-01, -5.1185894e-01],
         [-1.8059723e-01, -1.8706651e-01, -6.8983746e-01, ...,
          -5.0650816e+00,            nan,            nan],
         [           nan, -1.1846576e+00,            nan, ...,
          -1.1333623e-01,            nan, -1.0764633e-01]],

        [[           nan, -3.9735663e-01,            nan, ...,
                     nan, -1.1777362e+00, -2.0914420e-01],
         [-7.6109357e-02, -1.2121374e-03, -1.6280293e-02, ...,
          -5.3920341e-03, -2.5279875e+00, -6.1191875e-02],
         [-2.8128469e+00,            nan, -1.3457379e+00, ...,
          -2.3632452e+00, -3.8682261e-01, -4.3843594e+00],
         ...,
         [-2.5194001e-01, -8.5232657e-01,            nan, ...,
          -2.5372179e+00, -4.9155909e-01, -5.1185894e-01],
         [-1.8059723e-01, -1.8706651e-01, -6.8983746e-01, ...,
          -5.0650816e+00,            nan,            nan],
         [           nan, -1.1846576e+00,            nan, ...,
          -1.1333623e-01,            nan, -1.0764633e-01]],

        [[           nan, -3.9735663e-01,            nan, ...,
                     nan, -1.1777362e+00, -2.0914420e-01],
         [-7.6109357e-02, -1.2121374e-03, -1.6280293e-02, ...,
          -5.3920341e-03, -2.5279875e+00, -6.1191875e-02],
         [-2.8128469e+00,            nan, -1.3457379e+00, ...,
          -2.3632452e+00, -3.8682261e-01, -4.3843594e+00],
         ...,
         [-2.5194001e-01, -8.5232657e-01,            nan, ...,
          -2.5372179e+00, -4.9155909e-01, -5.1185894e-01],
         [-1.8059723e-01, -1.8706651e-01, -6.8983746e-01, ...,
          -5.0650816e+00,            nan,            nan],
         [           nan, -1.1846576e+00,            nan, ...,
          -1.1333623e-01,            nan, -1.0764633e-01]]]],
      dtype=float32), 'output_shape': (1, 128, 32, 32), 'from': [3], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[           nan, -3.9735469e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109380e-02, -1.2107069e-03, -1.6278801e-02, ...,
          -5.3906636e-03, -2.5279903e+00, -6.1191898e-02],
         [-2.8128469e+00,            nan, -1.3457414e+00, ...,
          -2.3632431e+00, -3.8682070e-01, -4.3843570e+00],
         ...,
         [-2.5193781e-01, -8.5232329e-01,            nan, ...,
          -2.5372207e+00, -4.9155989e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706322e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846584e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735469e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109380e-02, -1.2107069e-03, -1.6278801e-02, ...,
          -5.3906636e-03, -2.5279903e+00, -6.1191898e-02],
         [-2.8128469e+00,            nan, -1.3457414e+00, ...,
          -2.3632431e+00, -3.8682070e-01, -4.3843570e+00],
         ...,
         [-2.5193781e-01, -8.5232329e-01,            nan, ...,
          -2.5372207e+00, -4.9155989e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706322e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846584e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735469e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109380e-02, -1.2107069e-03, -1.6278801e-02, ...,
          -5.3906636e-03, -2.5279903e+00, -6.1191898e-02],
         [-2.8128469e+00,            nan, -1.3457414e+00, ...,
          -2.3632431e+00, -3.8682070e-01, -4.3843570e+00],
         ...,
         [-2.5193781e-01, -8.5232329e-01,            nan, ...,
          -2.5372207e+00, -4.9155989e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706322e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846584e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        ...,

        [[           nan, -3.9735469e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109380e-02, -1.2107069e-03, -1.6278801e-02, ...,
          -5.3906636e-03, -2.5279903e+00, -6.1191898e-02],
         [-2.8128469e+00,            nan, -1.3457414e+00, ...,
          -2.3632431e+00, -3.8682070e-01, -4.3843570e+00],
         ...,
         [-2.5193781e-01, -8.5232329e-01,            nan, ...,
          -2.5372207e+00, -4.9155989e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706322e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846584e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735469e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109380e-02, -1.2107069e-03, -1.6278801e-02, ...,
          -5.3906636e-03, -2.5279903e+00, -6.1191898e-02],
         [-2.8128469e+00,            nan, -1.3457414e+00, ...,
          -2.3632431e+00, -3.8682070e-01, -4.3843570e+00],
         ...,
         [-2.5193781e-01, -8.5232329e-01,            nan, ...,
          -2.5372207e+00, -4.9155989e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706322e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846584e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]],

        [[           nan, -3.9735469e-01,            nan, ...,
                     nan, -1.1777370e+00, -2.0914179e-01],
         [-7.6109380e-02, -1.2107069e-03, -1.6278801e-02, ...,
          -5.3906636e-03, -2.5279903e+00, -6.1191898e-02],
         [-2.8128469e+00,            nan, -1.3457414e+00, ...,
          -2.3632431e+00, -3.8682070e-01, -4.3843570e+00],
         ...,
         [-2.5193781e-01, -8.5232329e-01,            nan, ...,
          -2.5372207e+00, -4.9155989e-01, -5.1185751e-01],
         [-1.8059394e-01, -1.8706322e-01, -6.8983603e-01, ...,
          -5.0650792e+00,            nan,            nan],
         [           nan, -1.1846584e+00,            nan, ...,
          -1.1333524e-01,            nan, -1.0764535e-01]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 32, 32]), 'from': [3], 'to': [1]}

generate models:191

analyse output arrays in iter:228

pre layer res:
1:conv2d
{'name': 'conv2d', 'output': array([[[[  232.6932  ,  -459.7499  , -1162.6665  , ...,   920.0291  ,
            679.6562  ,    27.134998],
         [  -19.256828,   283.59366 , -1096.8198  , ...,   661.4255  ,
           -892.2103  , -1289.0673  ],
         [  273.0371  ,   339.0624  ,   -23.126974, ...,  2112.1853  ,
           1350.1443  ,  1616.9187  ],
         ...,
         [-1099.2501  ,   538.4541  ,   859.5631  , ...,  -892.6647  ,
           1252.5576  ,   680.15845 ],
         [  323.0266  ,  1676.518   ,  -677.8432  , ...,  -553.92377 ,
            606.6745  ,  -775.1171  ],
         [ -964.06445 , -2354.0835  ,  -654.512   , ...,  -332.9856  ,
          -1542.2919  ,   108.80471 ]],

        [[  232.6932  ,  -459.7499  , -1162.6665  , ...,   920.0291  ,
            679.6562  ,    27.134998],
         [  -19.256828,   283.59366 , -1096.8198  , ...,   661.4255  ,
           -892.2103  , -1289.0673  ],
         [  273.0371  ,   339.0624  ,   -23.126974, ...,  2112.1853  ,
           1350.1443  ,  1616.9187  ],
         ...,
         [-1099.2501  ,   538.4541  ,   859.5631  , ...,  -892.6647  ,
           1252.5576  ,   680.15845 ],
         [  323.0266  ,  1676.518   ,  -677.8432  , ...,  -553.92377 ,
            606.6745  ,  -775.1171  ],
         [ -964.06445 , -2354.0835  ,  -654.512   , ...,  -332.9856  ,
          -1542.2919  ,   108.80471 ]],

        [[  232.6932  ,  -459.7499  , -1162.6665  , ...,   920.0291  ,
            679.6562  ,    27.134998],
         [  -19.256828,   283.59366 , -1096.8198  , ...,   661.4255  ,
           -892.2103  , -1289.0673  ],
         [  273.0371  ,   339.0624  ,   -23.126974, ...,  2112.1853  ,
           1350.1443  ,  1616.9187  ],
         ...,
         [-1099.2501  ,   538.4541  ,   859.5631  , ...,  -892.6647  ,
           1252.5576  ,   680.15845 ],
         [  323.0266  ,  1676.518   ,  -677.8432  , ...,  -553.92377 ,
            606.6745  ,  -775.1171  ],
         [ -964.06445 , -2354.0835  ,  -654.512   , ...,  -332.9856  ,
          -1542.2919  ,   108.80471 ]],

        ...,

        [[  232.6932  ,  -459.7499  , -1162.6665  , ...,   920.0291  ,
            679.6562  ,    27.134998],
         [  -19.256828,   283.59366 , -1096.8198  , ...,   661.4255  ,
           -892.2103  , -1289.0673  ],
         [  273.0371  ,   339.0624  ,   -23.126974, ...,  2112.1853  ,
           1350.1443  ,  1616.9187  ],
         ...,
         [-1099.2501  ,   538.4541  ,   859.5631  , ...,  -892.6647  ,
           1252.5576  ,   680.15845 ],
         [  323.0266  ,  1676.518   ,  -677.8432  , ...,  -553.92377 ,
            606.6745  ,  -775.1171  ],
         [ -964.06445 , -2354.0835  ,  -654.512   , ...,  -332.9856  ,
          -1542.2919  ,   108.80471 ]],

        [[  232.6932  ,  -459.7499  , -1162.6665  , ...,   920.0291  ,
            679.6562  ,    27.134998],
         [  -19.256828,   283.59366 , -1096.8198  , ...,   661.4255  ,
           -892.2103  , -1289.0673  ],
         [  273.0371  ,   339.0624  ,   -23.126974, ...,  2112.1853  ,
           1350.1443  ,  1616.9187  ],
         ...,
         [-1099.2501  ,   538.4541  ,   859.5631  , ...,  -892.6647  ,
           1252.5576  ,   680.15845 ],
         [  323.0266  ,  1676.518   ,  -677.8432  , ...,  -553.92377 ,
            606.6745  ,  -775.1171  ],
         [ -964.06445 , -2354.0835  ,  -654.512   , ...,  -332.9856  ,
          -1542.2919  ,   108.80471 ]],

        [[  232.6932  ,  -459.7499  , -1162.6665  , ...,   920.0291  ,
            679.6562  ,    27.134998],
         [  -19.256828,   283.59366 , -1096.8198  , ...,   661.4255  ,
           -892.2103  , -1289.0673  ],
         [  273.0371  ,   339.0624  ,   -23.126974, ...,  2112.1853  ,
           1350.1443  ,  1616.9187  ],
         ...,
         [-1099.2501  ,   538.4541  ,   859.5631  , ...,  -892.6647  ,
           1252.5576  ,   680.15845 ],
         [  323.0266  ,  1676.518   ,  -677.8432  , ...,  -553.92377 ,
            606.6745  ,  -775.1171  ],
         [ -964.06445 , -2354.0835  ,  -654.512   , ...,  -332.9856  ,
          -1542.2919  ,   108.80471 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [13]}
tf node:
{'name': 'log', 'output': array([[[[5.449721 ,       nan,       nan, ..., 6.824405 , 6.521587 ,
          3.3008244],
         [      nan, 5.6475425,       nan, ..., 6.494397 ,       nan,
                nan],
         [5.6096077, 5.8261843,       nan, ..., 7.6554785, 7.207967 ,
          7.3882775],
         ...,
         [      nan, 6.2887025, 6.7564244, ...,       nan, 7.1329427,
          6.522326 ],
         [5.7777348, 7.4244742,       nan, ...,       nan, 6.4079924,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895547]],

        [[5.449721 ,       nan,       nan, ..., 6.824405 , 6.521587 ,
          3.3008244],
         [      nan, 5.6475425,       nan, ..., 6.494397 ,       nan,
                nan],
         [5.6096077, 5.8261843,       nan, ..., 7.6554785, 7.207967 ,
          7.3882775],
         ...,
         [      nan, 6.2887025, 6.7564244, ...,       nan, 7.1329427,
          6.522326 ],
         [5.7777348, 7.4244742,       nan, ...,       nan, 6.4079924,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895547]],

        [[5.449721 ,       nan,       nan, ..., 6.824405 , 6.521587 ,
          3.3008244],
         [      nan, 5.6475425,       nan, ..., 6.494397 ,       nan,
                nan],
         [5.6096077, 5.8261843,       nan, ..., 7.6554785, 7.207967 ,
          7.3882775],
         ...,
         [      nan, 6.2887025, 6.7564244, ...,       nan, 7.1329427,
          6.522326 ],
         [5.7777348, 7.4244742,       nan, ...,       nan, 6.4079924,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895547]],

        ...,

        [[5.449721 ,       nan,       nan, ..., 6.824405 , 6.521587 ,
          3.3008244],
         [      nan, 5.6475425,       nan, ..., 6.494397 ,       nan,
                nan],
         [5.6096077, 5.8261843,       nan, ..., 7.6554785, 7.207967 ,
          7.3882775],
         ...,
         [      nan, 6.2887025, 6.7564244, ...,       nan, 7.1329427,
          6.522326 ],
         [5.7777348, 7.4244742,       nan, ...,       nan, 6.4079924,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895547]],

        [[5.449721 ,       nan,       nan, ..., 6.824405 , 6.521587 ,
          3.3008244],
         [      nan, 5.6475425,       nan, ..., 6.494397 ,       nan,
                nan],
         [5.6096077, 5.8261843,       nan, ..., 7.6554785, 7.207967 ,
          7.3882775],
         ...,
         [      nan, 6.2887025, 6.7564244, ...,       nan, 7.1329427,
          6.522326 ],
         [5.7777348, 7.4244742,       nan, ...,       nan, 6.4079924,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895547]],

        [[5.449721 ,       nan,       nan, ..., 6.824405 , 6.521587 ,
          3.3008244],
         [      nan, 5.6475425,       nan, ..., 6.494397 ,       nan,
                nan],
         [5.6096077, 5.8261843,       nan, ..., 7.6554785, 7.207967 ,
          7.3882775],
         ...,
         [      nan, 6.2887025, 6.7564244, ...,       nan, 7.1329427,
          6.522326 ],
         [5.7777348, 7.4244742,       nan, ...,       nan, 6.4079924,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895547]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[5.4497123,       nan,       nan, ..., 6.824402 , 6.521585 ,
          3.3008263],
         [      nan, 5.6475425,       nan, ..., 6.494395 ,       nan,
                nan],
         [5.609601 , 5.826182 ,       nan, ..., 7.655483 , 7.2079673,
          7.3882685],
         ...,
         [      nan, 6.2887044, 6.7564216, ...,       nan, 7.13294  ,
          6.522327 ],
         [5.777737 , 7.4244785,       nan, ...,       nan, 6.407987 ,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895514]],

        [[5.4497123,       nan,       nan, ..., 6.824402 , 6.521585 ,
          3.3008263],
         [      nan, 5.6475425,       nan, ..., 6.494395 ,       nan,
                nan],
         [5.609601 , 5.826182 ,       nan, ..., 7.655483 , 7.2079673,
          7.3882685],
         ...,
         [      nan, 6.2887044, 6.7564216, ...,       nan, 7.13294  ,
          6.522327 ],
         [5.777737 , 7.4244785,       nan, ...,       nan, 6.407987 ,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895514]],

        [[5.4497123,       nan,       nan, ..., 6.824402 , 6.521585 ,
          3.3008263],
         [      nan, 5.6475425,       nan, ..., 6.494395 ,       nan,
                nan],
         [5.609601 , 5.826182 ,       nan, ..., 7.655483 , 7.2079673,
          7.3882685],
         ...,
         [      nan, 6.2887044, 6.7564216, ...,       nan, 7.13294  ,
          6.522327 ],
         [5.777737 , 7.4244785,       nan, ...,       nan, 6.407987 ,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895514]],

        ...,

        [[5.4497123,       nan,       nan, ..., 6.824402 , 6.521585 ,
          3.3008263],
         [      nan, 5.6475425,       nan, ..., 6.494395 ,       nan,
                nan],
         [5.609601 , 5.826182 ,       nan, ..., 7.655483 , 7.2079673,
          7.3882685],
         ...,
         [      nan, 6.2887044, 6.7564216, ...,       nan, 7.13294  ,
          6.522327 ],
         [5.777737 , 7.4244785,       nan, ...,       nan, 6.407987 ,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.6895514]],

        [[5.4497128,       nan,       nan, ..., 6.8243985, 6.521585 ,
          3.300824 ],
         [      nan, 5.647542 ,       nan, ..., 6.494395 ,       nan,
                nan],
         [5.609603 , 5.826182 ,       nan, ..., 7.6554823, 7.2079663,
          7.38827  ],
         ...,
         [      nan, 6.2887053, 6.756423 , ...,       nan, 7.1329403,
          6.522328 ],
         [5.7777395, 7.424477 ,       nan, ...,       nan, 6.407988 ,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689552 ]],

        [[5.4497128,       nan,       nan, ..., 6.8243985, 6.521585 ,
          3.300824 ],
         [      nan, 5.647542 ,       nan, ..., 6.494395 ,       nan,
                nan],
         [5.609603 , 5.826182 ,       nan, ..., 7.6554823, 7.2079663,
          7.38827  ],
         ...,
         [      nan, 6.2887053, 6.756423 , ...,       nan, 7.1329403,
          6.522328 ],
         [5.7777395, 7.424477 ,       nan, ...,       nan, 6.407988 ,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689552 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [1], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[5.4497137,       nan,       nan, ..., 6.8243995, 6.521587 ,
          3.3008273],
         [      nan, 5.6475415,       nan, ..., 6.494392 ,       nan,
                nan],
         [5.609606 , 5.826184 ,       nan, ..., 7.655479 , 7.207968 ,
          7.3882723],
         ...,
         [      nan, 6.288702 , 6.7564263, ...,       nan, 7.1329393,
          6.52233  ],
         [5.7777367, 7.4244795,       nan, ...,       nan, 6.4079895,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689555 ]],

        [[5.4497137,       nan,       nan, ..., 6.8243995, 6.521587 ,
          3.3008273],
         [      nan, 5.6475415,       nan, ..., 6.494392 ,       nan,
                nan],
         [5.609606 , 5.826184 ,       nan, ..., 7.655479 , 7.207968 ,
          7.3882723],
         ...,
         [      nan, 6.288702 , 6.7564263, ...,       nan, 7.1329393,
          6.52233  ],
         [5.7777367, 7.4244795,       nan, ...,       nan, 6.4079895,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689555 ]],

        [[5.4497137,       nan,       nan, ..., 6.8243995, 6.521587 ,
          3.3008273],
         [      nan, 5.6475415,       nan, ..., 6.494392 ,       nan,
                nan],
         [5.609606 , 5.826184 ,       nan, ..., 7.655479 , 7.207968 ,
          7.3882723],
         ...,
         [      nan, 6.288702 , 6.7564263, ...,       nan, 7.1329393,
          6.52233  ],
         [5.7777367, 7.4244795,       nan, ...,       nan, 6.4079895,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689555 ]],

        ...,

        [[5.4497137,       nan,       nan, ..., 6.8243995, 6.521587 ,
          3.3008273],
         [      nan, 5.6475415,       nan, ..., 6.494392 ,       nan,
                nan],
         [5.609606 , 5.826184 ,       nan, ..., 7.655479 , 7.207968 ,
          7.3882723],
         ...,
         [      nan, 6.288702 , 6.7564263, ...,       nan, 7.1329393,
          6.52233  ],
         [5.7777367, 7.4244795,       nan, ...,       nan, 6.4079895,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689555 ]],

        [[5.4497137,       nan,       nan, ..., 6.8243995, 6.521587 ,
          3.3008273],
         [      nan, 5.6475415,       nan, ..., 6.494392 ,       nan,
                nan],
         [5.609606 , 5.826184 ,       nan, ..., 7.655479 , 7.207968 ,
          7.3882723],
         ...,
         [      nan, 6.288702 , 6.7564263, ...,       nan, 7.1329393,
          6.52233  ],
         [5.7777367, 7.4244795,       nan, ...,       nan, 6.4079895,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689555 ]],

        [[5.4497137,       nan,       nan, ..., 6.8243995, 6.521587 ,
          3.3008273],
         [      nan, 5.6475415,       nan, ..., 6.494392 ,       nan,
                nan],
         [5.609606 , 5.826184 ,       nan, ..., 7.655479 , 7.207968 ,
          7.3882723],
         ...,
         [      nan, 6.288702 , 6.7564263, ...,       nan, 7.1329393,
          6.52233  ],
         [5.7777367, 7.4244795,       nan, ...,       nan, 6.4079895,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
          4.689555 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [1], 'to': [2]}

generate models:198

analyse output arrays in iter:229

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[ 1.7406006 ,  1.7406006 ,  1.7406006 , ...,  1.7406006 ,
           1.7406006 ,  1.7406006 ],
         [-4.853668  , -4.853668  , -4.853668  , ..., -4.853668  ,
          -4.853668  , -4.853668  ],
         [ 6.078438  ,  6.078438  ,  6.078438  , ...,  6.078438  ,
           6.078438  ,  6.078438  ],
         ...,
         [ 1.6260223 ,  1.6260223 ,  1.6260223 , ...,  1.6260223 ,
           1.6260223 ,  1.6260223 ],
         [ 5.743469  ,  5.743469  ,  5.743469  , ...,  5.743469  ,
           5.743469  ,  5.743469  ],
         [ 5.006439  ,  5.006439  ,  5.006439  , ...,  5.006439  ,
           5.006439  ,  5.006439  ]],

        [[ 0.49926758,  0.49926758,  0.49926758, ...,  0.49926758,
           0.49926758,  0.49926758],
         [-6.4205627 , -6.4205627 , -6.4205627 , ..., -6.4205627 ,
          -6.4205627 , -6.4205627 ],
         [ 0.95279694,  0.95279694,  0.95279694, ...,  0.95279694,
           0.95279694,  0.95279694],
         ...,
         [10.302834  , 10.302834  , 10.302834  , ..., 10.302834  ,
          10.302834  , 10.302834  ],
         [ 0.783165  ,  0.783165  ,  0.783165  , ...,  0.783165  ,
           0.783165  ,  0.783165  ],
         [ 2.5169373 ,  2.5169373 ,  2.5169373 , ...,  2.5169373 ,
           2.5169373 ,  2.5169373 ]],

        [[ 6.497633  ,  6.497633  ,  6.497633  , ...,  6.497633  ,
           6.497633  ,  6.497633  ],
         [-2.315796  , -2.315796  , -2.315796  , ..., -2.315796  ,
          -2.315796  , -2.315796  ],
         [ 0.7116089 ,  0.7116089 ,  0.7116089 , ...,  0.7116089 ,
           0.7116089 ,  0.7116089 ],
         ...,
         [-0.49542236, -0.49542236, -0.49542236, ..., -0.49542236,
          -0.49542236, -0.49542236],
         [-4.717636  , -4.717636  , -4.717636  , ..., -4.717636  ,
          -4.717636  , -4.717636  ],
         [ 2.642517  ,  2.642517  ,  2.642517  , ...,  2.642517  ,
           2.642517  ,  2.642517  ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [1]}
ms node:
{'name': 'linear', 'output': array([[[[ 1.7413591 ,  1.7413591 ,  1.7413591 , ...,  1.7413583 ,
           1.7413583 ,  1.7413583 ],
         [-4.8535705 , -4.8535705 , -4.8535705 , ..., -4.85357   ,
          -4.85357   , -4.85357   ],
         [ 6.078246  ,  6.078246  ,  6.078246  , ...,  6.078246  ,
           6.078246  ,  6.078246  ],
         ...,
         [ 1.6264815 ,  1.6264815 ,  1.6264815 , ...,  1.6264819 ,
           1.6264819 ,  1.6264819 ],
         [ 5.742408  ,  5.742408  ,  5.742408  , ...,  5.742408  ,
           5.742408  ,  5.742408  ],
         [ 5.0058355 ,  5.0058355 ,  5.0058355 , ...,  5.005833  ,
           5.005833  ,  5.005833  ]],

        [[ 0.49934936,  0.49934936,  0.49934936, ...,  0.49934947,
           0.49934947,  0.49934947],
         [-6.421812  , -6.421812  , -6.421812  , ..., -6.421812  ,
          -6.421812  , -6.421812  ],
         [ 0.952733  ,  0.952733  ,  0.952733  , ...,  0.95273304,
           0.95273304,  0.95273304],
         ...,
         [10.302962  , 10.302962  , 10.302962  , ..., 10.302963  ,
          10.302963  , 10.302963  ],
         [ 0.78305066,  0.78305066,  0.78305066, ...,  0.78305084,
           0.78305084,  0.78305084],
         [ 2.5179796 ,  2.5179796 ,  2.5179796 , ...,  2.5179791 ,
           2.5179791 ,  2.5179791 ]],

        [[ 6.4981413 ,  6.4981413 ,  6.4981413 , ...,  6.4981403 ,
           6.4981403 ,  6.4981403 ],
         [-2.3152032 , -2.3152032 , -2.3152032 , ..., -2.3152027 ,
          -2.3152027 , -2.3152027 ],
         [ 0.71178037,  0.71178037,  0.71178037, ...,  0.7117805 ,
           0.7117805 ,  0.7117805 ],
         ...,
         [-0.4950763 , -0.4950763 , -0.4950763 , ..., -0.49507642,
          -0.49507642, -0.49507642],
         [-4.7186937 , -4.7186937 , -4.7186937 , ..., -4.7186937 ,
          -4.7186937 , -4.7186937 ],
         [ 2.6431746 ,  2.6431746 ,  2.6431746 , ...,  2.6431742 ,
           2.6431742 ,  2.6431742 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [1]}
torch node:
{'name': 'linear', 'output': array([[[[ 1.7413591 ,  1.7413591 ,  1.7413591 , ...,  1.7413583 ,
           1.7413583 ,  1.7413583 ],
         [-4.8535705 , -4.8535705 , -4.8535705 , ..., -4.85357   ,
          -4.85357   , -4.85357   ],
         [ 6.078246  ,  6.078246  ,  6.078246  , ...,  6.078246  ,
           6.078246  ,  6.078246  ],
         ...,
         [ 1.6264815 ,  1.6264815 ,  1.6264815 , ...,  1.6264819 ,
           1.6264819 ,  1.6264819 ],
         [ 5.742408  ,  5.742408  ,  5.742408  , ...,  5.742408  ,
           5.742408  ,  5.742408  ],
         [ 5.0058355 ,  5.0058355 ,  5.0058355 , ...,  5.005833  ,
           5.005833  ,  5.005833  ]],

        [[ 0.49934936,  0.49934936,  0.49934936, ...,  0.49934947,
           0.49934947,  0.49934947],
         [-6.421812  , -6.421812  , -6.421812  , ..., -6.421812  ,
          -6.421812  , -6.421812  ],
         [ 0.952733  ,  0.952733  ,  0.952733  , ...,  0.95273304,
           0.95273304,  0.95273304],
         ...,
         [10.302962  , 10.302962  , 10.302962  , ..., 10.302963  ,
          10.302963  , 10.302963  ],
         [ 0.78305066,  0.78305066,  0.78305066, ...,  0.78305084,
           0.78305084,  0.78305084],
         [ 2.5179796 ,  2.5179796 ,  2.5179796 , ...,  2.5179791 ,
           2.5179791 ,  2.5179791 ]],

        [[ 6.4981413 ,  6.4981413 ,  6.4981413 , ...,  6.4981403 ,
           6.4981403 ,  6.4981403 ],
         [-2.3152032 , -2.3152032 , -2.3152032 , ..., -2.3152027 ,
          -2.3152027 , -2.3152027 ],
         [ 0.71178037,  0.71178037,  0.71178037, ...,  0.7117805 ,
           0.7117805 ,  0.7117805 ],
         ...,
         [-0.4950763 , -0.4950763 , -0.4950763 , ..., -0.49507642,
          -0.49507642, -0.49507642],
         [-4.7186937 , -4.7186937 , -4.7186937 , ..., -4.7186937 ,
          -4.7186937 , -4.7186937 ],
         [ 2.6431746 ,  2.6431746 ,  2.6431746 , ...,  2.6431742 ,
           2.6431742 ,  2.6431742 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [1]}

pre layer res:
8:conv2d
{'name': 'conv2d', 'output': array([[[[5.5299411e+08, 8.2948890e+08, 8.2948890e+08, ...,
          8.2948890e+08, 8.2948890e+08, 5.5299411e+08],
         [8.2702131e+08, 1.2405307e+09, 1.2405307e+09, ...,
          1.2405307e+09, 1.2405307e+09, 8.2702131e+08],
         [5.3383488e+08, 8.0075264e+08, 8.0075264e+08, ...,
          8.0075264e+08, 8.0075264e+08, 5.3383488e+08],
         ...,
         [8.7174042e+08, 1.3076106e+09, 1.3076106e+09, ...,
          1.3076106e+09, 1.3076106e+09, 8.7174042e+08],
         [1.2128529e+09, 1.8192780e+09, 1.8192780e+09, ...,
          1.8192780e+09, 1.8192780e+09, 1.2128529e+09],
         [7.2475610e+08, 1.0871332e+09, 1.0871332e+09, ...,
          1.0871332e+09, 1.0871332e+09, 7.2475610e+08]],

        [[5.5299411e+08, 8.2948890e+08, 8.2948890e+08, ...,
          8.2948890e+08, 8.2948890e+08, 5.5299411e+08],
         [8.2702131e+08, 1.2405307e+09, 1.2405307e+09, ...,
          1.2405307e+09, 1.2405307e+09, 8.2702131e+08],
         [5.3383488e+08, 8.0075264e+08, 8.0075264e+08, ...,
          8.0075264e+08, 8.0075264e+08, 5.3383488e+08],
         ...,
         [8.7174042e+08, 1.3076106e+09, 1.3076106e+09, ...,
          1.3076106e+09, 1.3076106e+09, 8.7174042e+08],
         [1.2128529e+09, 1.8192780e+09, 1.8192780e+09, ...,
          1.8192780e+09, 1.8192780e+09, 1.2128529e+09],
         [7.2475610e+08, 1.0871332e+09, 1.0871332e+09, ...,
          1.0871332e+09, 1.0871332e+09, 7.2475610e+08]],

        [[5.5299411e+08, 8.2948890e+08, 8.2948890e+08, ...,
          8.2948890e+08, 8.2948890e+08, 5.5299411e+08],
         [8.2702131e+08, 1.2405307e+09, 1.2405307e+09, ...,
          1.2405307e+09, 1.2405307e+09, 8.2702131e+08],
         [5.3383488e+08, 8.0075264e+08, 8.0075264e+08, ...,
          8.0075264e+08, 8.0075264e+08, 5.3383488e+08],
         ...,
         [8.7174042e+08, 1.3076106e+09, 1.3076106e+09, ...,
          1.3076106e+09, 1.3076106e+09, 8.7174042e+08],
         [1.2128529e+09, 1.8192780e+09, 1.8192780e+09, ...,
          1.8192780e+09, 1.8192780e+09, 1.2128529e+09],
         [7.2475610e+08, 1.0871332e+09, 1.0871332e+09, ...,
          1.0871332e+09, 1.0871332e+09, 7.2475610e+08]],

        ...,

        [[5.5299411e+08, 8.2948890e+08, 8.2948890e+08, ...,
          8.2948890e+08, 8.2948890e+08, 5.5299411e+08],
         [8.2702131e+08, 1.2405307e+09, 1.2405307e+09, ...,
          1.2405307e+09, 1.2405307e+09, 8.2702131e+08],
         [5.3383488e+08, 8.0075264e+08, 8.0075264e+08, ...,
          8.0075264e+08, 8.0075264e+08, 5.3383488e+08],
         ...,
         [8.7174042e+08, 1.3076106e+09, 1.3076106e+09, ...,
          1.3076106e+09, 1.3076106e+09, 8.7174042e+08],
         [1.2128529e+09, 1.8192780e+09, 1.8192780e+09, ...,
          1.8192780e+09, 1.8192780e+09, 1.2128529e+09],
         [7.2475610e+08, 1.0871332e+09, 1.0871332e+09, ...,
          1.0871332e+09, 1.0871332e+09, 7.2475610e+08]],

        [[5.5299411e+08, 8.2948890e+08, 8.2948890e+08, ...,
          8.2948890e+08, 8.2948890e+08, 5.5299411e+08],
         [8.2702131e+08, 1.2405307e+09, 1.2405307e+09, ...,
          1.2405307e+09, 1.2405307e+09, 8.2702131e+08],
         [5.3383488e+08, 8.0075264e+08, 8.0075264e+08, ...,
          8.0075264e+08, 8.0075264e+08, 5.3383488e+08],
         ...,
         [8.7174042e+08, 1.3076106e+09, 1.3076106e+09, ...,
          1.3076106e+09, 1.3076106e+09, 8.7174042e+08],
         [1.2128529e+09, 1.8192780e+09, 1.8192780e+09, ...,
          1.8192780e+09, 1.8192780e+09, 1.2128529e+09],
         [7.2475610e+08, 1.0871332e+09, 1.0871332e+09, ...,
          1.0871332e+09, 1.0871332e+09, 7.2475610e+08]],

        [[5.5299411e+08, 8.2948890e+08, 8.2948890e+08, ...,
          8.2948890e+08, 8.2948890e+08, 5.5299411e+08],
         [8.2702131e+08, 1.2405307e+09, 1.2405307e+09, ...,
          1.2405307e+09, 1.2405307e+09, 8.2702131e+08],
         [5.3383488e+08, 8.0075264e+08, 8.0075264e+08, ...,
          8.0075264e+08, 8.0075264e+08, 5.3383488e+08],
         ...,
         [8.7174042e+08, 1.3076106e+09, 1.3076106e+09, ...,
          1.3076106e+09, 1.3076106e+09, 8.7174042e+08],
         [1.2128529e+09, 1.8192780e+09, 1.8192780e+09, ...,
          1.8192780e+09, 1.8192780e+09, 1.2128529e+09],
         [7.2475610e+08, 1.0871332e+09, 1.0871332e+09, ...,
          1.0871332e+09, 1.0871332e+09, 7.2475610e+08]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 50]), 'from': [7], 'to': [11]}
tf node:
{'name': 'cos', 'output': array([[[[-0.8924658 ,  0.9712753 ,  0.9712753 , ...,  0.9712753 ,
           0.9712753 , -0.8924658 ],
         [ 0.5731769 ,  0.9463095 ,  0.9463095 , ...,  0.9463095 ,
           0.9463095 ,  0.5731769 ],
         [ 0.9447932 ,  0.5872003 ,  0.5872003 , ...,  0.5872003 ,
           0.5872003 ,  0.9447932 ],
         ...,
         [-0.30534065, -0.9492499 , -0.9492499 , ..., -0.9492499 ,
          -0.9492499 , -0.30534065],
         [-0.95343095,  0.8729558 ,  0.8729558 , ...,  0.8729558 ,
           0.8729558 , -0.95343095],
         [ 0.2219174 ,  0.978799  ,  0.978799  , ...,  0.978799  ,
           0.978799  ,  0.2219174 ]],

        [[-0.8924658 ,  0.9712753 ,  0.9712753 , ...,  0.9712753 ,
           0.9712753 , -0.8924658 ],
         [ 0.5731769 ,  0.9463095 ,  0.9463095 , ...,  0.9463095 ,
           0.9463095 ,  0.5731769 ],
         [ 0.9447932 ,  0.5872003 ,  0.5872003 , ...,  0.5872003 ,
           0.5872003 ,  0.9447932 ],
         ...,
         [-0.30534065, -0.9492499 , -0.9492499 , ..., -0.9492499 ,
          -0.9492499 , -0.30534065],
         [-0.95343095,  0.8729558 ,  0.8729558 , ...,  0.8729558 ,
           0.8729558 , -0.95343095],
         [ 0.2219174 ,  0.978799  ,  0.978799  , ...,  0.978799  ,
           0.978799  ,  0.2219174 ]],

        [[-0.8924658 ,  0.9712753 ,  0.9712753 , ...,  0.9712753 ,
           0.9712753 , -0.8924658 ],
         [ 0.5731769 ,  0.9463095 ,  0.9463095 , ...,  0.9463095 ,
           0.9463095 ,  0.5731769 ],
         [ 0.9447932 ,  0.5872003 ,  0.5872003 , ...,  0.5872003 ,
           0.5872003 ,  0.9447932 ],
         ...,
         [-0.30534065, -0.9492499 , -0.9492499 , ..., -0.9492499 ,
          -0.9492499 , -0.30534065],
         [-0.95343095,  0.8729558 ,  0.8729558 , ...,  0.8729558 ,
           0.8729558 , -0.95343095],
         [ 0.2219174 ,  0.978799  ,  0.978799  , ...,  0.978799  ,
           0.978799  ,  0.2219174 ]],

        ...,

        [[-0.8924658 ,  0.9712753 ,  0.9712753 , ...,  0.9712753 ,
           0.9712753 , -0.8924658 ],
         [ 0.5731769 ,  0.9463095 ,  0.9463095 , ...,  0.9463095 ,
           0.9463095 ,  0.5731769 ],
         [ 0.9447932 ,  0.5872003 ,  0.5872003 , ...,  0.5872003 ,
           0.5872003 ,  0.9447932 ],
         ...,
         [-0.30534065, -0.9492499 , -0.9492499 , ..., -0.9492499 ,
          -0.9492499 , -0.30534065],
         [-0.95343095,  0.8729558 ,  0.8729558 , ...,  0.8729558 ,
           0.8729558 , -0.95343095],
         [ 0.2219174 ,  0.978799  ,  0.978799  , ...,  0.978799  ,
           0.978799  ,  0.2219174 ]],

        [[-0.8924658 ,  0.9712753 ,  0.9712753 , ...,  0.9712753 ,
           0.9712753 , -0.8924658 ],
         [ 0.5731769 ,  0.9463095 ,  0.9463095 , ...,  0.9463095 ,
           0.9463095 ,  0.5731769 ],
         [ 0.9447932 ,  0.5872003 ,  0.5872003 , ...,  0.5872003 ,
           0.5872003 ,  0.9447932 ],
         ...,
         [-0.30534065, -0.9492499 , -0.9492499 , ..., -0.9492499 ,
          -0.9492499 , -0.30534065],
         [-0.95343095,  0.8729558 ,  0.8729558 , ...,  0.8729558 ,
           0.8729558 , -0.95343095],
         [ 0.2219174 ,  0.978799  ,  0.978799  , ...,  0.978799  ,
           0.978799  ,  0.2219174 ]],

        [[-0.8924658 ,  0.9712753 ,  0.9712753 , ...,  0.9712753 ,
           0.9712753 , -0.8924658 ],
         [ 0.5731769 ,  0.9463095 ,  0.9463095 , ...,  0.9463095 ,
           0.9463095 ,  0.5731769 ],
         [ 0.9447932 ,  0.5872003 ,  0.5872003 , ...,  0.5872003 ,
           0.5872003 ,  0.9447932 ],
         ...,
         [-0.30534065, -0.9492499 , -0.9492499 , ..., -0.9492499 ,
          -0.9492499 , -0.30534065],
         [-0.95343095,  0.8729558 ,  0.8729558 , ...,  0.8729558 ,
           0.8729558 , -0.95343095],
         [ 0.2219174 ,  0.978799  ,  0.978799  , ...,  0.978799  ,
           0.978799  ,  0.2219174 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 50]), 'from': [8], 'to': [17]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.745253  ,  0.5790769 ,  0.5790769 , ...,  0.5790769 ,
           0.5790769 ,  0.745253  ],
         [ 0.46568444, -0.9652859 , -0.9652859 , ...,  0.94145936,
           0.94145936,  0.99665964],
         [-0.9882328 ,  0.82195085,  0.82195085, ...,  0.82195085,
           0.82195085, -0.527971  ],
         ...,
         [ 0.4814838 , -0.7828275 , -0.7828275 , ..., -0.59059674,
          -0.59059674,  0.9832023 ],
         [ 0.9875281 ,  0.7778229 ,  0.7778229 , ...,  0.7778229 ,
           0.7778229 ,  0.9875281 ],
         [-0.9105133 , -0.7040124 , -0.7040124 , ..., -0.9954779 ,
          -0.9954779 ,  0.99798936]],

        [[ 0.745253  ,  0.5790769 ,  0.5790769 , ...,  0.5790769 ,
           0.5790769 ,  0.745253  ],
         [ 0.46568444, -0.9652859 , -0.9652859 , ...,  0.94145936,
           0.94145936,  0.99665964],
         [-0.9882328 ,  0.82195085,  0.82195085, ...,  0.82195085,
           0.82195085, -0.527971  ],
         ...,
         [ 0.4814838 , -0.7828275 , -0.7828275 , ..., -0.59059674,
          -0.59059674,  0.9832023 ],
         [ 0.9875281 ,  0.7778229 ,  0.7778229 , ...,  0.7778229 ,
           0.7778229 ,  0.9875281 ],
         [-0.9105133 , -0.7040124 , -0.7040124 , ..., -0.9954779 ,
          -0.9954779 ,  0.99798936]],

        [[ 0.745253  ,  0.5790769 ,  0.5790769 , ...,  0.5790769 ,
           0.5790769 ,  0.745253  ],
         [ 0.46568444, -0.9652859 , -0.9652859 , ...,  0.94145936,
           0.94145936,  0.99665964],
         [-0.9882328 ,  0.82195085,  0.82195085, ...,  0.82195085,
           0.82195085, -0.527971  ],
         ...,
         [ 0.4814838 , -0.7828275 , -0.7828275 , ..., -0.59059674,
          -0.59059674,  0.9832023 ],
         [ 0.9875281 ,  0.7778229 ,  0.7778229 , ...,  0.7778229 ,
           0.7778229 ,  0.9875281 ],
         [-0.9105133 , -0.7040124 , -0.7040124 , ..., -0.9954779 ,
          -0.9954779 ,  0.99798936]],

        ...,

        [[ 0.745253  ,  0.5790769 ,  0.5790769 , ...,  0.5790769 ,
           0.5790769 ,  0.745253  ],
         [ 0.46568444, -0.9652859 , -0.9652859 , ...,  0.94145936,
           0.94145936,  0.99665964],
         [-0.9882328 ,  0.82195085,  0.82195085, ...,  0.82195085,
           0.82195085, -0.527971  ],
         ...,
         [ 0.4814838 , -0.7828275 , -0.7828275 , ..., -0.59059674,
          -0.59059674,  0.9832023 ],
         [ 0.9875281 ,  0.7778229 ,  0.7778229 , ...,  0.7778229 ,
           0.7778229 ,  0.9875281 ],
         [-0.9105133 , -0.7040124 , -0.7040124 , ..., -0.9954779 ,
          -0.9954779 ,  0.99798936]],

        [[ 0.745253  ,  0.5790769 ,  0.5790769 , ...,  0.5790769 ,
           0.5790769 ,  0.745253  ],
         [ 0.46568444, -0.9652859 , -0.9652859 , ...,  0.94145936,
           0.94145936,  0.99665964],
         [-0.9882328 ,  0.82195085,  0.82195085, ...,  0.82195085,
           0.82195085, -0.527971  ],
         ...,
         [ 0.4814838 , -0.7828275 , -0.7828275 , ..., -0.59059674,
          -0.59059674,  0.9832023 ],
         [ 0.9875281 ,  0.7778229 ,  0.7778229 , ...,  0.7778229 ,
           0.7778229 ,  0.9875281 ],
         [-0.9105133 , -0.7040124 , -0.7040124 , ..., -0.9954779 ,
          -0.9954779 ,  0.99798936]],

        [[ 0.745253  ,  0.5790769 ,  0.5790769 , ...,  0.5790769 ,
           0.5790769 ,  0.745253  ],
         [ 0.46568444, -0.9652859 , -0.9652859 , ...,  0.94145936,
           0.94145936,  0.99665964],
         [-0.9882328 ,  0.82195085,  0.82195085, ...,  0.82195085,
           0.82195085, -0.527971  ],
         ...,
         [ 0.4814838 , -0.7828275 , -0.7828275 , ..., -0.59059674,
          -0.59059674,  0.9832023 ],
         [ 0.9875281 ,  0.7778229 ,  0.7778229 , ...,  0.7778229 ,
           0.7778229 ,  0.9875281 ],
         [-0.9105133 , -0.7040124 , -0.7040124 , ..., -0.9954779 ,
          -0.9954779 ,  0.99798936]]]], dtype=float32), 'output_shape': (1, 128, 16, 50), 'from': [8], 'to': [17]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.602432  , -0.82027817, -0.82027817, ..., -0.82027817,
          -0.82027817,  0.602432  ],
         [-0.8724398 ,  0.95739406,  0.95739406, ...,  0.95739406,
           0.95739406, -0.8724398 ],
         [ 0.25456512,  0.72720987,  0.72720987, ...,  0.72720987,
           0.72720987,  0.25456512],
         ...,
         [ 0.7639697 ,  0.99967474,  0.99967474, ...,  0.99967474,
           0.99967474,  0.7639697 ],
         [ 0.8875856 ,  0.99995947,  0.99995947, ...,  0.99995947,
           0.99995947,  0.8875856 ],
         [ 0.9996761 , -0.92066115, -0.92066115, ..., -0.92066115,
          -0.92066115,  0.9996761 ]],

        [[ 0.602432  , -0.82027817, -0.82027817, ..., -0.82027817,
          -0.82027817,  0.602432  ],
         [-0.8724398 ,  0.95739406,  0.95739406, ...,  0.95739406,
           0.95739406, -0.8724398 ],
         [ 0.25456512,  0.72720987,  0.72720987, ...,  0.72720987,
           0.72720987,  0.25456512],
         ...,
         [ 0.7639697 ,  0.99967474,  0.99967474, ...,  0.99967474,
           0.99967474,  0.7639697 ],
         [ 0.8875856 ,  0.99995947,  0.99995947, ...,  0.99995947,
           0.99995947,  0.8875856 ],
         [ 0.9996761 , -0.92066115, -0.92066115, ..., -0.92066115,
          -0.92066115,  0.9996761 ]],

        [[ 0.602432  , -0.82027817, -0.82027817, ..., -0.82027817,
          -0.82027817,  0.602432  ],
         [-0.8724398 ,  0.95739406,  0.95739406, ...,  0.95739406,
           0.95739406, -0.8724398 ],
         [ 0.25456512,  0.72720987,  0.72720987, ...,  0.72720987,
           0.72720987,  0.25456512],
         ...,
         [ 0.7639697 ,  0.99967474,  0.99967474, ...,  0.99967474,
           0.99967474,  0.7639697 ],
         [ 0.8875856 ,  0.99995947,  0.99995947, ...,  0.99995947,
           0.99995947,  0.8875856 ],
         [ 0.9996761 , -0.92066115, -0.92066115, ..., -0.92066115,
          -0.92066115,  0.9996761 ]],

        ...,

        [[ 0.602432  , -0.82027817, -0.82027817, ..., -0.82027817,
          -0.82027817,  0.602432  ],
         [-0.8724398 ,  0.95739406,  0.95739406, ...,  0.95739406,
           0.95739406, -0.8724398 ],
         [ 0.25456512,  0.72720987,  0.72720987, ...,  0.72720987,
           0.72720987,  0.25456512],
         ...,
         [ 0.7639697 ,  0.99967474,  0.99967474, ...,  0.99967474,
           0.99967474,  0.7639697 ],
         [ 0.8875856 ,  0.99995947,  0.99995947, ...,  0.99995947,
           0.99995947,  0.8875856 ],
         [ 0.9996761 , -0.92066115, -0.92066115, ..., -0.92066115,
          -0.92066115,  0.9996761 ]],

        [[ 0.602432  , -0.82027817, -0.82027817, ..., -0.82027817,
          -0.82027817,  0.602432  ],
         [-0.8724398 ,  0.95739406,  0.95739406, ...,  0.95739406,
           0.95739406, -0.8724398 ],
         [ 0.25456512,  0.72720987,  0.72720987, ...,  0.72720987,
           0.72720987,  0.25456512],
         ...,
         [ 0.7639697 ,  0.99967474,  0.99967474, ...,  0.99967474,
           0.99967474,  0.7639697 ],
         [ 0.8875856 ,  0.99995947,  0.99995947, ...,  0.99995947,
           0.99995947,  0.8875856 ],
         [ 0.9996761 , -0.92066115, -0.92066115, ..., -0.92066115,
          -0.92066115,  0.9996761 ]],

        [[ 0.602432  , -0.82027817, -0.82027817, ..., -0.82027817,
          -0.82027817,  0.602432  ],
         [-0.8724398 ,  0.95739406,  0.95739406, ...,  0.95739406,
           0.95739406, -0.8724398 ],
         [ 0.25456512,  0.72720987,  0.72720987, ...,  0.72720987,
           0.72720987,  0.25456512],
         ...,
         [ 0.7639697 ,  0.99967474,  0.99967474, ...,  0.99967474,
           0.99967474,  0.7639697 ],
         [ 0.8875856 ,  0.99995947,  0.99995947, ...,  0.99995947,
           0.99995947,  0.8875856 ],
         [ 0.9996761 , -0.92066115, -0.92066115, ..., -0.92066115,
          -0.92066115,  0.9996761 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 50]), 'from': [8], 'to': [17]}

generate models:199

analyse output arrays in iter:232

pre layer res:
5:relu
{'name': 'relu', 'output': array([[[[4.1230052e+09,           inf,           inf, ...,
          8.3352020e+06, 1.5429766e+03, 7.1489050e+02],
         [1.1085170e+03, 8.6392285e+02,           inf, ...,
                    inf,           inf, 2.4933745e+03],
         [1.1647502e+06, 1.5803417e+03, 3.8551583e+16, ...,
          5.4391299e+12, 2.7505284e+38, 3.4186399e+03],
         ...,
         [          inf, 1.7836178e+03, 2.7327268e+03, ...,
          1.6424859e+06, 7.3026672e+02,           inf],
         [7.3383343e+36,           inf, 1.2583853e+03, ...,
          7.4851056e+02, 1.6992594e+03, 8.6574988e+02],
         [2.6470686e+03, 1.0248164e+03,           inf, ...,
          6.9608246e+02, 3.9646568e+33, 8.9093369e+03]],

        [[4.1230052e+09,           inf,           inf, ...,
          8.3352020e+06, 1.5429766e+03, 7.1489050e+02],
         [1.1085170e+03, 8.6392285e+02,           inf, ...,
                    inf,           inf, 2.4933745e+03],
         [1.1647502e+06, 1.5803417e+03, 3.8551583e+16, ...,
          5.4391299e+12, 2.7505284e+38, 3.4186399e+03],
         ...,
         [          inf, 1.7836178e+03, 2.7327268e+03, ...,
          1.6424859e+06, 7.3026672e+02,           inf],
         [7.3383343e+36,           inf, 1.2583853e+03, ...,
          7.4851056e+02, 1.6992594e+03, 8.6574988e+02],
         [2.6470686e+03, 1.0248164e+03,           inf, ...,
          6.9608246e+02, 3.9646568e+33, 8.9093369e+03]],

        [[4.1230052e+09,           inf,           inf, ...,
          8.3352020e+06, 1.5429766e+03, 7.1489050e+02],
         [1.1085170e+03, 8.6392285e+02,           inf, ...,
                    inf,           inf, 2.4933745e+03],
         [1.1647502e+06, 1.5803417e+03, 3.8551583e+16, ...,
          5.4391299e+12, 2.7505284e+38, 3.4186399e+03],
         ...,
         [          inf, 1.7836178e+03, 2.7327268e+03, ...,
          1.6424859e+06, 7.3026672e+02,           inf],
         [7.3383343e+36,           inf, 1.2583853e+03, ...,
          7.4851056e+02, 1.6992594e+03, 8.6574988e+02],
         [2.6470686e+03, 1.0248164e+03,           inf, ...,
          6.9608246e+02, 3.9646568e+33, 8.9093369e+03]],

        ...,

        [[4.1230052e+09,           inf,           inf, ...,
          8.3352020e+06, 1.5429766e+03, 7.1489050e+02],
         [1.1085170e+03, 8.6392285e+02,           inf, ...,
                    inf,           inf, 2.4933745e+03],
         [1.1647502e+06, 1.5803417e+03, 3.8551583e+16, ...,
          5.4391299e+12, 2.7505284e+38, 3.4186399e+03],
         ...,
         [          inf, 1.7836178e+03, 2.7327268e+03, ...,
          1.6424859e+06, 7.3026672e+02,           inf],
         [7.3383343e+36,           inf, 1.2583853e+03, ...,
          7.4851056e+02, 1.6992594e+03, 8.6574988e+02],
         [2.6470686e+03, 1.0248164e+03,           inf, ...,
          6.9608246e+02, 3.9646568e+33, 8.9093369e+03]],

        [[4.1230052e+09,           inf,           inf, ...,
          8.3352020e+06, 1.5429766e+03, 7.1489050e+02],
         [1.1085170e+03, 8.6392285e+02,           inf, ...,
                    inf,           inf, 2.4933745e+03],
         [1.1647502e+06, 1.5803417e+03, 3.8551583e+16, ...,
          5.4391299e+12, 2.7505284e+38, 3.4186399e+03],
         ...,
         [          inf, 1.7836178e+03, 2.7327268e+03, ...,
          1.6424859e+06, 7.3026672e+02,           inf],
         [7.3383343e+36,           inf, 1.2583853e+03, ...,
          7.4851056e+02, 1.6992594e+03, 8.6574988e+02],
         [2.6470686e+03, 1.0248164e+03,           inf, ...,
          6.9608246e+02, 3.9646568e+33, 8.9093369e+03]],

        [[4.1230052e+09,           inf,           inf, ...,
          8.3352020e+06, 1.5429766e+03, 7.1489050e+02],
         [1.1085170e+03, 8.6392285e+02,           inf, ...,
                    inf,           inf, 2.4933745e+03],
         [1.1647502e+06, 1.5803417e+03, 3.8551583e+16, ...,
          5.4391299e+12, 2.7505284e+38, 3.4186399e+03],
         ...,
         [          inf, 1.7836178e+03, 2.7327268e+03, ...,
          1.6424859e+06, 7.3026672e+02,           inf],
         [7.3383343e+36,           inf, 1.2583853e+03, ...,
          7.4851056e+02, 1.6992594e+03, 8.6574988e+02],
         [2.6470686e+03, 1.0248164e+03,           inf, ...,
          6.9608246e+02, 3.9646568e+33, 8.9093369e+03]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [1], 'to': [3]}
tf node:
{'name': 'log', 'output': array([[[[22.139849 ,        inf,        inf, ..., 15.935998 ,
           7.341469 ,  6.5721292],
         [ 7.0107784,  6.7614837,        inf, ...,        inf,
                 inf,  7.8213925],
         [13.968018 ,  7.3653965, 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.136998 ],
         ...,
         [       inf,  7.486399 ,  7.9130554, ..., 14.311722 ,
           6.59341  ,        inf],
         [84.88618  ,        inf,  7.1375847, ...,  6.6180854,
           7.4379478,  6.763596 ],
         [ 7.881208 ,  6.9322686,        inf, ...,  6.5454683,
          77.362724 ,  9.094855 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935998 ,
           7.341469 ,  6.5721292],
         [ 7.0107784,  6.7614837,        inf, ...,        inf,
                 inf,  7.8213925],
         [13.968018 ,  7.3653965, 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.136998 ],
         ...,
         [       inf,  7.486399 ,  7.9130554, ..., 14.311722 ,
           6.59341  ,        inf],
         [84.88618  ,        inf,  7.1375847, ...,  6.6180854,
           7.4379478,  6.763596 ],
         [ 7.881208 ,  6.9322686,        inf, ...,  6.5454683,
          77.362724 ,  9.094855 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935998 ,
           7.341469 ,  6.5721292],
         [ 7.0107784,  6.7614837,        inf, ...,        inf,
                 inf,  7.8213925],
         [13.968018 ,  7.3653965, 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.136998 ],
         ...,
         [       inf,  7.486399 ,  7.9130554, ..., 14.311722 ,
           6.59341  ,        inf],
         [84.88618  ,        inf,  7.1375847, ...,  6.6180854,
           7.4379478,  6.763596 ],
         [ 7.881208 ,  6.9322686,        inf, ...,  6.5454683,
          77.362724 ,  9.094855 ]],

        ...,

        [[22.139849 ,        inf,        inf, ..., 15.935998 ,
           7.341469 ,  6.5721292],
         [ 7.0107784,  6.7614837,        inf, ...,        inf,
                 inf,  7.8213925],
         [13.968018 ,  7.3653965, 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.136998 ],
         ...,
         [       inf,  7.486399 ,  7.9130554, ..., 14.311722 ,
           6.59341  ,        inf],
         [84.88618  ,        inf,  7.1375847, ...,  6.6180854,
           7.4379478,  6.763596 ],
         [ 7.881208 ,  6.9322686,        inf, ...,  6.5454683,
          77.362724 ,  9.094855 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935998 ,
           7.341469 ,  6.5721292],
         [ 7.0107784,  6.7614837,        inf, ...,        inf,
                 inf,  7.8213925],
         [13.968018 ,  7.3653965, 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.136998 ],
         ...,
         [       inf,  7.486399 ,  7.9130554, ..., 14.311722 ,
           6.59341  ,        inf],
         [84.88618  ,        inf,  7.1375847, ...,  6.6180854,
           7.4379478,  6.763596 ],
         [ 7.881208 ,  6.9322686,        inf, ...,  6.5454683,
          77.362724 ,  9.094855 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935998 ,
           7.341469 ,  6.5721292],
         [ 7.0107784,  6.7614837,        inf, ...,        inf,
                 inf,  7.8213925],
         [13.968018 ,  7.3653965, 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.136998 ],
         ...,
         [       inf,  7.486399 ,  7.9130554, ..., 14.311722 ,
           6.59341  ,        inf],
         [84.88618  ,        inf,  7.1375847, ...,  6.6180854,
           7.4379478,  6.763596 ],
         [ 7.881208 ,  6.9322686,        inf, ...,  6.5454683,
          77.362724 ,  9.094855 ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [5], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[22.139847 , 88.72284  , 88.72284  , ..., 15.935997 ,
           7.3414664,  6.572132 ],
         [ 7.0107756,  6.7614803, 88.72284  , ..., 88.72284  ,
          88.72284  ,  7.8213906],
         [13.968018 ,  7.365394 , 38.190765 , ..., 29.324648 ,
          88.510025 ,  8.136994 ],
         ...,
         [88.72284  ,  7.486398 ,  7.9130535, ..., 14.311719 ,
           6.593413 , 88.72284  ],
         [84.88618  , 88.72284  ,  7.1375856, ...,  6.6180854,
           7.4379444,  6.7635927],
         [ 7.881211 ,  6.932267 , 88.72284  , ...,  6.5454664,
          77.362724 ,  9.094852 ]],

        [[22.139847 , 88.72284  , 88.72284  , ..., 15.935997 ,
           7.3414664,  6.572132 ],
         [ 7.0107756,  6.7614803, 88.72284  , ..., 88.72284  ,
          88.72284  ,  7.8213906],
         [13.968018 ,  7.365394 , 38.190765 , ..., 29.324648 ,
          88.510025 ,  8.136994 ],
         ...,
         [88.72284  ,  7.486398 ,  7.9130535, ..., 14.311719 ,
           6.593413 , 88.72284  ],
         [84.88618  , 88.72284  ,  7.1375856, ...,  6.6180854,
           7.4379444,  6.7635927],
         [ 7.881211 ,  6.932267 , 88.72284  , ...,  6.5454664,
          77.362724 ,  9.094852 ]],

        [[22.139847 , 88.72284  , 88.72284  , ..., 15.935997 ,
           7.3414664,  6.572132 ],
         [ 7.0107756,  6.7614803, 88.72284  , ..., 88.72284  ,
          88.72284  ,  7.8213906],
         [13.968018 ,  7.365394 , 38.190765 , ..., 29.324648 ,
          88.510025 ,  8.136994 ],
         ...,
         [88.72284  ,  7.486398 ,  7.9130535, ..., 14.311719 ,
           6.593413 , 88.72284  ],
         [84.88618  , 88.72284  ,  7.1375856, ...,  6.6180854,
           7.4379444,  6.7635927],
         [ 7.881211 ,  6.932267 , 88.72284  , ...,  6.5454664,
          77.362724 ,  9.094852 ]],

        ...,

        [[22.139847 , 88.72284  , 88.72284  , ..., 15.935997 ,
           7.3414664,  6.572132 ],
         [ 7.0107756,  6.7614803, 88.72284  , ..., 88.72284  ,
          88.72284  ,  7.8213906],
         [13.968018 ,  7.365394 , 38.190765 , ..., 29.324648 ,
          88.510025 ,  8.136994 ],
         ...,
         [88.72284  ,  7.486398 ,  7.9130535, ..., 14.311719 ,
           6.593413 , 88.72284  ],
         [84.88618  , 88.72284  ,  7.1375856, ...,  6.6180854,
           7.4379444,  6.7635927],
         [ 7.881211 ,  6.932267 , 88.72284  , ...,  6.5454664,
          77.362724 ,  9.094852 ]],

        [[22.139847 , 88.72284  , 88.72284  , ..., 15.935997 ,
           7.3414664,  6.572132 ],
         [ 7.0107756,  6.7614803, 88.72284  , ..., 88.72284  ,
          88.72284  ,  7.8213906],
         [13.968018 ,  7.365394 , 38.190765 , ..., 29.324648 ,
          88.510025 ,  8.136994 ],
         ...,
         [88.72284  ,  7.486398 ,  7.9130535, ..., 14.311719 ,
           6.593413 , 88.72284  ],
         [84.88618  , 88.72284  ,  7.1375856, ...,  6.6180854,
           7.4379444,  6.7635927],
         [ 7.881211 ,  6.932267 , 88.72284  , ...,  6.5454664,
          77.362724 ,  9.094852 ]],

        [[22.139847 , 88.72284  , 88.72284  , ..., 15.935997 ,
           7.3414664,  6.572132 ],
         [ 7.0107756,  6.7614803, 88.72284  , ..., 88.72284  ,
          88.72284  ,  7.8213906],
         [13.968018 ,  7.365394 , 38.190765 , ..., 29.324648 ,
          88.510025 ,  8.136994 ],
         ...,
         [88.72284  ,  7.486398 ,  7.9130535, ..., 14.311719 ,
           6.593413 , 88.72284  ],
         [84.88618  , 88.72284  ,  7.1375856, ...,  6.6180854,
           7.4379444,  6.7635927],
         [ 7.881211 ,  6.932267 , 88.72284  , ...,  6.5454664,
          77.362724 ,  9.094852 ]]]], dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [5], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[22.139849 ,        inf,        inf, ..., 15.935995 ,
           7.3414707,  6.5721292],
         [ 7.0107775,  6.7614846,        inf, ...,        inf,
                 inf,  7.821392 ],
         [13.968019 ,  7.365395 , 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.137001 ],
         ...,
         [       inf,  7.4863963,  7.9130526, ..., 14.311718 ,
           6.5934114,        inf],
         [84.88618  ,        inf,  7.137585 , ...,  6.6180825,
           7.4379516,  6.763596 ],
         [ 7.8812103,  6.9322724,        inf, ...,  6.5454693,
          77.362724 ,  9.094853 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935995 ,
           7.3414707,  6.5721292],
         [ 7.0107775,  6.7614846,        inf, ...,        inf,
                 inf,  7.821392 ],
         [13.968019 ,  7.365395 , 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.137001 ],
         ...,
         [       inf,  7.4863963,  7.9130526, ..., 14.311718 ,
           6.5934114,        inf],
         [84.88618  ,        inf,  7.137585 , ...,  6.6180825,
           7.4379516,  6.763596 ],
         [ 7.8812103,  6.9322724,        inf, ...,  6.5454693,
          77.362724 ,  9.094853 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935995 ,
           7.3414707,  6.5721292],
         [ 7.0107775,  6.7614846,        inf, ...,        inf,
                 inf,  7.821392 ],
         [13.968019 ,  7.365395 , 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.137001 ],
         ...,
         [       inf,  7.4863963,  7.9130526, ..., 14.311718 ,
           6.5934114,        inf],
         [84.88618  ,        inf,  7.137585 , ...,  6.6180825,
           7.4379516,  6.763596 ],
         [ 7.8812103,  6.9322724,        inf, ...,  6.5454693,
          77.362724 ,  9.094853 ]],

        ...,

        [[22.139849 ,        inf,        inf, ..., 15.935995 ,
           7.3414707,  6.5721292],
         [ 7.0107775,  6.7614846,        inf, ...,        inf,
                 inf,  7.821392 ],
         [13.968019 ,  7.365395 , 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.137001 ],
         ...,
         [       inf,  7.4863963,  7.9130526, ..., 14.311718 ,
           6.5934114,        inf],
         [84.88618  ,        inf,  7.137585 , ...,  6.6180825,
           7.4379516,  6.763596 ],
         [ 7.8812103,  6.9322724,        inf, ...,  6.5454693,
          77.362724 ,  9.094853 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935995 ,
           7.3414707,  6.5721292],
         [ 7.0107775,  6.7614846,        inf, ...,        inf,
                 inf,  7.821392 ],
         [13.968019 ,  7.365395 , 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.137001 ],
         ...,
         [       inf,  7.4863963,  7.9130526, ..., 14.311718 ,
           6.5934114,        inf],
         [84.88618  ,        inf,  7.137585 , ...,  6.6180825,
           7.4379516,  6.763596 ],
         [ 7.8812103,  6.9322724,        inf, ...,  6.5454693,
          77.362724 ,  9.094853 ]],

        [[22.139849 ,        inf,        inf, ..., 15.935995 ,
           7.3414707,  6.5721292],
         [ 7.0107775,  6.7614846,        inf, ...,        inf,
                 inf,  7.821392 ],
         [13.968019 ,  7.365395 , 38.190773 , ..., 29.32464  ,
          88.510025 ,  8.137001 ],
         ...,
         [       inf,  7.4863963,  7.9130526, ..., 14.311718 ,
           6.5934114,        inf],
         [84.88618  ,        inf,  7.137585 , ...,  6.6180825,
           7.4379516,  6.763596 ],
         [ 7.8812103,  6.9322724,        inf, ...,  6.5454693,
          77.362724 ,  9.094853 ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [5], 'to': [2]}

generate models:201

analyse output arrays in iter:233

pre layer res:
14:reshape
{'name': 'reshape', 'output': array([[[[ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         ...,
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ]],

        [[ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         ...,
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ]],

        [[ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         ...,
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ],
         [ 25.88847  ,   3.1656685, -74.7174   , ...,  19.436428 ,
          -41.097977 ,  44.75968  ]],

        ...,

        [[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]],

        [[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]],

        [[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [13], 'to': [10]}
tf node:
{'name': 'log', 'output': array([[[[3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         ...,
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077]],

        [[3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         ...,
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077]],

        [[3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         ...,
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537978, 1.1523643,       nan, ..., 2.967149 ,       nan,
          3.8013077]],

        ...,

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [14], 'to': [3]}
ms node:
{'name': 'log', 'output': array([[[[3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         ...,
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105]],

        [[3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         ...,
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105]],

        [[3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         ...,
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105],
         [3.2537951, 1.1523621,       nan, ..., 2.9671474,       nan,
          3.8013105]],

        ...,

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]]]], dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [14], 'to': [3]}
torch node:
{'name': 'log', 'output': array([[[[3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         ...,
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077]],

        [[3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         ...,
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077]],

        [[3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         ...,
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077],
         [3.2537975, 1.1523647,       nan, ..., 2.967149 ,       nan,
          3.8013077]],

        ...,

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [14], 'to': [3]}

generate models:202

analyse the exceptions in iter:236
torch exception:
{'id': 4, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         ...,

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])]}
Given groups=1, weight of size [256, 512, 1, 1], expected input[1, 256, 16, 16] to have 512 channels, but got 256 channels instead
mindspore exception:
{'id': 4, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 16, 16], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  ...
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:205

analyse the exceptions in iter:238
torch exception:
{'id': 2, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250]],

         [[0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250]],

         [[0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250],
          [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250]]]])]}
mat1 and mat2 shapes cannot be multiplied (24x8 and 100x100)
mindspore exception:
{'id': 2, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 8, 8], dtype=Float32, value=
[[[[1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   ...
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001]],
  [[1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   ...
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001]],
  [[1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   ...
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001],
   [1.25000000e-001, 1.25000000e-001, 1.25000000e-001 ... 1.25000000e-001, 1.25000000e-001, 1.25000000e-001]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 8 and 'x2_row': 100. And 'x' shape [24, 8](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:207

analyse the exceptions in iter:242
torch exception:
{'id': 1, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[-3.4216,  0.3114, -2.4347,  ..., -3.3219,  1.5705, -2.5113],
          [-0.5583, -0.4886, -1.3302,  ..., -0.4362, -0.8324, -0.0789],
          [-2.0389, -2.2726, -2.0830,  ...,  0.0070, -1.9722,  0.7479],
          ...,
          [ 0.6189, -0.2688,  0.2724,  ..., -1.2666,  2.4621,  0.0699],
          [ 0.7703, -1.1060, -2.6251,  ..., -0.1962,  2.2024,  0.7536],
          [-5.1452,  0.8026,  2.6317,  ..., -0.1003, -2.3419, -0.6697]],

         [[-3.4216,  0.3114, -2.4347,  ..., -3.3219,  1.5705, -2.5113],
          [-0.5583, -0.4886, -1.3302,  ..., -0.4362, -0.8324, -0.0789],
          [-2.0389, -2.2726, -2.0830,  ...,  0.0070, -1.9722,  0.7479],
          ...,
          [ 0.6189, -0.2688,  0.2724,  ..., -1.2666,  2.4621,  0.0699],
          [ 0.7703, -1.1060, -2.6251,  ..., -0.1962,  2.2024,  0.7536],
          [-5.1452,  0.8026,  2.6317,  ..., -0.1003, -2.3419, -0.6697]],

         [[-3.4216,  0.3114, -2.4347,  ..., -3.3219,  1.5705, -2.5113],
          [-0.5583, -0.4886, -1.3302,  ..., -0.4362, -0.8324, -0.0789],
          [-2.0389, -2.2726, -2.0830,  ...,  0.0070, -1.9722,  0.7479],
          ...,
          [ 0.6189, -0.2688,  0.2724,  ..., -1.2666,  2.4621,  0.0699],
          [ 0.7703, -1.1060, -2.6251,  ..., -0.1962,  2.2024,  0.7536],
          [-5.1452,  0.8026,  2.6317,  ..., -0.1003, -2.3419, -0.6697]],

         ...,

         [[-3.4216,  0.3114, -2.4347,  ..., -3.3219,  1.5705, -2.5113],
          [-0.5583, -0.4886, -1.3302,  ..., -0.4362, -0.8324, -0.0789],
          [-2.0389, -2.2726, -2.0830,  ...,  0.0070, -1.9722,  0.7479],
          ...,
          [ 0.6189, -0.2688,  0.2724,  ..., -1.2666,  2.4621,  0.0699],
          [ 0.7703, -1.1060, -2.6251,  ..., -0.1962,  2.2024,  0.7536],
          [-5.1452,  0.8026,  2.6317,  ..., -0.1003, -2.3419, -0.6697]],

         [[-3.4216,  0.3114, -2.4347,  ..., -3.3219,  1.5705, -2.5113],
          [-0.5583, -0.4886, -1.3302,  ..., -0.4362, -0.8324, -0.0789],
          [-2.0389, -2.2726, -2.0830,  ...,  0.0070, -1.9722,  0.7479],
          ...,
          [ 0.6189, -0.2688,  0.2724,  ..., -1.2666,  2.4621,  0.0699],
          [ 0.7703, -1.1060, -2.6251,  ..., -0.1962,  2.2024,  0.7536],
          [-5.1452,  0.8026,  2.6317,  ..., -0.1003, -2.3419, -0.6697]],

         [[-3.4216,  0.3114, -2.4347,  ..., -3.3219,  1.5705, -2.5113],
          [-0.5583, -0.4886, -1.3302,  ..., -0.4362, -0.8324, -0.0789],
          [-2.0389, -2.2726, -2.0830,  ...,  0.0070, -1.9722,  0.7479],
          ...,
          [ 0.6189, -0.2688,  0.2724,  ..., -1.2666,  2.4621,  0.0699],
          [ 0.7703, -1.1060, -2.6251,  ..., -0.1962,  2.2024,  0.7536],
          [-5.1452,  0.8026,  2.6317,  ..., -0.1003, -2.3419, -0.6697]]]],
       grad_fn=<ConvolutionBackward0>)]}
mat1 and mat2 shapes cannot be multiplied (4096x32 and 100x100)
mindspore exception:
{'id': 1, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 128, 32, 32], dtype=Float32, value=
[[[[-3.42155790e+000, 3.11439157e-001, -2.43465519e+000 ... -3.32191443e+000, 1.57053161e+000, -2.51126695e+000],
   [-5.58287263e-001, -4.88591552e-001, -1.33024943e+000 ... -4.36221123e-001, -8.32351089e-001, -7.88881034e-002],
   [-2.03894448e+000, -2.27258444e+000, -2.08299565e+000 ... 6.98444247e-003, -1.97220123e+000, 7.47879624e-001],
   ...
   [6.18938744e-001, -2.68813193e-001, 2.72442907e-001 ... -1.26662469e+000, 2.46205020e+000, 6.98540807e-002],
   [7.70319104e-001, -1.10599351e+000, -2.62508345e+000 ... -1.96171522e-001, 2.20235991e+000, 7.53605604e-001],
   [-5.14524508e+000, 8.02576065e-001, 2.63174629e+000 ... -1.00304902e-001, -2.34193492e+000, -6.69699252e-001]],
  [[-3.42155790e+000, 3.11439157e-001, -2.43465519e+000 ... -3.32191443e+000, 1.57053161e+000, -2.51126695e+000],
   [-5.58287263e-001, -4.88591552e-001, -1.33024943e+000 ... -4.36221123e-001, -8.32351089e-001, -7.88881034e-002],
   [-2.03894448e+000, -2.27258444e+000, -2.08299565e+000 ... 6.98444247e-003, -1.97220123e+000, 7.47879624e-001],
   ...
   [6.18938744e-001, -2.68813193e-001, 2.72442907e-001 ... -1.26662469e+000, 2.46205020e+000, 6.98540807e-002],
   [7.70319104e-001, -1.10599351e+000, -2.62508345e+000 ... -1.96171522e-001, 2.20235991e+000, 7.53605604e-001],
   [-5.14524508e+000, 8.02576065e-001, 2.63174629e+000 ... -1.00304902e-001, -2.34193492e+000, -6.69699252e-001]],
  [[-3.42155790e+000, 3.11439157e-001, -2.43465519e+000 ... -3.32191443e+000, 1.57053161e+000, -2.51126695e+000],
   [-5.58287263e-001, -4.88591552e-001, -1.33024943e+000 ... -4.36221123e-001, -8.32351089e-001, -7.88881034e-002],
   [-2.03894448e+000, -2.27258444e+000, -2.08299565e+000 ... 6.98444247e-003, -1.97220123e+000, 7.47879624e-001],
   ...
   [6.18938744e-001, -2.68813193e-001, 2.72442907e-001 ... -1.26662469e+000, 2.46205020e+000, 6.98540807e-002],
   [7.70319104e-001, -1.10599351e+000, -2.62508345e+000 ... -1.96171522e-001, 2.20235991e+000, 7.53605604e-001],
   [-5.14524508e+000, 8.02576065e-001, 2.63174629e+000 ... -1.00304902e-001, -2.34193492e+000, -6.69699252e-001]],
  ...
  [[-3.42155790e+000, 3.11439157e-001, -2.43465519e+000 ... -3.32191443e+000, 1.57053161e+000, -2.51126695e+000],
   [-5.58287263e-001, -4.88591552e-001, -1.33024943e+000 ... -4.36221123e-001, -8.32351089e-001, -7.88881034e-002],
   [-2.03894448e+000, -2.27258444e+000, -2.08299565e+000 ... 6.98444247e-003, -1.97220123e+000, 7.47879624e-001],
   ...
   [6.18938744e-001, -2.68813193e-001, 2.72442907e-001 ... -1.26662469e+000, 2.46205020e+000, 6.98540807e-002],
   [7.70319104e-001, -1.10599351e+000, -2.62508345e+000 ... -1.96171522e-001, 2.20235991e+000, 7.53605604e-001],
   [-5.14524508e+000, 8.02576065e-001, 2.63174629e+000 ... -1.00304902e-001, -2.34193492e+000, -6.69699252e-001]],
  [[-3.42155790e+000, 3.11439157e-001, -2.43465519e+000 ... -3.32191443e+000, 1.57053161e+000, -2.51126695e+000],
   [-5.58287263e-001, -4.88591552e-001, -1.33024943e+000 ... -4.36221123e-001, -8.32351089e-001, -7.88881034e-002],
   [-2.03894448e+000, -2.27258444e+000, -2.08299565e+000 ... 6.98444247e-003, -1.97220123e+000, 7.47879624e-001],
   ...
   [6.18938744e-001, -2.68813193e-001, 2.72442907e-001 ... -1.26662469e+000, 2.46205020e+000, 6.98540807e-002],
   [7.70319104e-001, -1.10599351e+000, -2.62508345e+000 ... -1.96171522e-001, 2.20235991e+000, 7.53605604e-001],
   [-5.14524508e+000, 8.02576065e-001, 2.63174629e+000 ... -1.00304902e-001, -2.34193492e+000, -6.69699252e-001]],
  [[-3.42155790e+000, 3.11439157e-001, -2.43465519e+000 ... -3.32191443e+000, 1.57053161e+000, -2.51126695e+000],
   [-5.58287263e-001, -4.88591552e-001, -1.33024943e+000 ... -4.36221123e-001, -8.32351089e-001, -7.88881034e-002],
   [-2.03894448e+000, -2.27258444e+000, -2.08299565e+000 ... 6.98444247e-003, -1.97220123e+000, 7.47879624e-001],
   ...
   [6.18938744e-001, -2.68813193e-001, 2.72442907e-001 ... -1.26662469e+000, 2.46205020e+000, 6.98540807e-002],
   [7.70319104e-001, -1.10599351e+000, -2.62508345e+000 ... -1.96171522e-001, 2.20235991e+000, 7.53605604e-001],
   [-5.14524508e+000, 8.02576065e-001, 2.63174629e+000 ... -1.00304902e-001, -2.34193492e+000, -6.69699252e-001]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 100. And 'x' shape [4096, 32](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:210

analyse output arrays in iter:249

pre layer res:
7:conv2d
{'name': 'conv2d', 'output': array([[[[2.9384166e+08, 2.9384166e+08, 2.9384166e+08, ...,
          2.9384166e+08, 2.9384166e+08, 2.9384166e+08],
         [3.9268563e+08, 3.9268563e+08, 3.9268563e+08, ...,
          3.9268563e+08, 3.9268563e+08, 3.9268563e+08],
         [3.2450154e+08, 3.2450154e+08, 3.2450154e+08, ...,
          3.2450154e+08, 3.2450154e+08, 3.2450154e+08],
         ...,
         [3.9255459e+08, 3.9255459e+08, 3.9255459e+08, ...,
          3.9255459e+08, 3.9255459e+08, 3.9255459e+08],
         [4.2541619e+08, 4.2541619e+08, 4.2541619e+08, ...,
          4.2541619e+08, 4.2541619e+08, 4.2541619e+08],
         [3.3763411e+08, 3.3763411e+08, 3.3763411e+08, ...,
          3.3763411e+08, 3.3763411e+08, 3.3763411e+08]],

        [[2.9384166e+08, 2.9384166e+08, 2.9384166e+08, ...,
          2.9384166e+08, 2.9384166e+08, 2.9384166e+08],
         [3.9268563e+08, 3.9268563e+08, 3.9268563e+08, ...,
          3.9268563e+08, 3.9268563e+08, 3.9268563e+08],
         [3.2450154e+08, 3.2450154e+08, 3.2450154e+08, ...,
          3.2450154e+08, 3.2450154e+08, 3.2450154e+08],
         ...,
         [3.9255459e+08, 3.9255459e+08, 3.9255459e+08, ...,
          3.9255459e+08, 3.9255459e+08, 3.9255459e+08],
         [4.2541619e+08, 4.2541619e+08, 4.2541619e+08, ...,
          4.2541619e+08, 4.2541619e+08, 4.2541619e+08],
         [3.3763411e+08, 3.3763411e+08, 3.3763411e+08, ...,
          3.3763411e+08, 3.3763411e+08, 3.3763411e+08]],

        [[2.9384166e+08, 2.9384166e+08, 2.9384166e+08, ...,
          2.9384166e+08, 2.9384166e+08, 2.9384166e+08],
         [3.9268563e+08, 3.9268563e+08, 3.9268563e+08, ...,
          3.9268563e+08, 3.9268563e+08, 3.9268563e+08],
         [3.2450154e+08, 3.2450154e+08, 3.2450154e+08, ...,
          3.2450154e+08, 3.2450154e+08, 3.2450154e+08],
         ...,
         [3.9255459e+08, 3.9255459e+08, 3.9255459e+08, ...,
          3.9255459e+08, 3.9255459e+08, 3.9255459e+08],
         [4.2541619e+08, 4.2541619e+08, 4.2541619e+08, ...,
          4.2541619e+08, 4.2541619e+08, 4.2541619e+08],
         [3.3763411e+08, 3.3763411e+08, 3.3763411e+08, ...,
          3.3763411e+08, 3.3763411e+08, 3.3763411e+08]],

        ...,

        [[2.9384166e+08, 2.9384166e+08, 2.9384166e+08, ...,
          2.9384166e+08, 2.9384166e+08, 2.9384166e+08],
         [3.9268563e+08, 3.9268563e+08, 3.9268563e+08, ...,
          3.9268563e+08, 3.9268563e+08, 3.9268563e+08],
         [3.2450154e+08, 3.2450154e+08, 3.2450154e+08, ...,
          3.2450154e+08, 3.2450154e+08, 3.2450154e+08],
         ...,
         [3.9255459e+08, 3.9255459e+08, 3.9255459e+08, ...,
          3.9255459e+08, 3.9255459e+08, 3.9255459e+08],
         [4.2541619e+08, 4.2541619e+08, 4.2541619e+08, ...,
          4.2541619e+08, 4.2541619e+08, 4.2541619e+08],
         [3.3763411e+08, 3.3763411e+08, 3.3763411e+08, ...,
          3.3763411e+08, 3.3763411e+08, 3.3763411e+08]],

        [[2.9384166e+08, 2.9384166e+08, 2.9384166e+08, ...,
          2.9384166e+08, 2.9384166e+08, 2.9384166e+08],
         [3.9268563e+08, 3.9268563e+08, 3.9268563e+08, ...,
          3.9268563e+08, 3.9268563e+08, 3.9268563e+08],
         [3.2450154e+08, 3.2450154e+08, 3.2450154e+08, ...,
          3.2450154e+08, 3.2450154e+08, 3.2450154e+08],
         ...,
         [3.9255459e+08, 3.9255459e+08, 3.9255459e+08, ...,
          3.9255459e+08, 3.9255459e+08, 3.9255459e+08],
         [4.2541619e+08, 4.2541619e+08, 4.2541619e+08, ...,
          4.2541619e+08, 4.2541619e+08, 4.2541619e+08],
         [3.3763411e+08, 3.3763411e+08, 3.3763411e+08, ...,
          3.3763411e+08, 3.3763411e+08, 3.3763411e+08]],

        [[2.9384166e+08, 2.9384166e+08, 2.9384166e+08, ...,
          2.9384166e+08, 2.9384166e+08, 2.9384166e+08],
         [3.9268563e+08, 3.9268563e+08, 3.9268563e+08, ...,
          3.9268563e+08, 3.9268563e+08, 3.9268563e+08],
         [3.2450154e+08, 3.2450154e+08, 3.2450154e+08, ...,
          3.2450154e+08, 3.2450154e+08, 3.2450154e+08],
         ...,
         [3.9255459e+08, 3.9255459e+08, 3.9255459e+08, ...,
          3.9255459e+08, 3.9255459e+08, 3.9255459e+08],
         [4.2541619e+08, 4.2541619e+08, 4.2541619e+08, ...,
          4.2541619e+08, 4.2541619e+08, 4.2541619e+08],
         [3.3763411e+08, 3.3763411e+08, 3.3763411e+08, ...,
          3.3763411e+08, 3.3763411e+08, 3.3763411e+08]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 16, 50]), 'from': [13], 'to': [10]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.92520165,  0.92520165,  0.92520165, ...,  0.92520165,
           0.92520165,  0.92520165],
         [ 0.51462835,  0.51462835,  0.51462835, ...,  0.51462835,
           0.51462835,  0.51462835],
         [ 0.02944738,  0.02944738,  0.02944738, ...,  0.02944738,
           0.02944738,  0.02944738],
         ...,
         [-0.99999905, -0.99999905, -0.99999905, ..., -0.99999905,
          -0.99999905, -0.99999905],
         [-0.88190407, -0.88190407, -0.88190407, ..., -0.88190407,
          -0.88190407, -0.88190407],
         [-0.6788348 , -0.6788348 , -0.6788348 , ..., -0.6788348 ,
          -0.6788348 , -0.6788348 ]],

        [[ 0.92520165,  0.92520165,  0.92520165, ...,  0.92520165,
           0.92520165,  0.92520165],
         [ 0.51462835,  0.51462835,  0.51462835, ...,  0.51462835,
           0.51462835,  0.51462835],
         [ 0.02944738,  0.02944738,  0.02944738, ...,  0.02944738,
           0.02944738,  0.02944738],
         ...,
         [-0.99999905, -0.99999905, -0.99999905, ..., -0.99999905,
          -0.99999905, -0.99999905],
         [-0.88190407, -0.88190407, -0.88190407, ..., -0.88190407,
          -0.88190407, -0.88190407],
         [-0.6788348 , -0.6788348 , -0.6788348 , ..., -0.6788348 ,
          -0.6788348 , -0.6788348 ]],

        [[ 0.92520165,  0.92520165,  0.92520165, ...,  0.92520165,
           0.92520165,  0.92520165],
         [ 0.51462835,  0.51462835,  0.51462835, ...,  0.51462835,
           0.51462835,  0.51462835],
         [ 0.02944738,  0.02944738,  0.02944738, ...,  0.02944738,
           0.02944738,  0.02944738],
         ...,
         [-0.99999905, -0.99999905, -0.99999905, ..., -0.99999905,
          -0.99999905, -0.99999905],
         [-0.88190407, -0.88190407, -0.88190407, ..., -0.88190407,
          -0.88190407, -0.88190407],
         [-0.6788348 , -0.6788348 , -0.6788348 , ..., -0.6788348 ,
          -0.6788348 , -0.6788348 ]],

        ...,

        [[ 0.92520165,  0.92520165,  0.92520165, ...,  0.92520165,
           0.92520165,  0.92520165],
         [ 0.51462835,  0.51462835,  0.51462835, ...,  0.51462835,
           0.51462835,  0.51462835],
         [ 0.02944738,  0.02944738,  0.02944738, ...,  0.02944738,
           0.02944738,  0.02944738],
         ...,
         [-0.99999905, -0.99999905, -0.99999905, ..., -0.99999905,
          -0.99999905, -0.99999905],
         [-0.88190407, -0.88190407, -0.88190407, ..., -0.88190407,
          -0.88190407, -0.88190407],
         [-0.6788348 , -0.6788348 , -0.6788348 , ..., -0.6788348 ,
          -0.6788348 , -0.6788348 ]],

        [[ 0.92520165,  0.92520165,  0.92520165, ...,  0.92520165,
           0.92520165,  0.92520165],
         [ 0.51462835,  0.51462835,  0.51462835, ...,  0.51462835,
           0.51462835,  0.51462835],
         [ 0.02944738,  0.02944738,  0.02944738, ...,  0.02944738,
           0.02944738,  0.02944738],
         ...,
         [-0.99999905, -0.99999905, -0.99999905, ..., -0.99999905,
          -0.99999905, -0.99999905],
         [-0.88190407, -0.88190407, -0.88190407, ..., -0.88190407,
          -0.88190407, -0.88190407],
         [-0.6788348 , -0.6788348 , -0.6788348 , ..., -0.6788348 ,
          -0.6788348 , -0.6788348 ]],

        [[ 0.92520165,  0.92520165,  0.92520165, ...,  0.92520165,
           0.92520165,  0.92520165],
         [ 0.51462835,  0.51462835,  0.51462835, ...,  0.51462835,
           0.51462835,  0.51462835],
         [ 0.02944738,  0.02944738,  0.02944738, ...,  0.02944738,
           0.02944738,  0.02944738],
         ...,
         [-0.99999905, -0.99999905, -0.99999905, ..., -0.99999905,
          -0.99999905, -0.99999905],
         [-0.88190407, -0.88190407, -0.88190407, ..., -0.88190407,
          -0.88190407, -0.88190407],
         [-0.6788348 , -0.6788348 , -0.6788348 , ..., -0.6788348 ,
          -0.6788348 , -0.6788348 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 16, 50]), 'from': [7], 'to': [8]}
ms node:
{'name': 'sin', 'output': array([[[[-0.9070249 , -0.9070249 , -0.9070249 , ..., -0.9070249 ,
          -0.9070249 , -0.9070249 ],
         [-0.04348561, -0.04348561, -0.04348561, ..., -0.04348561,
           0.28834033,  0.28834033],
         [ 0.2097167 ,  0.2097167 ,  0.2097167 , ...,  0.2097167 ,
           0.2097167 ,  0.2097167 ],
         ...,
         [-0.2941364 , -0.2941364 , -0.2941364 , ..., -0.2941364 ,
          -0.2941364 , -0.2941364 ],
         [ 0.9997231 ,  0.9997231 ,  0.9997231 , ...,  0.9997231 ,
           0.9997231 ,  0.9997231 ],
         [-0.5234035 , -0.5234035 , -0.5234035 , ..., -0.5234035 ,
          -0.5234035 , -0.5234035 ]],

        [[-0.9070249 , -0.9070249 , -0.9070249 , ..., -0.9070249 ,
          -0.9070249 , -0.9070249 ],
         [-0.04348561, -0.04348561, -0.04348561, ..., -0.04348561,
           0.28834033,  0.28834033],
         [ 0.2097167 ,  0.2097167 ,  0.2097167 , ...,  0.2097167 ,
           0.2097167 ,  0.2097167 ],
         ...,
         [-0.2941364 , -0.2941364 , -0.2941364 , ..., -0.2941364 ,
          -0.2941364 , -0.2941364 ],
         [ 0.9997231 ,  0.9997231 ,  0.9997231 , ...,  0.9997231 ,
           0.9997231 ,  0.9997231 ],
         [-0.5234035 , -0.5234035 , -0.5234035 , ..., -0.5234035 ,
          -0.5234035 , -0.5234035 ]],

        [[-0.9070249 , -0.9070249 , -0.9070249 , ..., -0.9070249 ,
          -0.9070249 , -0.9070249 ],
         [-0.04348561, -0.04348561, -0.04348561, ..., -0.04348561,
           0.28834033,  0.28834033],
         [ 0.2097167 ,  0.2097167 ,  0.2097167 , ...,  0.2097167 ,
           0.2097167 ,  0.2097167 ],
         ...,
         [-0.2941364 , -0.2941364 , -0.2941364 , ..., -0.2941364 ,
          -0.2941364 , -0.2941364 ],
         [ 0.9997231 ,  0.9997231 ,  0.9997231 , ...,  0.9997231 ,
           0.9997231 ,  0.9997231 ],
         [-0.5234035 , -0.5234035 , -0.5234035 , ..., -0.5234035 ,
          -0.5234035 , -0.5234035 ]],

        ...,

        [[-0.9070249 , -0.9070249 , -0.9070249 , ..., -0.9070249 ,
          -0.9070249 , -0.9070249 ],
         [-0.04348561, -0.04348561, -0.04348561, ..., -0.04348561,
           0.28834033,  0.28834033],
         [ 0.2097167 ,  0.2097167 ,  0.2097167 , ...,  0.2097167 ,
           0.2097167 ,  0.2097167 ],
         ...,
         [-0.2941364 , -0.2941364 , -0.2941364 , ..., -0.2941364 ,
          -0.2941364 , -0.2941364 ],
         [ 0.9997231 ,  0.9997231 ,  0.9997231 , ...,  0.9997231 ,
           0.9997231 ,  0.9997231 ],
         [-0.5234035 , -0.5234035 , -0.5234035 , ..., -0.5234035 ,
          -0.5234035 , -0.5234035 ]],

        [[-0.9070249 , -0.9070249 , -0.9070249 , ..., -0.9070249 ,
          -0.9070249 , -0.9070249 ],
         [-0.04348561, -0.04348561, -0.04348561, ..., -0.04348561,
           0.28834033,  0.28834033],
         [ 0.2097167 ,  0.2097167 ,  0.2097167 , ...,  0.2097167 ,
           0.2097167 ,  0.2097167 ],
         ...,
         [-0.2941364 , -0.2941364 , -0.2941364 , ..., -0.2941364 ,
          -0.2941364 , -0.2941364 ],
         [ 0.9997231 ,  0.9997231 ,  0.9997231 , ...,  0.9997231 ,
           0.9997231 ,  0.9997231 ],
         [-0.5234035 , -0.5234035 , -0.5234035 , ..., -0.5234035 ,
          -0.5234035 , -0.5234035 ]],

        [[-0.9070249 , -0.9070249 , -0.9070249 , ..., -0.9070249 ,
          -0.9070249 , -0.9070249 ],
         [-0.04348561, -0.04348561, -0.04348561, ..., -0.04348561,
           0.28834033,  0.28834033],
         [ 0.2097167 ,  0.2097167 ,  0.2097167 , ...,  0.2097167 ,
           0.2097167 ,  0.2097167 ],
         ...,
         [-0.2941364 , -0.2941364 , -0.2941364 , ..., -0.2941364 ,
          -0.2941364 , -0.2941364 ],
         [ 0.9997231 ,  0.9997231 ,  0.9997231 , ...,  0.9997231 ,
           0.9997231 ,  0.9997231 ],
         [-0.5234035 , -0.5234035 , -0.5234035 , ..., -0.5234035 ,
          -0.5234035 , -0.5234035 ]]]], dtype=float32), 'output_shape': (1, 256, 16, 50), 'from': [7], 'to': [8]}
torch node:
{'name': 'sin', 'output': array([[[[-0.742826  , -0.742826  , -0.742826  , ..., -0.742826  ,
          -0.742826  , -0.742826  ],
         [ 0.5058681 ,  0.5058681 ,  0.5058681 , ...,  0.5058681 ,
           0.5058681 ,  0.5058681 ],
         [-0.0718983 , -0.0718983 , -0.0718983 , ..., -0.0718983 ,
          -0.0718983 , -0.0718983 ],
         ...,
         [ 0.7071367 ,  0.7071367 ,  0.7071367 , ...,  0.7071367 ,
           0.7071367 ,  0.7071367 ],
         [ 0.09006803,  0.09006803,  0.09006803, ...,  0.09006803,
           0.09006803,  0.09006803],
         [ 0.8722367 ,  0.8722367 ,  0.8722367 , ...,  0.8722367 ,
           0.8722367 ,  0.8722367 ]],

        [[-0.742826  , -0.742826  , -0.742826  , ..., -0.742826  ,
          -0.742826  , -0.742826  ],
         [ 0.5058681 ,  0.5058681 ,  0.5058681 , ...,  0.5058681 ,
           0.5058681 ,  0.5058681 ],
         [-0.0718983 , -0.0718983 , -0.0718983 , ..., -0.0718983 ,
          -0.0718983 , -0.0718983 ],
         ...,
         [ 0.7071367 ,  0.7071367 ,  0.7071367 , ...,  0.7071367 ,
           0.7071367 ,  0.7071367 ],
         [ 0.09006803,  0.09006803,  0.09006803, ...,  0.09006803,
           0.09006803,  0.09006803],
         [ 0.8722367 ,  0.8722367 ,  0.8722367 , ...,  0.8722367 ,
           0.8722367 ,  0.8722367 ]],

        [[-0.742826  , -0.742826  , -0.742826  , ..., -0.742826  ,
          -0.742826  , -0.742826  ],
         [ 0.5058681 ,  0.5058681 ,  0.5058681 , ...,  0.5058681 ,
           0.5058681 ,  0.5058681 ],
         [-0.0718983 , -0.0718983 , -0.0718983 , ..., -0.0718983 ,
          -0.0718983 , -0.0718983 ],
         ...,
         [ 0.7071367 ,  0.7071367 ,  0.7071367 , ...,  0.7071367 ,
           0.7071367 ,  0.7071367 ],
         [ 0.09006803,  0.09006803,  0.09006803, ...,  0.09006803,
           0.09006803,  0.09006803],
         [ 0.8722367 ,  0.8722367 ,  0.8722367 , ...,  0.8722367 ,
           0.8722367 ,  0.8722367 ]],

        ...,

        [[-0.742826  , -0.742826  , -0.742826  , ..., -0.742826  ,
          -0.742826  , -0.742826  ],
         [ 0.5058681 ,  0.5058681 ,  0.5058681 , ...,  0.5058681 ,
           0.5058681 ,  0.5058681 ],
         [-0.0718983 , -0.0718983 , -0.0718983 , ..., -0.0718983 ,
          -0.0718983 , -0.0718983 ],
         ...,
         [ 0.7071367 ,  0.7071367 ,  0.7071367 , ...,  0.7071367 ,
           0.7071367 ,  0.7071367 ],
         [ 0.09006803,  0.09006803,  0.09006803, ...,  0.09006803,
           0.09006803,  0.09006803],
         [ 0.8722367 ,  0.8722367 ,  0.8722367 , ...,  0.8722367 ,
           0.8722367 ,  0.8722367 ]],

        [[-0.742826  , -0.742826  , -0.742826  , ..., -0.742826  ,
          -0.742826  , -0.742826  ],
         [ 0.5058681 ,  0.5058681 ,  0.5058681 , ...,  0.5058681 ,
           0.5058681 ,  0.5058681 ],
         [-0.0718983 , -0.0718983 , -0.0718983 , ..., -0.0718983 ,
          -0.0718983 , -0.0718983 ],
         ...,
         [ 0.7071367 ,  0.7071367 ,  0.7071367 , ...,  0.7071367 ,
           0.7071367 ,  0.7071367 ],
         [ 0.09006803,  0.09006803,  0.09006803, ...,  0.09006803,
           0.09006803,  0.09006803],
         [ 0.8722367 ,  0.8722367 ,  0.8722367 , ...,  0.8722367 ,
           0.8722367 ,  0.8722367 ]],

        [[-0.742826  , -0.742826  , -0.742826  , ..., -0.742826  ,
          -0.742826  , -0.742826  ],
         [ 0.5058681 ,  0.5058681 ,  0.5058681 , ...,  0.5058681 ,
           0.5058681 ,  0.5058681 ],
         [-0.0718983 , -0.0718983 , -0.0718983 , ..., -0.0718983 ,
          -0.0718983 , -0.0718983 ],
         ...,
         [ 0.7071367 ,  0.7071367 ,  0.7071367 , ...,  0.7071367 ,
           0.7071367 ,  0.7071367 ],
         [ 0.09006803,  0.09006803,  0.09006803, ...,  0.09006803,
           0.09006803,  0.09006803],
         [ 0.8722367 ,  0.8722367 ,  0.8722367 , ...,  0.8722367 ,
           0.8722367 ,  0.8722367 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 16, 50]), 'from': [7], 'to': [8]}

generate models:215

analyse output arrays in iter:255

pre layer res:
12:add
{'name': 'add', 'output': array([[[[ -27.823242, -197.18486 ,  172.61974 , ..., -337.89914 ,
            57.309364, -853.86035 ],
         [  54.544704,  -78.18179 , -528.99854 , ...,  208.17586 ,
          -237.78027 , -308.1671  ],
         [-373.0959  ,  -14.762501, -593.79144 , ...,  -27.676277,
           664.8426  , -319.7842  ],
         ...,
         [   1.809762,   97.13278 ,   39.201168, ...,   -8.068002,
          -455.05292 , -476.1176  ],
         [ 323.22348 , -796.7028  ,  -55.886444, ...,  269.93402 ,
          -494.72028 , -496.88284 ],
         [  27.500002, -433.15576 , -554.7798  , ...,  271.81616 ,
          -668.8847  , 1199.6766  ]],

        [[ -27.823242, -197.18486 ,  172.61974 , ..., -337.89914 ,
            57.309364, -853.86035 ],
         [  54.544704,  -78.18179 , -528.99854 , ...,  208.17586 ,
          -237.78027 , -308.1671  ],
         [-373.0959  ,  -14.762501, -593.79144 , ...,  -27.676277,
           664.8426  , -319.7842  ],
         ...,
         [   1.809762,   97.13278 ,   39.201168, ...,   -8.068002,
          -455.05292 , -476.1176  ],
         [ 323.22348 , -796.7028  ,  -55.886444, ...,  269.93402 ,
          -494.72028 , -496.88284 ],
         [  27.500002, -433.15576 , -554.7798  , ...,  271.81616 ,
          -668.8847  , 1199.6766  ]],

        [[ -27.823242, -197.18486 ,  172.61974 , ..., -337.89914 ,
            57.309364, -853.86035 ],
         [  54.544704,  -78.18179 , -528.99854 , ...,  208.17586 ,
          -237.78027 , -308.1671  ],
         [-373.0959  ,  -14.762501, -593.79144 , ...,  -27.676277,
           664.8426  , -319.7842  ],
         ...,
         [   1.809762,   97.13278 ,   39.201168, ...,   -8.068002,
          -455.05292 , -476.1176  ],
         [ 323.22348 , -796.7028  ,  -55.886444, ...,  269.93402 ,
          -494.72028 , -496.88284 ],
         [  27.500002, -433.15576 , -554.7798  , ...,  271.81616 ,
          -668.8847  , 1199.6766  ]],

        ...,

        [[   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         ...,
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ]],

        [[   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         ...,
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ]],

        [[   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         ...,
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ],
         [   0.      ,    0.      ,    0.      , ...,    0.      ,
             0.      ,    0.      ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [6, 13], 'to': [11]}
tf node:
{'name': 'softmax', 'output': array([[[[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        [[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        [[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        ...,

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]],

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]],

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]]]],
      dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [12], 'to': [3]}
ms node:
{'name': 'softmax', 'output': array([[[[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        [[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        [[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        ...,

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]],

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]],

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]]]],
      dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [12], 'to': [3]}
torch node:
{'name': 'softmax', 'output': array([[[[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        [[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        [[0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         ...,
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 0.     ],
         [0.     , 0.     , 0.     , ..., 0.     , 0.     , 1.     ]],

        ...,

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]],

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]],

        [[0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         ...,
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125],
         [0.03125, 0.03125, 0.03125, ..., 0.03125, 0.03125, 0.03125]]]],
      dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [12], 'to': [3]}

generate models:220

analyse the exceptions in iter:259
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.0000, 0.9802, 0.0000,  ..., 0.0000, 0.0000, 0.8895],
          [0.6252, 0.8145, 0.0000,  ..., 0.6052, 0.9988, 0.0000],
          [0.0000, 0.0000, 0.0593,  ..., 0.9450, 0.8011, 0.5612],
          ...,
          [0.7354, 0.4630, 0.0000,  ..., 0.8234, 0.0000, 0.0000],
          [0.9837, 0.7943, 0.0000,  ..., 0.9959, 0.8524, 0.0000],
          [0.2178, 0.9276, 0.1039,  ..., 0.0000, 0.8869, 0.0000]],

         [[0.0000, 0.9802, 0.0000,  ..., 0.0000, 0.0000, 0.8895],
          [0.6252, 0.8145, 0.0000,  ..., 0.6052, 0.9988, 0.0000],
          [0.0000, 0.0000, 0.0593,  ..., 0.9450, 0.8011, 0.5612],
          ...,
          [0.7354, 0.4630, 0.0000,  ..., 0.8234, 0.0000, 0.0000],
          [0.9837, 0.7943, 0.0000,  ..., 0.9959, 0.8524, 0.0000],
          [0.2178, 0.9276, 0.1039,  ..., 0.0000, 0.8869, 0.0000]],

         [[0.0000, 0.9802, 0.0000,  ..., 0.0000, 0.0000, 0.8895],
          [0.6252, 0.8145, 0.0000,  ..., 0.6052, 0.9988, 0.0000],
          [0.0000, 0.0000, 0.0593,  ..., 0.9450, 0.8011, 0.5612],
          ...,
          [0.7354, 0.4630, 0.0000,  ..., 0.8234, 0.0000, 0.0000],
          [0.9837, 0.7943, 0.0000,  ..., 0.9959, 0.8524, 0.0000],
          [0.2178, 0.9276, 0.1039,  ..., 0.0000, 0.8869, 0.0000]],

         ...,

         [[0.0000, 0.9802, 0.0000,  ..., 0.0000, 0.0000, 0.8895],
          [0.6252, 0.8145, 0.0000,  ..., 0.6052, 0.9988, 0.0000],
          [0.0000, 0.0000, 0.0593,  ..., 0.9450, 0.8011, 0.5612],
          ...,
          [0.7354, 0.4630, 0.0000,  ..., 0.8234, 0.0000, 0.0000],
          [0.9837, 0.7943, 0.0000,  ..., 0.9959, 0.8524, 0.0000],
          [0.2178, 0.9276, 0.1039,  ..., 0.0000, 0.8869, 0.0000]],

         [[0.0000, 0.9802, 0.0000,  ..., 0.0000, 0.0000, 0.8895],
          [0.6252, 0.8145, 0.0000,  ..., 0.6052, 0.9988, 0.0000],
          [0.0000, 0.0000, 0.0593,  ..., 0.9450, 0.8011, 0.5612],
          ...,
          [0.7354, 0.4630, 0.0000,  ..., 0.8234, 0.0000, 0.0000],
          [0.9837, 0.7943, 0.0000,  ..., 0.9959, 0.8524, 0.0000],
          [0.2178, 0.9276, 0.1039,  ..., 0.0000, 0.8869, 0.0000]],

         [[0.0000, 0.9802, 0.0000,  ..., 0.0000, 0.0000, 0.8895],
          [0.6252, 0.8145, 0.0000,  ..., 0.6052, 0.9988, 0.0000],
          [0.0000, 0.0000, 0.0593,  ..., 0.9450, 0.8011, 0.5612],
          ...,
          [0.7354, 0.4630, 0.0000,  ..., 0.8234, 0.0000, 0.0000],
          [0.9837, 0.7943, 0.0000,  ..., 0.9959, 0.8524, 0.0000],
          [0.2178, 0.9276, 0.1039,  ..., 0.0000, 0.8869, 0.0000]]]],
       grad_fn=<ReluBackward0>)]}
Given groups=1, weight of size [64, 512, 1, 1], expected input[1, 256, 32, 32] to have 512 channels, but got 256 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 9.80213106e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 8.89493585e-001],
   [6.25181735e-001, 8.14523757e-001, 0.00000000e+000 ... 6.05172694e-001, 9.98812258e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 5.93112819e-002 ... 9.45002079e-001, 8.01097870e-001, 5.61218500e-001],
   ...
   [7.35420465e-001, 4.63020176e-001, 0.00000000e+000 ... 8.23406398e-001, 0.00000000e+000, 0.00000000e+000],
   [9.83745635e-001, 7.94262290e-001, 0.00000000e+000 ... 9.95920718e-001, 8.52399170e-001, 0.00000000e+000],
   [2.17827573e-001, 9.27566051e-001, 1.03863314e-001 ... 0.00000000e+000, 8.86890173e-001, 0.00000000e+000]],
  [[0.00000000e+000, 9.80213106e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 8.89493585e-001],
   [6.25181735e-001, 8.14523757e-001, 0.00000000e+000 ... 6.05172694e-001, 9.98812258e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 5.93112819e-002 ... 9.45002079e-001, 8.01097870e-001, 5.61218500e-001],
   ...
   [7.35420465e-001, 4.63020176e-001, 0.00000000e+000 ... 8.23406398e-001, 0.00000000e+000, 0.00000000e+000],
   [9.83745635e-001, 7.94262290e-001, 0.00000000e+000 ... 9.95920718e-001, 8.52399170e-001, 0.00000000e+000],
   [2.17827573e-001, 9.27566051e-001, 1.03863314e-001 ... 0.00000000e+000, 8.86890173e-001, 0.00000000e+000]],
  [[0.00000000e+000, 9.80213106e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 8.89493585e-001],
   [6.25181735e-001, 8.14523757e-001, 0.00000000e+000 ... 6.05172694e-001, 9.98812258e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 5.93112819e-002 ... 9.45002079e-001, 8.01097870e-001, 5.61218500e-001],
   ...
   [7.35420465e-001, 4.63020176e-001, 0.00000000e+000 ... 8.23406398e-001, 0.00000000e+000, 0.00000000e+000],
   [9.83745635e-001, 7.94262290e-001, 0.00000000e+000 ... 9.95920718e-001, 8.52399170e-001, 0.00000000e+000],
   [2.17827573e-001, 9.27566051e-001, 1.03863314e-001 ... 0.00000000e+000, 8.86890173e-001, 0.00000000e+000]],
  ...
  [[0.00000000e+000, 9.80213106e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 8.89493585e-001],
   [6.25181735e-001, 8.14523757e-001, 0.00000000e+000 ... 6.05172694e-001, 9.98812258e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 5.93112819e-002 ... 9.45002079e-001, 8.01097870e-001, 5.61218500e-001],
   ...
   [7.35420465e-001, 4.63020176e-001, 0.00000000e+000 ... 8.23406398e-001, 0.00000000e+000, 0.00000000e+000],
   [9.83745635e-001, 7.94262290e-001, 0.00000000e+000 ... 9.95920718e-001, 8.52399170e-001, 0.00000000e+000],
   [2.17827573e-001, 9.27566051e-001, 1.03863314e-001 ... 0.00000000e+000, 8.86890173e-001, 0.00000000e+000]],
  [[0.00000000e+000, 9.80213106e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 8.89493585e-001],
   [6.25181735e-001, 8.14523757e-001, 0.00000000e+000 ... 6.05172694e-001, 9.98812258e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 5.93112819e-002 ... 9.45002079e-001, 8.01097870e-001, 5.61218500e-001],
   ...
   [7.35420465e-001, 4.63020176e-001, 0.00000000e+000 ... 8.23406398e-001, 0.00000000e+000, 0.00000000e+000],
   [9.83745635e-001, 7.94262290e-001, 0.00000000e+000 ... 9.95920718e-001, 8.52399170e-001, 0.00000000e+000],
   [2.17827573e-001, 9.27566051e-001, 1.03863314e-001 ... 0.00000000e+000, 8.86890173e-001, 0.00000000e+000]],
  [[0.00000000e+000, 9.80213106e-001, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 8.89493585e-001],
   [6.25181735e-001, 8.14523757e-001, 0.00000000e+000 ... 6.05172694e-001, 9.98812258e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 5.93112819e-002 ... 9.45002079e-001, 8.01097870e-001, 5.61218500e-001],
   ...
   [7.35420465e-001, 4.63020176e-001, 0.00000000e+000 ... 8.23406398e-001, 0.00000000e+000, 0.00000000e+000],
   [9.83745635e-001, 7.94262290e-001, 0.00000000e+000 ... 9.95920718e-001, 8.52399170e-001, 0.00000000e+000],
   [2.17827573e-001, 9.27566051e-001, 1.03863314e-001 ... 0.00000000e+000, 8.86890173e-001, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:223

analyse output arrays in iter:264

pre layer res:
10:reshape
{'name': 'reshape', 'output': array([[[[6.68422976e+08, 8.08405729e+10, 1.80968026e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216272e+08],
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         ...,
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         [6.68422912e+08, 8.08405729e+10, 1.80968026e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216272e+08]],

        [[6.68422976e+08, 8.08405729e+10, 1.80968026e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216272e+08],
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         ...,
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         [6.68422976e+08, 8.08405729e+10, 1.80968038e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216264e+08],
         [6.68422912e+08, 8.08405729e+10, 1.80968026e+09, ...,
          1.44759987e+09, 8.40762786e+11, 1.09216272e+08]],

        [[2.23043652e+01, 6.16472960e+00, 1.63187504e+01, ...,
          2.40997047e+01, 9.13193130e+00, 1.09883633e+01],
         [2.01823425e+01, 1.45345573e+01, 3.14487915e+01, ...,
          1.01671562e+01, 1.13274145e+01, 1.02628717e+01],
         [1.86793423e+01, 1.06880102e+01, 8.85688305e+00, ...,
          3.10201187e+01, 1.34431458e+01, 4.66168642e+00],
         ...,
         [2.01823425e+01, 1.45345573e+01, 3.14487915e+01, ...,
          1.01671562e+01, 1.13274145e+01, 1.02628717e+01],
         [1.86793423e+01, 1.06880102e+01, 8.85688305e+00, ...,
          3.10201187e+01, 1.34431458e+01, 4.66168642e+00],
         [1.41006756e+01, 1.09050140e+01, 2.32405624e+01, ...,
          1.34408731e+01, 1.54172611e+01, 1.16425056e+01]],

        ...,

        [[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [9], 'to': [23]}
tf node:
{'name': 'cos', 'output': array([[[[-0.26935154,  0.6939008 ,  0.5453068 , ...,  0.01259763,
          -0.9983484 , -0.94115937],
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         ...,
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         [-0.991571  ,  0.6939008 ,  0.5453068 , ...,  0.01259763,
          -0.9983484 , -0.94115937]],

        [[-0.26935154,  0.6939008 ,  0.5453068 , ...,  0.01259763,
          -0.9983484 , -0.94115937],
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         ...,
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         [-0.26935154,  0.6939008 , -0.982241  , ...,  0.01259763,
          -0.9983484 , -0.19742791],
         [-0.991571  ,  0.6939008 ,  0.5453068 , ...,  0.01259763,
          -0.9983484 , -0.94115937]],

        [[-0.9513474 ,  0.99299234, -0.8191969 , ...,  0.5122133 ,
          -0.957426  , -0.00721096],
         [ 0.23576893, -0.3870134 ,  0.99946   , ..., -0.73686284,
           0.3257834 , -0.66888106],
         [ 0.9855486 , -0.30273792, -0.8430351 , ...,  0.9226854 ,
           0.63963336, -0.05068084],
         ...,
         [ 0.23576893, -0.3870134 ,  0.99946   , ..., -0.73686284,
           0.3257834 , -0.66888106],
         [ 0.9855486 , -0.30273792, -0.8430351 , ...,  0.9226854 ,
           0.63963336, -0.05068084],
         [ 0.03648326, -0.09043652, -0.31587854, ...,  0.6413786 ,
          -0.95804286,  0.60274065]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [10], 'to': [3]}
ms node:
{'name': 'cos', 'output': array([[[[-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.971499  ],
         ...,
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.971499  ],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792]],

        [[-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.971499  ],
         ...,
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.971499  ],
         [-0.991571  ,  0.6939008 ,  0.22655937, ...,  0.71225166,
          -0.9983484 , -0.09316792]],

        [[-0.9513474 ,  0.99299234, -0.81919795, ...,  0.5122133 ,
          -0.957426  , -0.00721001],
         [ 0.23576891, -0.38701516,  0.9994599 , ..., -0.73686284,
           0.3257825 , -0.66888034],
         [ 0.9855486 , -0.30273792, -0.8430356 , ...,  0.92268467,
           0.63963336, -0.05068036],
         ...,
         [ 0.23576891, -0.38701516,  0.9994599 , ..., -0.73686284,
           0.3257825 , -0.66888034],
         [ 0.9855486 , -0.30273792, -0.8430356 , ...,  0.92268467,
           0.63963336, -0.05068036],
         [ 0.03648421, -0.09043652, -0.31587854, ...,  0.6413786 ,
          -0.95804286,  0.6027414 ]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': (1, 512, 16, 16), 'from': [10], 'to': [3]}
torch node:
{'name': 'cos', 'output': array([[[[-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         ...,
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  , -0.09316792]],

        [[-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         ...,
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  ,  0.99861085],
         [-0.26935154,  0.6939008 ,  0.22655937, ...,  0.01259763,
           0.680884  , -0.09316792]],

        [[-0.9513474 ,  0.99299234, -0.8191968 , ...,  0.51221   ,
          -0.957426  , -0.00721001],
         [ 0.23576893, -0.3870143 ,  0.99946   , ..., -0.7368615 ,
           0.3257825 , -0.66888106],
         [ 0.98554826, -0.302737  , -0.8430356 , ...,  0.9226854 ,
           0.63963336, -0.05068084],
         ...,
         [ 0.23576893, -0.3870143 ,  0.99946   , ..., -0.7368615 ,
           0.3257825 , -0.66888106],
         [ 0.98554826, -0.302737  , -0.8430356 , ...,  0.9226854 ,
           0.63963336, -0.05068084],
         [ 0.03648421, -0.09043652, -0.31587854, ...,  0.6413786 ,
          -0.9580426 ,  0.60274065]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 16, 16]), 'from': [10], 'to': [3]}

generate models:227

analyse the exceptions in iter:265
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 7.1305,  5.8559,  4.3278,  ...,  4.9017, 10.1213,  7.0156],
          [ 8.1722,  7.5845,  9.5101,  ..., 10.7410,  5.6364,  6.8764],
          [ 5.4877,  7.7354,  1.9779,  ...,  7.8971,  6.7415,  8.3360],
          ...,
          [ 3.0990,  7.9417,  4.9753,  ...,  6.9046,  7.6850,  8.5384],
          [ 5.4476,  7.0340,  3.5948,  ...,  5.4470,  5.9725,  8.5533],
          [ 7.1973,  8.1213,  2.6330,  ...,  3.1416,  6.8390,  7.3760]],

         [[ 7.1305,  5.8559,  4.3278,  ...,  4.9017, 10.1213,  7.0156],
          [ 8.1722,  7.5845,  9.5101,  ..., 10.7410,  5.6364,  6.8764],
          [ 5.4877,  7.7354,  1.9779,  ...,  7.8971,  6.7415,  8.3360],
          ...,
          [ 3.0990,  7.9417,  4.9753,  ...,  6.9046,  7.6850,  8.5384],
          [ 5.4476,  7.0340,  3.5948,  ...,  5.4470,  5.9725,  8.5533],
          [ 7.1973,  8.1213,  2.6330,  ...,  3.1416,  6.8390,  7.3760]],

         [[ 7.1305,  5.8559,  4.3278,  ...,  4.9017, 10.1213,  7.0156],
          [ 8.1722,  7.5845,  9.5101,  ..., 10.7410,  5.6364,  6.8764],
          [ 5.4877,  7.7354,  1.9779,  ...,  7.8971,  6.7415,  8.3360],
          ...,
          [ 3.0990,  7.9417,  4.9753,  ...,  6.9046,  7.6850,  8.5384],
          [ 5.4476,  7.0340,  3.5948,  ...,  5.4470,  5.9725,  8.5533],
          [ 7.1973,  8.1213,  2.6330,  ...,  3.1416,  6.8390,  7.3760]],

         ...,

         [[ 7.1305,  5.8559,  4.3278,  ...,  4.9017, 10.1213,  7.0156],
          [ 8.1722,  7.5845,  9.5101,  ..., 10.7410,  5.6364,  6.8764],
          [ 5.4877,  7.7354,  1.9779,  ...,  7.8971,  6.7415,  8.3360],
          ...,
          [ 3.0990,  7.9417,  4.9753,  ...,  6.9046,  7.6850,  8.5384],
          [ 5.4476,  7.0340,  3.5948,  ...,  5.4470,  5.9725,  8.5533],
          [ 7.1973,  8.1213,  2.6330,  ...,  3.1416,  6.8390,  7.3760]],

         [[ 7.1305,  5.8559,  4.3278,  ...,  4.9017, 10.1213,  7.0156],
          [ 8.1722,  7.5845,  9.5101,  ..., 10.7410,  5.6364,  6.8764],
          [ 5.4877,  7.7354,  1.9779,  ...,  7.8971,  6.7415,  8.3360],
          ...,
          [ 3.0990,  7.9417,  4.9753,  ...,  6.9046,  7.6850,  8.5384],
          [ 5.4476,  7.0340,  3.5948,  ...,  5.4470,  5.9725,  8.5533],
          [ 7.1973,  8.1213,  2.6330,  ...,  3.1416,  6.8390,  7.3760]],

         [[ 7.1305,  5.8559,  4.3278,  ...,  4.9017, 10.1213,  7.0156],
          [ 8.1722,  7.5845,  9.5101,  ..., 10.7410,  5.6364,  6.8764],
          [ 5.4877,  7.7354,  1.9779,  ...,  7.8971,  6.7415,  8.3360],
          ...,
          [ 3.0990,  7.9417,  4.9753,  ...,  6.9046,  7.6850,  8.5384],
          [ 5.4476,  7.0340,  3.5948,  ...,  5.4470,  5.9725,  8.5533],
          [ 7.1973,  8.1213,  2.6330,  ...,  3.1416,  6.8390,  7.3760]]]],
       grad_fn=<ConvolutionBackward0>)]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 256, 16, 16] to have 512 channels, but got 256 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 16, 16], dtype=Float32, value=
[[[[7.13050032e+000, 5.85589218e+000, 4.32781172e+000 ... 4.90165997e+000, 1.01212692e+001, 7.01557255e+000],
   [8.17219925e+000, 7.58451271e+000, 9.51009464e+000 ... 1.07409773e+001, 5.63637781e+000, 6.87637520e+000],
   [5.48767090e+000, 7.73535919e+000, 1.97793365e+000 ... 7.89708138e+000, 6.74145174e+000, 8.33602905e+000],
   ...
   [3.09899831e+000, 7.94170761e+000, 4.97526932e+000 ... 6.90456200e+000, 7.68500519e+000, 8.53838921e+000],
   [5.44755650e+000, 7.03396893e+000, 3.59476995e+000 ... 5.44701385e+000, 5.97252941e+000, 8.55325508e+000],
   [7.19726181e+000, 8.12134266e+000, 2.63295197e+000 ... 3.14156914e+000, 6.83897877e+000, 7.37601757e+000]],
  [[7.13050032e+000, 5.85589218e+000, 4.32781172e+000 ... 4.90165997e+000, 1.01212692e+001, 7.01557255e+000],
   [8.17219925e+000, 7.58451271e+000, 9.51009464e+000 ... 1.07409773e+001, 5.63637781e+000, 6.87637520e+000],
   [5.48767090e+000, 7.73535919e+000, 1.97793365e+000 ... 7.89708138e+000, 6.74145174e+000, 8.33602905e+000],
   ...
   [3.09899831e+000, 7.94170761e+000, 4.97526932e+000 ... 6.90456200e+000, 7.68500519e+000, 8.53838921e+000],
   [5.44755650e+000, 7.03396893e+000, 3.59476995e+000 ... 5.44701385e+000, 5.97252941e+000, 8.55325508e+000],
   [7.19726181e+000, 8.12134266e+000, 2.63295197e+000 ... 3.14156914e+000, 6.83897877e+000, 7.37601757e+000]],
  [[7.13050032e+000, 5.85589218e+000, 4.32781172e+000 ... 4.90165997e+000, 1.01212692e+001, 7.01557255e+000],
   [8.17219925e+000, 7.58451271e+000, 9.51009464e+000 ... 1.07409773e+001, 5.63637781e+000, 6.87637520e+000],
   [5.48767090e+000, 7.73535919e+000, 1.97793365e+000 ... 7.89708138e+000, 6.74145174e+000, 8.33602905e+000],
   ...
   [3.09899831e+000, 7.94170761e+000, 4.97526932e+000 ... 6.90456200e+000, 7.68500519e+000, 8.53838921e+000],
   [5.44755650e+000, 7.03396893e+000, 3.59476995e+000 ... 5.44701385e+000, 5.97252941e+000, 8.55325508e+000],
   [7.19726181e+000, 8.12134266e+000, 2.63295197e+000 ... 3.14156914e+000, 6.83897877e+000, 7.37601757e+000]],
  ...
  [[7.13050032e+000, 5.85589218e+000, 4.32781172e+000 ... 4.90165997e+000, 1.01212692e+001, 7.01557255e+000],
   [8.17219925e+000, 7.58451271e+000, 9.51009464e+000 ... 1.07409773e+001, 5.63637781e+000, 6.87637520e+000],
   [5.48767090e+000, 7.73535919e+000, 1.97793365e+000 ... 7.89708138e+000, 6.74145174e+000, 8.33602905e+000],
   ...
   [3.09899831e+000, 7.94170761e+000, 4.97526932e+000 ... 6.90456200e+000, 7.68500519e+000, 8.53838921e+000],
   [5.44755650e+000, 7.03396893e+000, 3.59476995e+000 ... 5.44701385e+000, 5.97252941e+000, 8.55325508e+000],
   [7.19726181e+000, 8.12134266e+000, 2.63295197e+000 ... 3.14156914e+000, 6.83897877e+000, 7.37601757e+000]],
  [[7.13050032e+000, 5.85589218e+000, 4.32781172e+000 ... 4.90165997e+000, 1.01212692e+001, 7.01557255e+000],
   [8.17219925e+000, 7.58451271e+000, 9.51009464e+000 ... 1.07409773e+001, 5.63637781e+000, 6.87637520e+000],
   [5.48767090e+000, 7.73535919e+000, 1.97793365e+000 ... 7.89708138e+000, 6.74145174e+000, 8.33602905e+000],
   ...
   [3.09899831e+000, 7.94170761e+000, 4.97526932e+000 ... 6.90456200e+000, 7.68500519e+000, 8.53838921e+000],
   [5.44755650e+000, 7.03396893e+000, 3.59476995e+000 ... 5.44701385e+000, 5.97252941e+000, 8.55325508e+000],
   [7.19726181e+000, 8.12134266e+000, 2.63295197e+000 ... 3.14156914e+000, 6.83897877e+000, 7.37601757e+000]],
  [[7.13050032e+000, 5.85589218e+000, 4.32781172e+000 ... 4.90165997e+000, 1.01212692e+001, 7.01557255e+000],
   [8.17219925e+000, 7.58451271e+000, 9.51009464e+000 ... 1.07409773e+001, 5.63637781e+000, 6.87637520e+000],
   [5.48767090e+000, 7.73535919e+000, 1.97793365e+000 ... 7.89708138e+000, 6.74145174e+000, 8.33602905e+000],
   ...
   [3.09899831e+000, 7.94170761e+000, 4.97526932e+000 ... 6.90456200e+000, 7.68500519e+000, 8.53838921e+000],
   [5.44755650e+000, 7.03396893e+000, 3.59476995e+000 ... 5.44701385e+000, 5.97252941e+000, 8.55325508e+000],
   [7.19726181e+000, 8.12134266e+000, 2.63295197e+000 ... 3.14156914e+000, 6.83897877e+000, 7.37601757e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:228

analyse output arrays in iter:268

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[-3.1246154 ,  0.04041259,  0.66941637, ..., -0.37384728,
           1.0104934 , -0.6147141 ],
         [-1.1409082 , -0.03869122,  0.51691806, ...,  1.6334177 ,
           3.046968  ,  1.7469616 ],
         [-0.9561059 ,  0.6768297 , -0.2289064 , ..., -0.3920828 ,
          -2.4446099 ,  0.29017985],
         ...,
         [-1.0025686 ,  1.9519855 , -0.21511173, ..., -1.2727678 ,
          -0.56463677, -0.3141067 ],
         [ 0.448444  ,  2.1900074 , -0.42676228, ..., -1.8365204 ,
           0.6494944 , -3.3422961 ],
         [-2.8451765 , -0.49535942, -2.0848565 , ..., -1.8472786 ,
           1.4195397 ,  2.18548   ]],

        [[-3.1246154 ,  0.04041259,  0.66941637, ..., -0.37384728,
           1.0104934 , -0.6147141 ],
         [-1.1409082 , -0.03869122,  0.51691806, ...,  1.6334177 ,
           3.046968  ,  1.7469616 ],
         [-0.9561059 ,  0.6768297 , -0.2289064 , ..., -0.3920828 ,
          -2.4446099 ,  0.29017985],
         ...,
         [-1.0025686 ,  1.9519855 , -0.21511173, ..., -1.2727678 ,
          -0.56463677, -0.3141067 ],
         [ 0.448444  ,  2.1900074 , -0.42676228, ..., -1.8365204 ,
           0.6494944 , -3.3422961 ],
         [-2.8451765 , -0.49535942, -2.0848565 , ..., -1.8472786 ,
           1.4195397 ,  2.18548   ]],

        [[-3.1246154 ,  0.04041259,  0.66941637, ..., -0.37384728,
           1.0104934 , -0.6147141 ],
         [-1.1409082 , -0.03869122,  0.51691806, ...,  1.6334177 ,
           3.046968  ,  1.7469616 ],
         [-0.9561059 ,  0.6768297 , -0.2289064 , ..., -0.3920828 ,
          -2.4446099 ,  0.29017985],
         ...,
         [-1.0025686 ,  1.9519855 , -0.21511173, ..., -1.2727678 ,
          -0.56463677, -0.3141067 ],
         [ 0.448444  ,  2.1900074 , -0.42676228, ..., -1.8365204 ,
           0.6494944 , -3.3422961 ],
         [-2.8451765 , -0.49535942, -2.0848565 , ..., -1.8472786 ,
           1.4195397 ,  2.18548   ]],

        ...,

        [[-3.1246154 ,  0.04041259,  0.66941637, ..., -0.37384728,
           1.0104934 , -0.6147141 ],
         [-1.1409082 , -0.03869122,  0.51691806, ...,  1.6334177 ,
           3.046968  ,  1.7469616 ],
         [-0.9561059 ,  0.6768297 , -0.2289064 , ..., -0.3920828 ,
          -2.4446099 ,  0.29017985],
         ...,
         [-1.0025686 ,  1.9519855 , -0.21511173, ..., -1.2727678 ,
          -0.56463677, -0.3141067 ],
         [ 0.448444  ,  2.1900074 , -0.42676228, ..., -1.8365204 ,
           0.6494944 , -3.3422961 ],
         [-2.8451765 , -0.49535942, -2.0848565 , ..., -1.8472786 ,
           1.4195397 ,  2.18548   ]],

        [[-3.1246154 ,  0.04041259,  0.66941637, ..., -0.37384728,
           1.0104934 , -0.6147141 ],
         [-1.1409082 , -0.03869122,  0.51691806, ...,  1.6334177 ,
           3.046968  ,  1.7469616 ],
         [-0.9561059 ,  0.6768297 , -0.2289064 , ..., -0.3920828 ,
          -2.4446099 ,  0.29017985],
         ...,
         [-1.0025686 ,  1.9519855 , -0.21511173, ..., -1.2727678 ,
          -0.56463677, -0.3141067 ],
         [ 0.448444  ,  2.1900074 , -0.42676228, ..., -1.8365204 ,
           0.6494944 , -3.3422961 ],
         [-2.8451765 , -0.49535942, -2.0848565 , ..., -1.8472786 ,
           1.4195397 ,  2.18548   ]],

        [[-3.1246154 ,  0.04041259,  0.66941637, ..., -0.37384728,
           1.0104934 , -0.6147141 ],
         [-1.1409082 , -0.03869122,  0.51691806, ...,  1.6334177 ,
           3.046968  ,  1.7469616 ],
         [-0.9561059 ,  0.6768297 , -0.2289064 , ..., -0.3920828 ,
          -2.4446099 ,  0.29017985],
         ...,
         [-1.0025686 ,  1.9519855 , -0.21511173, ..., -1.2727678 ,
          -0.56463677, -0.3141067 ],
         [ 0.448444  ,  2.1900074 , -0.42676228, ..., -1.8365204 ,
           0.6494944 , -3.3422961 ],
         [-2.8451765 , -0.49535942, -2.0848565 , ..., -1.8472786 ,
           1.4195397 ,  2.18548   ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'linear', 'output': array([[[[  0.72052  ,   0.72052  ,   0.72052  , ...,   0.72052  ,
            0.72052  ,   0.72052  ],
         [ 13.972305 ,  13.972305 ,  13.972305 , ...,  13.972305 ,
           13.972305 ,  13.972305 ],
         [-10.140747 , -10.140747 , -10.140747 , ..., -10.140747 ,
          -10.140747 , -10.140747 ],
         ...,
         [ -5.6014404,  -5.6014404,  -5.6014404, ...,  -5.6014404,
           -5.6014404,  -5.6014404],
         [ 17.965057 ,  17.965057 ,  17.965057 , ...,  17.965057 ,
           17.965057 ,  17.965057 ],
         [-12.178009 , -12.178009 , -12.178009 , ..., -12.178009 ,
          -12.178009 , -12.178009 ]],

        [[  0.72052  ,   0.72052  ,   0.72052  , ...,   0.72052  ,
            0.72052  ,   0.72052  ],
         [ 13.972305 ,  13.972305 ,  13.972305 , ...,  13.972305 ,
           13.972305 ,  13.972305 ],
         [-10.140747 , -10.140747 , -10.140747 , ..., -10.140747 ,
          -10.140747 , -10.140747 ],
         ...,
         [ -5.6014404,  -5.6014404,  -5.6014404, ...,  -5.6014404,
           -5.6014404,  -5.6014404],
         [ 17.965057 ,  17.965057 ,  17.965057 , ...,  17.965057 ,
           17.965057 ,  17.965057 ],
         [-12.178009 , -12.178009 , -12.178009 , ..., -12.178009 ,
          -12.178009 , -12.178009 ]],

        [[  0.72052  ,   0.72052  ,   0.72052  , ...,   0.72052  ,
            0.72052  ,   0.72052  ],
         [ 13.972305 ,  13.972305 ,  13.972305 , ...,  13.972305 ,
           13.972305 ,  13.972305 ],
         [-10.140747 , -10.140747 , -10.140747 , ..., -10.140747 ,
          -10.140747 , -10.140747 ],
         ...,
         [ -5.6014404,  -5.6014404,  -5.6014404, ...,  -5.6014404,
           -5.6014404,  -5.6014404],
         [ 17.965057 ,  17.965057 ,  17.965057 , ...,  17.965057 ,
           17.965057 ,  17.965057 ],
         [-12.178009 , -12.178009 , -12.178009 , ..., -12.178009 ,
          -12.178009 , -12.178009 ]],

        ...,

        [[  0.72052  ,   0.72052  ,   0.72052  , ...,   0.72052  ,
            0.72052  ,   0.72052  ],
         [ 13.972305 ,  13.972305 ,  13.972305 , ...,  13.972305 ,
           13.972305 ,  13.972305 ],
         [-10.140747 , -10.140747 , -10.140747 , ..., -10.140747 ,
          -10.140747 , -10.140747 ],
         ...,
         [ -5.6014404,  -5.6014404,  -5.6014404, ...,  -5.6014404,
           -5.6014404,  -5.6014404],
         [ 17.965057 ,  17.965057 ,  17.965057 , ...,  17.965057 ,
           17.965057 ,  17.965057 ],
         [-12.178009 , -12.178009 , -12.178009 , ..., -12.178009 ,
          -12.178009 , -12.178009 ]],

        [[  0.72052  ,   0.72052  ,   0.72052  , ...,   0.72052  ,
            0.72052  ,   0.72052  ],
         [ 13.972305 ,  13.972305 ,  13.972305 , ...,  13.972305 ,
           13.972305 ,  13.972305 ],
         [-10.140747 , -10.140747 , -10.140747 , ..., -10.140747 ,
          -10.140747 , -10.140747 ],
         ...,
         [ -5.6014404,  -5.6014404,  -5.6014404, ...,  -5.6014404,
           -5.6014404,  -5.6014404],
         [ 17.965057 ,  17.965057 ,  17.965057 , ...,  17.965057 ,
           17.965057 ,  17.965057 ],
         [-12.178009 , -12.178009 , -12.178009 , ..., -12.178009 ,
          -12.178009 , -12.178009 ]],

        [[  0.72052  ,   0.72052  ,   0.72052  , ...,   0.72052  ,
            0.72052  ,   0.72052  ],
         [ 13.972305 ,  13.972305 ,  13.972305 , ...,  13.972305 ,
           13.972305 ,  13.972305 ],
         [-10.140747 , -10.140747 , -10.140747 , ..., -10.140747 ,
          -10.140747 , -10.140747 ],
         ...,
         [ -5.6014404,  -5.6014404,  -5.6014404, ...,  -5.6014404,
           -5.6014404,  -5.6014404],
         [ 17.965057 ,  17.965057 ,  17.965057 , ...,  17.965057 ,
           17.965057 ,  17.965057 ],
         [-12.178009 , -12.178009 , -12.178009 , ..., -12.178009 ,
          -12.178009 , -12.178009 ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 100]), 'from': [0], 'to': [2, 16]}
ms node:
{'name': 'linear', 'output': array([[[[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        ...,

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966667  ,  17.966667  ,  17.966667  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181664  , -12.181664  , -12.181664  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]]]], dtype=float32), 'output_shape': (1, 512, 32, 100), 'from': [0], 'to': [2, 16]}
torch node:
{'name': 'linear', 'output': array([[[[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        ...,

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]],

        [[  0.72000676,   0.72000676,   0.72000676, ...,   0.7200066 ,
            0.7200066 ,   0.7200066 ],
         [ 13.970774  ,  13.970774  ,  13.970774  , ...,  13.970774  ,
           13.970774  ,  13.970774  ],
         [-10.139991  , -10.139991  , -10.139991  , ..., -10.139992  ,
          -10.139992  , -10.139992  ],
         ...,
         [ -5.60079   ,  -5.60079   ,  -5.60079   , ...,  -5.60079   ,
           -5.60079   ,  -5.60079   ],
         [ 17.966663  ,  17.966663  ,  17.966663  , ...,  17.966667  ,
           17.966667  ,  17.966667  ],
         [-12.181665  , -12.181665  , -12.181665  , ..., -12.181664  ,
          -12.181664  , -12.181664  ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 100]), 'from': [0], 'to': [2, 16]}

generate models:230

analyse output arrays in iter:273

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[ 3.0361636 ,  1.2286775 , -1.433228  , ..., -0.6620647 ,
           0.04852365, -0.07059516],
         [ 1.1632231 ,  2.3577228 , -0.37682113, ...,  2.1770284 ,
           0.3520831 , -1.0061221 ],
         [-1.7546535 , -0.7989733 ,  1.2318656 , ...,  0.549338  ,
          -2.5418403 ,  1.5342314 ],
         ...,
         [ 0.647466  , -0.25785157,  0.9584838 , ...,  0.6008004 ,
          -1.9052103 ,  1.8176469 ],
         [-0.01176324, -0.45805168, -0.8305431 , ..., -1.2689493 ,
          -2.9342194 ,  0.72893965],
         [-2.370926  , -0.8949828 ,  1.5115559 , ...,  1.8956344 ,
           1.9941163 , -1.9739505 ]],

        [[ 3.0361636 ,  1.2286775 , -1.433228  , ..., -0.6620647 ,
           0.04852365, -0.07059516],
         [ 1.1632231 ,  2.3577228 , -0.37682113, ...,  2.1770284 ,
           0.3520831 , -1.0061221 ],
         [-1.7546535 , -0.7989733 ,  1.2318656 , ...,  0.549338  ,
          -2.5418403 ,  1.5342314 ],
         ...,
         [ 0.647466  , -0.25785157,  0.9584838 , ...,  0.6008004 ,
          -1.9052103 ,  1.8176469 ],
         [-0.01176324, -0.45805168, -0.8305431 , ..., -1.2689493 ,
          -2.9342194 ,  0.72893965],
         [-2.370926  , -0.8949828 ,  1.5115559 , ...,  1.8956344 ,
           1.9941163 , -1.9739505 ]],

        [[ 3.0361636 ,  1.2286775 , -1.433228  , ..., -0.6620647 ,
           0.04852365, -0.07059516],
         [ 1.1632231 ,  2.3577228 , -0.37682113, ...,  2.1770284 ,
           0.3520831 , -1.0061221 ],
         [-1.7546535 , -0.7989733 ,  1.2318656 , ...,  0.549338  ,
          -2.5418403 ,  1.5342314 ],
         ...,
         [ 0.647466  , -0.25785157,  0.9584838 , ...,  0.6008004 ,
          -1.9052103 ,  1.8176469 ],
         [-0.01176324, -0.45805168, -0.8305431 , ..., -1.2689493 ,
          -2.9342194 ,  0.72893965],
         [-2.370926  , -0.8949828 ,  1.5115559 , ...,  1.8956344 ,
           1.9941163 , -1.9739505 ]],

        ...,

        [[ 3.0361636 ,  1.2286775 , -1.433228  , ..., -0.6620647 ,
           0.04852365, -0.07059516],
         [ 1.1632231 ,  2.3577228 , -0.37682113, ...,  2.1770284 ,
           0.3520831 , -1.0061221 ],
         [-1.7546535 , -0.7989733 ,  1.2318656 , ...,  0.549338  ,
          -2.5418403 ,  1.5342314 ],
         ...,
         [ 0.647466  , -0.25785157,  0.9584838 , ...,  0.6008004 ,
          -1.9052103 ,  1.8176469 ],
         [-0.01176324, -0.45805168, -0.8305431 , ..., -1.2689493 ,
          -2.9342194 ,  0.72893965],
         [-2.370926  , -0.8949828 ,  1.5115559 , ...,  1.8956344 ,
           1.9941163 , -1.9739505 ]],

        [[ 3.0361636 ,  1.2286775 , -1.433228  , ..., -0.6620647 ,
           0.04852365, -0.07059516],
         [ 1.1632231 ,  2.3577228 , -0.37682113, ...,  2.1770284 ,
           0.3520831 , -1.0061221 ],
         [-1.7546535 , -0.7989733 ,  1.2318656 , ...,  0.549338  ,
          -2.5418403 ,  1.5342314 ],
         ...,
         [ 0.647466  , -0.25785157,  0.9584838 , ...,  0.6008004 ,
          -1.9052103 ,  1.8176469 ],
         [-0.01176324, -0.45805168, -0.8305431 , ..., -1.2689493 ,
          -2.9342194 ,  0.72893965],
         [-2.370926  , -0.8949828 ,  1.5115559 , ...,  1.8956344 ,
           1.9941163 , -1.9739505 ]],

        [[ 3.0361636 ,  1.2286775 , -1.433228  , ..., -0.6620647 ,
           0.04852365, -0.07059516],
         [ 1.1632231 ,  2.3577228 , -0.37682113, ...,  2.1770284 ,
           0.3520831 , -1.0061221 ],
         [-1.7546535 , -0.7989733 ,  1.2318656 , ...,  0.549338  ,
          -2.5418403 ,  1.5342314 ],
         ...,
         [ 0.647466  , -0.25785157,  0.9584838 , ...,  0.6008004 ,
          -1.9052103 ,  1.8176469 ],
         [-0.01176324, -0.45805168, -0.8305431 , ..., -1.2689493 ,
          -2.9342194 ,  0.72893965],
         [-2.370926  , -0.8949828 ,  1.5115559 , ...,  1.8956344 ,
           1.9941163 , -1.9739505 ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 3986.3022 ,  3059.5654 ,  1448.9294 , ...,   563.43604,
            429.51855,  -346.16882],
         [ 2678.8606 ,  2382.8208 ,  2585.014  , ...,  -859.41705,
            194.86475,  -862.0654 ],
         [ 1147.1936 ,  1405.4229 ,  -781.63354, ..., -1767.5652 ,
           -196.99731, -1070.8665 ],
         ...,
         [ -866.9569 , -1794.0558 ,  1043.9783 , ..., -2546.9546 ,
            326.33618,   124.50867],
         [-1713.1671 ,  -873.7313 ,   397.23557, ..., -2161.799  ,
           -535.1559 , -1163.6027 ],
         [-1912.6752 , -1563.9879 ,  -529.4349 , ..., -1738.2092 ,
           -797.92474, -1118.786  ]],

        [[ 3986.3022 ,  3059.5654 ,  1448.9294 , ...,   563.43604,
            429.51855,  -346.16882],
         [ 2678.8606 ,  2382.8208 ,  2585.014  , ...,  -859.41705,
            194.86475,  -862.0654 ],
         [ 1147.1936 ,  1405.4229 ,  -781.63354, ..., -1767.5652 ,
           -196.99731, -1070.8665 ],
         ...,
         [ -866.9569 , -1794.0558 ,  1043.9783 , ..., -2546.9546 ,
            326.33618,   124.50867],
         [-1713.1671 ,  -873.7313 ,   397.23557, ..., -2161.799  ,
           -535.1559 , -1163.6027 ],
         [-1912.6752 , -1563.9879 ,  -529.4349 , ..., -1738.2092 ,
           -797.92474, -1118.786  ]],

        [[ 3986.3022 ,  3059.5654 ,  1448.9294 , ...,   563.43604,
            429.51855,  -346.16882],
         [ 2678.8606 ,  2382.8208 ,  2585.014  , ...,  -859.41705,
            194.86475,  -862.0654 ],
         [ 1147.1936 ,  1405.4229 ,  -781.63354, ..., -1767.5652 ,
           -196.99731, -1070.8665 ],
         ...,
         [ -866.9569 , -1794.0558 ,  1043.9783 , ..., -2546.9546 ,
            326.33618,   124.50867],
         [-1713.1671 ,  -873.7313 ,   397.23557, ..., -2161.799  ,
           -535.1559 , -1163.6027 ],
         [-1912.6752 , -1563.9879 ,  -529.4349 , ..., -1738.2092 ,
           -797.92474, -1118.786  ]],

        ...,

        [[ 3986.3022 ,  3059.5654 ,  1448.9294 , ...,   563.43604,
            429.51855,  -346.16882],
         [ 2678.8606 ,  2382.8208 ,  2585.014  , ...,  -859.41705,
            194.86475,  -862.0654 ],
         [ 1147.1936 ,  1405.4229 ,  -781.63354, ..., -1767.5652 ,
           -196.99731, -1070.8665 ],
         ...,
         [ -866.9569 , -1794.0558 ,  1043.9783 , ..., -2546.9546 ,
            326.33618,   124.50867],
         [-1713.1671 ,  -873.7313 ,   397.23557, ..., -2161.799  ,
           -535.1559 , -1163.6027 ],
         [-1912.6752 , -1563.9879 ,  -529.4349 , ..., -1738.2092 ,
           -797.92474, -1118.786  ]],

        [[ 3986.3022 ,  3059.5654 ,  1448.9294 , ...,   563.43604,
            429.51855,  -346.16882],
         [ 2678.8606 ,  2382.8208 ,  2585.014  , ...,  -859.41705,
            194.86475,  -862.0654 ],
         [ 1147.1936 ,  1405.4229 ,  -781.63354, ..., -1767.5652 ,
           -196.99731, -1070.8665 ],
         ...,
         [ -866.9569 , -1794.0558 ,  1043.9783 , ..., -2546.9546 ,
            326.33618,   124.50867],
         [-1713.1671 ,  -873.7313 ,   397.23557, ..., -2161.799  ,
           -535.1559 , -1163.6027 ],
         [-1912.6752 , -1563.9879 ,  -529.4349 , ..., -1738.2092 ,
           -797.92474, -1118.786  ]],

        [[ 3986.3022 ,  3059.5654 ,  1448.9294 , ...,   563.43604,
            429.51855,  -346.16882],
         [ 2678.8606 ,  2382.8208 ,  2585.014  , ...,  -859.41705,
            194.86475,  -862.0654 ],
         [ 1147.1936 ,  1405.4229 ,  -781.63354, ..., -1767.5652 ,
           -196.99731, -1070.8665 ],
         ...,
         [ -866.9569 , -1794.0558 ,  1043.9783 , ..., -2546.9546 ,
            326.33618,   124.50867],
         [-1713.1671 ,  -873.7313 ,   397.23557, ..., -2161.799  ,
           -535.1559 , -1163.6027 ],
         [-1912.6752 , -1563.9879 ,  -529.4349 , ..., -1738.2092 ,
           -797.92474, -1118.786  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 32, 32]), 'from': [0], 'to': [5]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 3986.3208 ,  3059.5774 ,  1448.913  , ...,   563.44214,
            429.49307,  -346.1686 ],
         [ 2678.865  ,  2382.8357 ,  2585.0085 , ...,  -859.4155 ,
            194.85806,  -862.0644 ],
         [ 1147.1862 ,  1405.4178 ,  -781.6408 , ..., -1767.555  ,
           -197.0176 , -1070.8652 ],
         ...,
         [ -866.9564 , -1794.0465 ,  1043.9985 , ..., -2546.9507 ,
            326.3678 ,   124.51734],
         [-1713.2072 ,  -873.7852 ,   397.22363, ..., -2161.7998 ,
           -535.13794, -1163.6111 ],
         [-1912.6912 , -1564.0118 ,  -529.3935 , ..., -1738.2307 ,
           -797.916  , -1118.7788 ]],

        [[ 3986.3208 ,  3059.5774 ,  1448.913  , ...,   563.44214,
            429.49307,  -346.1686 ],
         [ 2678.865  ,  2382.8357 ,  2585.0085 , ...,  -859.4155 ,
            194.85806,  -862.0644 ],
         [ 1147.1862 ,  1405.4178 ,  -781.6408 , ..., -1767.555  ,
           -197.0176 , -1070.8652 ],
         ...,
         [ -866.9564 , -1794.0465 ,  1043.9985 , ..., -2546.9507 ,
            326.3678 ,   124.51734],
         [-1713.2072 ,  -873.7852 ,   397.22363, ..., -2161.7998 ,
           -535.13794, -1163.6111 ],
         [-1912.6912 , -1564.0118 ,  -529.3935 , ..., -1738.2307 ,
           -797.916  , -1118.7788 ]],

        [[ 3986.3208 ,  3059.5774 ,  1448.913  , ...,   563.44214,
            429.49307,  -346.1686 ],
         [ 2678.865  ,  2382.8357 ,  2585.0085 , ...,  -859.4155 ,
            194.85806,  -862.0644 ],
         [ 1147.1862 ,  1405.4178 ,  -781.6408 , ..., -1767.555  ,
           -197.0176 , -1070.8652 ],
         ...,
         [ -866.9564 , -1794.0465 ,  1043.9985 , ..., -2546.9507 ,
            326.3678 ,   124.51734],
         [-1713.2072 ,  -873.7852 ,   397.22363, ..., -2161.7998 ,
           -535.13794, -1163.6111 ],
         [-1912.6912 , -1564.0118 ,  -529.3935 , ..., -1738.2307 ,
           -797.916  , -1118.7788 ]],

        ...,

        [[ 3986.3208 ,  3059.5774 ,  1448.913  , ...,   563.44214,
            429.49307,  -346.1686 ],
         [ 2678.865  ,  2382.8357 ,  2585.0085 , ...,  -859.4155 ,
            194.85806,  -862.0644 ],
         [ 1147.1862 ,  1405.4178 ,  -781.6408 , ..., -1767.555  ,
           -197.0176 , -1070.8652 ],
         ...,
         [ -866.9564 , -1794.0465 ,  1043.9985 , ..., -2546.9507 ,
            326.3678 ,   124.51734],
         [-1713.2072 ,  -873.7852 ,   397.22363, ..., -2161.7998 ,
           -535.13794, -1163.6111 ],
         [-1912.6912 , -1564.0118 ,  -529.3935 , ..., -1738.2307 ,
           -797.916  , -1118.7788 ]],

        [[ 3986.3208 ,  3059.5774 ,  1448.913  , ...,   563.44214,
            429.49307,  -346.1686 ],
         [ 2678.865  ,  2382.8357 ,  2585.0085 , ...,  -859.4155 ,
            194.85806,  -862.0644 ],
         [ 1147.1862 ,  1405.4178 ,  -781.6408 , ..., -1767.555  ,
           -197.0176 , -1070.8652 ],
         ...,
         [ -866.9564 , -1794.0465 ,  1043.9985 , ..., -2546.9507 ,
            326.3678 ,   124.51734],
         [-1713.2072 ,  -873.7852 ,   397.22363, ..., -2161.7998 ,
           -535.13794, -1163.6111 ],
         [-1912.6912 , -1564.0118 ,  -529.3935 , ..., -1738.2307 ,
           -797.916  , -1118.7788 ]],

        [[ 3986.3208 ,  3059.5774 ,  1448.913  , ...,   563.44214,
            429.49307,  -346.1686 ],
         [ 2678.865  ,  2382.8357 ,  2585.0085 , ...,  -859.4155 ,
            194.85806,  -862.0644 ],
         [ 1147.1862 ,  1405.4178 ,  -781.6408 , ..., -1767.555  ,
           -197.0176 , -1070.8652 ],
         ...,
         [ -866.9564 , -1794.0465 ,  1043.9985 , ..., -2546.9507 ,
            326.3678 ,   124.51734],
         [-1713.2072 ,  -873.7852 ,   397.22363, ..., -2161.7998 ,
           -535.13794, -1163.6111 ],
         [-1912.6912 , -1564.0118 ,  -529.3935 , ..., -1738.2307 ,
           -797.916  , -1118.7788 ]]]], dtype=float32), 'output_shape': (1, 128, 32, 32), 'from': [0], 'to': [5]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 3986.3315 ,  3059.5693 ,  1448.8916 , ...,   563.43506,
            429.48898,  -346.17072],
         [ 2678.854  ,  2382.813  ,  2584.9646 , ...,  -859.4182 ,
            194.8565 ,  -862.06396],
         [ 1147.1865 ,  1405.4032 ,  -781.63336, ..., -1767.5873 ,
           -197.01883, -1070.8572 ],
         ...,
         [ -866.97424, -1794.0377 ,  1044.0048 , ..., -2546.933  ,
            326.36926,   124.51805],
         [-1713.2014 ,  -873.7874 ,   397.2291 , ..., -2161.745  ,
           -535.1325 , -1163.6022 ],
         [-1912.6868 , -1564.0103 ,  -529.38556, ..., -1738.2072 ,
           -797.8989 , -1118.7659 ]],

        [[ 3986.3315 ,  3059.5693 ,  1448.8916 , ...,   563.43506,
            429.48898,  -346.17072],
         [ 2678.854  ,  2382.813  ,  2584.9646 , ...,  -859.4182 ,
            194.8565 ,  -862.06396],
         [ 1147.1865 ,  1405.4032 ,  -781.63336, ..., -1767.5873 ,
           -197.01883, -1070.8572 ],
         ...,
         [ -866.97424, -1794.0377 ,  1044.0048 , ..., -2546.933  ,
            326.36926,   124.51805],
         [-1713.2014 ,  -873.7874 ,   397.2291 , ..., -2161.745  ,
           -535.1325 , -1163.6022 ],
         [-1912.6868 , -1564.0103 ,  -529.38556, ..., -1738.2072 ,
           -797.8989 , -1118.7659 ]],

        [[ 3986.3315 ,  3059.5693 ,  1448.8916 , ...,   563.43506,
            429.48898,  -346.17072],
         [ 2678.854  ,  2382.813  ,  2584.9646 , ...,  -859.4182 ,
            194.8565 ,  -862.06396],
         [ 1147.1865 ,  1405.4032 ,  -781.63336, ..., -1767.5873 ,
           -197.01883, -1070.8572 ],
         ...,
         [ -866.97424, -1794.0377 ,  1044.0048 , ..., -2546.933  ,
            326.36926,   124.51805],
         [-1713.2014 ,  -873.7874 ,   397.2291 , ..., -2161.745  ,
           -535.1325 , -1163.6022 ],
         [-1912.6868 , -1564.0103 ,  -529.38556, ..., -1738.2072 ,
           -797.8989 , -1118.7659 ]],

        ...,

        [[ 3986.3315 ,  3059.5693 ,  1448.8916 , ...,   563.43506,
            429.48898,  -346.17072],
         [ 2678.854  ,  2382.813  ,  2584.9646 , ...,  -859.4182 ,
            194.8565 ,  -862.06396],
         [ 1147.1865 ,  1405.4032 ,  -781.63336, ..., -1767.5873 ,
           -197.01883, -1070.8572 ],
         ...,
         [ -866.97424, -1794.0377 ,  1044.0048 , ..., -2546.933  ,
            326.36926,   124.51805],
         [-1713.2014 ,  -873.7874 ,   397.2291 , ..., -2161.745  ,
           -535.1325 , -1163.6022 ],
         [-1912.6868 , -1564.0103 ,  -529.38556, ..., -1738.2072 ,
           -797.8989 , -1118.7659 ]],

        [[ 3986.3315 ,  3059.5693 ,  1448.8916 , ...,   563.43506,
            429.48898,  -346.17072],
         [ 2678.854  ,  2382.813  ,  2584.9646 , ...,  -859.4182 ,
            194.8565 ,  -862.06396],
         [ 1147.1865 ,  1405.4032 ,  -781.63336, ..., -1767.5873 ,
           -197.01883, -1070.8572 ],
         ...,
         [ -866.97424, -1794.0377 ,  1044.0048 , ..., -2546.933  ,
            326.36926,   124.51805],
         [-1713.2014 ,  -873.7874 ,   397.2291 , ..., -2161.745  ,
           -535.1325 , -1163.6022 ],
         [-1912.6868 , -1564.0103 ,  -529.38556, ..., -1738.2072 ,
           -797.8989 , -1118.7659 ]],

        [[ 3986.3315 ,  3059.5693 ,  1448.8916 , ...,   563.43506,
            429.48898,  -346.17072],
         [ 2678.854  ,  2382.813  ,  2584.9646 , ...,  -859.4182 ,
            194.8565 ,  -862.06396],
         [ 1147.1865 ,  1405.4032 ,  -781.63336, ..., -1767.5873 ,
           -197.01883, -1070.8572 ],
         ...,
         [ -866.97424, -1794.0377 ,  1044.0048 , ..., -2546.933  ,
            326.36926,   124.51805],
         [-1713.2014 ,  -873.7874 ,   397.2291 , ..., -2161.745  ,
           -535.1325 , -1163.6022 ],
         [-1912.6868 , -1564.0103 ,  -529.38556, ..., -1738.2072 ,
           -797.8989 , -1118.7659 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 32, 32]), 'from': [0], 'to': [5]}

pre layer res:
2:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[2.1491877e-09, 6.2010796e-09, 7.8124985e-02, ...,
          1.2127475e-09, 2.7939677e-09, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.1491877e-09, 6.2010796e-09, 7.8124985e-02, ...,
          1.2127475e-09, 2.7939677e-09, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.1491877e-09, 6.2010796e-09, 7.8124985e-02, ...,
          1.2127475e-09, 2.7939677e-09, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[2.1491877e-09, 6.2010796e-09, 7.8124985e-02, ...,
          1.2127475e-09, 2.7939677e-09, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.1491877e-09, 6.2010796e-09, 7.8124985e-02, ...,
          1.2127475e-09, 2.7939677e-09, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.1491877e-09, 6.2010796e-09, 7.8124985e-02, ...,
          1.2127475e-09, 2.7939677e-09, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [16], 'to': [3]}
tf node:
{'name': 'conv2d', 'output': array([[[[2.3528928e-07, 7.2321797e-07, 9.1093740e+00, ...,
          9.4594292e-08, 2.3102291e-07, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.3528928e-07, 7.2321797e-07, 9.1093740e+00, ...,
          9.4594292e-08, 2.3102291e-07, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.3528928e-07, 7.2321797e-07, 9.1093740e+00, ...,
          9.4594292e-08, 2.3102291e-07, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[2.3528928e-07, 7.2321797e-07, 9.1093740e+00, ...,
          9.4594292e-08, 2.3102291e-07, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.3528928e-07, 7.2321797e-07, 9.1093740e+00, ...,
          9.4594292e-08, 2.3102291e-07, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.3528928e-07, 7.2321797e-07, 9.1093740e+00, ...,
          9.4594292e-08, 2.3102291e-07, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [2], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        ...,

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [2], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        ...,

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]],

        [[0.      , 0.      , 9.109375, ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         ...,
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ],
         [0.      , 0.      , 0.      , ..., 0.      , 0.      ,
          0.      ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [2], 'to': []}

generate models:234

analyse output arrays in iter:277

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[ 6.7159424 ,  6.7159424 ,  6.7159424 , ...,  6.7159424 ,
           6.7159424 ,  6.7159424 ],
         [ 5.999897  ,  5.999897  ,  5.999897  , ...,  5.999897  ,
           5.999897  ,  5.999897  ],
         [ 3.386963  ,  3.386963  ,  3.386963  , ...,  3.386963  ,
           3.386963  ,  3.386963  ],
         ...,
         [-7.7582397 , -7.7582397 , -7.7582397 , ..., -7.7582397 ,
          -7.7582397 , -7.7582397 ],
         [-4.8217926 , -4.8217926 , -4.8217926 , ..., -4.8217926 ,
          -4.8217926 , -4.8217926 ],
         [ 9.862495  ,  9.862495  ,  9.862495  , ...,  9.862495  ,
           9.862495  ,  9.862495  ]],

        [[-8.180077  , -8.180077  , -8.180077  , ..., -8.180077  ,
          -8.180077  , -8.180077  ],
         [ 4.8195715 ,  4.8195715 ,  4.8195715 , ...,  4.8195715 ,
           4.8195715 ,  4.8195715 ],
         [-4.733719  , -4.733719  , -4.733719  , ..., -4.733719  ,
          -4.733719  , -4.733719  ],
         ...,
         [ 6.6779175 ,  6.6779175 ,  6.6779175 , ...,  6.6779175 ,
           6.6779175 ,  6.6779175 ],
         [ 2.0448914 ,  2.0448914 ,  2.0448914 , ...,  2.0448914 ,
           2.0448914 ,  2.0448914 ],
         [-7.598503  , -7.598503  , -7.598503  , ..., -7.598503  ,
          -7.598503  , -7.598503  ]],

        [[15.352707  , 15.352707  , 15.352707  , ..., 15.352707  ,
          15.352707  , 15.352707  ],
         [ 3.1176147 ,  3.1176147 ,  3.1176147 , ...,  3.1176147 ,
           3.1176147 ,  3.1176147 ],
         [ 1.6105347 ,  1.6105347 ,  1.6105347 , ...,  1.6105347 ,
           1.6105347 ,  1.6105347 ],
         ...,
         [-0.70562744, -0.70562744, -0.70562744, ..., -0.70562744,
          -0.70562744, -0.70562744],
         [-1.8292847 , -1.8292847 , -1.8292847 , ..., -1.8292847 ,
          -1.8292847 , -1.8292847 ],
         [-3.6218872 , -3.6218872 , -3.6218872 , ..., -3.6218872 ,
          -3.6218872 , -3.6218872 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [1]}
ms node:
{'name': 'linear', 'output': array([[[[ 6.7169695,  6.7169695,  6.7169695, ...,  6.716969 ,
           6.716969 ,  6.716969 ],
         [ 5.998341 ,  5.998341 ,  5.998341 , ...,  5.9983406,
           5.9983406,  5.9983406],
         [ 3.3897576,  3.3897576,  3.3897576, ...,  3.3897562,
           3.3897562,  3.3897562],
         ...,
         [-7.759504 , -7.759504 , -7.759504 , ..., -7.759504 ,
          -7.759504 , -7.759504 ],
         [-4.821119 , -4.821119 , -4.821119 , ..., -4.8211193,
          -4.8211193, -4.8211193],
         [ 9.862394 ,  9.862394 ,  9.862394 , ...,  9.862394 ,
           9.862394 ,  9.862394 ]],

        [[-8.182623 , -8.182623 , -8.182623 , ..., -8.182625 ,
          -8.182625 , -8.182625 ],
         [ 4.818205 ,  4.818205 ,  4.818205 , ...,  4.818205 ,
           4.818205 ,  4.818205 ],
         [-4.7353745, -4.7353745, -4.7353745, ..., -4.735375 ,
          -4.735375 , -4.735375 ],
         ...,
         [ 6.678241 ,  6.678241 ,  6.678241 , ...,  6.6782413,
           6.6782413,  6.6782413],
         [ 2.0461745,  2.0461745,  2.0461745, ...,  2.0461738,
           2.0461738,  2.0461738],
         [-7.597991 , -7.597991 , -7.597991 , ..., -7.59799  ,
          -7.59799  , -7.59799  ]],

        [[15.352826 , 15.352826 , 15.352826 , ..., 15.352825 ,
          15.352825 , 15.352825 ],
         [ 3.1173444,  3.1173444,  3.1173444, ...,  3.1173444,
           3.1173444,  3.1173444],
         [ 1.6097553,  1.6097553,  1.6097553, ...,  1.6097555,
           1.6097555,  1.6097555],
         ...,
         [-0.7073289, -0.7073289, -0.7073289, ..., -0.7073288,
          -0.7073288, -0.7073288],
         [-1.8304834, -1.8304834, -1.8304834, ..., -1.8304836,
          -1.8304836, -1.8304836],
         [-3.620946 , -3.620946 , -3.620946 , ..., -3.620946 ,
          -3.620946 , -3.620946 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [1]}
torch node:
{'name': 'linear', 'output': array([[[[ 6.7169695,  6.7169695,  6.7169695, ...,  6.716969 ,
           6.716969 ,  6.716969 ],
         [ 5.998341 ,  5.998341 ,  5.998341 , ...,  5.9983406,
           5.9983406,  5.9983406],
         [ 3.3897576,  3.3897576,  3.3897576, ...,  3.3897562,
           3.3897562,  3.3897562],
         ...,
         [-7.759504 , -7.759504 , -7.759504 , ..., -7.759504 ,
          -7.759504 , -7.759504 ],
         [-4.821119 , -4.821119 , -4.821119 , ..., -4.8211193,
          -4.8211193, -4.8211193],
         [ 9.862394 ,  9.862394 ,  9.862394 , ...,  9.862394 ,
           9.862394 ,  9.862394 ]],

        [[-8.182623 , -8.182623 , -8.182623 , ..., -8.182625 ,
          -8.182625 , -8.182625 ],
         [ 4.818205 ,  4.818205 ,  4.818205 , ...,  4.818205 ,
           4.818205 ,  4.818205 ],
         [-4.7353745, -4.7353745, -4.7353745, ..., -4.735375 ,
          -4.735375 , -4.735375 ],
         ...,
         [ 6.678241 ,  6.678241 ,  6.678241 , ...,  6.6782413,
           6.6782413,  6.6782413],
         [ 2.0461745,  2.0461745,  2.0461745, ...,  2.0461738,
           2.0461738,  2.0461738],
         [-7.597991 , -7.597991 , -7.597991 , ..., -7.59799  ,
          -7.59799  , -7.59799  ]],

        [[15.352826 , 15.352826 , 15.352826 , ..., 15.352825 ,
          15.352825 , 15.352825 ],
         [ 3.1173444,  3.1173444,  3.1173444, ...,  3.1173444,
           3.1173444,  3.1173444],
         [ 1.6097553,  1.6097553,  1.6097553, ...,  1.6097555,
           1.6097555,  1.6097555],
         ...,
         [-0.7073289, -0.7073289, -0.7073289, ..., -0.7073288,
          -0.7073288, -0.7073288],
         [-1.8304834, -1.8304834, -1.8304834, ..., -1.8304836,
          -1.8304836, -1.8304836],
         [-3.620946 , -3.620946 , -3.620946 , ..., -3.620946 ,
          -3.620946 , -3.620946 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [1]}

generate models:238

analyse the exceptions in iter:279
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[1.8772, 1.5039, 1.7816, 1.7477, 0.8388, 1.0358, 1.7120, 2.6329],
          [1.2780, 1.8355, 2.3793, 1.4537, 1.8991, 2.1159, 2.6740, 1.2330],
          [1.9797, 1.0002, 1.2143, 1.0688, 2.1602, 2.4712, 1.4244, 1.5255],
          [2.1952, 3.0284, 1.5167, 1.4784, 3.0090, 0.7383, 2.4206, 1.4289],
          [2.1368, 2.8065, 1.8850, 1.9589, 1.6543, 2.2924, 2.2285, 2.0001],
          [1.5587, 2.1714, 1.0736, 1.4897, 2.1479, 1.6563, 2.4202, 1.2724],
          [2.9575, 1.6825, 1.2442, 1.5179, 1.8752, 1.1352, 1.7900, 1.8677],
          [2.0171, 0.8928, 2.7111, 1.7365, 1.4764, 1.6770, 2.0423, 1.3769]],

         [[2.2611, 2.3118, 2.3265, 2.1183, 1.1513, 1.4841, 2.1162, 3.0843],
          [1.2900, 1.9255, 2.2209, 2.5691, 1.0928, 2.5508, 2.2565, 1.9486],
          [2.2569, 1.6037, 0.7962, 1.4315, 2.2991, 1.8348, 1.4957, 1.8666],
          [1.2026, 1.2008, 1.8489, 1.9090, 2.4954, 1.4831, 1.8416, 0.7767],
          [1.5348, 1.4308, 1.5140, 2.3378, 1.1015, 2.3367, 1.5707, 1.2719],
          [2.7046, 1.5558, 1.5492, 1.4535, 2.0558, 2.4152, 1.2911, 2.2397],
          [1.1911, 0.5306, 1.6667, 1.5030, 1.6813, 1.6999, 1.0253, 1.9687],
          [2.1706, 0.9583, 2.1347, 0.9908, 1.8198, 2.3265, 1.7572, 1.0263]],

         [[1.3278, 1.8069, 2.3757, 1.3669, 1.4511, 1.9236, 3.0081, 1.5908],
          [1.3837, 1.5438, 1.3397, 2.0677, 1.4389, 1.2007, 0.6140, 1.7780],
          [1.4156, 1.5279, 0.9437, 0.9460, 1.6430, 2.3632, 1.5190, 1.6703],
          [1.1041, 1.8086, 1.8353, 1.1080, 1.8899, 1.5573, 1.4205, 1.5113],
          [1.7396, 0.8470, 1.7704, 1.5124, 1.6816, 2.3915, 2.6959, 2.2137],
          [1.6480, 2.4002, 1.9219, 1.5643, 1.6795, 1.7447, 1.0565, 2.3967],
          [1.3257, 1.8465, 1.5651, 2.0026, 2.2389, 1.3023, 1.4991, 0.9669],
          [1.3888, 1.7984, 1.8097, 0.9652, 1.2713, 1.4371, 1.9350, 1.5236]]]],
       grad_fn=<ReshapeAliasBackward0>)]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 8, 8] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 8, 8], dtype=Float32, value=
[[[[1.87722611e+000, 1.50394106e+000, 1.78157341e+000 ... 1.03583193e+000, 1.71203244e+000, 2.63294101e+000],
   [1.27799189e+000, 1.83549631e+000, 2.37934828e+000 ... 2.11590290e+000, 2.67399049e+000, 1.23304284e+000],
   [1.97970665e+000, 1.00022829e+000, 1.21433115e+000 ... 2.47121215e+000, 1.42443502e+000, 1.52553976e+000],
   ...
   [1.55872297e+000, 2.17143273e+000, 1.07357025e+000 ... 1.65631306e+000, 2.42023396e+000, 1.27239108e+000],
   [2.95753884e+000, 1.68245745e+000, 1.24416304e+000 ... 1.13521934e+000, 1.78995359e+000, 1.86774623e+000],
   [2.01707983e+000, 8.92796576e-001, 2.71106720e+000 ... 1.67695928e+000, 2.04227948e+000, 1.37686074e+000]],
  [[2.26108217e+000, 2.31178617e+000, 2.32654953e+000 ... 1.48413849e+000, 2.11618567e+000, 3.08428907e+000],
   [1.29001904e+000, 1.92551935e+000, 2.22087264e+000 ... 2.55081606e+000, 2.25650883e+000, 1.94863153e+000],
   [2.25692225e+000, 1.60374284e+000, 7.96226680e-001 ... 1.83476377e+000, 1.49567759e+000, 1.86655045e+000],
   ...
   [2.70456243e+000, 1.55577683e+000, 1.54915047e+000 ... 2.41517878e+000, 1.29114723e+000, 2.23971820e+000],
   [1.19113553e+000, 5.30642390e-001, 1.66674674e+000 ... 1.69986022e+000, 1.02527952e+000, 1.96869707e+000],
   [2.17055702e+000, 9.58288848e-001, 2.13470912e+000 ... 2.32645917e+000, 1.75721908e+000, 1.02629542e+000]],
  [[1.32780385e+000, 1.80693364e+000, 2.37567472e+000 ... 1.92362678e+000, 3.00814390e+000, 1.59082174e+000],
   [1.38372171e+000, 1.54380393e+000, 1.33965361e+000 ... 1.20069885e+000, 6.13966405e-001, 1.77795780e+000],
   [1.41564989e+000, 1.52791989e+000, 9.43666160e-001 ... 2.36318469e+000, 1.51901186e+000, 1.67027617e+000],
   ...
   [1.64804363e+000, 2.40024948e+000, 1.92187703e+000 ... 1.74472344e+000, 1.05647969e+000, 2.39666533e+000],
   [1.32569504e+000, 1.84654951e+000, 1.56508279e+000 ... 1.30227613e+000, 1.49907875e+000, 9.66912568e-001],
   [1.38879097e+000, 1.79837656e+000, 1.80969226e+000 ... 1.43707144e+000, 1.93500781e+000, 1.52363026e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:240

analyse the exceptions in iter:288
torch exception:
{'id': 6, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          ...,
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf]],

         [[inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          ...,
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf]],

         [[inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          ...,
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf]],

         ...,

         [[inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          ...,
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf]],

         [[inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          ...,
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf]],

         [[inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          ...,
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf],
          [inf, inf, inf,  ..., inf, inf, inf]]]], grad_fn=<AddBackward0>)]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 64, 32, 100] to have 512 channels, but got 64 channels instead
mindspore exception:
{'id': 6, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 64, 32, 100], dtype=Float32, value=
[[[[            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   ...
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf]],
  [[            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   ...
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf]],
  [[            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   ...
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf]],
  ...
  [[            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   ...
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf]],
  [[            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   ...
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf]],
  [[            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   ...
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf],
   [            inf,             inf,             inf ...             inf,             inf,             inf]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 64, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:248

analyse output arrays in iter:293

pre layer res:
4:sin
{'name': 'sin', 'output': array([[[[-0.5629285 ,  0.99687827,  0.7003524 , ..., -0.99407387,
           0.9676164 , -0.6829667 ],
         [ 0.9966304 ,  0.8978604 , -0.6137632 , ...,  0.51143754,
          -0.899389  , -0.34877017],
         [ 0.47218812,  0.9744827 , -0.24802728, ...,  0.20525509,
           0.31981027,  0.5087375 ],
         ...,
         [-0.8823821 , -0.0502698 , -0.67812186, ...,  0.9825125 ,
           0.999015  , -0.56609064],
         [-0.97886294,  0.5775286 , -0.04383685, ..., -0.4770639 ,
           0.16060548, -0.202889  ],
         [-0.19166405, -0.3563462 , -0.12468816, ...,  0.01034027,
           0.9993365 ,  0.7010124 ]],

        [[ 0.47420752, -0.73610157,  0.93485045, ...,  0.08372605,
          -0.65799737, -0.56011784],
         [-0.5275215 , -0.10687687, -0.6816028 , ..., -0.14043766,
          -0.5681909 , -0.34618786],
         [ 0.6731216 , -0.7563375 ,  0.4420692 , ...,  0.678136  ,
           0.41530433,  0.9966407 ],
         ...,
         [-0.6651157 ,  0.9425797 ,  0.9856021 , ...,  0.6393032 ,
           0.9996606 ,  0.28290415],
         [-0.68296707,  0.5087203 ,  0.91719145, ..., -0.2116635 ,
           0.88708365,  0.737354  ],
         [ 0.44555497,  0.81580424, -0.99961764, ..., -0.9844547 ,
           0.6842697 ,  0.48378167]],

        [[ 0.99662596, -0.71388125,  0.7494951 , ...,  0.95653266,
          -0.7546551 ,  0.44560492],
         [ 0.4886318 ,  0.24717015,  0.7270781 , ...,  0.60887855,
          -0.6434061 , -0.70077425],
         [ 0.11731086,  0.8831442 , -0.73085594, ...,  0.9468657 ,
           0.94201195,  0.8158539 ],
         ...,
         [ 0.9488655 ,  0.06251703,  0.89014906, ..., -0.42212746,
          -0.289373  ,  0.2037059 ],
         [ 0.97110623, -0.46858332, -0.6537371 , ..., -0.7042867 ,
           0.5989747 ,  0.6698121 ],
         [-0.15322798, -0.4247687 ,  0.24727583, ..., -0.9550228 ,
          -0.5340673 , -0.8370434 ]],

        ...,

        [[ 0.47420752, -0.73610157,  0.93485045, ...,  0.08372605,
          -0.65799737, -0.56011784],
         [-0.5275215 , -0.10687687, -0.6816028 , ..., -0.14043766,
          -0.5681909 , -0.34618786],
         [ 0.6731216 , -0.7563375 ,  0.4420692 , ...,  0.678136  ,
           0.41530433,  0.9966407 ],
         ...,
         [-0.6651157 ,  0.9425797 ,  0.9856021 , ...,  0.6393032 ,
           0.9996606 ,  0.28290415],
         [-0.68296707,  0.5087203 ,  0.91719145, ..., -0.2116635 ,
           0.88708365,  0.737354  ],
         [ 0.44555497,  0.81580424, -0.99961764, ..., -0.9844547 ,
           0.6842697 ,  0.48378167]],

        [[ 0.99662596, -0.71388125,  0.7494951 , ...,  0.95653266,
          -0.7546551 ,  0.44560492],
         [ 0.4886318 ,  0.24717015,  0.7270781 , ...,  0.60887855,
          -0.6434061 , -0.70077425],
         [ 0.11731086,  0.8831442 , -0.73085594, ...,  0.9468657 ,
           0.94201195,  0.8158539 ],
         ...,
         [ 0.9488655 ,  0.06251703,  0.89014906, ..., -0.42212746,
          -0.289373  ,  0.2037059 ],
         [ 0.97110623, -0.46858332, -0.6537371 , ..., -0.7042867 ,
           0.5989747 ,  0.6698121 ],
         [-0.15322798, -0.4247687 ,  0.24727583, ..., -0.9550228 ,
          -0.5340673 , -0.8370434 ]],

        [[-0.2909481 , -0.9867365 , -0.99937874, ...,  0.24330844,
           0.81672215,  0.8573005 ],
         [-0.21323735,  0.34863263, -0.34556597, ..., -0.8488095 ,
           0.8661296 , -0.4079663 ],
         [-0.88172895,  0.89276767,  0.8716677 , ...,  0.6307845 ,
           0.43860856, -0.9762893 ],
         ...,
         [-0.54792494, -0.68031746,  0.9923053 , ...,  0.6827828 ,
          -0.91815734, -0.6845164 ],
         [-0.34877017,  0.33946157, -0.98057115, ...,  0.43725178,
           0.78288376,  0.9963632 ],
         [-0.70081437,  0.17876619, -0.04096917, ..., -0.46749276,
          -0.97919106,  0.79927003]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [3]}
tf node:
{'name': 'linear', 'output': array([[[[-1.5913086 , -1.5913086 , -1.5913086 , ..., -1.5913086 ,
          -1.5913086 , -1.5913086 ],
         [ 1.7388306 ,  1.7388306 ,  1.7388306 , ...,  1.7388306 ,
           1.7388306 ,  1.7388306 ],
         [ 1.7201538 ,  1.7201538 ,  1.7201538 , ...,  1.7201538 ,
           1.7201538 ,  1.7201538 ],
         ...,
         [-1.1068039 , -1.1068039 , -1.1068039 , ..., -1.1068039 ,
          -1.1068039 , -1.1068039 ],
         [-0.91882324, -0.91882324, -0.91882324, ..., -0.91882324,
          -0.91882324, -0.91882324],
         [ 1.9912796 ,  1.9912796 ,  1.9912796 , ...,  1.9912796 ,
           1.9912796 ,  1.9912796 ]],

        [[ 0.02115059,  0.02115059,  0.02115059, ...,  0.02115059,
           0.02115059,  0.02115059],
         [-2.9956665 , -2.9956665 , -2.9956665 , ..., -2.9956665 ,
          -2.9956665 , -2.9956665 ],
         [ 4.368164  ,  4.368164  ,  4.368164  , ...,  4.368164  ,
           4.368164  ,  4.368164  ],
         ...,
         [ 5.4211426 ,  5.4211426 ,  5.4211426 , ...,  5.4211426 ,
           5.4211426 ,  5.4211426 ],
         [-1.9760742 , -1.9760742 , -1.9760742 , ..., -1.9760742 ,
          -1.9760742 , -1.9760742 ],
         [ 1.477417  ,  1.477417  ,  1.477417  , ...,  1.477417  ,
           1.477417  ,  1.477417  ]],

        [[ 2.9506836 ,  2.9506836 ,  2.9506836 , ...,  2.9506836 ,
           2.9506836 ,  2.9506836 ],
         [ 0.27575684,  0.27575684,  0.27575684, ...,  0.27575684,
           0.27575684,  0.27575684],
         [ 1.2007751 ,  1.2007751 ,  1.2007751 , ...,  1.2007751 ,
           1.2007751 ,  1.2007751 ],
         ...,
         [ 2.8748932 ,  2.8748932 ,  2.8748932 , ...,  2.8748932 ,
           2.8748932 ,  2.8748932 ],
         [-1.6977539 , -1.6977539 , -1.6977539 , ..., -1.6977539 ,
          -1.6977539 , -1.6977539 ],
         [ 2.2823486 ,  2.2823486 ,  2.2823486 , ...,  2.2823486 ,
           2.2823486 ,  2.2823486 ]],

        ...,

        [[ 0.02115059,  0.02115059,  0.02115059, ...,  0.02115059,
           0.02115059,  0.02115059],
         [-2.9956665 , -2.9956665 , -2.9956665 , ..., -2.9956665 ,
          -2.9956665 , -2.9956665 ],
         [ 4.368164  ,  4.368164  ,  4.368164  , ...,  4.368164  ,
           4.368164  ,  4.368164  ],
         ...,
         [ 5.4211426 ,  5.4211426 ,  5.4211426 , ...,  5.4211426 ,
           5.4211426 ,  5.4211426 ],
         [-1.9760742 , -1.9760742 , -1.9760742 , ..., -1.9760742 ,
          -1.9760742 , -1.9760742 ],
         [ 1.477417  ,  1.477417  ,  1.477417  , ...,  1.477417  ,
           1.477417  ,  1.477417  ]],

        [[ 2.9506836 ,  2.9506836 ,  2.9506836 , ...,  2.9506836 ,
           2.9506836 ,  2.9506836 ],
         [ 0.27575684,  0.27575684,  0.27575684, ...,  0.27575684,
           0.27575684,  0.27575684],
         [ 1.2007751 ,  1.2007751 ,  1.2007751 , ...,  1.2007751 ,
           1.2007751 ,  1.2007751 ],
         ...,
         [ 2.8748932 ,  2.8748932 ,  2.8748932 , ...,  2.8748932 ,
           2.8748932 ,  2.8748932 ],
         [-1.6977539 , -1.6977539 , -1.6977539 , ..., -1.6977539 ,
          -1.6977539 , -1.6977539 ],
         [ 2.2823486 ,  2.2823486 ,  2.2823486 , ...,  2.2823486 ,
           2.2823486 ,  2.2823486 ]],

        [[-5.1105957 , -5.1105957 , -5.1105957 , ..., -5.1105957 ,
          -5.1105957 , -5.1105957 ],
         [ 0.5805664 ,  0.5805664 ,  0.5805664 , ...,  0.5805664 ,
           0.5805664 ,  0.5805664 ],
         [-0.69677734, -0.69677734, -0.69677734, ..., -0.69677734,
          -0.69677734, -0.69677734],
         ...,
         [ 0.44140625,  0.44140625,  0.44140625, ...,  0.44140625,
           0.44140625,  0.44140625],
         [-2.2546387 , -2.2546387 , -2.2546387 , ..., -2.2546387 ,
          -2.2546387 , -2.2546387 ],
         [-1.8693542 , -1.8693542 , -1.8693542 , ..., -1.8693542 ,
          -1.8693542 , -1.8693542 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 100]), 'from': [4], 'to': []}
ms node:
{'name': 'linear', 'output': array([[[[-1.590617  , -1.590617  , -1.590617  , ..., -1.5906167 ,
          -1.5906167 , -1.5906167 ],
         [ 1.7390783 ,  1.7390783 ,  1.7390783 , ...,  1.7390778 ,
           1.7390778 ,  1.7390778 ],
         [ 1.7199614 ,  1.7199614 ,  1.7199614 , ...,  1.7199616 ,
           1.7199616 ,  1.7199616 ],
         ...,
         [-1.1064541 , -1.1064541 , -1.1064541 , ..., -1.1064539 ,
          -1.1064539 , -1.1064539 ],
         [-0.9181473 , -0.9181473 , -0.9181473 , ..., -0.9181473 ,
          -0.9181473 , -0.9181473 ],
         [ 1.9912457 ,  1.9912457 ,  1.9912457 , ...,  1.9912454 ,
           1.9912454 ,  1.9912454 ]],

        [[ 0.02110672,  0.02110672,  0.02110672, ...,  0.02110672,
           0.02110672,  0.02110672],
         [-2.9951677 , -2.9951677 , -2.9951677 , ..., -2.9951677 ,
          -2.9951677 , -2.9951677 ],
         [ 4.3682165 ,  4.3682165 ,  4.3682165 , ...,  4.3682165 ,
           4.3682165 ,  4.3682165 ],
         ...,
         [ 5.4211307 ,  5.4211307 ,  5.4211307 , ...,  5.421131  ,
           5.421131  ,  5.421131  ],
         [-1.9763787 , -1.9763787 , -1.9763787 , ..., -1.9763789 ,
          -1.9763789 , -1.9763789 ],
         [ 1.4769149 ,  1.4769149 ,  1.4769149 , ...,  1.4769149 ,
           1.4769149 ,  1.4769149 ]],

        [[ 2.95113   ,  2.95113   ,  2.95113   , ...,  2.9511304 ,
           2.9511304 ,  2.9511304 ],
         [ 0.27647054,  0.27647054,  0.27647054, ...,  0.2764705 ,
           0.2764705 ,  0.2764705 ],
         [ 1.2007802 ,  1.2007802 ,  1.2007802 , ...,  1.20078   ,
           1.20078   ,  1.20078   ],
         ...,
         [ 2.8754764 ,  2.8754764 ,  2.8754764 , ...,  2.8754764 ,
           2.8754764 ,  2.8754764 ],
         [-1.6986233 , -1.6986233 , -1.6986233 , ..., -1.6986232 ,
          -1.6986232 , -1.6986232 ],
         [ 2.2827039 ,  2.2827039 ,  2.2827039 , ...,  2.2827044 ,
           2.2827044 ,  2.2827044 ]],

        ...,

        [[ 0.02110672,  0.02110672,  0.02110672, ...,  0.02110672,
           0.02110672,  0.02110672],
         [-2.9951677 , -2.9951677 , -2.9951677 , ..., -2.9951677 ,
          -2.9951677 , -2.9951677 ],
         [ 4.3682165 ,  4.3682165 ,  4.3682165 , ...,  4.3682165 ,
           4.3682165 ,  4.3682165 ],
         ...,
         [ 5.4211307 ,  5.4211307 ,  5.4211307 , ...,  5.421131  ,
           5.421131  ,  5.421131  ],
         [-1.9763787 , -1.9763787 , -1.9763787 , ..., -1.9763789 ,
          -1.9763789 , -1.9763789 ],
         [ 1.4769149 ,  1.4769149 ,  1.4769149 , ...,  1.4769149 ,
           1.4769149 ,  1.4769149 ]],

        [[ 2.95113   ,  2.95113   ,  2.95113   , ...,  2.9511304 ,
           2.9511304 ,  2.9511304 ],
         [ 0.27647054,  0.27647054,  0.27647054, ...,  0.2764705 ,
           0.2764705 ,  0.2764705 ],
         [ 1.2007802 ,  1.2007802 ,  1.2007802 , ...,  1.20078   ,
           1.20078   ,  1.20078   ],
         ...,
         [ 2.8754764 ,  2.8754764 ,  2.8754764 , ...,  2.8754764 ,
           2.8754764 ,  2.8754764 ],
         [-1.6986233 , -1.6986233 , -1.6986233 , ..., -1.6986232 ,
          -1.6986232 , -1.6986232 ],
         [ 2.2827039 ,  2.2827039 ,  2.2827039 , ...,  2.2827044 ,
           2.2827044 ,  2.2827044 ]],

        [[-5.1109324 , -5.1109324 , -5.1109324 , ..., -5.1109333 ,
          -5.1109333 , -5.1109333 ],
         [ 0.58036447,  0.58036447,  0.58036447, ...,  0.58036447,
           0.58036447,  0.58036447],
         [-0.6964005 , -0.6964005 , -0.6964005 , ..., -0.6964005 ,
          -0.6964005 , -0.6964005 ],
         ...,
         [ 0.44205916,  0.44205916,  0.44205916, ...,  0.44205928,
           0.44205928,  0.44205928],
         [-2.2544737 , -2.2544737 , -2.2544737 , ..., -2.2544737 ,
          -2.2544737 , -2.2544737 ],
         [-1.8697014 , -1.8697014 , -1.8697014 , ..., -1.8697014 ,
          -1.8697014 , -1.8697014 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 100), 'from': [4], 'to': []}
torch node:
{'name': 'linear', 'output': array([[[[-1.590617  , -1.590617  , -1.590617  , ..., -1.5906167 ,
          -1.5906167 , -1.5906167 ],
         [ 1.7390783 ,  1.7390783 ,  1.7390783 , ...,  1.7390778 ,
           1.7390778 ,  1.7390778 ],
         [ 1.7199614 ,  1.7199614 ,  1.7199614 , ...,  1.7199618 ,
           1.7199618 ,  1.7199618 ],
         ...,
         [-1.1064541 , -1.1064541 , -1.1064541 , ..., -1.1064539 ,
          -1.1064539 , -1.1064539 ],
         [-0.9181472 , -0.9181472 , -0.9181472 , ..., -0.9181473 ,
          -0.9181473 , -0.9181473 ],
         [ 1.9912455 ,  1.9912455 ,  1.9912455 , ...,  1.9912454 ,
           1.9912454 ,  1.9912454 ]],

        [[ 0.02110672,  0.02110672,  0.02110672, ...,  0.02110672,
           0.02110672,  0.02110672],
         [-2.9951675 , -2.9951675 , -2.9951675 , ..., -2.9951677 ,
          -2.9951677 , -2.9951677 ],
         [ 4.3682165 ,  4.3682165 ,  4.3682165 , ...,  4.3682165 ,
           4.3682165 ,  4.3682165 ],
         ...,
         [ 5.4211307 ,  5.4211307 ,  5.4211307 , ...,  5.421131  ,
           5.421131  ,  5.421131  ],
         [-1.9763787 , -1.9763787 , -1.9763787 , ..., -1.9763789 ,
          -1.9763789 , -1.9763789 ],
         [ 1.4769149 ,  1.4769149 ,  1.4769149 , ...,  1.4769149 ,
           1.4769149 ,  1.4769149 ]],

        [[ 2.95113   ,  2.95113   ,  2.95113   , ...,  2.95113   ,
           2.95113   ,  2.95113   ],
         [ 0.27647066,  0.27647066,  0.27647066, ...,  0.27647063,
           0.27647063,  0.27647063],
         [ 1.2007802 ,  1.2007802 ,  1.2007802 , ...,  1.20078   ,
           1.20078   ,  1.20078   ],
         ...,
         [ 2.8754754 ,  2.8754754 ,  2.8754754 , ...,  2.875476  ,
           2.875476  ,  2.875476  ],
         [-1.6986233 , -1.6986233 , -1.6986233 , ..., -1.6986232 ,
          -1.6986232 , -1.6986232 ],
         [ 2.2827034 ,  2.2827034 ,  2.2827034 , ...,  2.282704  ,
           2.282704  ,  2.282704  ]],

        ...,

        [[ 0.02110022,  0.02110022,  0.02110022, ...,  0.0211004 ,
           0.0211004 ,  0.0211004 ],
         [-2.9951677 , -2.9951677 , -2.9951677 , ..., -2.995168  ,
          -2.995168  , -2.995168  ],
         [ 4.3682156 ,  4.3682156 ,  4.3682156 , ...,  4.3682156 ,
           4.3682156 ,  4.3682156 ],
         ...,
         [ 5.421132  ,  5.421132  ,  5.421132  , ...,  5.421132  ,
           5.421132  ,  5.421132  ],
         [-1.976383  , -1.976383  , -1.976383  , ..., -1.976383  ,
          -1.976383  , -1.976383  ],
         [ 1.4769113 ,  1.4769113 ,  1.4769113 , ...,  1.4769112 ,
           1.4769112 ,  1.4769112 ]],

        [[ 2.9511342 ,  2.9511342 ,  2.9511342 , ...,  2.9511342 ,
           2.9511342 ,  2.9511342 ],
         [ 0.27646923,  0.27646923,  0.27646923, ...,  0.27646962,
           0.27646962,  0.27646962],
         [ 1.2007768 ,  1.2007768 ,  1.2007768 , ...,  1.200777  ,
           1.200777  ,  1.200777  ],
         ...,
         [ 2.8754778 ,  2.8754778 ,  2.8754778 , ...,  2.8754778 ,
           2.8754778 ,  2.8754778 ],
         [-1.6986206 , -1.6986206 , -1.6986206 , ..., -1.6986206 ,
          -1.6986206 , -1.6986206 ],
         [ 2.2827032 ,  2.2827032 ,  2.2827032 , ...,  2.2827039 ,
           2.2827039 ,  2.2827039 ]],

        [[-5.1109314 , -5.1109314 , -5.1109314 , ..., -5.110931  ,
          -5.110931  , -5.110931  ],
         [ 0.58036256,  0.58036256,  0.58036256, ...,  0.58036256,
           0.58036256,  0.58036256],
         [-0.69640166, -0.69640166, -0.69640166, ..., -0.6964018 ,
          -0.6964018 , -0.6964018 ],
         ...,
         [ 0.44205672,  0.44205672,  0.44205672, ...,  0.4420569 ,
           0.4420569 ,  0.4420569 ],
         [-2.2544742 , -2.2544742 , -2.2544742 , ..., -2.2544742 ,
          -2.2544742 , -2.2544742 ],
         [-1.8697014 , -1.8697014 , -1.8697014 , ..., -1.8697014 ,
          -1.8697014 , -1.8697014 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 100]), 'from': [4], 'to': []}

generate models:252

analyse the exceptions in iter:294
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],

         [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],

         [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]]])]}
Given groups=1, weight of size [64, 512, 1, 1], expected input[1, 3, 16, 16] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 16], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:253

analyse output arrays in iter:297

pre layer res:
6:relu
{'name': 'relu', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 100]), 'from': [26], 'to': [27]}
tf node:
{'name': 'softmax', 'output': array([[[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         ...,
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        ...,

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 100]), 'from': [6], 'to': [15]}
ms node:
{'name': 'softmax', 'output': array([[[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         ...,
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ..., 0.  , 0.  , 0.  ],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        ...,

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]]]], dtype=float32), 'output_shape': (1, 512, 32, 100), 'from': [6], 'to': [15]}
torch node:
{'name': 'softmax', 'output': array([[[[ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         ...,
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [ nan,  nan,  nan, ...,  nan,  nan,  nan],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        ...,

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]],

        [[0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         ...,
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01],
         [0.01, 0.01, 0.01, ..., 0.01, 0.01, 0.01]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 100]), 'from': [6], 'to': [15]}

generate models:256

analyse the exceptions in iter:298
torch exception:
{'id': 6, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 821.6846,  568.9056,  891.0803,  ...,  966.0063, 1851.2504,
           2781.6438],
          [2175.0798,  912.9498,  509.1712,  ..., 1756.1539,  386.1153,
           2358.7661],
          [1515.1027, 1033.5587, 2332.4993,  ...,  411.5487, 1261.0725,
           1023.9703],
          ...,
          [ 621.4359,  449.7318,  385.3231,  ...,  419.5131,  386.4903,
            515.9308],
          [1387.1445,  535.7100,  432.1122,  ..., 1789.1708, 2355.9468,
           2429.7114],
          [1275.8638, 1853.1770,  892.9674,  ..., 1822.3269, 2705.8281,
           1843.7496]],

         [[ 822.1530,  570.5571,  891.7690,  ...,  962.2228, 1855.5779,
           2782.8337],
          [2174.1689,  911.8438,  508.1431,  ..., 1757.6083,  386.0445,
           2358.0247],
          [1509.7601, 1036.3724, 2331.8091,  ...,  410.7992, 1260.4482,
           1022.2322],
          ...,
          [ 626.1105,  450.7854,  382.1236,  ...,  419.4682,  387.2659,
            514.3212],
          [1387.8378,  534.7185,  432.8382,  ..., 1790.1598, 2356.4504,
           2433.1455],
          [1277.5309, 1853.1938,  891.3029,  ..., 1824.4286, 2705.6917,
           1844.6433]],

         [[ 822.1123,  570.1793,  890.5704,  ...,  963.5636, 1854.0759,
           2781.6101],
          [2177.0266,  914.4069,  509.7939,  ..., 1754.8596,  386.1399,
           2357.1624],
          [1510.7218, 1034.9935, 2332.8057,  ...,  414.2717, 1258.2949,
           1020.6620],
          ...,
          [ 621.5882,  451.6090,  385.2097,  ...,  419.3117,  386.5166,
            514.1117],
          [1389.5172,  536.3352,  432.9530,  ..., 1788.8885, 2354.5146,
           2432.0764],
          [1273.1843, 1853.8320,  889.9928,  ..., 1823.5039, 2704.8721,
           1845.1392]],

         ...,

         [[ 820.5708,  565.4957,  889.6326,  ...,  961.7736, 1850.6449,
           2780.1873],
          [2173.4827,  910.3051,  507.1688,  ..., 1754.9174,  383.3864,
           2355.5347],
          [1510.4362, 1033.0161, 2330.6216,  ...,  410.1785, 1256.8501,
           1018.8340],
          ...,
          [ 620.8406,  449.1767,  382.2178,  ...,  416.8272,  384.9608,
            513.2493],
          [1386.6251,  532.9299,  431.8557,  ..., 1786.2653, 2352.6980,
           2428.7688],
          [1273.8488, 1852.8905,  888.9139,  ..., 1822.0948, 2703.0515,
           1842.7186]],

         [[ 820.5708,  565.4957,  889.6326,  ...,  961.7736, 1850.6449,
           2780.1873],
          [2173.4827,  910.3051,  507.1688,  ..., 1754.9174,  383.3864,
           2355.5347],
          [1510.4362, 1033.0161, 2330.6216,  ...,  410.1785, 1256.8501,
           1018.8340],
          ...,
          [ 620.8406,  449.1767,  382.2178,  ...,  416.8272,  384.9608,
            513.2493],
          [1386.6251,  532.9299,  431.8557,  ..., 1786.2653, 2352.6980,
           2428.7688],
          [1273.8488, 1852.8905,  888.9139,  ..., 1822.0948, 2703.0515,
           1842.7186]],

         [[ 820.5708,  565.4957,  889.6326,  ...,  961.7736, 1850.6449,
           2780.1873],
          [2173.4827,  910.3051,  507.1688,  ..., 1754.9174,  383.3864,
           2355.5347],
          [1510.4362, 1033.0161, 2330.6216,  ...,  410.1785, 1256.8501,
           1018.8340],
          ...,
          [ 620.8406,  449.1767,  382.2178,  ...,  416.8272,  384.9608,
            513.2493],
          [1386.6251,  532.9299,  431.8557,  ..., 1786.2653, 2352.6980,
           2428.7688],
          [1273.8488, 1852.8905,  888.9139,  ..., 1822.0948, 2703.0515,
           1842.7186]]]], grad_fn=<AddBackward0>)]}
Given groups=1, weight of size [256, 64, 1, 1], expected input[1, 512, 16, 16] to have 64 channels, but got 512 channels instead
mindspore exception:
{'id': 6, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 512, 16, 16], dtype=Float32, value=
[[[[8.21687317e+002, 5.68904663e+002, 8.91077026e+002 ... 9.66009888e+002, 1.85125525e+003, 2.78164404e+003],
   [2.17507446e+003, 9.12953003e+002, 5.09172699e+002 ... 1.75614966e+003, 3.86114197e+002, 2.35876855e+003],
   [1.51510327e+003, 1.03355859e+003, 2.33249756e+003 ... 4.11549255e+002, 1.26106934e+003, 1.02396735e+003],
   ...
   [6.21437500e+002, 4.49733002e+002, 3.85323578e+002 ... 4.19513519e+002, 3.86490356e+002, 5.15931152e+002],
   [1.38714453e+003, 5.35710144e+002, 4.32113678e+002 ... 1.78916406e+003, 2.35594165e+003, 2.42971265e+003],
   [1.27586133e+003, 1.85317004e+003, 8.92964172e+002 ... 1.82232642e+003, 2.70583423e+003, 1.84374963e+003]],
  [[8.22155640e+002, 5.70556091e+002, 8.91765747e+002 ... 9.62226379e+002, 1.85558276e+003, 2.78283398e+003],
   [2.17416357e+003, 9.11847046e+002, 5.08144653e+002 ... 1.75760400e+003, 3.86043365e+002, 2.35802710e+003],
   [1.50976074e+003, 1.03637231e+003, 2.33180737e+003 ... 4.10799805e+002, 1.26044507e+003, 1.02222925e+003],
   ...
   [6.26112122e+002, 4.50786652e+002, 3.82124115e+002 ... 4.19468658e+002, 3.87265961e+002, 5.14321594e+002],
   [1.38783777e+003, 5.34718689e+002, 4.32839691e+002 ... 1.79015308e+003, 2.35644531e+003, 2.43314673e+003],
   [1.27752844e+003, 1.85318689e+003, 8.91299622e+002 ... 1.82442810e+003, 2.70569775e+003, 1.84464331e+003]],
  [[8.22114990e+002, 5.70178345e+002, 8.90567139e+002 ... 9.63567139e+002, 1.85408081e+003, 2.78161035e+003],
   [2.17702124e+003, 9.14410095e+002, 5.09795380e+002 ... 1.75485535e+003, 3.86138733e+002, 2.35716479e+003],
   [1.51072241e+003, 1.03499341e+003, 2.33280396e+003 ... 4.14272308e+002, 1.25829175e+003, 1.02065906e+003],
   ...
   [6.21589783e+002, 4.51610291e+002, 3.85210175e+002 ... 4.19312134e+002, 3.86516632e+002, 5.14112061e+002],
   [1.38951721e+003, 5.36335388e+002, 4.32954437e+002 ... 1.78888184e+003, 2.35450952e+003, 2.43207764e+003],
   [1.27318188e+003, 1.85382507e+003, 8.89989563e+002 ... 1.82350342e+003, 2.70487817e+003, 1.84513916e+003]],
  ...
  [[8.20573486e+002, 5.65494690e+002, 8.89629395e+002 ... 9.61777161e+002, 1.85064978e+003, 2.78018750e+003],
   [2.17347729e+003, 9.10308350e+002, 5.07170288e+002 ... 1.75491309e+003, 3.83385254e+002, 2.35553711e+003],
   [1.51043677e+003, 1.03301599e+003, 2.33061987e+003 ... 4.10179077e+002, 1.25684692e+003, 1.01883105e+003],
   ...
   [6.20842163e+002, 4.49177917e+002, 3.82218262e+002 ... 4.16827667e+002, 3.84960876e+002, 5.13249634e+002],
   [1.38662512e+003, 5.32930115e+002, 4.31857208e+002 ... 1.78625854e+003, 2.35269287e+003, 2.42877002e+003],
   [1.27384631e+003, 1.85288354e+003, 8.88910706e+002 ... 1.82209436e+003, 2.70305762e+003, 1.84271863e+003]],
  [[8.20573486e+002, 5.65494690e+002, 8.89629395e+002 ... 9.61777161e+002, 1.85064978e+003, 2.78018750e+003],
   [2.17347729e+003, 9.10308350e+002, 5.07170288e+002 ... 1.75491309e+003, 3.83385254e+002, 2.35553711e+003],
   [1.51043677e+003, 1.03301599e+003, 2.33061987e+003 ... 4.10179077e+002, 1.25684692e+003, 1.01883105e+003],
   ...
   [6.20842163e+002, 4.49177917e+002, 3.82218262e+002 ... 4.16827667e+002, 3.84960876e+002, 5.13249634e+002],
   [1.38662512e+003, 5.32930115e+002, 4.31857208e+002 ... 1.78625854e+003, 2.35269287e+003, 2.42877002e+003],
   [1.27384631e+003, 1.85288354e+003, 8.88910706e+002 ... 1.82209436e+003, 2.70305762e+003, 1.84271863e+003]],
  [[8.20573486e+002, 5.65494690e+002, 8.89629395e+002 ... 9.61777161e+002, 1.85064978e+003, 2.78018750e+003],
   [2.17347729e+003, 9.10308350e+002, 5.07170288e+002 ... 1.75491309e+003, 3.83385254e+002, 2.35553711e+003],
   [1.51043677e+003, 1.03301599e+003, 2.33061987e+003 ... 4.10179077e+002, 1.25684692e+003, 1.01883105e+003],
   ...
   [6.20842163e+002, 4.49177917e+002, 3.82218262e+002 ... 4.16827667e+002, 3.84960876e+002, 5.13249634e+002],
   [1.38662512e+003, 5.32930115e+002, 4.31857208e+002 ... 1.78625854e+003, 2.35269287e+003, 2.42877002e+003],
   [1.27384631e+003, 1.85288354e+003, 8.88910706e+002 ... 1.82209436e+003, 2.70305762e+003, 1.84271863e+003]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 512, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:257

analyse output arrays in iter:299

pre layer res:
6:conv2d
{'name': 'conv2d', 'output': array([[[[-2.024938  ,  0.43385804, -0.9203024 , ..., -0.53126776,
           2.0704777 , -2.565756  ],
         [ 1.3164241 ,  1.6474276 , -2.009156  , ...,  0.34288394,
          -0.41485345, -0.97548056],
         [ 0.63186365, -0.6573258 ,  0.899409  , ...,  3.2567225 ,
          -0.17889598, -3.5438244 ],
         ...,
         [ 2.2739754 ,  3.9268758 ,  0.14910099, ...,  0.60079366,
           0.8691728 ,  1.1691685 ],
         [ 2.5547192 , -1.2930351 ,  0.9716163 , ..., -1.0556793 ,
           3.241109  , -1.2197955 ],
         [-1.6420782 , -0.87904406, -1.1046358 , ..., -0.03385344,
          -0.00811619, -1.5812576 ]],

        [[-2.024938  ,  0.43385804, -0.9203024 , ..., -0.53126776,
           2.0704777 , -2.565756  ],
         [ 1.3164241 ,  1.6474276 , -2.009156  , ...,  0.34288394,
          -0.41485345, -0.97548056],
         [ 0.63186365, -0.6573258 ,  0.899409  , ...,  3.2567225 ,
          -0.17889598, -3.5438244 ],
         ...,
         [ 2.2739754 ,  3.9268758 ,  0.14910099, ...,  0.60079366,
           0.8691728 ,  1.1691685 ],
         [ 2.5547192 , -1.2930351 ,  0.9716163 , ..., -1.0556793 ,
           3.241109  , -1.2197955 ],
         [-1.6420782 , -0.87904406, -1.1046358 , ..., -0.03385344,
          -0.00811619, -1.5812576 ]],

        [[-2.024938  ,  0.43385804, -0.9203024 , ..., -0.53126776,
           2.0704777 , -2.565756  ],
         [ 1.3164241 ,  1.6474276 , -2.009156  , ...,  0.34288394,
          -0.41485345, -0.97548056],
         [ 0.63186365, -0.6573258 ,  0.899409  , ...,  3.2567225 ,
          -0.17889598, -3.5438244 ],
         ...,
         [ 2.2739754 ,  3.9268758 ,  0.14910099, ...,  0.60079366,
           0.8691728 ,  1.1691685 ],
         [ 2.5547192 , -1.2930351 ,  0.9716163 , ..., -1.0556793 ,
           3.241109  , -1.2197955 ],
         [-1.6420782 , -0.87904406, -1.1046358 , ..., -0.03385344,
          -0.00811619, -1.5812576 ]],

        ...,

        [[-2.024938  ,  0.43385804, -0.9203024 , ..., -0.53126776,
           2.0704777 , -2.565756  ],
         [ 1.3164241 ,  1.6474276 , -2.009156  , ...,  0.34288394,
          -0.41485345, -0.97548056],
         [ 0.63186365, -0.6573258 ,  0.899409  , ...,  3.2567225 ,
          -0.17889598, -3.5438244 ],
         ...,
         [ 2.2739754 ,  3.9268758 ,  0.14910099, ...,  0.60079366,
           0.8691728 ,  1.1691685 ],
         [ 2.5547192 , -1.2930351 ,  0.9716163 , ..., -1.0556793 ,
           3.241109  , -1.2197955 ],
         [-1.6420782 , -0.87904406, -1.1046358 , ..., -0.03385344,
          -0.00811619, -1.5812576 ]],

        [[-2.024938  ,  0.43385804, -0.9203024 , ..., -0.53126776,
           2.0704777 , -2.565756  ],
         [ 1.3164241 ,  1.6474276 , -2.009156  , ...,  0.34288394,
          -0.41485345, -0.97548056],
         [ 0.63186365, -0.6573258 ,  0.899409  , ...,  3.2567225 ,
          -0.17889598, -3.5438244 ],
         ...,
         [ 2.2739754 ,  3.9268758 ,  0.14910099, ...,  0.60079366,
           0.8691728 ,  1.1691685 ],
         [ 2.5547192 , -1.2930351 ,  0.9716163 , ..., -1.0556793 ,
           3.241109  , -1.2197955 ],
         [-1.6420782 , -0.87904406, -1.1046358 , ..., -0.03385344,
          -0.00811619, -1.5812576 ]],

        [[-2.024938  ,  0.43385804, -0.9203024 , ..., -0.53126776,
           2.0704777 , -2.565756  ],
         [ 1.3164241 ,  1.6474276 , -2.009156  , ...,  0.34288394,
          -0.41485345, -0.97548056],
         [ 0.63186365, -0.6573258 ,  0.899409  , ...,  3.2567225 ,
          -0.17889598, -3.5438244 ],
         ...,
         [ 2.2739754 ,  3.9268758 ,  0.14910099, ...,  0.60079366,
           0.8691728 ,  1.1691685 ],
         [ 2.5547192 , -1.2930351 ,  0.9716163 , ..., -1.0556793 ,
           3.241109  , -1.2197955 ],
         [-1.6420782 , -0.87904406, -1.1046358 , ..., -0.03385344,
          -0.00811619, -1.5812576 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 16, 16]), 'from': [11], 'to': [7]}
tf node:
{'name': 'linear', 'output': array([[[[ 4.80719  ,  4.80719  ,  4.80719  , ...,  4.80719  ,
           4.80719  ,  4.80719  ],
         [ 1.2258301,  1.2258301,  1.2258301, ...,  1.2258301,
           1.2258301,  1.2258301],
         [-3.2321777, -3.2321777, -3.2321777, ..., -3.2321777,
          -3.2321777, -3.2321777],
         ...,
         [14.54718  , 14.54718  , 14.54718  , ..., 14.54718  ,
          14.54718  , 14.54718  ],
         [ 8.119141 ,  8.119141 ,  8.119141 , ...,  8.119141 ,
           8.119141 ,  8.119141 ],
         [ 1.1323318,  1.1323318,  1.1323318, ...,  1.1323318,
           1.1323318,  1.1323318]],

        [[ 4.80719  ,  4.80719  ,  4.80719  , ...,  4.80719  ,
           4.80719  ,  4.80719  ],
         [ 1.2258301,  1.2258301,  1.2258301, ...,  1.2258301,
           1.2258301,  1.2258301],
         [-3.2321777, -3.2321777, -3.2321777, ..., -3.2321777,
          -3.2321777, -3.2321777],
         ...,
         [14.54718  , 14.54718  , 14.54718  , ..., 14.54718  ,
          14.54718  , 14.54718  ],
         [ 8.119141 ,  8.119141 ,  8.119141 , ...,  8.119141 ,
           8.119141 ,  8.119141 ],
         [ 1.1323318,  1.1323318,  1.1323318, ...,  1.1323318,
           1.1323318,  1.1323318]],

        [[ 4.80719  ,  4.80719  ,  4.80719  , ...,  4.80719  ,
           4.80719  ,  4.80719  ],
         [ 1.2258301,  1.2258301,  1.2258301, ...,  1.2258301,
           1.2258301,  1.2258301],
         [-3.2321777, -3.2321777, -3.2321777, ..., -3.2321777,
          -3.2321777, -3.2321777],
         ...,
         [14.54718  , 14.54718  , 14.54718  , ..., 14.54718  ,
          14.54718  , 14.54718  ],
         [ 8.119141 ,  8.119141 ,  8.119141 , ...,  8.119141 ,
           8.119141 ,  8.119141 ],
         [ 1.1323318,  1.1323318,  1.1323318, ...,  1.1323318,
           1.1323318,  1.1323318]],

        ...,

        [[ 4.80719  ,  4.80719  ,  4.80719  , ...,  4.80719  ,
           4.80719  ,  4.80719  ],
         [ 1.2258301,  1.2258301,  1.2258301, ...,  1.2258301,
           1.2258301,  1.2258301],
         [-3.2321777, -3.2321777, -3.2321777, ..., -3.2321777,
          -3.2321777, -3.2321777],
         ...,
         [14.54718  , 14.54718  , 14.54718  , ..., 14.54718  ,
          14.54718  , 14.54718  ],
         [ 8.119141 ,  8.119141 ,  8.119141 , ...,  8.119141 ,
           8.119141 ,  8.119141 ],
         [ 1.1323318,  1.1323318,  1.1323318, ...,  1.1323318,
           1.1323318,  1.1323318]],

        [[ 4.80719  ,  4.80719  ,  4.80719  , ...,  4.80719  ,
           4.80719  ,  4.80719  ],
         [ 1.2258301,  1.2258301,  1.2258301, ...,  1.2258301,
           1.2258301,  1.2258301],
         [-3.2321777, -3.2321777, -3.2321777, ..., -3.2321777,
          -3.2321777, -3.2321777],
         ...,
         [14.54718  , 14.54718  , 14.54718  , ..., 14.54718  ,
          14.54718  , 14.54718  ],
         [ 8.119141 ,  8.119141 ,  8.119141 , ...,  8.119141 ,
           8.119141 ,  8.119141 ],
         [ 1.1323318,  1.1323318,  1.1323318, ...,  1.1323318,
           1.1323318,  1.1323318]],

        [[ 4.80719  ,  4.80719  ,  4.80719  , ...,  4.80719  ,
           4.80719  ,  4.80719  ],
         [ 1.2258301,  1.2258301,  1.2258301, ...,  1.2258301,
           1.2258301,  1.2258301],
         [-3.2321777, -3.2321777, -3.2321777, ..., -3.2321777,
          -3.2321777, -3.2321777],
         ...,
         [14.54718  , 14.54718  , 14.54718  , ..., 14.54718  ,
          14.54718  , 14.54718  ],
         [ 8.119141 ,  8.119141 ,  8.119141 , ...,  8.119141 ,
           8.119141 ,  8.119141 ],
         [ 1.1323318,  1.1323318,  1.1323318, ...,  1.1323318,
           1.1323318,  1.1323318]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 16, 100]), 'from': [6], 'to': [23]}
ms node:
{'name': 'linear', 'output': array([[[[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        ...,

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119743 ,  8.119743 ,  8.119743 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.1316549,  1.1316549,  1.1316549, ...,  1.1316549,
           1.1316549,  1.1316549]]]], dtype=float32), 'output_shape': (1, 256, 16, 100), 'from': [6], 'to': [23]}
torch node:
{'name': 'linear', 'output': array([[[[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        ...,

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119744 ,  8.119744 ,  8.119744 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.131655 ,  1.131655 ,  1.131655 , ...,  1.1316549,
           1.1316549,  1.1316549]],

        [[ 4.807019 ,  4.807019 ,  4.807019 , ...,  4.8070188,
           4.8070188,  4.8070188],
         [ 1.226357 ,  1.226357 ,  1.226357 , ...,  1.226357 ,
           1.226357 ,  1.226357 ],
         [-3.2346513, -3.2346513, -3.2346513, ..., -3.2346513,
          -3.2346513, -3.2346513],
         ...,
         [14.547077 , 14.547077 , 14.547077 , ..., 14.547079 ,
          14.547079 , 14.547079 ],
         [ 8.119743 ,  8.119743 ,  8.119743 , ...,  8.119743 ,
           8.119743 ,  8.119743 ],
         [ 1.1316549,  1.1316549,  1.1316549, ...,  1.1316549,
           1.1316549,  1.1316549]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 16, 100]), 'from': [6], 'to': [23]}

generate models:258

analyse the exceptions in iter:306
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.3782, 0.0000, 1.3921,  ..., 0.6045, 1.2336, 0.0000],
          [0.2366, 0.0000, 0.0000,  ..., 0.8355, 0.0000, 1.1813],
          [0.7122, 1.7714, 0.4345,  ..., 0.0000, 0.0000, 0.1446],
          ...,
          [2.3852, 2.4976, 0.2512,  ..., 0.0000, 1.2409, 0.0000],
          [1.4424, 0.0000, 0.0289,  ..., 0.0000, 0.1045, 0.6621],
          [0.0534, 0.1472, 0.0000,  ..., 0.8013, 0.0000, 0.0000]],

         [[0.0000, 0.0000, 0.8969,  ..., 0.0000, 0.9760, 0.4686],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.4437, 0.7633],
          [1.3751, 0.5084, 0.9842,  ..., 0.7787, 0.3609, 1.1603],
          ...,
          [0.0000, 0.6803, 0.0791,  ..., 0.0000, 1.0422, 0.0000],
          [0.0000, 0.5002, 2.1923,  ..., 0.7607, 0.7647, 0.9912],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.3589, 0.0000]],

         [[0.3657, 0.0000, 0.0000,  ..., 0.0000, 0.7507, 0.7319],
          [0.0000, 0.0000, 0.0386,  ..., 1.2302, 0.0000, 0.0000],
          [1.1477, 0.0000, 0.2802,  ..., 0.0000, 0.0000, 0.4010],
          ...,
          [0.0000, 0.0000, 0.0160,  ..., 2.3009, 0.7698, 0.0000],
          [0.0000, 0.0377, 0.0000,  ..., 0.7162, 0.7138, 0.0000],
          [0.0000, 2.4685, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]])]}
Given groups=1, weight of size [256, 256, 1, 1], expected input[1, 3, 32, 32] to have 256 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[3.78160805e-001, 0.00000000e+000, 1.39209270e+000 ... 6.04543626e-001, 1.23359644e+000, 0.00000000e+000],
   [2.36562461e-001, 0.00000000e+000, 0.00000000e+000 ... 8.35495532e-001, 0.00000000e+000, 1.18132377e+000],
   [7.12166369e-001, 1.77136409e+000, 4.34474319e-001 ... 0.00000000e+000, 0.00000000e+000, 1.44574791e-001],
   ...
   [2.38521647e+000, 2.49756169e+000, 2.51194835e-001 ... 0.00000000e+000, 1.24086988e+000, 0.00000000e+000],
   [1.44237888e+000, 0.00000000e+000, 2.89380457e-002 ... 0.00000000e+000, 1.04498357e-001, 6.62097573e-001],
   [5.33552952e-002, 1.47167981e-001, 0.00000000e+000 ... 8.01292300e-001, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 8.96882236e-001 ... 0.00000000e+000, 9.76036072e-001, 4.68592435e-001],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 4.43711191e-001, 7.63281226e-001],
   [1.37509477e+000, 5.08423567e-001, 9.84215319e-001 ... 7.78708160e-001, 3.60904276e-001, 1.16026998e+000],
   ...
   [0.00000000e+000, 6.80309296e-001, 7.90619850e-002 ... 0.00000000e+000, 1.04224074e+000, 0.00000000e+000],
   [0.00000000e+000, 5.00161886e-001, 2.19233704e+000 ... 7.60682166e-001, 7.64693260e-001, 9.91239846e-001],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.35889411e+000, 0.00000000e+000]],
  [[3.65722746e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 7.50671566e-001, 7.31884420e-001],
   [0.00000000e+000, 0.00000000e+000, 3.85867357e-002 ... 1.23016286e+000, 0.00000000e+000, 0.00000000e+000],
   [1.14766264e+000, 0.00000000e+000, 2.80237973e-001 ... 0.00000000e+000, 0.00000000e+000, 4.01045620e-001],
   ...
   [0.00000000e+000, 0.00000000e+000, 1.59834716e-002 ... 2.30089331e+000, 7.69800782e-001, 0.00000000e+000],
   [0.00000000e+000, 3.76894511e-002, 0.00000000e+000 ... 7.16207445e-001, 7.13829756e-001, 0.00000000e+000],
   [0.00000000e+000, 2.46845531e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 256, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:264

analyse the exceptions in iter:307
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[1.9586, 0.0000, 0.4367,  ..., 0.6360, 1.9259, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0827, 0.0000],
          [0.9770, 0.0000, 0.0000,  ..., 0.0000, 1.2506, 0.0000],
          ...,
          [0.0000, 1.9784, 0.0000,  ..., 0.0000, 0.3627, 0.0000],
          [0.0000, 0.3841, 1.2858,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

         [[1.9586, 0.0000, 0.4367,  ..., 0.6360, 1.9259, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0827, 0.0000],
          [0.9770, 0.0000, 0.0000,  ..., 0.0000, 1.2506, 0.0000],
          ...,
          [0.0000, 1.9784, 0.0000,  ..., 0.0000, 0.3627, 0.0000],
          [0.0000, 0.3841, 1.2858,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

         [[1.9586, 0.0000, 0.4367,  ..., 0.6360, 1.9259, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0827, 0.0000],
          [0.9770, 0.0000, 0.0000,  ..., 0.0000, 1.2506, 0.0000],
          ...,
          [0.0000, 1.9784, 0.0000,  ..., 0.0000, 0.3627, 0.0000],
          [0.0000, 0.3841, 1.2858,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

         ...,

         [[1.9586, 0.0000, 0.4367,  ..., 0.6360, 1.9259, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0827, 0.0000],
          [0.9770, 0.0000, 0.0000,  ..., 0.0000, 1.2506, 0.0000],
          ...,
          [0.0000, 1.9784, 0.0000,  ..., 0.0000, 0.3627, 0.0000],
          [0.0000, 0.3841, 1.2858,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

         [[1.9586, 0.0000, 0.4367,  ..., 0.6360, 1.9259, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0827, 0.0000],
          [0.9770, 0.0000, 0.0000,  ..., 0.0000, 1.2506, 0.0000],
          ...,
          [0.0000, 1.9784, 0.0000,  ..., 0.0000, 0.3627, 0.0000],
          [0.0000, 0.3841, 1.2858,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],

         [[1.9586, 0.0000, 0.4367,  ..., 0.6360, 1.9259, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0827, 0.0000],
          [0.9770, 0.0000, 0.0000,  ..., 0.0000, 1.2506, 0.0000],
          ...,
          [0.0000, 1.9784, 0.0000,  ..., 0.0000, 0.3627, 0.0000],
          [0.0000, 0.3841, 1.2858,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]],
       grad_fn=<ConvolutionBackward0>)]}
Given groups=1, weight of size [256, 512, 1, 1], expected input[1, 64, 32, 100] to have 512 channels, but got 64 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 64, 32, 100], dtype=Float32, value=
[[[[1.95861316e+000, 0.00000000e+000, 4.36719805e-001 ... 6.35963261e-001, 1.92593086e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.08267868e+000, 0.00000000e+000],
   [9.77042973e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.25061381e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 1.97839177e+000, 0.00000000e+000 ... 0.00000000e+000, 3.62681538e-001, 0.00000000e+000],
   [0.00000000e+000, 3.84130716e-001, 1.28578687e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[1.95861316e+000, 0.00000000e+000, 4.36719805e-001 ... 6.35963261e-001, 1.92593086e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.08267868e+000, 0.00000000e+000],
   [9.77042973e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.25061381e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 1.97839177e+000, 0.00000000e+000 ... 0.00000000e+000, 3.62681538e-001, 0.00000000e+000],
   [0.00000000e+000, 3.84130716e-001, 1.28578687e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[1.95861316e+000, 0.00000000e+000, 4.36719805e-001 ... 6.35963261e-001, 1.92593086e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.08267868e+000, 0.00000000e+000],
   [9.77042973e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.25061381e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 1.97839177e+000, 0.00000000e+000 ... 0.00000000e+000, 3.62681538e-001, 0.00000000e+000],
   [0.00000000e+000, 3.84130716e-001, 1.28578687e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  ...
  [[1.95861316e+000, 0.00000000e+000, 4.36719805e-001 ... 6.35963261e-001, 1.92593086e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.08267868e+000, 0.00000000e+000],
   [9.77042973e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.25061381e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 1.97839177e+000, 0.00000000e+000 ... 0.00000000e+000, 3.62681538e-001, 0.00000000e+000],
   [0.00000000e+000, 3.84130716e-001, 1.28578687e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[1.95861316e+000, 0.00000000e+000, 4.36719805e-001 ... 6.35963261e-001, 1.92593086e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.08267868e+000, 0.00000000e+000],
   [9.77042973e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.25061381e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 1.97839177e+000, 0.00000000e+000 ... 0.00000000e+000, 3.62681538e-001, 0.00000000e+000],
   [0.00000000e+000, 3.84130716e-001, 1.28578687e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[1.95861316e+000, 0.00000000e+000, 4.36719805e-001 ... 6.35963261e-001, 1.92593086e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.08267868e+000, 0.00000000e+000],
   [9.77042973e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.25061381e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 1.97839177e+000, 0.00000000e+000 ... 0.00000000e+000, 3.62681538e-001, 0.00000000e+000],
   [0.00000000e+000, 3.84130716e-001, 1.28578687e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 64, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:265

analyse the exceptions in iter:308
torch exception:
{'id': 3, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.9992, 1.0568, 0.4772,  ..., 0.6045, 0.0000, 1.2394],
          [1.3314, 0.0000, 1.7814,  ..., 1.3244, 0.0000, 0.0000],
          [0.0000, 0.2618, 0.1144,  ..., 0.0000, 0.0000, 0.0000],
          ...,
          [0.5318, 0.2109, 0.0000,  ..., 0.6411, 0.3759, 1.0211],
          [0.1279, 0.0000, 0.0000,  ..., 0.0523, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.2197,  ..., 0.7878, 0.0000, 0.0000]],

         [[0.0000, 0.2951, 0.6162,  ..., 1.5971, 0.4725, 0.0523],
          [1.6717, 1.3193, 0.7656,  ..., 0.0914, 0.1382, 0.4975],
          [0.0000, 0.0000, 0.0846,  ..., 1.5803, 0.0000, 0.7276],
          ...,
          [0.0000, 1.6152, 2.4020,  ..., 0.6910, 0.0000, 0.0000],
          [1.3515, 0.0000, 1.8908,  ..., 1.0198, 0.3434, 0.0000],
          [0.1460, 1.1126, 0.0000,  ..., 0.0000, 0.4437, 0.0000]],

         [[0.8368, 1.2669, 1.4265,  ..., 0.9557, 0.0000, 0.0000],
          [1.5842, 0.0000, 0.0000,  ..., 0.7922, 0.0884, 0.7002],
          [1.5221, 1.4916, 0.0000,  ..., 0.0993, 0.7728, 0.0000],
          ...,
          [0.0000, 0.0000, 1.2755,  ..., 0.2953, 0.3300, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
          [0.8053, 0.0000, 0.0000,  ..., 0.0000, 0.1267, 2.4566]]]])]}
mat1 and mat2 shapes cannot be multiplied (96x32 and 25x100)
mindspore exception:
{'id': 3, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[9.99247253e-001, 1.05679345e+000, 4.77189541e-001 ... 6.04482055e-001, 0.00000000e+000, 1.23938191e+000],
   [1.33144832e+000, 0.00000000e+000, 1.78137887e+000 ... 1.32440972e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 2.61795878e-001, 1.14397839e-001 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [5.31824529e-001, 2.10944876e-001, 0.00000000e+000 ... 6.41090035e-001, 3.75914067e-001, 1.02114952e+000],
   [1.27887011e-001, 0.00000000e+000, 0.00000000e+000 ... 5.23063242e-002, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 2.19660908e-001 ... 7.87792206e-001, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 2.95086116e-001, 6.16249740e-001 ... 1.59705555e+000, 4.72452909e-001, 5.22512831e-002],
   [1.67171705e+000, 1.31928968e+000, 7.65638411e-001 ... 9.14006531e-002, 1.38217330e-001, 4.97484922e-001],
   [0.00000000e+000, 0.00000000e+000, 8.45515430e-002 ... 1.58029425e+000, 0.00000000e+000, 7.27637410e-001],
   ...
   [0.00000000e+000, 1.61523306e+000, 2.40200496e+000 ... 6.91007197e-001, 0.00000000e+000, 0.00000000e+000],
   [1.35147500e+000, 0.00000000e+000, 1.89082193e+000 ... 1.01981306e+000, 3.43419075e-001, 0.00000000e+000],
   [1.45978630e-001, 1.11256671e+000, 0.00000000e+000 ... 0.00000000e+000, 4.43656147e-001, 0.00000000e+000]],
  [[8.36808205e-001, 1.26691914e+000, 1.42652822e+000 ... 9.55697775e-001, 0.00000000e+000, 0.00000000e+000],
   [1.58417499e+000, 0.00000000e+000, 0.00000000e+000 ... 7.92164564e-001, 8.84435102e-002, 7.00176358e-001],
   [1.52212930e+000, 1.49161053e+000, 0.00000000e+000 ... 9.92838815e-002, 7.72755265e-001, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 1.27552521e+000 ... 2.95258164e-001, 3.29981148e-001, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [8.05291474e-001, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 1.26723811e-001, 2.45656800e+000]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 25. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 25](transpose_b=True).

generate models:266

analyse the exceptions in iter:309
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[3.6496, 2.2239, 3.6718, 0.7905, 3.4531, 1.7531, 3.6590, 3.7886,
           2.2744, 0.5359, 2.8494, 0.4646, 4.5267, 1.0852, 1.7101, 0.6891],
          [0.7675, 2.2816, 3.0597, 4.1369, 2.5154, 2.0107, 0.0401, 3.2271,
           3.6111, 2.1604, 1.9989, 0.5075, 1.1305, 0.0000, 1.6441, 1.1423],
          [1.6703, 1.8859, 1.2256, 0.0000, 3.3046, 1.2172, 0.2552, 2.4577,
           2.9779, 1.9628, 1.3787, 0.0000, 2.8275, 2.7103, 4.2079, 0.0000],
          [2.0208, 2.4856, 1.8607, 3.7531, 0.0000, 0.9406, 2.7038, 2.2816,
           1.5471, 8.6671, 0.8114, 0.3735, 2.3093, 1.6108, 3.4195, 2.3221],
          [1.5339, 2.5903, 2.4545, 1.3669, 2.6949, 2.5013, 1.6700, 2.3305,
           2.5732, 1.4429, 3.7361, 0.3622, 1.1863, 3.2598, 1.4797, 1.8464],
          [2.2152, 1.7590, 2.1203, 2.2781, 1.5945, 3.4510, 0.7441, 2.2781,
           4.2991, 3.6571, 0.5858, 0.1531, 1.1699, 1.7705, 2.3815, 4.6252],
          [3.2104, 0.0000, 1.5439, 0.9998, 4.7417, 6.1559, 2.5014, 0.0000,
           0.9702, 4.6589, 0.8704, 3.0137, 1.4351, 3.4291, 2.7204, 0.0000],
          [1.3331, 0.0000, 1.1099, 0.0000, 2.2040, 5.0141, 3.4569, 2.3799,
           0.0211, 0.0000, 1.3970, 5.0437, 2.6310, 1.1902, 2.5026, 3.4680],
          [0.0000, 0.8551, 2.1562, 3.8895, 3.6830, 1.9341, 0.0000, 1.2730,
           2.1081, 2.3531, 3.2125, 1.9966, 1.5672, 0.2932, 2.5881, 4.8953],
          [4.2007, 1.6488, 3.0444, 0.8151, 3.5430, 3.6271, 0.0000, 1.1090,
           2.1622, 2.9221, 3.8832, 1.1155, 1.0366, 2.9480, 1.8194, 3.1076],
          [3.4463, 1.9803, 0.9093, 1.8730, 2.6628, 2.6708, 1.6128, 2.3187,
           2.0184, 1.8596, 1.6192, 2.9820, 2.9268, 2.5952, 0.2773, 5.0792],
          [0.5733, 0.0829, 0.6572, 5.3495, 0.0000, 3.2668, 1.2783, 0.0000,
           3.0718, 2.3743, 1.8339, 3.4937, 0.9507, 2.7835, 1.7020, 1.0102],
          [2.9502, 2.5122, 0.5845, 3.2259, 2.4018, 2.9150, 0.9397, 1.4719,
           0.2177, 0.6460, 2.1949, 2.7833, 1.1076, 1.9087, 1.4720, 2.1971],
          [0.0000, 2.2390, 1.6610, 1.6258, 1.6919, 1.1058, 1.7584, 0.6260,
           0.1825, 2.3892, 2.5768, 0.9713, 1.8562, 2.2113, 3.0302, 3.6708],
          [0.3410, 2.5623, 2.7462, 1.9850, 2.1436, 0.5381, 2.3181, 4.8379,
           2.5314, 3.1953, 4.3138, 3.3012, 1.2233, 2.5471, 1.8806, 2.2048],
          [2.8760, 2.9583, 3.9989, 1.6430, 0.3611, 3.1757, 1.5778, 4.9496,
           0.2593, 3.0724, 1.6608, 1.9294, 4.1647, 3.6318, 0.6126, 2.0582]],

         [[3.4577, 1.6674, 0.0000, 1.8714, 0.8123, 4.1481, 0.0000, 2.1261,
           5.5423, 5.4777, 2.6742, 3.0088, 3.6285, 2.5830, 2.1739, 3.1035],
          [1.5579, 3.1317, 2.9934, 3.2636, 0.3430, 1.0981, 1.9903, 4.0594,
           0.0000, 0.7269, 0.2830, 0.9485, 3.4854, 2.0858, 0.0000, 1.6762],
          [2.0136, 0.0000, 4.0329, 3.4426, 1.3894, 2.0618, 4.0561, 2.8733,
           3.5286, 5.2788, 0.9776, 1.2410, 1.7345, 1.4984, 2.0781, 1.6395],
          [1.3594, 0.2623, 0.0000, 0.1668, 3.1398, 1.4675, 1.9690, 1.8844,
           0.4161, 2.4913, 3.4079, 1.1372, 1.7426, 1.4050, 1.8071, 0.0000],
          [0.0000, 2.6465, 3.9309, 1.7750, 5.6937, 1.0699, 1.7218, 1.1759,
           0.0000, 2.2342, 0.8675, 3.0320, 2.6563, 2.1762, 3.2581, 2.7422],
          [1.7836, 2.2107, 3.3924, 1.2449, 6.0210, 4.4666, 1.6694, 0.0963,
           2.2846, 1.5150, 2.3071, 3.2440, 4.6757, 1.0058, 0.9858, 1.5130],
          [0.6270, 0.0000, 2.7094, 5.5580, 0.0000, 1.3351, 2.0130, 2.9255,
           3.4447, 2.7887, 1.7787, 2.5826, 0.9535, 2.4549, 3.8931, 1.1979],
          [0.6199, 0.5105, 0.6919, 1.8284, 2.0939, 2.7334, 3.6223, 0.0435,
           0.2251, 1.9707, 2.5664, 1.9798, 1.9999, 1.0753, 1.5748, 2.6936],
          [4.2517, 2.3822, 2.4087, 5.1480, 0.2314, 2.4788, 0.3253, 0.0000,
           3.8549, 0.6802, 0.3371, 2.9616, 2.4014, 2.1535, 0.5087, 5.0462],
          [2.5619, 3.3718, 5.2827, 1.1097, 3.4594, 1.0153, 4.6692, 4.7266,
           2.1410, 1.5963, 0.9566, 3.2570, 2.8374, 2.4816, 2.9548, 2.5448],
          [0.0000, 0.1925, 3.9499, 1.3662, 4.0927, 1.9188, 2.2596, 3.2009,
           0.3434, 2.5359, 3.9037, 1.1781, 1.3226, 0.5032, 3.1795, 0.7106],
          [0.4443, 1.0053, 4.5725, 2.3726, 3.5946, 2.9353, 2.4613, 2.1839,
           1.4696, 1.9291, 0.9574, 0.0872, 2.9631, 0.1152, 1.3303, 1.5308],
          [3.4424, 2.7508, 0.0000, 0.9794, 0.0000, 3.1066, 3.5585, 0.0000,
           1.1119, 2.7061, 1.9118, 2.0873, 0.0000, 2.5971, 2.7527, 3.4812],
          [0.6430, 5.2051, 1.1429, 1.4849, 4.6063, 2.6338, 1.2352, 2.3344,
           2.0232, 4.2520, 0.4216, 1.8364, 1.4718, 1.5962, 0.0000, 5.1628],
          [2.4346, 3.3446, 1.5707, 3.4837, 2.1024, 2.3921, 3.1289, 3.4851,
           1.1204, 1.3736, 2.0918, 0.7311, 1.4617, 2.0526, 2.0200, 1.0639],
          [1.7274, 2.6439, 1.8480, 1.8993, 1.9268, 1.9133, 0.0000, 0.0000,
           0.0144, 0.5881, 3.3007, 1.1843, 2.0076, 3.0166, 1.3227, 0.6332]],

         [[1.2648, 2.3846, 1.4578, 2.1868, 3.7195, 2.3109, 1.9102, 1.5557,
           0.9757, 0.6498, 3.0230, 1.6670, 0.9539, 0.3386, 1.2629, 1.7523],
          [1.8071, 0.9854, 1.3515, 2.5346, 4.3580, 2.3559, 1.6593, 2.1283,
           1.8079, 5.4121, 2.0617, 2.8998, 2.0741, 0.5370, 3.5760, 2.2568],
          [0.8334, 3.7602, 0.0000, 2.2431, 4.4092, 4.0880, 1.0850, 1.7050,
           2.7051, 1.0732, 0.6104, 1.2745, 3.2405, 1.0808, 3.3315, 3.4243],
          [1.0790, 0.1735, 3.0650, 3.1279, 1.9976, 2.6146, 0.3383, 3.2004,
           2.9251, 1.8065, 0.8173, 4.6017, 0.0000, 1.5049, 2.1931, 3.3754],
          [3.4047, 0.0000, 4.4499, 0.0000, 2.4471, 3.0205, 0.0000, 2.5746,
           0.8767, 0.6111, 1.1243, 4.0944, 1.2604, 3.4216, 2.9223, 1.7722],
          [0.6628, 1.0114, 2.7709, 3.0187, 1.5323, 0.9372, 2.3099, 4.7110,
           3.1169, 1.3127, 0.3317, 2.5745, 0.9686, 2.2244, 1.9827, 2.7426],
          [2.1272, 4.7799, 4.5519, 3.1130, 2.3012, 1.8546, 3.4319, 3.1542,
           1.5721, 0.7448, 1.8136, 3.9409, 5.4629, 0.9047, 2.7331, 1.5010],
          [4.7786, 3.7144, 2.1372, 0.3657, 3.4499, 1.3972, 3.6209, 3.7601,
           4.5117, 5.2675, 0.3146, 0.0000, 1.7342, 0.3799, 3.0820, 0.4260],
          [2.6814, 2.6644, 3.8729, 5.3242, 0.0000, 1.8044, 6.5204, 2.6696,
           2.5741, 1.7802, 3.0254, 2.8351, 2.7655, 0.5835, 3.5707, 0.7154],
          [4.8935, 1.8195, 0.4522, 3.3307, 3.6625, 0.0000, 2.7364, 1.0581,
           4.5799, 1.9298, 3.3089, 3.6197, 3.5324, 0.7923, 1.7723, 4.1349],
          [3.1032, 0.0000, 3.4489, 3.2289, 3.4194, 2.5615, 3.5337, 3.8551,
           3.6659, 2.8643, 3.4649, 2.3036, 0.9953, 3.2306, 4.2557, 0.0000],
          [2.3730, 2.9283, 1.7949, 2.5126, 4.6349, 3.3001, 2.4134, 3.4019,
           1.8400, 0.7134, 0.0000, 4.5252, 0.0000, 3.0991, 3.8124, 3.3037],
          [4.5283, 4.4464, 1.6346, 1.3578, 1.6152, 1.5307, 0.6699, 1.7144,
           2.6147, 1.7083, 2.2442, 6.2050, 4.2521, 0.2049, 1.0405, 1.6141],
          [0.3867, 1.7968, 1.6663, 3.2550, 2.6969, 0.4744, 1.5869, 5.0438,
           0.8141, 0.0000, 0.0000, 1.9682, 0.0000, 3.8799, 0.0000, 1.3668],
          [1.8640, 0.0824, 1.6986, 0.0000, 2.5053, 0.0000, 2.1354, 3.8899,
           3.0533, 3.9817, 0.0000, 3.6023, 4.1639, 2.0343, 3.8397, 1.1488],
          [1.9238, 2.2297, 2.9074, 6.8970, 0.2484, 4.1211, 4.7606, 1.8896,
           3.8167, 1.9652, 3.5519, 0.6769, 1.7867, 1.9351, 1.0704, 0.0000]]]])]}
Given groups=1, weight of size [256, 128, 1, 1], expected input[1, 3, 16, 16] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 16], dtype=Float32, value=
[[[[3.64957023e+000, 2.22388363e+000, 3.67178822e+000 ... 1.08518255e+000, 1.71010005e+000, 6.89072609e-001],
   [7.67547429e-001, 2.28161240e+000, 3.05966163e+000 ... 0.00000000e+000, 1.64413059e+000, 1.14226079e+000],
   [1.67030609e+000, 1.88592625e+000, 1.22561204e+000 ... 2.71031451e+000, 4.20790768e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 2.23900437e+000, 1.66099155e+000 ... 2.21131754e+000, 3.03024650e+000, 3.67078066e+000],
   [3.40951234e-001, 2.56230974e+000, 2.74616361e+000 ... 2.54711246e+000, 1.88056135e+000, 2.20480251e+000],
   [2.87602377e+000, 2.95829582e+000, 3.99892807e+000 ... 3.63175249e+000, 6.12575769e-001, 2.05815005e+000]],
  [[3.45769358e+000, 1.66743636e+000, 0.00000000e+000 ... 2.58300018e+000, 2.17385387e+000, 3.10348868e+000],
   [1.55790758e+000, 3.13165593e+000, 2.99340296e+000 ... 2.08581948e+000, 0.00000000e+000, 1.67624509e+000],
   [2.01355433e+000, 0.00000000e+000, 4.03288746e+000 ... 1.49837065e+000, 2.07807207e+000, 1.63953698e+000],
   ...
   [6.43029690e-001, 5.20512056e+000, 1.14292204e+000 ... 1.59620094e+000, 0.00000000e+000, 5.16284800e+000],
   [2.43459105e+000, 3.34462523e+000, 1.57067752e+000 ... 2.05264187e+000, 2.01999307e+000, 1.06385982e+000],
   [1.72735035e+000, 2.64386415e+000, 1.84799898e+000 ... 3.01662564e+000, 1.32269645e+000, 6.33164346e-001]],
  [[1.26476526e+000, 2.38459086e+000, 1.45777583e+000 ... 3.38591933e-001, 1.26293278e+000, 1.75229454e+000],
   [1.80714333e+000, 9.85357046e-001, 1.35148728e+000 ... 5.36957085e-001, 3.57599378e+000, 2.25675273e+000],
   [8.33357990e-001, 3.76023984e+000, 0.00000000e+000 ... 1.08076394e+000, 3.33149147e+000, 3.42432404e+000],
   ...
   [3.86726767e-001, 1.79682744e+000, 1.66634440e+000 ... 3.87987614e+000, 0.00000000e+000, 1.36684406e+000],
   [1.86399281e+000, 8.23582783e-002, 1.69862258e+000 ... 2.03429341e+000, 3.83970642e+000, 1.14879203e+000],
   [1.92384970e+000, 2.22974563e+000, 2.90735197e+000 ... 1.93511379e+000, 1.07035589e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:267

analyse output arrays in iter:317

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[ -5.263672  ,  -5.263672  ,  -5.263672  , ...,  -5.263672  ,
           -5.263672  ,  -5.263672  ],
         [  0.8735657 ,   0.8735657 ,   0.8735657 , ...,   0.8735657 ,
            0.8735657 ,   0.8735657 ],
         [ -1.5859375 ,  -1.5859375 ,  -1.5859375 , ...,  -1.5859375 ,
           -1.5859375 ,  -1.5859375 ],
         ...,
         [ -5.5249023 ,  -5.5249023 ,  -5.5249023 , ...,  -5.5249023 ,
           -5.5249023 ,  -5.5249023 ],
         [  2.8061218 ,   2.8061218 ,   2.8061218 , ...,   2.8061218 ,
            2.8061218 ,   2.8061218 ],
         [  6.6437874 ,   6.6437874 ,   6.6437874 , ...,   6.6437874 ,
            6.6437874 ,   6.6437874 ]],

        [[ -0.62506104,  -0.62506104,  -0.62506104, ...,  -0.62506104,
           -0.62506104,  -0.62506104],
         [-10.155319  , -10.155319  , -10.155319  , ..., -10.155319  ,
          -10.155319  , -10.155319  ],
         [  5.229309  ,   5.229309  ,   5.229309  , ...,   5.229309  ,
            5.229309  ,   5.229309  ],
         ...,
         [  4.1780396 ,   4.1780396 ,   4.1780396 , ...,   4.1780396 ,
            4.1780396 ,   4.1780396 ],
         [  4.7207184 ,   4.7207184 ,   4.7207184 , ...,   4.7207184 ,
            4.7207184 ,   4.7207184 ],
         [  1.8792114 ,   1.8792114 ,   1.8792114 , ...,   1.8792114 ,
            1.8792114 ,   1.8792114 ]],

        [[ -3.6450806 ,  -3.6450806 ,  -3.6450806 , ...,  -3.6450806 ,
           -3.6450806 ,  -3.6450806 ],
         [  9.30368   ,   9.30368   ,   9.30368   , ...,   9.30368   ,
            9.30368   ,   9.30368   ],
         [  8.569214  ,   8.569214  ,   8.569214  , ...,   8.569214  ,
            8.569214  ,   8.569214  ],
         ...,
         [  0.22315216,   0.22315216,   0.22315216, ...,   0.22315216,
            0.22315216,   0.22315216],
         [ -2.398468  ,  -2.398468  ,  -2.398468  , ...,  -2.398468  ,
           -2.398468  ,  -2.398468  ],
         [ 16.017006  ,  16.017006  ,  16.017006  , ...,  16.017006  ,
           16.017006  ,  16.017006  ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [1, 12, 17]}
ms node:
{'name': 'linear', 'output': array([[[[ -5.262709  ,  -5.262709  ,  -5.262709  , ...,  -5.2627087 ,
           -5.2627087 ,  -5.2627087 ],
         [  0.87367   ,   0.87367   ,   0.87367   , ...,   0.87366974,
            0.87366974,   0.87366974],
         [ -1.5878379 ,  -1.5878379 ,  -1.5878379 , ...,  -1.5878377 ,
           -1.5878377 ,  -1.5878377 ],
         ...,
         [ -5.5243664 ,  -5.5243664 ,  -5.5243664 , ...,  -5.5243664 ,
           -5.5243664 ,  -5.5243664 ],
         [  2.8074248 ,   2.8074248 ,   2.8074248 , ...,   2.807423  ,
            2.807423  ,   2.807423  ],
         [  6.6434546 ,   6.6434546 ,   6.6434546 , ...,   6.643454  ,
            6.643454  ,   6.643454  ]],

        [[ -0.6266118 ,  -0.6266118 ,  -0.6266118 , ...,  -0.62661195,
           -0.62661195,  -0.62661195],
         [-10.152259  , -10.152259  , -10.152259  , ..., -10.152258  ,
          -10.152258  , -10.152258  ],
         [  5.230045  ,   5.230045  ,   5.230045  , ...,   5.230045  ,
            5.230045  ,   5.230045  ],
         ...,
         [  4.1769466 ,   4.1769466 ,   4.1769466 , ...,   4.176946  ,
            4.176946  ,   4.176946  ],
         [  4.7200756 ,   4.7200756 ,   4.7200756 , ...,   4.7200756 ,
            4.7200756 ,   4.7200756 ],
         [  1.8788455 ,   1.8788455 ,   1.8788455 , ...,   1.878845  ,
            1.878845  ,   1.878845  ]],

        [[ -3.6457076 ,  -3.6457076 ,  -3.6457076 , ...,  -3.645708  ,
           -3.645708  ,  -3.645708  ],
         [  9.305707  ,   9.305707  ,   9.305707  , ...,   9.305707  ,
            9.305707  ,   9.305707  ],
         [  8.56849   ,   8.56849   ,   8.56849   , ...,   8.56849   ,
            8.56849   ,   8.56849   ],
         ...,
         [  0.2241584 ,   0.2241584 ,   0.2241584 , ...,   0.22415817,
            0.22415817,   0.22415817],
         [ -2.3973508 ,  -2.3973508 ,  -2.3973508 , ...,  -2.39735   ,
           -2.39735   ,  -2.39735   ],
         [ 16.018005  ,  16.018005  ,  16.018005  , ...,  16.018003  ,
           16.018003  ,  16.018003  ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [1, 12, 17]}
torch node:
{'name': 'linear', 'output': array([[[[ -5.262709  ,  -5.262709  ,  -5.262709  , ...,  -5.2627087 ,
           -5.2627087 ,  -5.2627087 ],
         [  0.87367   ,   0.87367   ,   0.87367   , ...,   0.87366974,
            0.87366974,   0.87366974],
         [ -1.5878379 ,  -1.5878379 ,  -1.5878379 , ...,  -1.5878377 ,
           -1.5878377 ,  -1.5878377 ],
         ...,
         [ -5.5243664 ,  -5.5243664 ,  -5.5243664 , ...,  -5.5243664 ,
           -5.5243664 ,  -5.5243664 ],
         [  2.8074248 ,   2.8074248 ,   2.8074248 , ...,   2.807423  ,
            2.807423  ,   2.807423  ],
         [  6.6434546 ,   6.6434546 ,   6.6434546 , ...,   6.643454  ,
            6.643454  ,   6.643454  ]],

        [[ -0.6266118 ,  -0.6266118 ,  -0.6266118 , ...,  -0.62661195,
           -0.62661195,  -0.62661195],
         [-10.152259  , -10.152259  , -10.152259  , ..., -10.152258  ,
          -10.152258  , -10.152258  ],
         [  5.230045  ,   5.230045  ,   5.230045  , ...,   5.230045  ,
            5.230045  ,   5.230045  ],
         ...,
         [  4.1769466 ,   4.1769466 ,   4.1769466 , ...,   4.176946  ,
            4.176946  ,   4.176946  ],
         [  4.7200756 ,   4.7200756 ,   4.7200756 , ...,   4.7200756 ,
            4.7200756 ,   4.7200756 ],
         [  1.8788455 ,   1.8788455 ,   1.8788455 , ...,   1.878845  ,
            1.878845  ,   1.878845  ]],

        [[ -3.6457076 ,  -3.6457076 ,  -3.6457076 , ...,  -3.645708  ,
           -3.645708  ,  -3.645708  ],
         [  9.305707  ,   9.305707  ,   9.305707  , ...,   9.305707  ,
            9.305707  ,   9.305707  ],
         [  8.56849   ,   8.56849   ,   8.56849   , ...,   8.56849   ,
            8.56849   ,   8.56849   ],
         ...,
         [  0.2241584 ,   0.2241584 ,   0.2241584 , ...,   0.22415817,
            0.22415817,   0.22415817],
         [ -2.3973508 ,  -2.3973508 ,  -2.3973508 , ...,  -2.39735   ,
           -2.39735   ,  -2.39735   ],
         [ 16.018005  ,  16.018005  ,  16.018005  , ...,  16.018003  ,
           16.018003  ,  16.018003  ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [1, 12, 17]}

generate models:274

analyse the exceptions in iter:318
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 1.0127,  1.4198, -2.0810,  ..., -0.2710, -0.5027,  0.7274],
           [-1.3262,  0.0577, -0.5603,  ..., -0.6554,  0.3790,  0.2618],
           [-0.1688, -0.9150, -0.2751,  ...,  0.0550,  0.3184,  1.4550],
           ...,
           [ 0.5024,  0.6817, -0.1116,  ...,  0.3975,  0.7150,  1.1218],
           [ 0.6447,  3.0413,  1.0373,  ...,  0.0381,  0.2252, -0.5935],
           [ 0.8115,  0.2450,  0.7781,  ...,  1.8953,  0.8150, -0.0831]],

          [[ 1.0185, -0.7308, -0.2424,  ...,  0.2368,  0.9487,  0.3044],
           [ 0.7781,  0.5148,  1.2888,  ...,  1.1709, -0.5515,  0.6745],
           [ 0.3770,  0.3137,  0.2118,  ...,  0.8832,  0.8820, -0.8779],
           ...,
           [-0.3994,  0.6879, -0.8784,  ..., -1.0834, -0.5659,  0.2805],
           [ 1.0538, -0.8779,  0.0194,  ...,  0.6235,  1.0135,  0.3954],
           [ 0.9016, -0.2113, -0.1701,  ...,  0.2147, -1.4030,  0.3146]],

          [[ 0.1132, -1.0729, -1.0129,  ...,  0.4064, -1.4892, -0.4910],
           [ 0.3041, -0.8549,  0.3134,  ..., -1.4746, -0.1439,  0.9129],
           [-2.3307, -0.8217,  0.9476,  ..., -0.5873,  1.6845,  0.4780],
           ...,
           [-1.5750, -0.6482, -0.2106,  ...,  0.4062, -0.2644, -0.7351],
           [ 0.0573,  0.7297,  0.6712,  ...,  0.2364,  1.1712,  0.7068],
           [ 1.7770,  0.2029,  0.2891,  ...,  0.6222, -0.7201,  0.9944]]]]])}
Given groups=1, weight of size [128, 128, 3, 3], expected input[1, 3, 32, 32] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[1.01267314e+000, 1.41981697e+000, -2.08100414e+000 ... -2.71023661e-001, -5.02741039e-001, 7.27416277e-001],
    [-1.32624638e+000, 5.77324927e-002, -5.60263574e-001 ... -6.55404866e-001, 3.79006773e-001, 2.61836112e-001],
    [-1.68769971e-001, -9.15041268e-001, -2.75051713e-001 ... 5.49801141e-002, 3.18382680e-001, 1.45504606e+000],
    ...
    [5.02401412e-001, 6.81677461e-001, -1.11611567e-001 ... 3.97478312e-001, 7.15028167e-001, 1.12182021e+000],
    [6.44682288e-001, 3.04129958e+000, 1.03733218e+000 ... 3.80580984e-002, 2.25163653e-001, -5.93456984e-001],
    [8.11500967e-001, 2.44988009e-001, 7.78128803e-001 ... 1.89534187e+000, 8.15029323e-001, -8.30518305e-002]],
   [[1.01848745e+000, -7.30825484e-001, -2.42416218e-001 ... 2.36778900e-001, 9.48654711e-001, 3.04366738e-001],
    [7.78087795e-001, 5.14838815e-001, 1.28881037e+000 ... 1.17086601e+000, -5.51528335e-001, 6.74520373e-001],
    [3.77049923e-001, 3.13668787e-001, 2.11796463e-001 ... 8.83199930e-001, 8.82016718e-001, -8.77896488e-001],
    ...
    [-3.99381816e-001, 6.87947035e-001, -8.78384590e-001 ... -1.08340728e+000, -5.65877974e-001, 2.80453622e-001],
    [1.05381835e+000, -8.77914727e-001, 1.93724055e-002 ... 6.23492002e-001, 1.01351881e+000, 3.95367026e-001],
    [9.01631892e-001, -2.11258501e-001, -1.70060560e-001 ... 2.14681730e-001, -1.40304947e+000, 3.14620435e-001]],
   [[1.13182284e-001, -1.07289672e+000, -1.01294875e+000 ... 4.06384289e-001, -1.48917890e+000, -4.91024792e-001],
    [3.04077208e-001, -8.54876757e-001, 3.13429236e-001 ... -1.47456741e+000, -1.43936977e-001, 9.12946522e-001],
    [-2.33070660e+000, -8.21740627e-001, 9.47621942e-001 ... -5.87253153e-001, 1.68447101e+000, 4.78001893e-001],
    ...
    [-1.57499480e+000, -6.48200393e-001, -2.10563496e-001 ... 4.06168818e-001, -2.64433086e-001, -7.35128582e-001],
    [5.73225915e-002, 7.29678035e-001, 6.71177328e-001 ... 2.36397520e-001, 1.17124367e+000, 7.06794262e-001],
    [1.77698922e+000, 2.02867940e-001, 2.89129883e-001 ... 6.22214615e-001, -7.20100820e-001, 9.94411051e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:275

analyse output arrays in iter:319

pre layer res:
11:add
{'name': 'add', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [14, 20], 'to': [15]}
tf node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 16, 16]), 'from': [11], 'to': [9]}
ms node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 512, 16, 16), 'from': [11], 'to': [9]}
torch node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 16, 16]), 'from': [11], 'to': [9]}

generate models:276

analyse output arrays in iter:321

pre layer res:
0:relu
{'name': 'relu', 'output': array([[[[0.        , 1.116738  , 0.9761789 , ..., 0.        ,
          1.6543001 , 0.        ],
         [0.18111494, 0.        , 0.7978699 , ..., 1.0804379 ,
          0.        , 0.        ],
         [0.36378232, 0.        , 0.        , ..., 0.        ,
          0.4122951 , 0.        ],
         ...,
         [0.        , 0.10828313, 0.        , ..., 0.13588227,
          0.        , 0.30183524],
         [0.9837088 , 0.22035138, 0.        , ..., 0.16937427,
          1.0849442 , 1.3453816 ],
         [0.8268225 , 0.81511045, 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[1.1305579 , 0.        , 0.        , ..., 0.        ,
          0.        , 1.0695461 ],
         [0.        , 1.1998291 , 0.26393664, ..., 0.13717277,
          0.68240553, 0.        ],
         [0.        , 1.6986048 , 0.        , ..., 0.47036305,
          0.6040559 , 0.        ],
         ...,
         [0.        , 0.0480504 , 0.49459514, ..., 0.        ,
          0.        , 1.4506398 ],
         [0.12098824, 0.        , 0.        , ..., 0.5344369 ,
          0.        , 0.44259673],
         [0.22243781, 0.8808113 , 0.19937058, ..., 0.        ,
          1.0229591 , 1.0093977 ]],

        [[0.        , 0.        , 0.27199626, ..., 0.        ,
          0.        , 0.        ],
         [0.0073249 , 0.        , 0.        , ..., 0.        ,
          1.234111  , 0.0216324 ],
         [0.        , 0.        , 0.7675956 , ..., 0.        ,
          0.385109  , 0.78536886],
         ...,
         [0.        , 0.1965184 , 0.31402045, ..., 0.        ,
          0.        , 0.        ],
         [0.01892074, 0.        , 0.        , ..., 0.5261614 ,
          0.        , 0.6409547 ],
         [0.5597221 , 0.34820098, 0.        , ..., 0.4517154 ,
          0.67008406, 0.29160768]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [2]}
tf node:
{'name': 'log', 'output': array([[[[       -inf,  0.1104119 , -0.02410943, ...,        -inf,
           0.50337803,        -inf],
         [-1.7086234 ,        -inf, -0.22580971, ...,  0.07736642,
                 -inf,        -inf],
         [-1.0111996 ,        -inf,        -inf, ...,        -inf,
          -0.8860159 ,        -inf],
         ...,
         [       -inf, -2.2230058 ,        -inf, ..., -1.9959664 ,
                 -inf, -1.197874  ],
         [-0.01642536, -1.5125318 ,        -inf, ..., -1.7756444 ,
           0.0815286 ,  0.2966777 ],
         [-0.19016522, -0.20443165,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[ 0.12271123,        -inf,        -inf, ...,        -inf,
                 -inf,  0.06723435],
         [       -inf,  0.18217914, -1.3320463 , ..., -1.9865141 ,
          -0.3821312 ,        -inf],
         [       -inf,  0.5298072 ,        -inf, ..., -0.7542504 ,
          -0.5040886 ,        -inf],
         ...,
         [       -inf, -3.0355048 , -0.70401573, ...,        -inf,
                 -inf,  0.37200475],
         [-2.112062  ,        -inf,        -inf, ..., -0.6265416 ,
                 -inf, -0.81509626],
         [-1.5031077 , -0.1269119 , -1.61259   , ...,        -inf,
           0.02269952,  0.00935386]],

        [[       -inf,        -inf, -1.3019669 , ...,        -inf,
                 -inf,        -inf],
         [-4.916476  ,        -inf,        -inf, ...,        -inf,
           0.21035084, -3.8335629 ],
         [       -inf,        -inf, -0.26449227, ...,        -inf,
          -0.9542289 , -0.24160178],
         ...,
         [       -inf, -1.6269991 , -1.1582972 , ...,        -inf,
                 -inf,        -inf],
         [-3.9674966 ,        -inf,        -inf, ..., -0.6421473 ,
                 -inf, -0.44479653],
         [-0.5803148 , -1.0549755 ,        -inf, ..., -0.79470295,
          -0.40035212, -1.2323459 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [3, 7]}
ms node:
{'name': 'log', 'output': array([[[[       -inf,  0.11041248, -0.02411086, ...,        -inf,
           0.5033756 ,        -inf],
         [-1.7086235 ,        -inf, -0.2258121 , ...,  0.07736352,
                 -inf,        -inf],
         [-1.0111997 ,        -inf,        -inf, ...,        -inf,
          -0.88601834,        -inf],
         ...,
         [       -inf, -2.223007  ,        -inf, ..., -1.9959693 ,
                 -inf, -1.1978755 ],
         [-0.01642679, -1.5125328 ,        -inf, ..., -1.7756463 ,
           0.0815257 ,  0.29667577],
         [-0.19016762, -0.20443407,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[ 0.12270806,        -inf,        -inf, ...,        -inf,
                 -inf,  0.06723145],
         [       -inf,  0.18217765, -1.3320428 , ..., -1.9865135 ,
          -0.3821331 ,        -inf],
         [       -inf,  0.52980393,        -inf, ..., -0.7542504 ,
          -0.5040901 ,        -inf],
         ...,
         [       -inf, -3.0355072 , -0.70401716, ...,        -inf,
                 -inf,  0.3720047 ],
         [-2.112062  ,        -inf,        -inf, ..., -0.62654454,
                 -inf, -0.8150972 ],
         [-1.5031087 , -0.12691288, -1.6125925 , ...,        -inf,
           0.02269809,  0.00935243]],

        [[       -inf,        -inf, -1.3019699 , ...,        -inf,
                 -inf,        -inf],
         [-4.916476  ,        -inf,        -inf, ...,        -inf,
           0.21035165, -3.83356   ],
         [       -inf,        -inf, -0.26449448, ...,        -inf,
          -0.9542311 , -0.2416042 ],
         ...,
         [       -inf, -1.6270016 , -1.1582943 , ...,        -inf,
                 -inf,        -inf],
         [-3.967498  ,        -inf,        -inf, ..., -0.6421439 ,
                 -inf, -0.44479373],
         [-0.5803143 , -1.0549726 ,        -inf, ..., -0.7947039 ,
          -0.40035403, -1.2323475 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [3, 7]}
torch node:
{'name': 'log', 'output': array([[[[       -inf,  0.1104119 , -0.02410943, ...,        -inf,
           0.50337803,        -inf],
         [-1.7086234 ,        -inf, -0.22580971, ...,  0.07736642,
                 -inf,        -inf],
         [-1.0111996 ,        -inf,        -inf, ...,        -inf,
          -0.8860159 ,        -inf],
         ...,
         [       -inf, -2.2230058 ,        -inf, ..., -1.9959664 ,
                 -inf, -1.197874  ],
         [-0.01642536, -1.5125318 ,        -inf, ..., -1.7756444 ,
           0.0815286 ,  0.2966777 ],
         [-0.19016522, -0.20443165,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[ 0.12271123,        -inf,        -inf, ...,        -inf,
                 -inf,  0.06723435],
         [       -inf,  0.18217914, -1.3320463 , ..., -1.986514  ,
          -0.3821312 ,        -inf],
         [       -inf,  0.5298072 ,        -inf, ..., -0.7542504 ,
          -0.5040886 ,        -inf],
         ...,
         [       -inf, -3.0355048 , -0.70401573, ...,        -inf,
                 -inf,  0.37200475],
         [-2.112062  ,        -inf,        -inf, ..., -0.6265416 ,
                 -inf, -0.81509626],
         [-1.5031077 , -0.1269119 , -1.61259   , ...,        -inf,
           0.02269952,  0.00935386]],

        [[       -inf,        -inf, -1.3019669 , ...,        -inf,
                 -inf,        -inf],
         [-4.916476  ,        -inf,        -inf, ...,        -inf,
           0.21035084, -3.8335629 ],
         [       -inf,        -inf, -0.26449227, ...,        -inf,
          -0.9542289 , -0.24160178],
         ...,
         [       -inf, -1.6269991 , -1.1582972 , ...,        -inf,
                 -inf,        -inf],
         [-3.9674966 ,        -inf,        -inf, ..., -0.6421473 ,
                 -inf, -0.44479656],
         [-0.5803148 , -1.0549755 ,        -inf, ..., -0.79470295,
          -0.40035212, -1.2323459 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [3, 7]}

generate models:277

analyse output arrays in iter:322

pre layer res:
0:relu
{'name': 'relu', 'output': array([[[[0.        , 0.59334826, 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 1.2113452 , 0.        , ..., 0.35089737,
          0.        , 0.        ],
         [0.5949361 , 0.24910639, 0.        , ..., 1.6232994 ,
          0.6580964 , 0.        ],
         ...,
         [1.8495078 , 1.0606999 , 2.0185478 , ..., 0.5885196 ,
          0.0882585 , 0.2717794 ],
         [0.        , 0.        , 0.8400192 , ..., 0.        ,
          1.6865139 , 0.38965568],
         [0.99018735, 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.10911889, 2.0763135 , ..., 1.172364  ,
          1.175454  , 0.        ],
         [1.9216219 , 0.        , 0.        , ..., 0.20283198,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.955115  ,
          0.        , 0.18577608],
         ...,
         [0.00238716, 0.31077138, 0.5139907 , ..., 0.        ,
          1.3416911 , 0.        ],
         [0.        , 0.51977396, 0.0311427 , ..., 0.5827509 ,
          0.        , 0.        ],
         [1.2091513 , 0.48701173, 0.45267418, ..., 0.        ,
          0.12458624, 1.7495773 ]],

        [[0.        , 0.0686707 , 0.40326217, ..., 1.2936032 ,
          0.        , 1.91983   ],
         [0.40003327, 0.        , 0.71515745, ..., 0.        ,
          0.        , 0.4725514 ],
         [0.        , 0.        , 0.        , ..., 0.73089546,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.82894945, 0.        , 0.2861125 , ..., 1.6577564 ,
          2.2503102 , 0.        ],
         [0.        , 0.6902051 , 0.        , ..., 0.7102718 ,
          0.14390133, 0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [8]}
tf node:
{'name': 'log', 'output': array([[[[       -inf, -0.5219737 ,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,  0.19173148,        -inf, ..., -1.0472615 ,
                 -inf,        -inf],
         [-0.5193013 , -1.3898752 ,        -inf, ...,  0.4844607 ,
          -0.4184039 ,        -inf],
         ...,
         [ 0.61491954,  0.05892901,  0.70237833, ..., -0.5301451 ,
          -2.4274852 , -1.3027647 ],
         [       -inf,        -inf, -0.1743305 , ...,        -inf,
           0.5226636 , -0.94249177],
         [-0.00986111,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf, -2.2153172 ,  0.730594  , ...,  0.15902223,
           0.16165447,        -inf],
         [ 0.6531696 ,        -inf,        -inf, ..., -1.5953773 ,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ..., -0.0459235 ,
                 -inf, -1.6832132 ],
         ...,
         [-6.0376525 , -1.1686977 , -0.6655501 , ...,        -inf,
           0.29393086,        -inf],
         [       -inf, -0.65436125, -3.4691756 , ..., -0.53999543,
                 -inf,        -inf],
         [ 0.18991868, -0.71946704, -0.79258263, ...,        -inf,
          -2.0827572 ,  0.5593742 ]],

        [[       -inf, -2.6784327 , -0.9081684 , ...,  0.25743148,
                 -inf,  0.65223664],
         [-0.91620755,        -inf, -0.33525255, ...,        -inf,
                 -inf, -0.74960876],
         [       -inf,        -inf,        -inf, ..., -0.31348485,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-0.1875961 ,        -inf, -1.2513702 , ...,  0.50546515,
           0.81106806,        -inf],
         [       -inf, -0.3707665 ,        -inf, ..., -0.3421076 ,
          -1.9386274 ,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[       -inf, -0.5219752 ,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,  0.19173   ,        -inf, ..., -1.0472586 ,
                 -inf,        -inf],
         [-0.5193028 , -1.3898766 ,        -inf, ...,  0.4844583 ,
          -0.41840583,        -inf],
         ...,
         [ 0.6149196 ,  0.05893242,  0.7023769 , ..., -0.5301466 ,
          -2.4274824 , -1.3027675 ],
         [       -inf,        -inf, -0.17433378, ...,        -inf,
           0.5226603 , -0.94249403],
         [-0.00986254,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf, -2.2153182 ,  0.7305974 , ...,  0.15902074,
           0.161653  ,        -inf],
         [ 0.65316963,        -inf,        -inf, ..., -1.5953797 ,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ..., -0.04592348,
                 -inf, -1.6832132 ],
         ...,
         [-6.0376515 , -1.168697  , -0.66555154, ...,        -inf,
           0.29392895,        -inf],
         [       -inf, -0.65435785, -3.469177  , ..., -0.5399969 ,
                 -inf,        -inf],
         [ 0.1899172 , -0.7194685 , -0.79258364, ...,        -inf,
          -2.0827587 ,  0.5593732 ]],

        [[       -inf, -2.678432  , -0.9081708 , ...,  0.2574343 ,
                 -inf,  0.65223664],
         [-0.91621   ,        -inf, -0.3352497 , ...,        -inf,
                 -inf, -0.7496087 ],
         [       -inf,        -inf,        -inf, ..., -0.3134849 ,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-0.18759939,        -inf, -1.2513734 , ...,  0.5054619 ,
           0.8110649 ,        -inf],
         [       -inf, -0.37076363,        -inf, ..., -0.34210473,
          -1.9386306 ,        -inf]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[       -inf, -0.5219737 ,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,  0.19173147,        -inf, ..., -1.0472615 ,
                 -inf,        -inf],
         [-0.5193013 , -1.3898752 ,        -inf, ...,  0.4844607 ,
          -0.4184039 ,        -inf],
         ...,
         [ 0.61491954,  0.05892901,  0.70237833, ..., -0.5301451 ,
          -2.4274852 , -1.3027647 ],
         [       -inf,        -inf, -0.1743305 , ...,        -inf,
           0.5226636 , -0.94249177],
         [-0.00986111,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf, -2.2153172 ,  0.730594  , ...,  0.15902223,
           0.16165447,        -inf],
         [ 0.6531696 ,        -inf,        -inf, ..., -1.5953773 ,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ..., -0.0459235 ,
                 -inf, -1.6832132 ],
         ...,
         [-6.0376525 , -1.1686977 , -0.6655501 , ...,        -inf,
           0.29393086,        -inf],
         [       -inf, -0.65436125, -3.4691753 , ..., -0.53999543,
                 -inf,        -inf],
         [ 0.18991868, -0.71946704, -0.79258263, ...,        -inf,
          -2.0827572 ,  0.5593742 ]],

        [[       -inf, -2.6784327 , -0.9081684 , ...,  0.25743148,
                 -inf,  0.65223664],
         [-0.91620755,        -inf, -0.33525255, ...,        -inf,
                 -inf, -0.74960876],
         [       -inf,        -inf,        -inf, ..., -0.31348485,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-0.1875961 ,        -inf, -1.2513702 , ...,  0.50546515,
           0.81106806,        -inf],
         [       -inf, -0.3707665 ,        -inf, ..., -0.3421076 ,
          -1.9386274 ,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [1]}

generate models:278

analyse output arrays in iter:336

pre layer res:
16:add
{'name': 'add', 'output': array([[-3.8214839, -2.2010825, -0.7268723, ...,  1.       ,  1.       ,
         1.       ]], dtype=float32), 'output_shape': TensorShape([1, 204800]), 'from': [12, 19], 'to': [14]}
tf node:
{'name': 'cos', 'output': array([[-0.7776412, -0.589376 ,  0.7472565, ...,  0.5403023,  0.5403023,
         0.5403023]], dtype=float32), 'output_shape': TensorShape([1, 204800]), 'from': [16], 'to': [15]}
ms node:
{'name': 'cos', 'output': array([[-0.7776411, -0.589376 ,  0.7472565, ...,  0.5403023,  0.5403023,
         0.5403023]], dtype=float32), 'output_shape': (1, 204800), 'from': [16], 'to': [15]}
torch node:
{'name': 'cos', 'output': array([[-0.7776411 , -0.589376  ,  0.7472565 , ...,  0.54030234,
         0.54030234,  0.54030234]], dtype=float32), 'output_shape': torch.Size([1, 204800]), 'from': [16], 'to': [15]}

generate models:291

analyse the exceptions in iter:339
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 1.1976, -0.3354, -0.5867,  ..., -2.0966,  0.3377,  0.8745],
          [ 1.4058,  0.9152, -0.2706,  ...,  0.4939,  0.6879, -0.3842],
          [-1.2641,  0.8232,  0.4214,  ...,  0.7101, -0.1488,  0.2801],
          ...,
          [ 0.1096,  0.7357,  0.6454,  ...,  0.9099,  1.4211,  0.0935],
          [-0.0960, -0.1667, -0.2278,  ...,  0.3440, -1.0513, -0.3410],
          [ 0.7318,  0.6176, -0.3344,  ...,  0.8103,  0.3214, -0.1292]],

         [[ 0.5480, -0.8165, -1.3201,  ..., -2.3968,  0.5628, -1.1809],
          [-0.3069,  2.1978, -0.8856,  ...,  0.7328, -0.5899,  0.1147],
          [-1.3413, -0.4003,  0.8029,  ..., -1.1369, -1.8427, -1.0689],
          ...,
          [-1.1158,  0.1928,  0.9915,  ..., -0.8800,  0.3942,  0.4418],
          [-0.6523,  0.4130,  0.1564,  ..., -1.5975,  0.4997,  0.3288],
          [-0.7034, -0.1026,  0.3746,  ..., -0.3379, -1.4774, -0.7898]],

         [[ 1.1886, -0.6591,  1.5407,  ...,  0.3294,  0.7822,  1.2531],
          [ 0.8904,  1.2798,  1.4100,  ..., -1.3534, -0.8577,  0.3779],
          [-0.1843, -0.6384, -0.6728,  ..., -0.0696,  0.6607, -0.3471],
          ...,
          [-1.0210, -1.1584,  1.4494,  ...,  1.2188, -0.8685,  0.8485],
          [ 0.2147, -0.0068, -1.1294,  ...,  1.4539, -0.9882,  1.2300],
          [-1.0436, -0.7135, -1.1193,  ...,  0.6154, -0.6407,  1.2193]]]])]}
Given groups=1, weight of size [128, 128, 1, 1], expected input[1, 3, 32, 32] to have 128 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[1.19759727e+000, -3.35414201e-001, -5.86729705e-001 ... -2.09660101e+000, 3.37713808e-001, 8.74542952e-001],
   [1.40575528e+000, 9.15242732e-001, -2.70554811e-001 ... 4.93897945e-001, 6.87892318e-001, -3.84171396e-001],
   [-1.26408505e+000, 8.23240399e-001, 4.21408862e-001 ... 7.10094273e-001, -1.48808300e-001, 2.80056834e-001],
   ...
   [1.09595537e-001, 7.35743344e-001, 6.45397663e-001 ... 9.09873366e-001, 1.42108238e+000, 9.35366973e-002],
   [-9.60445479e-002, -1.66738391e-001, -2.27832824e-001 ... 3.44011515e-001, -1.05133176e+000, -3.40990484e-001],
   [7.31783628e-001, 6.17550850e-001, -3.34379911e-001 ... 8.10325980e-001, 3.21406454e-001, -1.29247993e-001]],
  [[5.47987819e-001, -8.16453040e-001, -1.32011616e+000 ... -2.39678311e+000, 5.62811792e-001, -1.18093431e+000],
   [-3.06864649e-001, 2.19775057e+000, -8.85643244e-001 ... 7.32801437e-001, -5.89901805e-001, 1.14697158e-001],
   [-1.34130549e+000, -4.00320143e-001, 8.02876294e-001 ... -1.13689744e+000, -1.84265602e+000, -1.06894040e+000],
   ...
   [-1.11582053e+000, 1.92848966e-001, 9.91485417e-001 ... -8.79983664e-001, 3.94177258e-001, 4.41816270e-001],
   [-6.52310371e-001, 4.13023144e-001, 1.56406358e-001 ... -1.59751713e+000, 4.99655128e-001, 3.28763604e-001],
   [-7.03428447e-001, -1.02600276e-001, 3.74586791e-001 ... -3.37904483e-001, -1.47736537e+000, -7.89769709e-001]],
  [[1.18859994e+000, -6.59085512e-001, 1.54065514e+000 ... 3.29351395e-001, 7.82199919e-001, 1.25312722e+000],
   [8.90394747e-001, 1.27980959e+000, 1.40998149e+000 ... -1.35344779e+000, -8.57663214e-001, 3.77939671e-001],
   [-1.84309989e-001, -6.38427079e-001, -6.72759831e-001 ... -6.96255565e-002, 6.60667062e-001, -3.47079277e-001],
   ...
   [-1.02099729e+000, -1.15841186e+000, 1.44942224e+000 ... 1.21883142e+000, -8.68453920e-001, 8.48533273e-001],
   [2.14740425e-001, -6.83216704e-003, -1.12936604e+000 ... 1.45390415e+000, -9.88226533e-001, 1.22996569e+000],
   [-1.04356325e+000, -7.13547349e-001, -1.11930668e+000 ... 6.15373194e-001, -6.40733182e-001, 1.21930861e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:294

analyse output arrays in iter:341

pre layer res:
5:arctan
{'name': 'arctan', 'output': array([[[[ 6.56407058e-01,  1.05659974e+00,  1.14594972e+00,
           9.02386189e-01,  9.46989536e-01,  5.96332788e-01,
           1.74471423e-01,  4.57340419e-01,  1.93007827e-01,
           4.30484235e-01,  6.99280202e-01,  6.95367873e-01,
           5.22686899e-01,  7.27004826e-01,  5.30427396e-01,
           9.08938587e-01],
         [ 4.08393502e-01,  5.65062821e-01,  1.12092614e+00,
           8.33845735e-01,  1.01522446e+00,  2.74620205e-01,
           6.37315035e-01,  6.21343970e-01,  7.55482852e-01,
           3.57461870e-01,  8.93589854e-01,  4.51034039e-01,
           8.93381715e-01, -2.38439634e-01,  9.92486775e-01,
           4.24626946e-01],
         [ 5.01082063e-01,  6.81560934e-01,  6.91557586e-01,
           9.87782001e-01,  9.08381283e-01,  2.60259062e-01,
           8.63801837e-01,  9.85647321e-01,  6.95841074e-01,
          -4.66674455e-02,  4.42142636e-01,  9.12524045e-01,
           1.06848073e+00, -3.06021601e-01,  1.00889683e+00,
           4.83430028e-01],
         [ 7.83551574e-01,  9.95901585e-01,  1.01880395e+00,
           9.24731255e-01,  4.33591992e-01,  7.79967129e-01,
           7.44492888e-01,  1.10996842e+00,  3.02645802e-01,
           8.81228864e-01,  2.65516341e-01,  1.01931465e+00,
           3.88953328e-01,  1.13732660e+00,  6.83837593e-01,
           1.02376366e+00],
         [ 9.71360266e-01,  1.80475056e-01,  4.53389913e-01,
           2.85999149e-01,  7.32459366e-01,  5.06015480e-01,
           6.11036062e-01,  8.28427911e-01,  1.03813219e+00,
           3.90276372e-01,  1.06572866e+00,  6.14192128e-01,
           8.35490406e-01,  6.01859391e-01,  1.08783126e+00,
           6.70110404e-01],
         [ 9.39961851e-01,  1.74397588e-01, -1.23855285e-01,
          -2.15308610e-02,  2.94708192e-01,  1.04161191e+00,
           4.30087298e-01,  2.97604680e-01,  1.93147045e-02,
           1.07873845e+00,  1.02079594e+00,  6.63981855e-01,
          -3.30211520e-01,  1.07663965e+00,  4.55442429e-01,
           9.33920205e-01],
         [ 1.01992822e+00,  5.79224229e-01,  2.36705422e-01,
           9.09801543e-01,  2.30403990e-01,  9.45852697e-01,
           9.02937114e-01,  1.19414043e+00, -5.88329554e-01,
           8.98234248e-01,  4.47371006e-01,  9.33555484e-01,
           1.61038786e-02,  4.48834270e-01,  2.17337720e-02,
           1.01412630e+00],
         [ 5.12881160e-01,  7.55358458e-01,  8.31155539e-01,
           6.35948896e-01,  9.54010427e-01,  7.95585334e-01,
           9.01754975e-01,  8.05315673e-01,  1.17938399e+00,
           1.14692545e+00,  7.17583537e-01,  5.84921651e-02,
           1.09966362e+00,  4.12773341e-01,  1.11601996e+00,
           5.76186180e-01],
         [ 1.12793922e+00, -4.68661457e-01,  9.64144170e-01,
           9.34651911e-01,  1.05206060e+00,  1.24087107e+00,
           6.24163330e-01,  5.49519002e-01,  1.05768967e+00,
           2.59180456e-01,  1.84418008e-01,  1.03316069e+00,
           9.61275458e-01,  7.84709454e-01,  9.12929833e-01,
           7.24252820e-01],
         [-1.55434841e-02,  9.78449941e-01,  1.08581972e+00,
           1.07474768e+00,  6.30006015e-01,  7.23114789e-01,
           3.74291807e-01,  1.00397658e+00,  3.47921431e-01,
           1.12771964e+00, -1.90130540e-03,  7.81497598e-01,
           1.85480565e-01,  9.82002854e-01,  1.09188640e+00,
           3.47475737e-01],
         [ 8.17283213e-01,  3.13331306e-01,  1.13351369e+00,
           6.41157866e-01,  9.41516578e-01,  1.06354976e+00,
           1.14214945e+00,  5.91812909e-01,  1.21625900e+00,
           3.30227077e-01,  9.50972080e-01,  8.51813674e-01,
           1.18587804e+00,  8.19515347e-01, -3.97271067e-01,
           1.06661320e+00],
         [ 9.96599257e-01,  2.45073080e-01,  5.14082134e-01,
          -4.94722486e-01,  7.77957141e-01,  8.26387703e-01,
           3.95474225e-01,  4.15649384e-01,  7.08723843e-01,
           9.06250477e-01,  9.79406893e-01, -2.33682722e-01,
           7.05226302e-01,  8.27505708e-01,  6.99166417e-01,
           8.67125452e-01],
         [ 1.01508021e+00, -1.56709239e-01, -4.36942697e-01,
           7.02719688e-01, -4.62382942e-01,  4.18259054e-01,
           7.09900856e-01,  7.36892223e-01,  5.45384407e-01,
           9.41337287e-01,  8.07433248e-01,  4.96752352e-01,
           9.12588000e-01, -1.04396939e-01,  1.08789086e+00,
           7.88394511e-01],
         [ 8.40845108e-01,  7.31316924e-01,  7.83433735e-01,
           1.13528943e+00,  7.77476966e-01,  5.71943700e-01,
           1.12354779e+00,  9.34525490e-01,  1.12645328e+00,
           4.19787139e-01,  8.15468550e-01,  1.02514338e+00,
           9.63795483e-01,  1.20644224e+00,  9.50952888e-01,
           7.06745267e-01],
         [ 6.28270149e-01,  8.37264240e-01,  7.61254191e-01,
          -3.04429889e-01,  8.83320510e-01,  5.06160140e-01,
           7.48915493e-01,  1.02151537e+00,  2.93242663e-01,
           2.64749348e-01,  9.50041652e-01,  9.20674026e-01,
           3.14943254e-01,  6.82256758e-01,  5.19410431e-01,
           9.88065958e-01],
         [ 4.76717465e-02,  1.03905153e+00,  4.59441662e-01,
           6.82408273e-01,  7.42834583e-02,  7.88643241e-01,
           1.03724468e+00,  1.32696137e-01,  1.11505246e+00,
           1.20919549e+00,  6.29143178e-01,  6.17268026e-01,
          -2.36495912e-01,  8.04630876e-01,  9.09353614e-01,
           1.08021688e+00]],

        [[ 8.86051297e-01,  8.73179853e-01,  8.35335612e-01,
           5.67279041e-01,  9.23027933e-01,  1.04368973e+00,
          -1.21791601e-01,  1.08107221e+00,  1.14867973e+00,
           5.51523328e-01,  1.06645226e+00,  5.22772193e-01,
           9.52537715e-01,  4.68330860e-01,  1.04321861e+00,
           4.89838302e-01],
         [ 2.08222076e-01,  6.62105083e-01,  1.01412606e+00,
           1.05403113e+00,  9.87405956e-01,  8.53506744e-01,
           4.63664144e-01,  3.36466074e-01,  2.24709123e-01,
           7.80991852e-01,  7.34569192e-01,  1.20723712e+00,
           8.29300284e-01,  7.12797642e-01,  1.14903665e+00,
           6.37597442e-01],
         [ 7.88480520e-01,  4.97087359e-01,  3.88911664e-01,
           4.60142612e-01,  1.22141384e-01,  7.69676983e-01,
           1.15982938e+00,  4.24516916e-01,  2.03227834e-03,
           7.06253350e-02,  8.09379339e-01,  1.09677339e+00,
           8.74806821e-01,  8.23177814e-01,  9.18482065e-01,
           7.05294251e-01],
         [ 8.45215082e-01, -5.73762596e-01,  3.92720938e-01,
           6.25852525e-01,  7.40086555e-01,  1.10902929e+00,
           7.96405077e-01,  9.76615369e-01,  8.75124276e-01,
           6.23161316e-01,  3.54897857e-01,  4.98820782e-01,
           4.18783456e-01,  7.91481733e-01,  6.61669433e-01,
           9.28885520e-01],
         [ 1.00169420e+00,  7.16716349e-01,  1.03164816e+00,
           7.54473627e-01,  1.13795304e+00,  9.92404222e-01,
           2.47492284e-01,  1.05354619e+00, -1.92128420e-01,
           6.98664129e-01, -2.40006432e-01,  6.61500990e-01,
           5.67388415e-01, -3.39085013e-01,  1.12702882e+00,
           1.26292992e+00],
         [ 4.85006481e-01,  9.77276146e-01,  1.01892126e+00,
           9.41761911e-01,  6.47434294e-01,  6.99228942e-01,
           1.15974975e+00,  4.13491249e-01,  1.21666241e+00,
           7.04990804e-01,  8.15670729e-01, -3.45520675e-01,
           7.91575491e-01,  1.00640512e+00,  6.80240989e-02,
           6.63412690e-01],
         [-2.03518406e-01,  5.97190022e-01,  1.29139453e-01,
           9.81867373e-01,  8.58536541e-01, -3.70418280e-02,
           1.10020602e+00,  5.38573146e-01,  1.07854319e+00,
           1.13936603e+00,  9.92856205e-01,  7.63025939e-01,
           3.96154195e-01,  1.00112724e+00, -4.70167547e-01,
           6.20314121e-01],
         [ 5.73763430e-01,  3.15138757e-01,  1.22690725e+00,
           4.51399654e-01,  6.49846733e-01,  1.04908466e+00,
           8.70982647e-01,  5.56633294e-01,  8.15751314e-01,
           8.63918006e-01,  8.79127741e-01,  7.69930959e-01,
           4.04303908e-01,  1.23296404e+00,  8.01484823e-01,
           2.85240322e-01],
         [ 5.61416268e-01,  7.08051860e-01,  1.20861173e+00,
           7.94712126e-01,  6.28440440e-01,  2.27833644e-01,
           5.87026834e-01,  1.07651269e+00,  7.70600855e-01,
           1.00207734e+00,  3.88600677e-01,  7.93379009e-01,
           1.10150707e+00, -8.91364664e-02,  9.47834134e-01,
           4.61537242e-01],
         [-7.02484846e-02,  8.79926145e-01,  6.57432199e-01,
           9.30760622e-01, -1.13324545e-01,  6.35332584e-01,
           7.81312585e-01,  8.73478770e-01,  1.21233977e-01,
           9.81494263e-02,  9.45618629e-01,  7.56479442e-01,
           8.68894279e-01,  7.80738652e-01,  4.20731813e-01,
           1.05953300e+00],
         [ 1.19891536e+00,  1.00775099e+00,  2.05396548e-01,
           9.10482705e-01,  9.11855280e-01,  8.25216949e-01,
           8.06550980e-01,  6.01354897e-01,  7.17463732e-01,
           8.73686254e-01,  9.33236003e-01,  1.02194428e+00,
           3.68693352e-01,  1.08836448e+00,  6.00354731e-01,
           6.02194369e-01],
         [ 1.11441553e+00,  2.01248765e-01,  1.28129065e-01,
           1.19242775e+00,  5.23763180e-01,  8.03647161e-01,
           9.93517220e-01,  9.92481649e-01,  8.04573953e-01,
           1.70594994e-02,  1.08383882e+00,  1.17807436e+00,
           9.05278146e-01,  9.74222302e-01,  5.55075109e-01,
           9.51673031e-01],
         [ 7.85723448e-01, -9.50371444e-01,  1.00368094e+00,
           8.11858237e-01,  1.14564526e+00,  8.72773170e-01,
           1.26201367e+00,  7.86085844e-01,  4.05620396e-01,
           8.29581380e-01,  1.88643545e-01,  6.85763776e-01,
           1.01707423e+00,  4.12797242e-01,  2.67366827e-01,
           1.00208783e+00],
         [ 9.33377326e-01,  1.11871684e+00,  7.29785621e-01,
           1.02360845e+00,  6.01137877e-01,  1.21437228e+00,
           4.94665146e-01,  1.13363910e+00,  7.70791709e-01,
           1.14103377e+00,  7.71193624e-01, -3.48494835e-02,
           5.34545004e-01,  7.49055862e-01, -2.28649691e-01,
           5.34668267e-01],
         [-2.42961541e-01,  8.33652854e-01, -3.82128298e-01,
           5.34575999e-01,  8.25012505e-01,  1.02959132e+00,
          -3.92994106e-01,  6.79328322e-01,  6.50663793e-01,
           9.91793394e-01,  8.90870690e-01,  4.40916181e-01,
           4.21524167e-01,  5.79826236e-01,  9.36510205e-01,
           3.16146374e-01],
         [ 1.05967641e+00,  9.77267623e-01,  1.15337157e+00,
           7.57812440e-01,  7.46911466e-01,  1.23921025e+00,
           7.97646046e-01,  8.71374071e-01,  9.07695711e-01,
           1.00545478e+00,  3.07545841e-01,  8.08187902e-01,
           3.89028966e-01,  6.61237657e-01,  8.87081623e-01,
           1.01134789e+00]],

        [[ 8.10761511e-01,  2.05522135e-01,  9.94523883e-01,
           2.23003346e-02,  1.10952616e+00,  1.19868493e+00,
           2.93060333e-01,  1.04550695e+00,  4.56745595e-01,
           9.99051511e-01, -1.25825894e-03,  5.28302610e-01,
          -1.68335944e-01,  5.54489374e-01,  7.61474371e-01,
           1.18993926e+00],
         [ 1.09851098e+00,  8.89486790e-01,  4.59637165e-01,
           6.49156272e-01, -1.55454770e-01,  6.48053527e-01,
           7.89919734e-01,  8.77959549e-01,  7.66139388e-01,
           1.07829988e+00,  7.52057552e-01,  1.02598691e+00,
           9.57078695e-01,  1.14374876e+00,  8.12944233e-01,
           1.24976300e-01],
         [ 9.39185023e-01, -1.11135757e-02,  1.06544125e+00,
          -5.28932847e-02,  7.28337824e-01,  7.40426064e-01,
           3.52349252e-01,  5.18721044e-01,  6.25045657e-01,
           1.01574183e+00,  1.05563951e+00,  8.28844070e-01,
           9.22312558e-01,  1.10330693e-01,  9.99248862e-01,
           6.28636256e-02],
         [ 3.10126841e-01,  8.77512276e-01,  1.40144348e-01,
           3.92144203e-01,  2.82232855e-02,  4.27836210e-01,
           9.50784624e-01,  1.09277093e+00,  6.78039551e-01,
           9.64614972e-02,  8.43404651e-01,  8.62398624e-01,
           6.66185319e-01,  1.18333817e+00,  1.13492048e+00,
           1.61619067e-01],
         [ 6.03030741e-01,  8.72998834e-01,  9.43633854e-01,
           4.42730635e-01,  6.02235556e-01,  3.45411420e-01,
           4.17146564e-01,  9.69984293e-01,  8.33723485e-01,
           6.43533051e-01,  4.33811009e-01,  1.69554621e-01,
           9.15727735e-01,  1.13002706e+00,  1.06873035e+00,
           3.73753339e-01],
         [ 1.02367401e+00,  7.39681125e-01,  1.11418891e+00,
           4.95104522e-01,  5.49372017e-01,  1.09410644e+00,
           9.17331696e-01, -1.13274187e-01,  1.05038226e+00,
           9.82503891e-01,  1.09880269e+00,  6.30936623e-01,
          -1.41056910e-01,  9.26122069e-01,  8.46928716e-01,
           4.36099619e-01],
         [ 9.16039824e-01,  1.09046674e+00,  1.15615082e+00,
           1.09640217e+00,  1.04864669e+00,  8.66175115e-01,
           7.23310351e-01,  7.94540465e-01,  5.98689854e-01,
           4.08706397e-01,  1.06535447e+00,  9.27146316e-01,
           9.61586595e-01,  8.83967578e-01,  1.27934670e+00,
           2.87215948e-01],
         [ 6.57863081e-01,  1.32226035e-01,  9.34799910e-01,
           6.72259331e-01,  8.33285928e-01,  1.00607610e+00,
           5.00926554e-01,  1.13889647e+00,  9.66386735e-01,
           4.28107828e-01,  6.89739585e-02,  1.06318913e-01,
           8.78432035e-01,  6.18503094e-01,  1.10425520e+00,
           1.35510460e-01],
         [ 8.50659430e-01,  6.71229184e-01,  5.85520566e-01,
           9.52792466e-02,  1.00135005e+00,  1.07670784e+00,
           3.66692513e-01,  1.21867037e+00,  6.37544274e-01,
           8.31738174e-01,  2.93811500e-01,  4.97897029e-01,
           1.04425359e+00,  1.10181403e+00,  1.10773087e+00,
           9.05307949e-01],
         [ 5.32800332e-02,  8.74225259e-01,  1.05966187e+00,
          -3.53551321e-02,  3.62857699e-01,  2.60538757e-01,
           9.28812563e-01,  1.12649113e-01,  5.95194459e-01,
           1.04619443e+00,  6.56297743e-01,  9.31970596e-01,
           6.31139815e-01,  7.21013069e-01,  9.35457289e-01,
           4.30972874e-01],
         [ 1.15287161e+00,  7.78269410e-01,  1.02322376e+00,
           1.18858147e+00,  6.81066215e-01,  2.44670048e-01,
           6.94013178e-01,  6.25269935e-02,  1.02982140e+00,
          -3.09619874e-01,  7.21082568e-01,  1.06847358e+00,
           2.66622871e-01,  1.10717356e+00,  4.05512124e-01,
          -3.28091562e-01],
         [ 6.67191625e-01,  1.01331246e+00,  9.87290621e-01,
           7.59817123e-01,  4.32779670e-01, -8.05836637e-03,
           6.11463070e-01, -5.52075922e-01,  1.02490139e+00,
           8.06225300e-01,  1.21345091e+00,  7.15930700e-01,
           2.31858999e-01,  9.73822057e-01,  3.57113965e-02,
           8.95252466e-01],
         [ 5.83314955e-01,  6.90000117e-01,  6.81330502e-01,
           6.70841575e-01,  6.87317252e-01,  9.79439378e-01,
           8.15797091e-01,  5.58303654e-01,  8.16948056e-01,
           1.19268382e+00,  7.37092674e-01,  9.24048051e-02,
           9.69612598e-01, -2.44002923e-01,  2.25478858e-01,
           7.64901340e-01],
         [ 3.37966114e-01,  1.09677267e+00,  1.41269639e-01,
           8.10215771e-01,  6.94219470e-01,  6.50794983e-01,
           1.05531645e+00,  1.05939031e+00,  4.80221152e-01,
          -1.36264876e-01,  6.04228318e-01,  7.89291501e-01,
           9.53502715e-01,  1.05982018e+00,  3.78560930e-01,
           9.88625705e-01],
         [ 6.05486631e-01, -2.34211534e-01,  7.57980168e-01,
           1.05314803e+00,  6.20927632e-01,  1.05942979e-01,
           7.64055192e-01,  6.94008410e-01,  8.78221214e-01,
           7.88652122e-01,  8.59491587e-01,  9.16678965e-01,
           8.18514347e-01,  7.20786095e-01,  5.64561248e-01,
           1.08912778e+00],
         [ 1.09014165e+00,  9.28134739e-01,  1.11016011e+00,
           6.75275803e-01,  1.04711628e+00,  7.47372210e-01,
           4.03599232e-01,  6.25124574e-01,  1.06063747e+00,
           5.52316666e-01,  7.73379087e-01,  4.03072119e-01,
           1.44577205e-01,  8.94982398e-01,  7.87379146e-01,
           1.04691887e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 16]), 'from': [0], 'to': [4]}
tf node:
{'name': 'log', 'output': array([[[[-4.20974165e-01,  5.50559573e-02,  1.36233747e-01,
          -1.02712706e-01, -5.44672348e-02, -5.16956389e-01,
          -1.74599433e+00, -7.82327294e-01, -1.64502454e+00,
          -8.42844605e-01, -3.57703745e-01, -3.63314271e-01,
          -6.48772657e-01, -3.18822175e-01, -6.34072185e-01,
          -9.54777449e-02],
         [-8.95524085e-01, -5.70818365e-01,  1.14155255e-01,
          -1.81706861e-01,  1.51097281e-02, -1.29236627e+00,
          -4.50491190e-01, -4.75870460e-01, -2.80398190e-01,
          -1.02872658e+00, -1.12508386e-01, -7.96212435e-01,
          -1.12741336e-01,             nan, -7.54159130e-03,
          -8.56544256e-01],
         [-6.90985382e-01, -3.83369625e-01, -3.68808866e-01,
          -1.22932522e-02, -9.60910693e-02, -1.34607780e+00,
          -1.46411896e-01, -1.44566754e-02, -3.62633973e-01,
                      nan, -8.16122770e-01, -9.15408432e-02,
           6.62377626e-02,             nan,  8.85748398e-03,
          -7.26848722e-01],
         [-2.43918389e-01, -4.10683686e-03,  1.86293460e-02,
          -7.82521218e-02, -8.35651278e-01, -2.48503506e-01,
          -2.95051992e-01,  1.04331568e-01, -1.19519210e+00,
          -1.26437902e-01, -1.32607889e+00,  1.91304870e-02,
          -9.44295883e-01,  1.28680423e-01, -3.80034834e-01,
           2.34856959e-02],
         [-2.90578529e-02, -1.71216273e+00, -7.91002810e-01,
          -1.25176644e+00, -3.11347425e-01, -6.81188047e-01,
          -4.92599308e-01, -1.88225463e-01,  3.74231264e-02,
          -9.40900147e-01,  6.36587590e-02, -4.87447500e-01,
          -1.79736421e-01, -5.07731438e-01,  8.41860399e-02,
          -4.00312811e-01],
         [-6.19159900e-02, -1.74641764e+00,             nan,
                      nan, -1.22176957e+00,  4.07694280e-02,
          -8.43767047e-01, -1.21198928e+00, -3.94688869e+00,
           7.57922605e-02,  2.05826573e-02, -4.09500450e-01,
                      nan,  7.38447607e-02, -7.86485970e-01,
          -6.83642775e-02],
         [ 1.97322499e-02, -5.46065629e-01, -1.44093883e+00,
          -9.45287868e-02, -1.46792102e+00, -5.56684323e-02,
          -1.02102369e-01,  1.77426621e-01,             nan,
          -1.07324392e-01, -8.04367065e-01, -6.87548816e-02,
          -4.12869501e+00, -8.01101565e-01, -3.82888794e+00,
           1.40274540e-02],
         [-6.67711139e-01, -2.80562878e-01, -1.84938326e-01,
          -4.52637076e-01, -4.70806770e-02, -2.28677168e-01,
          -1.03412442e-01, -2.16520935e-01,  1.64992258e-01,
           1.37084842e-01, -3.31865907e-01, -2.83886242e+00,
           9.50043276e-02, -8.84856641e-01,  1.09768756e-01,
          -5.51324427e-01],
         [ 1.20392270e-01,             nan, -3.65144424e-02,
          -6.75811097e-02,  5.07507212e-02,  2.15813607e-01,
          -4.71343219e-01, -5.98711908e-01,  5.60869686e-02,
          -1.35023069e+00, -1.69055033e+00,  3.26227322e-02,
          -3.94942723e-02, -2.42441759e-01, -9.10962522e-02,
          -3.22614759e-01],
         [            nan, -2.17856523e-02,  8.23352039e-02,
           7.20859170e-02, -4.62025911e-01, -3.24187309e-01,
          -9.82719541e-01,  3.96869797e-03, -1.05577862e+00,
           1.20197579e-01,             nan, -2.46543199e-01,
          -1.68480515e+00, -1.81610640e-02,  8.79068449e-02,
          -1.05706048e+00],
         [-2.01769590e-01, -1.16049421e+00,  1.25322267e-01,
          -4.44479585e-01, -6.02633208e-02,  6.16121404e-02,
           1.32911965e-01, -5.24564743e-01,  1.95779756e-01,
          -1.10797477e+00, -5.02705760e-02, -1.60387471e-01,
           1.70483455e-01, -1.99042156e-01,             nan,
           6.44883886e-02],
         [-3.40653863e-03, -1.40619886e+00, -6.65372252e-01,
                      nan, -2.51083851e-01, -1.90691248e-01,
          -9.27669644e-01, -8.77913237e-01, -3.44289333e-01,
          -9.84395444e-02, -2.08081007e-02,             nan,
          -3.49236548e-01, -1.89339280e-01, -3.57866496e-01,
          -1.42571613e-01],
         [ 1.49676371e-02,             nan,             nan,
          -3.52797210e-01,             nan, -8.71654272e-01,
          -3.42629969e-01, -3.05313647e-01, -6.06264412e-01,
          -6.04537688e-02, -2.13894889e-01, -6.99663639e-01,
          -9.14707556e-02,             nan,  8.42408314e-02,
          -2.37756670e-01],
         [-1.73347816e-01, -3.12908351e-01, -2.44068801e-01,
           1.26887619e-01, -2.51701266e-01, -5.58714747e-01,
           1.16491348e-01, -6.77163750e-02,  1.19074009e-01,
          -8.68007541e-01, -2.03992426e-01,  2.48324908e-02,
          -3.68761607e-02,  1.87675729e-01, -5.02907559e-02,
          -3.47084969e-01],
         [-4.64785039e-01, -1.77615553e-01, -2.72787958e-01,
                      nan, -1.24067165e-01, -6.80902183e-01,
          -2.89129138e-01,  2.12871805e-02, -1.22675478e+00,
          -1.32897174e+00, -5.12494519e-02, -8.26492384e-02,
          -1.15536284e+00, -3.82349223e-01, -6.55060887e-01,
          -1.20058246e-02],
         [-3.04341650e+00,  3.83083075e-02, -7.77743340e-01,
          -3.82127166e-01, -2.59986687e+00, -2.37441227e-01,
           3.65678482e-02, -2.01969337e+00,  1.08901456e-01,
           1.89955264e-01, -4.63396430e-01, -4.82451946e-01,
                      nan, -2.17371643e-01, -9.50212479e-02,
           7.71618411e-02]],

        [[-1.20980434e-01, -1.35613725e-01, -1.79921702e-01,
          -5.66903949e-01, -8.00957829e-02,  4.27622497e-02,
                      nan,  7.79533386e-02,  1.38613224e-01,
          -5.95071137e-01,  6.43374994e-02, -6.48609519e-01,
          -4.86255772e-02, -7.58580267e-01,  4.23107520e-02,
          -7.13679910e-01],
         [-1.56915009e+00, -4.12331015e-01,  1.40272193e-02,
           5.26219867e-02, -1.26740215e-02, -1.58401832e-01,
          -7.68594801e-01, -1.08925796e+00, -1.49294853e+00,
          -2.47190565e-01, -3.08471084e-01,  1.88334376e-01,
          -1.87172964e-01, -3.38557720e-01,  1.38923898e-01,
          -4.50048149e-01],
         [-2.37647578e-01, -6.98989511e-01, -9.44403052e-01,
          -7.76218832e-01, -2.10257602e+00, -2.61784345e-01,
           1.48272902e-01, -8.56803417e-01, -6.19859791e+00,
          -2.65036631e+00, -2.11487576e-01,  9.23725814e-02,
          -1.33752197e-01, -1.94583043e-01, -8.50329027e-02,
          -3.49140197e-01],
         [-1.68164149e-01,             nan, -9.34656024e-01,
          -4.68640506e-01, -3.00988138e-01,  1.03485122e-01,
          -2.27647334e-01, -2.36623902e-02, -1.33389369e-01,
          -4.72949862e-01, -1.03592527e+00, -6.95508420e-01,
          -8.70401323e-01, -2.33848482e-01, -4.12989199e-01,
          -7.37697780e-02],
         [ 1.69276888e-03, -3.33075136e-01,  3.11576780e-02,
          -2.81734943e-01,  1.29231066e-01, -7.62477238e-03,
          -1.39637589e+00,  5.21617979e-02,             nan,
          -3.58585149e-01,             nan, -4.13243800e-01,
          -5.66711187e-01,             nan,  1.19584806e-01,
           2.33434349e-01],
         [-7.23592997e-01, -2.29860190e-02,  1.87444761e-02,
          -6.00027852e-02, -4.34737980e-01, -3.57777059e-01,
           1.48204252e-01, -8.83118927e-01,  1.96111381e-01,
          -3.49570513e-01, -2.03744531e-01,             nan,
          -2.33730033e-01,  6.38468936e-03, -2.68789315e+00,
          -4.10358012e-01],
         [            nan, -5.15519917e-01, -2.04686236e+00,
          -1.82990376e-02, -1.52526036e-01,             nan,
           9.54974517e-02, -6.18831992e-01,  7.56112263e-02,
           1.30471990e-01, -7.16943480e-03, -2.70463258e-01,
          -9.25951779e-01,  1.12660823e-03,             nan,
          -4.77529287e-01],
         [-5.55538118e-01, -1.15474224e+00,  2.04496577e-01,
          -7.95402169e-01, -4.31018740e-01,  4.79180366e-02,
          -1.38133228e-01, -5.85848629e-01, -2.03645736e-01,
          -1.46277413e-01, -1.28825068e-01, -2.61454433e-01,
          -9.05588448e-01,  2.09421054e-01, -2.21289247e-01,
          -1.25442326e+00],
         [-5.77292621e-01, -3.45237941e-01,  1.89472362e-01,
          -2.29775339e-01, -4.64514017e-01, -1.47913957e+00,
          -5.32684743e-01,  7.37268329e-02, -2.60584742e-01,
           2.07518646e-03, -9.45203006e-01, -2.31454223e-01,
           9.66793001e-02,             nan, -5.35757542e-02,
          -7.73192525e-01],
         [            nan, -1.27917305e-01, -4.19413626e-01,
          -7.17531517e-02,             nan, -4.53606665e-01,
          -2.46779978e-01, -1.35271460e-01, -2.11003280e+00,
          -2.32126427e+00, -5.59159294e-02, -2.79079914e-01,
          -1.40533820e-01, -2.47514814e-01, -8.65759671e-01,
           5.78282438e-02],
         [ 1.81417286e-01,  7.72110326e-03, -1.58281279e+00,
          -9.37803760e-02, -9.22739878e-02, -1.92108959e-01,
          -2.14988172e-01, -5.08570015e-01, -3.32032889e-01,
          -1.35033950e-01, -6.90971613e-02,  2.17069741e-02,
          -9.97789979e-01,  8.46760944e-02, -5.10234594e-01,
          -5.07175028e-01],
         [ 1.08330078e-01, -1.60321355e+00, -2.05471730e+00,
           1.75991356e-01, -6.46715641e-01, -2.18594968e-01,
          -6.50388468e-03, -7.54675642e-03, -2.17442393e-01,
          -4.07104826e+00,  8.05092007e-02,  1.63881212e-01,
          -9.95130390e-02, -2.61157639e-02, -5.88651836e-01,
          -4.95337583e-02],
         [-2.41150394e-01,             nan,  3.67418630e-03,
          -2.08429545e-01,  1.35968029e-01, -1.36079580e-01,
           2.32708603e-01, -2.40689278e-01, -9.02337551e-01,
          -1.86834067e-01, -1.66789603e+00, -3.77222061e-01,
           1.69301014e-02, -8.84798765e-01, -1.31913364e+00,
           2.08565500e-03],
         [-6.89457357e-02,  1.12182349e-01, -3.15004468e-01,
           2.33340766e-02, -5.08930922e-01,  1.94227308e-01,
          -7.03874230e-01,  1.25432894e-01, -2.60337114e-01,
           1.31934673e-01, -2.59815812e-01,             nan,
          -6.26339376e-01, -2.88941711e-01,             nan,
          -6.26108766e-01],
         [            nan, -1.81938201e-01,             nan,
          -6.26281381e-01, -1.92356735e-01,  2.91619487e-02,
                      nan, -3.86650741e-01, -4.29762214e-01,
          -8.24046507e-03, -1.15555987e-01, -8.18900466e-01,
          -8.63878191e-01, -5.45026779e-01, -6.55948594e-02,
          -1.15154994e+00],
         [ 5.79635873e-02, -2.29947418e-02,  1.42689452e-01,
          -2.77319372e-01, -2.91808605e-01,  2.14474276e-01,
          -2.26090327e-01, -1.37683928e-01, -9.68460739e-02,
           5.43995528e-03, -1.17913115e+00, -2.12960690e-01,
          -9.44101453e-01, -4.13641959e-01, -1.19818278e-01,
           1.12839853e-02]],

        [[-2.09781334e-01, -1.58220148e+00, -5.49116591e-03,
          -3.80315351e+00,  1.03933036e-01,  1.81225061e-01,
          -1.22737682e+00,  4.45018895e-02, -7.83628702e-01,
          -9.48938832e-04,             nan, -6.38086021e-01,
                      nan, -5.89707613e-01, -2.72498757e-01,
           1.73902273e-01],
         [ 9.39556062e-02, -1.17110625e-01, -7.77317882e-01,
          -4.32081789e-01,             nan, -4.33781981e-01,
          -2.35823944e-01, -1.30154759e-01, -2.66391158e-01,
           7.53856152e-02, -2.84942418e-01,  2.56549884e-02,
          -4.38696593e-02,  1.34311259e-01, -2.07092762e-01,
          -2.07963109e+00],
         [-6.27427772e-02,             nan,  6.33890331e-02,
                      nan, -3.16990286e-01, -3.00529510e-01,
          -1.04313242e+00, -6.56388998e-01, -4.69930589e-01,
           1.56192081e-02,  5.41467480e-02, -1.87723234e-01,
          -8.08711126e-02, -2.20427322e+00, -7.51419982e-04,
          -2.76678753e+00],
         [-1.17077386e+00, -1.30664334e-01, -1.96508229e+00,
          -9.36125636e-01, -3.56760788e+00, -8.49014878e-01,
          -5.04677147e-02,  8.87166113e-02, -3.88549656e-01,
          -2.33861136e+00, -1.70308426e-01, -1.48037672e-01,
          -4.06187385e-01,  1.68339401e-01,  1.26562580e-01,
          -1.82251310e+00],
         [-5.05787134e-01, -1.35821059e-01, -5.80170527e-02,
          -8.14793766e-01, -5.07106602e-01, -1.06301904e+00,
          -8.74317646e-01, -3.04754004e-02, -1.81853488e-01,
          -4.40781891e-01, -8.35146308e-01, -1.77458024e+00,
          -8.80361944e-02,  1.22241579e-01,  6.64713606e-02,
          -9.84159231e-01],
         [ 2.33981274e-02, -3.01536113e-01,  1.08126707e-01,
          -7.02986360e-01, -5.98979473e-01,  8.99379924e-02,
          -8.62861499e-02,             nan,  4.91541512e-02,
          -1.76509749e-02,  9.42211226e-02, -4.60549861e-01,
                      nan, -7.67492279e-02, -1.66138753e-01,
          -8.29884589e-01],
         [-8.76954421e-02,  8.66058022e-02,  1.45096228e-01,
           9.20340642e-02,  4.75004651e-02, -1.43668175e-01,
          -3.23916912e-01, -2.29991361e-01, -5.13011575e-01,
          -8.94758224e-01,  6.33075759e-02, -7.56438896e-02,
          -3.91706564e-02, -1.23334892e-01,  2.46349558e-01,
          -1.24752092e+00],
         [-4.18758452e-01, -2.02324247e+00, -6.74227700e-02,
          -3.97111118e-01, -1.82378441e-01,  6.05771225e-03,
          -6.91295803e-01,  1.30059779e-01, -3.41911763e-02,
          -8.48380208e-01, -2.67402625e+00, -2.24131203e+00,
          -1.29616737e-01, -4.80453074e-01,  9.91710797e-02,
          -1.99870646e+00],
         [-1.61743432e-01, -3.98644656e-01, -5.35254002e-01,
          -2.35094333e+00,  1.34913472e-03,  7.39080906e-02,
          -1.00323164e+00,  1.97760403e-01, -4.50131536e-01,
          -1.84237584e-01, -1.22481692e+00, -6.97362006e-01,
           4.33023609e-02,  9.69579443e-02,  1.02313660e-01,
          -9.94801149e-02],
         [-2.93219376e+00, -1.34417206e-01,  5.79498634e-02,
                      nan, -1.01374459e+00, -1.34500360e+00,
          -7.38483220e-02, -2.18347740e+00, -5.18867135e-01,
           4.51592319e-02, -4.21140730e-01, -7.04540163e-02,
          -4.60227847e-01, -3.27098012e-01, -6.67197928e-02,
          -8.41710150e-01],
         [ 1.42255887e-01, -2.50682533e-01,  2.29581892e-02,
           1.72760546e-01, -3.84095758e-01, -1.40784466e+00,
          -3.65264326e-01, -2.77215695e+00,  2.93853860e-02,
                      nan, -3.27001631e-01,  6.62310645e-02,
          -1.32192004e+00,  1.01810426e-01, -9.02604520e-01,
                      nan],
         [-4.04677987e-01,  1.32246269e-02, -1.27908345e-02,
          -2.74677515e-01, -8.37526560e-01,             nan,
          -4.91900712e-01,             nan,  2.45964024e-02,
          -2.15392053e-01,  1.93468288e-01, -3.34171891e-01,
          -1.46162581e+00, -2.65266839e-02, -3.33228540e+00,
          -1.10649511e-01],
         [-5.39027989e-01, -3.71063530e-01, -3.83707762e-01,
          -3.99222285e-01, -3.74959320e-01, -2.07749344e-02,
          -2.03589618e-01, -5.82852304e-01, -2.02179760e-01,
           1.76206082e-01, -3.05041641e-01, -2.38157630e+00,
          -3.08586694e-02,             nan, -1.48952889e+00,
          -2.68008411e-01],
         [-1.08480966e+00,  9.23719332e-02, -1.95708489e+00,
          -2.10454687e-01, -3.64967138e-01, -4.29560602e-01,
           5.38406745e-02,  5.76935597e-02, -7.33508527e-01,
                      nan, -5.03803134e-01, -2.36619577e-01,
          -4.76130061e-02,  5.80992475e-02, -9.71378207e-01,
          -1.14394771e-02],
         [-5.01722813e-01,             nan, -2.77098060e-01,
           5.17838039e-02, -4.76540744e-01, -2.24485421e+00,
          -2.69115239e-01, -3.65271211e-01, -1.29856765e-01,
          -2.37429962e-01, -1.51414245e-01, -8.69979635e-02,
          -2.00264350e-01, -3.27412874e-01, -5.71706414e-01,
           8.53771716e-02],
         [ 8.63076448e-02, -7.45783597e-02,  1.04504250e-01,
          -3.92634094e-01,  4.60399836e-02, -2.91191936e-01,
          -9.07332897e-01, -4.69804347e-01,  5.88701181e-02,
          -5.93633711e-01, -2.56985933e-01, -9.08639789e-01,
          -1.93394160e+00, -1.10951230e-01, -2.39045382e-01,
           4.58514392e-02]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 16]), 'from': [5], 'to': [6]}
ms node:
{'name': 'log', 'output': array([[[[-4.20976102e-01,  5.50593659e-02,  1.36230484e-01,
          -1.02713756e-01, -5.44672124e-02, -5.16957879e-01,
          -1.74599147e+00, -7.82328248e-01, -1.64502680e+00,
          -8.42845559e-01, -3.57700914e-01, -3.63311410e-01,
          -6.48769259e-01, -3.18822235e-01, -6.34068787e-01,
          -9.54787359e-02],
         [-8.95526528e-01, -5.70821524e-01,  1.14155829e-01,
          -1.81710154e-01,  1.51081802e-02, -1.29236567e+00,
          -4.50488389e-01, -4.75869656e-01, -2.80400425e-01,
          -1.02872372e+00, -1.12509437e-01, -7.96213448e-01,
          -1.12742327e-01,             nan, -7.54308235e-03,
          -8.56547534e-01],
         [-6.90986812e-01, -3.83371532e-01, -3.68806005e-01,
          -1.22946817e-02, -9.60921273e-02, -1.34607434e+00,
          -1.46412954e-01, -1.44581664e-02, -3.62631142e-01,
                      nan, -8.16123724e-01, -9.15418938e-02,
           6.62348568e-02,             nan,  8.85605346e-03,
          -7.26848662e-01],
         [-2.43920803e-01, -4.10832698e-03,  1.86277982e-02,
          -7.82520920e-02, -8.35652292e-01, -2.48505726e-01,
          -2.95051962e-01,  1.04332142e-01, -1.19519365e+00,
          -1.26438960e-01, -1.32607543e+00,  1.91290565e-02,
          -9.44298148e-01,  1.28677264e-01, -3.80036741e-01,
           2.34842654e-02],
         [-2.90593449e-02, -1.71216273e+00, -7.91003764e-01,
          -1.25176966e+00, -3.11347485e-01, -6.81189477e-01,
          -4.92598504e-01, -1.88228816e-01,  3.74265388e-02,
          -9.40902352e-01,  6.36558533e-02, -4.87446696e-01,
          -1.79739773e-01, -5.07732928e-01,  8.41830298e-02,
          -4.00314718e-01],
         [-6.19159676e-02, -1.74641478e+00,             nan,
                      nan, -1.22177112e+00,  4.07728367e-02,
          -8.43768060e-01, -1.21199071e+00, -3.94688773e+00,
           7.57893547e-02,  2.05811094e-02, -4.09502387e-01,
                      nan,  7.38418549e-02, -7.86486924e-01,
          -6.83643818e-02],
         [ 1.97307020e-02, -5.46067119e-01, -1.44093883e+00,
          -9.45298374e-02, -1.46792197e+00, -5.56684099e-02,
          -1.02103353e-01,  1.77425146e-01,             nan,
          -1.07325375e-01, -8.04368019e-01, -6.87549263e-02,
          -4.12869644e+00, -8.01102579e-01, -3.82888508e+00,
           1.40259061e-02],
         [-6.67712569e-01, -2.80565083e-01, -1.84941694e-01,
          -4.52634275e-01, -4.70807813e-02, -2.28679582e-01,
          -1.03413492e-01, -2.16523424e-01,  1.64990783e-01,
           1.37081683e-01, -3.31863046e-01, -2.83886242e+00,
           9.50047970e-02, -8.84859085e-01,  1.09769329e-01,
          -5.51327586e-01],
         [ 1.20389007e-01,             nan, -3.65144834e-02,
          -6.75811470e-02,  5.07540181e-02,  2.15814412e-01,
          -4.71342385e-01, -5.98711371e-01,  5.60903810e-02,
          -1.35022736e+00, -1.69055033e+00,  3.26261409e-02,
          -3.94943133e-02, -2.42444158e-01, -9.10973102e-02,
          -3.22614819e-01],
         [            nan, -2.17872057e-02,  8.23322982e-02,
           7.20829070e-02, -4.62023109e-01, -3.24187368e-01,
          -9.82719600e-01,  3.96714825e-03, -1.05577576e+00,
           1.20194308e-01,             nan, -2.46545613e-01,
          -1.68480527e+00, -1.81624945e-02,  8.79039392e-02,
          -1.05705762e+00],
         [-2.01772079e-01, -1.16049135e+00,  1.25319108e-01,
          -4.44476753e-01, -6.02633022e-02,  6.16091266e-02,
           1.32908702e-01, -5.24566233e-01,  1.95778176e-01,
          -1.10797668e+00, -5.02706170e-02, -1.60390824e-01,
           1.70481876e-01, -1.99044630e-01,             nan,
           6.44854903e-02],
         [-3.40802874e-03, -1.40620029e+00, -6.65373683e-01,
                      nan, -2.51086056e-01, -1.90693721e-01,
          -9.27672088e-01, -8.77916515e-01, -3.44286472e-01,
          -9.84405354e-02, -2.08095927e-02,             nan,
          -3.49233687e-01, -1.89341679e-01, -3.57863724e-01,
          -1.42572671e-01],
         [ 1.49662076e-02,             nan,             nan,
          -3.52794349e-01,             nan, -8.71657550e-01,
          -3.42627019e-01, -3.05313617e-01, -6.06267333e-01,
          -6.04538098e-02, -2.13897377e-01, -6.99665070e-01,
          -9.14718136e-02,             nan,  8.42378214e-02,
          -2.37759158e-01],
         [-1.73351169e-01, -3.12908351e-01, -2.44071200e-01,
           1.26884460e-01, -2.51703501e-01, -5.58717906e-01,
           1.16491929e-01, -6.77164197e-02,  1.19070843e-01,
          -8.68010819e-01, -2.03994900e-01,  2.48310603e-02,
          -3.68761383e-02,  1.87674254e-01, -5.02907969e-02,
          -3.47082138e-01],
         [-4.64782238e-01, -1.77618846e-01, -2.72790164e-01,
                      nan, -1.24068223e-01, -6.80903614e-01,
          -2.89129198e-01,  2.12856345e-02, -1.22675633e+00,
          -1.32896841e+00, -5.12494929e-02, -8.26502889e-02,
          -1.15535998e+00, -3.82351130e-01, -6.55057490e-01,
          -1.20073147e-02],
         [-3.04341865e+00,  3.83116044e-02, -7.77744293e-01,
          -3.82129073e-01, -2.59986854e+00, -2.37443715e-01,
           3.65712605e-02, -2.01969004e+00,  1.08902030e-01,
           1.89953774e-01, -4.63393509e-01, -4.82451141e-01,
                      nan, -2.17374057e-01, -9.50222984e-02,
           7.71589354e-02]],

        [[-1.20981485e-01, -1.35614783e-01, -1.79925054e-01,
          -5.66907227e-01, -8.00958276e-02,  4.27656621e-02,
                      nan,  7.79503211e-02,  1.38610065e-01,
          -5.95070541e-01,  6.43344820e-02, -6.48606062e-01,
          -4.86256182e-02, -7.58580267e-01,  4.23141643e-02,
          -7.13681340e-01],
         [-1.56915343e+00, -4.12332922e-01,  1.40257888e-02,
           5.26253991e-02, -1.26755117e-02, -1.58405185e-01,
          -7.68594801e-01, -1.08925986e+00, -1.49294949e+00,
          -2.47192785e-01, -3.08471143e-01,  1.88332900e-01,
          -1.87176317e-01, -3.38554859e-01,  1.38920724e-01,
          -4.50045347e-01],
         [-2.37649992e-01, -6.98990881e-01, -9.44405258e-01,
          -7.76219785e-01, -2.10257745e+00, -2.61786580e-01,
           1.48271322e-01, -8.56806695e-01, -6.19859457e+00,
          -2.65036941e+00, -2.11490065e-01,  9.23731551e-02,
          -1.33753181e-01, -1.94585532e-01, -8.50339532e-02,
          -3.49137336e-01],
         [-1.68167502e-01,             nan, -9.34658408e-01,
          -4.68637705e-01, -3.00988197e-01,  1.03485696e-01,
          -2.27649748e-01, -2.36638822e-02, -1.33390367e-01,
          -4.72949058e-01, -1.03592241e+00, -6.95509851e-01,
          -8.70404601e-01, -2.33850896e-01, -4.12991107e-01,
          -7.37698227e-02],
         [ 1.69133837e-03, -3.33072275e-01,  3.11610885e-02,
          -2.81737179e-01,  1.29227906e-01, -7.62626342e-03,
          -1.39637733e+00,  5.21650985e-02,             nan,
          -3.58582288e-01,             nan, -4.13245738e-01,
          -5.66714346e-01,             nan,  1.19581647e-01,
           2.33437061e-01],
         [-7.23594427e-01, -2.29875110e-02,  1.87430456e-02,
          -6.00027628e-02, -4.34735149e-01, -3.57774198e-01,
           1.48202762e-01, -8.83121371e-01,  1.96109802e-01,
          -3.49567682e-01, -2.03747004e-01,             nan,
          -2.33732507e-01,  6.38337713e-03, -2.68789625e+00,
          -4.10359949e-01],
         [            nan, -5.15521407e-01, -2.04685903e+00,
          -1.83005296e-02, -1.52529389e-01,             nan,
           9.54979137e-02, -6.18834853e-01,  7.56082162e-02,
           1.30468726e-01, -7.17086531e-03, -2.70465463e-01,
          -9.25954163e-01,  1.12517772e-03,             nan,
          -4.77528483e-01],
         [-5.55541277e-01, -1.15473938e+00,  2.04497382e-01,
          -7.95403183e-01, -4.31015939e-01,  4.79213297e-02,
          -1.38134211e-01, -5.85848033e-01, -2.03648210e-01,
          -1.46278471e-01, -1.28826052e-01, -2.61456668e-01,
          -9.05590832e-01,  2.09421858e-01, -2.21291721e-01,
          -1.25442636e+00],
         [-5.77292144e-01, -3.45235080e-01,  1.89470783e-01,
          -2.29777828e-01, -4.64511216e-01, -1.47914052e+00,
          -5.32686234e-01,  7.37239271e-02, -2.60586888e-01,
           2.07363698e-03, -9.45205212e-01, -2.31456637e-01,
           9.66798812e-02,             nan, -5.35757318e-02,
          -7.73192525e-01],
         [            nan, -1.27918288e-01, -4.19415563e-01,
          -7.17531294e-02,             nan, -4.53603774e-01,
          -2.46782377e-01, -1.35272443e-01, -2.11003423e+00,
          -2.32126665e+00, -5.59159741e-02, -2.79082149e-01,
          -1.40534803e-01, -2.47517049e-01, -8.65762889e-01,
           5.78316562e-02],
         [ 1.81415707e-01,  7.71955447e-03, -1.58281517e+00,
          -9.37814265e-02, -9.22750384e-02, -1.92111447e-01,
          -2.14990661e-01, -5.08571506e-01, -3.32030028e-01,
          -1.35035008e-01, -6.90971389e-02,  2.17054263e-02,
          -9.97790039e-01,  8.46731886e-02, -5.10236084e-01,
          -5.07176518e-01],
         [ 1.08330652e-01, -1.60321593e+00, -2.05471873e+00,
           1.75989881e-01, -6.46712244e-01, -2.18597442e-01,
          -6.50537480e-03, -7.54824653e-03, -2.17444807e-01,
          -4.07105112e+00,  8.05062950e-02,  1.63879633e-01,
          -9.95140970e-02, -2.61171944e-02, -5.88651299e-01,
          -4.95337993e-02],
         [-2.41152883e-01,             nan,  3.67275602e-03,
          -2.08431944e-01,  1.35964870e-01, -1.36080638e-01,
           2.32711315e-01, -2.40691692e-01, -9.02339935e-01,
          -1.86837420e-01, -1.66789830e+00, -3.77223998e-01,
           1.69285536e-02, -8.84801149e-01, -1.31913662e+00,
           2.08422448e-03],
         [-6.89457804e-02,  1.12182923e-01, -3.15004528e-01,
           2.33326461e-02, -5.08932471e-01,  1.94225818e-01,
          -7.03875721e-01,  1.25429735e-01, -2.60339320e-01,
           1.31931514e-01, -2.59817958e-01,             nan,
          -6.26342237e-01, -2.88941771e-01,             nan,
          -6.26111686e-01],
         [            nan, -1.81941494e-01,             nan,
          -6.26284361e-01, -1.92359224e-01,  2.91605182e-02,
                      nan, -3.86652648e-01, -4.29759502e-01,
          -8.24189559e-03, -1.15556978e-01, -8.18901479e-01,
          -8.63881469e-01, -5.45028269e-01, -6.55949041e-02,
          -1.15154719e+00],
         [ 5.79669997e-02, -2.29962338e-02,  1.42686293e-01,
          -2.77321577e-01, -2.91808665e-01,  2.14475080e-01,
          -2.26092741e-01, -1.37684971e-01, -9.68471318e-02,
           5.43840649e-03, -1.17913032e+00, -2.12963179e-01,
          -9.44103718e-01, -4.13643897e-01, -1.19819336e-01,
           1.12825548e-02]],

        [[-2.09783822e-01, -1.58220398e+00, -5.49265649e-03,
          -3.80315065e+00,  1.03933506e-01,  1.81223586e-01,
          -1.22737825e+00,  4.45053019e-02, -7.83629715e-01,
          -9.50429006e-04,             nan, -6.38082623e-01,
                      nan, -5.89707077e-01, -2.72500992e-01,
           1.73900679e-01],
         [ 9.39560756e-02, -1.17111675e-01, -7.77318835e-01,
          -4.32078987e-01,             nan, -4.33779180e-01,
          -2.35826358e-01, -1.30155817e-01, -2.66393393e-01,
           7.53827095e-02, -2.84944654e-01,  2.56534424e-02,
          -4.38697003e-02,  1.34307995e-01, -2.07095176e-01,
          -2.07963252e+00],
         [-6.27428144e-02,             nan,  6.33861274e-02,
                      nan, -3.16990256e-01, -3.00529540e-01,
          -1.04312956e+00, -6.56385720e-01, -4.69927669e-01,
           1.56177776e-02,  5.41500486e-02, -1.87726527e-01,
          -8.08711573e-02, -2.20427418e+00, -7.52910099e-04,
          -2.76678896e+00],
         [-1.17077315e+00, -1.30665317e-01, -1.96508181e+00,
          -9.36128080e-01, -3.56760883e+00, -8.49018157e-01,
          -5.04678190e-02,  8.87137055e-02, -3.88551593e-01,
          -2.33861351e+00, -1.70311779e-01, -1.48038730e-01,
          -4.06189322e-01,  1.68337911e-01,  1.26559421e-01,
          -1.82251036e+00],
         [-5.05788565e-01, -1.35822117e-01, -5.80170937e-02,
          -8.14794719e-01, -5.07108092e-01, -1.06301618e+00,
          -8.74320924e-01, -3.04768942e-02, -1.81856841e-01,
          -4.40779090e-01, -8.35147321e-01, -1.77458203e+00,
          -8.80372450e-02,  1.22238412e-01,  6.64683431e-02,
          -9.84159291e-01],
         [ 2.33966969e-02, -3.01536143e-01,  1.08127169e-01,
          -7.02987790e-01, -5.98978877e-01,  8.99384543e-02,
          -8.62872005e-02,             nan,  4.91575636e-02,
          -1.76524054e-02,  9.42216963e-02, -4.60547060e-01,
                      nan, -7.67492726e-02, -1.66142032e-01,
          -8.29885542e-01],
         [-8.76964927e-02,  8.66028965e-02,  1.45092964e-01,
           9.20346379e-02,  4.75038737e-02, -1.43669173e-01,
          -3.23916942e-01, -2.29993850e-01, -5.13013065e-01,
          -8.94760668e-01,  6.33046702e-02, -7.56438673e-02,
          -3.91706973e-02, -1.23335950e-01,  2.46352375e-01,
          -1.24752402e+00],
         [-4.18760389e-01, -2.02323914e+00, -6.74227476e-02,
          -3.97113025e-01, -1.82381809e-01,  6.05628220e-03,
          -6.91297233e-01,  1.30056515e-01, -3.41912135e-02,
          -8.48383486e-01, -2.67402577e+00, -2.24131536e+00,
          -1.29617795e-01, -4.80452269e-01,  9.91715491e-02,
          -1.99870932e+00],
         [-1.61746785e-01, -3.98646563e-01, -5.35255432e-01,
          -2.35094547e+00,  1.34770421e-03,  7.39051849e-02,
          -1.00323164e+00,  1.97758928e-01, -4.50128853e-01,
          -1.84240937e-01, -1.22481835e+00, -6.97363377e-01,
           4.33056578e-02,  9.69584063e-02,  1.02314234e-01,
          -9.94811729e-02],
         [-2.93219686e+00, -1.34418264e-01,  5.79532757e-02,
                      nan, -1.01374459e+00, -1.34500027e+00,
          -7.38483667e-02, -2.18347859e+00, -5.18868566e-01,
           4.51626442e-02, -4.21142638e-01, -7.04540536e-02,
          -4.60225046e-01, -3.27098072e-01, -6.67198300e-02,
          -8.41711104e-01],
         [ 1.42252624e-01, -2.50684738e-01,  2.29567606e-02,
           1.72759071e-01, -3.84097755e-01, -1.40784609e+00,
          -3.65261465e-01, -2.77215838e+00,  2.93838400e-02,
                      nan, -3.27001601e-01,  6.62281662e-02,
          -1.32192302e+00,  1.01810999e-01, -9.02606905e-01,
                      nan],
         [-4.04679894e-01,  1.32231964e-02, -1.27923246e-02,
          -2.74679720e-01, -8.37527514e-01,             nan,
          -4.91899908e-01,             nan,  2.45948564e-02,
          -2.15394452e-01,  1.93466708e-01, -3.34169060e-01,
          -1.46162581e+00, -2.65281759e-02, -3.33228850e+00,
          -1.10650569e-01],
         [-5.39029479e-01, -3.71060669e-01, -3.83709699e-01,
          -3.99224192e-01, -3.74961227e-01, -2.07763650e-02,
          -2.03592032e-01, -5.82851708e-01, -2.02182248e-01,
           1.76204592e-01, -3.05041701e-01, -2.38157630e+00,
          -3.08601633e-02,             nan, -1.48952985e+00,
          -2.68010736e-01],
         [-1.08481157e+00,  9.23725069e-02, -1.95708799e+00,
          -2.10457161e-01, -3.64964277e-01, -4.29557800e-01,
           5.38440831e-02,  5.76969720e-02, -7.33508527e-01,
                      nan, -5.03804743e-01, -2.36622050e-01,
          -4.76130471e-02,  5.81027716e-02, -9.71380472e-01,
          -1.14409672e-02],
         [-5.01724303e-01,             nan, -2.77100295e-01,
           5.17871007e-02, -4.76539850e-01, -2.24485755e+00,
          -2.69117475e-01, -3.65268350e-01, -1.29857823e-01,
          -2.37432450e-01, -1.51415303e-01, -8.69990140e-02,
          -2.00266838e-01, -3.27412933e-01, -5.71709573e-01,
           8.53742659e-02],
         [ 8.63047391e-02, -7.45784044e-02,  1.04504719e-01,
          -3.92636001e-01,  4.60433960e-02, -2.91191995e-01,
          -9.07335281e-01, -4.69801515e-01,  5.88734150e-02,
          -5.93633175e-01, -2.56988168e-01, -9.08642173e-01,
          -1.93394315e+00, -1.10952280e-01, -2.39047870e-01,
           4.58547398e-02]]]], dtype=float32), 'output_shape': (1, 3, 16, 16), 'from': [5], 'to': [6]}
torch node:
{'name': 'log', 'output': array([[[[-4.20974165e-01,  5.50559573e-02,  1.36233643e-01,
          -1.02712773e-01, -5.44672348e-02, -5.16956389e-01,
          -1.74599433e+00, -7.82327294e-01, -1.64502454e+00,
          -8.42844605e-01, -3.57703745e-01, -3.63314271e-01,
          -6.48772657e-01, -3.18822145e-01, -6.34072185e-01,
          -9.54777449e-02],
         [-8.95524085e-01, -5.70818365e-01,  1.14155255e-01,
          -1.81706861e-01,  1.51097281e-02, -1.29236627e+00,
          -4.50491190e-01, -4.75870460e-01, -2.80398190e-01,
          -1.02872658e+00, -1.12508453e-01, -7.96212494e-01,
          -1.12741336e-01,             nan, -7.54165137e-03,
          -8.56544256e-01],
         [-6.90985382e-01, -3.83369625e-01, -3.68808776e-01,
          -1.22932522e-02, -9.60911363e-02, -1.34607780e+00,
          -1.46411955e-01, -1.44567359e-02, -3.62633973e-01,
                      nan, -8.16122770e-01, -9.15409103e-02,
           6.62377626e-02,             nan,  8.85748398e-03,
          -7.26848722e-01],
         [-2.43918389e-01, -4.10689693e-03,  1.86292287e-02,
          -7.82521218e-02, -8.35651278e-01, -2.48503506e-01,
          -2.95051903e-01,  1.04331568e-01, -1.19519210e+00,
          -1.26437977e-01, -1.32607889e+00,  1.91304870e-02,
          -9.44295883e-01,  1.28680423e-01, -3.80034834e-01,
           2.34856959e-02],
         [-2.90579144e-02, -1.71216273e+00, -7.91002810e-01,
          -1.25176644e+00, -3.11347425e-01, -6.81188107e-01,
          -4.92599308e-01, -1.88225523e-01,  3.74231264e-02,
          -9.40900147e-01,  6.36587590e-02, -4.87447500e-01,
          -1.79736480e-01, -5.07731438e-01,  8.41859356e-02,
          -4.00312811e-01],
         [-6.19160533e-02, -1.74641764e+00,             nan,
                      nan, -1.22176957e+00,  4.07694280e-02,
          -8.43767047e-01, -1.21198928e+00, -3.94688869e+00,
           7.57922605e-02,  2.05825400e-02, -4.09500450e-01,
                      nan,  7.38447607e-02, -7.86485970e-01,
          -6.83643445e-02],
         [ 1.97321326e-02, -5.46065629e-01, -1.44093883e+00,
          -9.45288539e-02, -1.46792102e+00, -5.56684323e-02,
          -1.02102369e-01,  1.77426621e-01,             nan,
          -1.07324392e-01, -8.04367065e-01, -6.87549412e-02,
          -4.12869501e+00, -8.01101565e-01, -3.82888794e+00,
           1.40273366e-02],
         [-6.67711139e-01, -2.80562878e-01, -1.84938401e-01,
          -4.52637076e-01, -4.70807403e-02, -2.28677168e-01,
          -1.03412442e-01, -2.16521010e-01,  1.64992258e-01,
           1.37084842e-01, -3.31865907e-01, -2.83886242e+00,
           9.50042233e-02, -8.84856641e-01,  1.09768756e-01,
          -5.51324427e-01],
         [ 1.20392166e-01,             nan, -3.65145020e-02,
          -6.75811693e-02,  5.07506095e-02,  2.15813518e-01,
          -4.71343100e-01, -5.98711908e-01,  5.60869686e-02,
          -1.35023069e+00, -1.69055033e+00,  3.26227322e-02,
          -3.94943357e-02, -2.42441759e-01, -9.10963193e-02,
          -3.22614759e-01],
         [            nan, -2.17857752e-02,  8.23352039e-02,
           7.20858052e-02, -4.62025911e-01, -3.24187309e-01,
          -9.82719541e-01,  3.96857923e-03, -1.05577862e+00,
           1.20197468e-01,             nan, -2.46543199e-01,
          -1.68480515e+00, -1.81610640e-02,  8.79068449e-02,
          -1.05706048e+00],
         [-2.01769665e-01, -1.16049421e+00,  1.25322267e-01,
          -4.44479585e-01, -6.02633841e-02,  6.16120286e-02,
           1.32911861e-01, -5.24564743e-01,  1.95779756e-01,
          -1.10797477e+00, -5.02706394e-02, -1.60387546e-01,
           1.70483366e-01, -1.99042231e-01,             nan,
           6.44883886e-02],
         [-3.40659847e-03, -1.40619886e+00, -6.65372252e-01,
                      nan, -2.51083851e-01, -1.90691307e-01,
          -9.27669644e-01, -8.77913237e-01, -3.44289333e-01,
          -9.84395444e-02, -2.08081622e-02,             nan,
          -3.49236518e-01, -1.89339280e-01, -3.57866496e-01,
          -1.42571688e-01],
         [ 1.49676371e-02,             nan,             nan,
          -3.52797210e-01,             nan, -8.71654272e-01,
          -3.42629969e-01, -3.05313647e-01, -6.06264412e-01,
          -6.04538321e-02, -2.13894963e-01, -6.99663639e-01,
          -9.14708227e-02,             nan,  8.42407271e-02,
          -2.37756744e-01],
         [-1.73347875e-01, -3.12908292e-01, -2.44068801e-01,
           1.26887619e-01, -2.51701266e-01, -5.58714747e-01,
           1.16491348e-01, -6.77164420e-02,  1.19074009e-01,
          -8.68007541e-01, -2.03992501e-01,  2.48324908e-02,
          -3.68762240e-02,  1.87675729e-01, -5.02908193e-02,
          -3.47084969e-01],
         [-4.64785039e-01, -1.77615553e-01, -2.72787958e-01,
                      nan, -1.24067232e-01, -6.80902183e-01,
          -2.89129138e-01,  2.12870650e-02, -1.22675478e+00,
          -1.32897174e+00, -5.12495749e-02, -8.26493055e-02,
          -1.15536284e+00, -3.82349223e-01, -6.55060887e-01,
          -1.20058842e-02],
         [-3.04341650e+00,  3.83081958e-02, -7.77743340e-01,
          -3.82127166e-01, -2.59986687e+00, -2.37441301e-01,
           3.65678482e-02, -2.01969337e+00,  1.08901456e-01,
           1.89955264e-01, -4.63396311e-01, -4.82451946e-01,
                      nan, -2.17371643e-01, -9.50213149e-02,
           7.71618411e-02]],

        [[-1.20980501e-01, -1.35613799e-01, -1.79921776e-01,
          -5.66904068e-01, -8.00958499e-02,  4.27622497e-02,
                      nan,  7.79532269e-02,  1.38613224e-01,
          -5.95071137e-01,  6.43373877e-02, -6.48609459e-01,
          -4.86256406e-02, -7.58580267e-01,  4.23107520e-02,
          -7.13679910e-01],
         [-1.56915009e+00, -4.12330985e-01,  1.40272193e-02,
           5.26219867e-02, -1.26740821e-02, -1.58401906e-01,
          -7.68594801e-01, -1.08925796e+00, -1.49294853e+00,
          -2.47190565e-01, -3.08471084e-01,  1.88334376e-01,
          -1.87173039e-01, -3.38557720e-01,  1.38923898e-01,
          -4.50048149e-01],
         [-2.37647578e-01, -6.98989511e-01, -9.44403052e-01,
          -7.76218832e-01, -2.10257602e+00, -2.61784345e-01,
           1.48272797e-01, -8.56803417e-01, -6.19859791e+00,
          -2.65036631e+00, -2.11487651e-01,  9.23725814e-02,
          -1.33752197e-01, -1.94583043e-01, -8.50329623e-02,
          -3.49140197e-01],
         [-1.68164223e-01,             nan, -9.34656024e-01,
          -4.68640506e-01, -3.00988138e-01,  1.03485122e-01,
          -2.27647334e-01, -2.36624517e-02, -1.33389369e-01,
          -4.72949862e-01, -1.03592527e+00, -6.95508420e-01,
          -8.70401382e-01, -2.33848482e-01, -4.12989199e-01,
          -7.37698451e-02],
         [ 1.69276888e-03, -3.33075136e-01,  3.11576780e-02,
          -2.81734943e-01,  1.29231066e-01, -7.62483245e-03,
          -1.39637589e+00,  5.21616861e-02,             nan,
          -3.58585149e-01,             nan, -4.13243890e-01,
          -5.66711187e-01,             nan,  1.19584806e-01,
           2.33434260e-01],
         [-7.23592997e-01, -2.29860805e-02,  1.87444761e-02,
          -6.00028485e-02, -4.34737980e-01, -3.57777059e-01,
           1.48204252e-01, -8.83118927e-01,  1.96111277e-01,
          -3.49570513e-01, -2.03744605e-01,             nan,
          -2.33730108e-01,  6.38468936e-03, -2.68789315e+00,
          -4.10358012e-01],
         [            nan, -5.15519917e-01, -2.04686236e+00,
          -1.82990991e-02, -1.52526110e-01,             nan,
           9.54973400e-02, -6.18831992e-01,  7.56111220e-02,
           1.30471885e-01, -7.16943480e-03, -2.70463258e-01,
          -9.25951779e-01,  1.12660823e-03,             nan,
          -4.77529287e-01],
         [-5.55538118e-01, -1.15474224e+00,  2.04496577e-01,
          -7.95402169e-01, -4.31018740e-01,  4.79179211e-02,
          -1.38133228e-01, -5.85848629e-01, -2.03645810e-01,
          -1.46277487e-01, -1.28825068e-01, -2.61454433e-01,
          -9.05588448e-01,  2.09421054e-01, -2.21289322e-01,
          -1.25442326e+00],
         [-5.77292740e-01, -3.45237941e-01,  1.89472273e-01,
          -2.29775414e-01, -4.64514017e-01, -1.47913957e+00,
          -5.32684743e-01,  7.37268329e-02, -2.60584652e-01,
           2.07506749e-03, -9.45203006e-01, -2.31454223e-01,
           9.66793001e-02,             nan, -5.35757542e-02,
          -7.73192525e-01],
         [            nan, -1.27917305e-01, -4.19413626e-01,
          -7.17531517e-02,             nan, -4.53606665e-01,
          -2.46779978e-01, -1.35271460e-01, -2.11003280e+00,
          -2.32126427e+00, -5.59159927e-02, -2.79079914e-01,
          -1.40533820e-01, -2.47514814e-01, -8.65759611e-01,
           5.78282438e-02],
         [ 1.81417182e-01,  7.72098498e-03, -1.58281291e+00,
          -9.37804431e-02, -9.22740474e-02, -1.92109033e-01,
          -2.14988247e-01, -5.08570015e-01, -3.32032889e-01,
          -1.35034010e-01, -6.90971613e-02,  2.17068568e-02,
          -9.97789979e-01,  8.46760944e-02, -5.10234594e-01,
          -5.07175028e-01],
         [ 1.08330078e-01, -1.60321355e+00, -2.05471730e+00,
           1.75991356e-01, -6.46715641e-01, -2.18595043e-01,
          -6.50394429e-03, -7.54681649e-03, -2.17442393e-01,
          -4.07104826e+00,  8.05092007e-02,  1.63881108e-01,
          -9.95131060e-02, -2.61157639e-02, -5.88651836e-01,
          -4.95338216e-02],
         [-2.41150469e-01,             nan,  3.67418630e-03,
          -2.08429545e-01,  1.35968029e-01, -1.36079714e-01,
           2.32708499e-01, -2.40689278e-01, -9.02337551e-01,
          -1.86834142e-01, -1.66789603e+00, -3.77222061e-01,
           1.69299841e-02, -8.84798765e-01, -1.31913364e+00,
           2.08565500e-03],
         [-6.89458027e-02,  1.12182349e-01, -3.15004468e-01,
           2.33340766e-02, -5.08930981e-01,  1.94227293e-01,
          -7.03874290e-01,  1.25432894e-01, -2.60337085e-01,
           1.31934673e-01, -2.59815723e-01,             nan,
          -6.26339257e-01, -2.88941711e-01,             nan,
          -6.26108766e-01],
         [            nan, -1.81938201e-01,             nan,
          -6.26281500e-01, -1.92356810e-01,  2.91619487e-02,
                      nan, -3.86650741e-01, -4.29762304e-01,
          -8.24046507e-03, -1.15555987e-01, -8.18900466e-01,
          -8.63878191e-01, -5.45026779e-01, -6.55949265e-02,
          -1.15154994e+00],
         [ 5.79635873e-02, -2.29948014e-02,  1.42689452e-01,
          -2.77319372e-01, -2.91808605e-01,  2.14474276e-01,
          -2.26090327e-01, -1.37683988e-01, -9.68461409e-02,
           5.43983653e-03, -1.17913115e+00, -2.12960765e-01,
          -9.44101453e-01, -4.13641959e-01, -1.19818345e-01,
           1.12839853e-02]],

        [[-2.09781408e-01, -1.58220160e+00, -5.49116591e-03,
          -3.80315351e+00,  1.03932932e-01,  1.81225061e-01,
          -1.22737682e+00,  4.45018895e-02, -7.83628702e-01,
          -9.48998495e-04,             nan, -6.38086021e-01,
                      nan, -5.89707613e-01, -2.72498757e-01,
           1.73902169e-01],
         [ 9.39555019e-02, -1.17110625e-01, -7.77317882e-01,
          -4.32081789e-01,             nan, -4.33781981e-01,
          -2.35823944e-01, -1.30154818e-01, -2.66391158e-01,
           7.53856152e-02, -2.84942418e-01,  2.56548729e-02,
          -4.38697822e-02,  1.34311154e-01, -2.07092762e-01,
          -2.07963109e+00],
         [-6.27428368e-02,             nan,  6.33890331e-02,
                      nan, -3.16990197e-01, -3.00529480e-01,
          -1.04313242e+00, -6.56389117e-01, -4.69930589e-01,
           1.56192081e-02,  5.41466363e-02, -1.87723234e-01,
          -8.08711797e-02, -2.20427322e+00, -7.51479645e-04,
          -2.76678753e+00],
         [-1.17077374e+00, -1.30664334e-01, -1.96508229e+00,
          -9.36125636e-01, -3.56760788e+00, -8.49014878e-01,
          -5.04678413e-02,  8.87166113e-02, -3.88549656e-01,
          -2.33861136e+00, -1.70308501e-01, -1.48037672e-01,
          -4.06187385e-01,  1.68339401e-01,  1.26562580e-01,
          -1.82251310e+00],
         [-5.05787134e-01, -1.35821059e-01, -5.80171160e-02,
          -8.14793766e-01, -5.07106602e-01, -1.06301904e+00,
          -8.74317646e-01, -3.04754004e-02, -1.81853563e-01,
          -4.40781802e-01, -8.35146308e-01, -1.77458012e+00,
          -8.80362540e-02,  1.22241579e-01,  6.64712489e-02,
          -9.84159112e-01],
         [ 2.33981274e-02, -3.01536113e-01,  1.08126596e-01,
          -7.02986360e-01, -5.98979473e-01,  8.99378806e-02,
          -8.62862170e-02,             nan,  4.91541512e-02,
          -1.76509749e-02,  9.42211226e-02, -4.60549861e-01,
                      nan, -7.67492950e-02, -1.66138753e-01,
          -8.29884589e-01],
         [-8.76955017e-02,  8.66058022e-02,  1.45096123e-01,
           9.20340642e-02,  4.75004651e-02, -1.43668175e-01,
          -3.23916882e-01, -2.29991436e-01, -5.13011456e-01,
          -8.94758224e-01,  6.33075759e-02, -7.56438896e-02,
          -3.91706564e-02, -1.23334959e-01,  2.46349558e-01,
          -1.24752092e+00],
         [-4.18758452e-01, -2.02324247e+00, -6.74227700e-02,
          -3.97111118e-01, -1.82378516e-01,  6.05771225e-03,
          -6.91295803e-01,  1.30059674e-01, -3.41912396e-02,
          -8.48380208e-01, -2.67402625e+00, -2.24131203e+00,
          -1.29616812e-01, -4.80453074e-01,  9.91709754e-02,
          -1.99870646e+00],
         [-1.61743507e-01, -3.98644567e-01, -5.35254002e-01,
          -2.35094333e+00,  1.34913472e-03,  7.39080906e-02,
          -1.00323164e+00,  1.97760403e-01, -4.50131655e-01,
          -1.84237659e-01, -1.22481692e+00, -6.97361946e-01,
           4.33023609e-02,  9.69578326e-02,  1.02313660e-01,
          -9.94801819e-02],
         [-2.93219352e+00, -1.34417266e-01,  5.79498634e-02,
                      nan, -1.01374459e+00, -1.34500360e+00,
          -7.38483891e-02, -2.18347740e+00, -5.18867135e-01,
           4.51592319e-02, -4.21140730e-01, -7.04540759e-02,
          -4.60227847e-01, -3.27098012e-01, -6.67198524e-02,
          -8.41710150e-01],
         [ 1.42255783e-01, -2.50682533e-01,  2.29581892e-02,
           1.72760546e-01, -3.84095848e-01, -1.40784478e+00,
          -3.65264326e-01, -2.77215695e+00,  2.93852687e-02,
                      nan, -3.27001631e-01,  6.62310645e-02,
          -1.32192004e+00,  1.01810426e-01, -9.02604520e-01,
                      nan],
         [-4.04677987e-01,  1.32246269e-02, -1.27908951e-02,
          -2.74677515e-01, -8.37526560e-01,             nan,
          -4.91900712e-01,             nan,  2.45962869e-02,
          -2.15392053e-01,  1.93468198e-01, -3.34171891e-01,
          -1.46162581e+00, -2.65267454e-02, -3.33228540e+00,
          -1.10649578e-01],
         [-5.39027929e-01, -3.71063501e-01, -3.83707851e-01,
          -3.99222285e-01, -3.74959290e-01, -2.07749344e-02,
          -2.03589618e-01, -5.82852304e-01, -2.02179834e-01,
           1.76206082e-01, -3.05041641e-01, -2.38157630e+00,
          -3.08587309e-02,             nan, -1.48952889e+00,
          -2.68008500e-01],
         [-1.08480966e+00,  9.23719332e-02, -1.95708489e+00,
          -2.10454762e-01, -3.64967138e-01, -4.29560602e-01,
           5.38406745e-02,  5.76935597e-02, -7.33508527e-01,
                      nan, -5.03803253e-01, -2.36619651e-01,
          -4.76130694e-02,  5.80993593e-02, -9.71378207e-01,
          -1.14395367e-02],
         [-5.01722813e-01,             nan, -2.77098060e-01,
           5.17836921e-02, -4.76540625e-01, -2.24485421e+00,
          -2.69115239e-01, -3.65271211e-01, -1.29856825e-01,
          -2.37430036e-01, -1.51414305e-01, -8.69980231e-02,
          -2.00264424e-01, -3.27412874e-01, -5.71706414e-01,
           8.53771716e-02],
         [ 8.63076448e-02, -7.45784268e-02,  1.04504146e-01,
          -3.92634094e-01,  4.60399836e-02, -2.91191876e-01,
          -9.07332897e-01, -4.69804347e-01,  5.88700064e-02,
          -5.93633711e-01, -2.56985933e-01, -9.08639789e-01,
          -1.93394160e+00, -1.10951297e-01, -2.39045456e-01,
           4.58513275e-02]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 16, 16]), 'from': [5], 'to': [6]}

generate models:295

analyse the exceptions in iter:354
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-1.4644e+00, -2.1123e-02,  1.8679e-01,  ...,  7.1064e-01,
             5.8580e-02, -2.7341e-01],
           [ 1.9677e+00,  3.3411e-01, -2.2458e-01,  ..., -2.0143e-01,
            -6.4021e-01,  2.2497e+00],
           [ 5.3003e-01,  1.5387e-01, -6.0094e-01,  ...,  1.5271e-01,
             6.4555e-01, -1.3516e+00],
           ...,
           [ 2.8031e-01,  1.8990e+00,  1.1347e+00,  ..., -5.9603e-02,
             6.3714e-01,  1.0043e+00],
           [-1.2514e-03,  1.6201e+00,  6.8892e-01,  ..., -4.7877e-01,
             8.3268e-01,  1.0441e+00],
           [ 2.0125e-01, -1.1462e+00, -1.1719e+00,  ..., -7.6152e-01,
             8.1626e-01, -5.7161e-01]],

          [[-8.0440e-01,  1.9770e-01, -8.2159e-01,  ..., -3.5529e-01,
             2.4082e-01, -1.4997e-01],
           [-1.6615e+00,  7.7914e-01, -1.7733e-01,  ...,  4.8631e-01,
             6.2610e-01,  8.8818e-01],
           [ 2.0816e-01, -1.2198e-01, -1.1320e+00,  ..., -2.5622e+00,
             7.9354e-01,  2.2231e+00],
           ...,
           [-8.5099e-01, -9.2356e-01,  5.6945e-01,  ...,  4.2089e-01,
             7.9037e-01,  3.9112e-01],
           [-5.3834e-01, -2.2295e+00, -2.9255e-01,  ..., -5.5997e-01,
            -1.7023e+00, -6.7362e-01],
           [ 4.9437e-01, -9.4347e-02, -2.7024e+00,  ..., -3.8690e-01,
            -1.3621e+00, -2.9603e-01]],

          [[ 2.3756e+00, -7.6125e-01,  1.8493e+00,  ..., -1.1857e-01,
            -1.2196e+00,  9.9766e-01],
           [ 1.3121e+00,  7.4819e-01, -4.1258e-01,  ...,  8.7997e-01,
            -7.3932e-01, -1.9496e-01],
           [-1.0316e+00, -6.2225e-01,  7.5706e-01,  ...,  1.1632e+00,
            -1.1994e+00,  1.1237e+00],
           ...,
           [ 7.9297e-01,  1.3926e+00, -8.4626e-01,  ...,  2.2928e-01,
             5.0594e-01,  6.4591e-01],
           [ 7.3059e-01, -1.3958e+00,  9.8221e-01,  ...,  6.4063e-02,
            -1.4344e-01, -1.7100e+00],
           [-1.7452e+00, -2.1907e+00,  5.0493e-01,  ..., -1.1845e+00,
            -1.5113e+00, -1.2330e+00]]]]])}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-1.46435046e+000, -2.11234950e-002, 1.86789379e-001 ... 7.10635006e-001, 5.85800447e-002, -2.73410171e-001],
    [1.96769702e+000, 3.34107459e-001, -2.24578455e-001 ... -2.01426581e-001, -6.40207946e-001, 2.24972510e+000],
    [5.30025184e-001, 1.53873071e-001, -6.00942254e-001 ... 1.52711585e-001, 6.45546496e-001, -1.35159385e+000],
    ...
    [2.80311435e-001, 1.89904475e+000, 1.13467395e+000 ... -5.96034937e-002, 6.37140751e-001, 1.00427663e+000],
    [-1.25144492e-003, 1.62006414e+000, 6.88923538e-001 ... -4.78765696e-001, 8.32677364e-001, 1.04408681e+000],
    [2.01245010e-001, -1.14617431e+000, -1.17190707e+000 ... -7.61515677e-001, 8.16258013e-001, -5.71606874e-001]],
   [[-8.04401398e-001, 1.97695047e-001, -8.21592867e-001 ... -3.55288476e-001, 2.40822762e-001, -1.49965361e-001],
    [-1.66148353e+000, 7.79141843e-001, -1.77331597e-001 ... 4.86309916e-001, 6.26095295e-001, 8.88184607e-001],
    [2.08157718e-001, -1.21975131e-001, -1.13204432e+000 ... -2.56224346e+000, 7.93542445e-001, 2.22313809e+000],
    ...
    [-8.50989580e-001, -9.23555791e-001, 5.69453061e-001 ... 4.20889229e-001, 7.90370882e-001, 3.91123235e-001],
    [-5.38339794e-001, -2.22952127e+000, -2.92546660e-001 ... -5.59974790e-001, -1.70234823e+000, -6.73616409e-001],
    [4.94367361e-001, -9.43469703e-002, -2.70237398e+000 ... -3.86896223e-001, -1.36207700e+000, -2.96033710e-001]],
   [[2.37560868e+000, -7.61254251e-001, 1.84928846e+000 ... -1.18566185e-001, -1.21961963e+000, 9.97659326e-001],
    [1.31208682e+000, 7.48185515e-001, -4.12576377e-001 ... 8.79971206e-001, -7.39321649e-001, -1.94958359e-001],
    [-1.03164756e+000, -6.22253060e-001, 7.57058203e-001 ... 1.16321504e+000, -1.19942546e+000, 1.12368631e+000],
    ...
    [7.92969942e-001, 1.39257133e+000, -8.46263409e-001 ... 2.29284853e-001, 5.05944133e-001, 6.45911932e-001],
    [7.30589211e-001, -1.39575374e+000, 9.82206643e-001 ... 6.40631765e-002, -1.43439263e-001, -1.70997834e+000],
    [-1.74517751e+000, -2.19073987e+000, 5.04934132e-001 ... -1.18445992e+000, -1.51134288e+000, -1.23297501e+000]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:307

analyse output arrays in iter:364

pre layer res:
8:reshape
{'name': 'reshape', 'output': array([[[[0.        , 0.8740099 , 0.        , ..., 0.        ,
          1.7705469 , 0.        ],
         [0.5903255 , 1.1963913 , 0.7035733 , ..., 0.        ,
          0.3110098 , 0.3954502 ],
         [0.11711004, 1.5197642 , 0.        , ..., 0.25124446,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        ...,

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 112, 112]), 'from': [7], 'to': [15]}
tf node:
{'name': 'log', 'output': array([[[[       -inf, -0.13466357,        -inf, ...,        -inf,
           0.57128847,        -inf],
         [-0.52708125,  0.17930982, -0.35158324, ...,        -inf,
          -1.1679308 , -0.92773044],
         [-2.1446412 ,  0.41855517,        -inf, ..., -1.3813289 ,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 112, 112]), 'from': [8], 'to': [5, 22]}
ms node:
{'name': 'log', 'output': array([[[[       -inf, -0.13466455,        -inf, ...,        -inf,
           0.5712875 ,        -inf],
         [-0.52708274,  0.17930833, -0.35158038, ...,        -inf,
          -1.1679301 , -0.9277328 ],
         [-2.1446412 ,  0.41855296,        -inf, ..., -1.3813304 ,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': (1, 256, 112, 112), 'from': [8], 'to': [5, 22]}
torch node:
{'name': 'log', 'output': array([[[[       -inf, -0.13466357,        -inf, ...,        -inf,
           0.57128847,        -inf],
         [-0.52708125,  0.17930982, -0.35158324, ...,        -inf,
          -1.1679308 , -0.92773044],
         [-2.1446412 ,  0.41855517,        -inf, ..., -1.3813289 ,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 112, 112]), 'from': [8], 'to': [5, 22]}

pre layer res:
5:conv2d
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 112, 112]), 'from': [15], 'to': [25]}
tf node:
{'name': 'sin', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 112, 112]), 'from': [5], 'to': [26]}
ms node:
{'name': 'sin', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 128, 112, 112), 'from': [5], 'to': [26]}
torch node:
{'name': 'sin', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 112, 112]), 'from': [5], 'to': [26]}

generate models:315

analyse the exceptions in iter:365
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 2.0483,  1.7009,  3.0989,  ..., -0.2310, -0.3539, -0.3630],
          [ 0.8822, -1.3229, -3.9933,  ..., -0.5029,  0.1794,  4.4451],
          [ 0.2505,  2.3401, -3.7718,  ..., -3.9085,  0.9682,  1.2470],
          ...,
          [-0.5223,  3.3475, -0.2841,  ...,  0.1324, -3.1211, -2.6713],
          [-0.8663, -1.7735, -2.4637,  ..., -1.4638,  2.7619, -0.6129],
          [-1.1443, -2.6888,  0.5347,  ..., -0.1466,  0.3975, -1.7374]],

         [[ 2.0483,  1.7009,  3.0989,  ..., -0.2310, -0.3539, -0.3630],
          [ 0.8822, -1.3229, -3.9933,  ..., -0.5029,  0.1794,  4.4451],
          [ 0.2505,  2.3401, -3.7718,  ..., -3.9085,  0.9682,  1.2470],
          ...,
          [-0.5223,  3.3475, -0.2841,  ...,  0.1324, -3.1211, -2.6713],
          [-0.8663, -1.7735, -2.4637,  ..., -1.4638,  2.7619, -0.6129],
          [-1.1443, -2.6888,  0.5347,  ..., -0.1466,  0.3975, -1.7374]],

         [[ 2.0483,  1.7009,  3.0989,  ..., -0.2310, -0.3539, -0.3630],
          [ 0.8822, -1.3229, -3.9933,  ..., -0.5029,  0.1794,  4.4451],
          [ 0.2505,  2.3401, -3.7718,  ..., -3.9085,  0.9682,  1.2470],
          ...,
          [-0.5223,  3.3475, -0.2841,  ...,  0.1324, -3.1211, -2.6713],
          [-0.8663, -1.7735, -2.4637,  ..., -1.4638,  2.7619, -0.6129],
          [-1.1443, -2.6888,  0.5347,  ..., -0.1466,  0.3975, -1.7374]],

         ...,

         [[ 2.0483,  1.7009,  3.0989,  ..., -0.2310, -0.3539, -0.3630],
          [ 0.8822, -1.3229, -3.9933,  ..., -0.5029,  0.1794,  4.4451],
          [ 0.2505,  2.3401, -3.7718,  ..., -3.9085,  0.9682,  1.2470],
          ...,
          [-0.5223,  3.3475, -0.2841,  ...,  0.1324, -3.1211, -2.6713],
          [-0.8663, -1.7735, -2.4637,  ..., -1.4638,  2.7619, -0.6129],
          [-1.1443, -2.6888,  0.5347,  ..., -0.1466,  0.3975, -1.7374]],

         [[ 2.0483,  1.7009,  3.0989,  ..., -0.2310, -0.3539, -0.3630],
          [ 0.8822, -1.3229, -3.9933,  ..., -0.5029,  0.1794,  4.4451],
          [ 0.2505,  2.3401, -3.7718,  ..., -3.9085,  0.9682,  1.2470],
          ...,
          [-0.5223,  3.3475, -0.2841,  ...,  0.1324, -3.1211, -2.6713],
          [-0.8663, -1.7735, -2.4637,  ..., -1.4638,  2.7619, -0.6129],
          [-1.1443, -2.6888,  0.5347,  ..., -0.1466,  0.3975, -1.7374]],

         [[ 2.0483,  1.7009,  3.0989,  ..., -0.2310, -0.3539, -0.3630],
          [ 0.8822, -1.3229, -3.9933,  ..., -0.5029,  0.1794,  4.4451],
          [ 0.2505,  2.3401, -3.7718,  ..., -3.9085,  0.9682,  1.2470],
          ...,
          [-0.5223,  3.3475, -0.2841,  ...,  0.1324, -3.1211, -2.6713],
          [-0.8663, -1.7735, -2.4637,  ..., -1.4638,  2.7619, -0.6129],
          [-1.1443, -2.6888,  0.5347,  ..., -0.1466,  0.3975, -1.7374]]]],
       grad_fn=<ConvolutionBackward0>)]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 256, 32, 32] to have 512 channels, but got 256 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 32, 32], dtype=Float32, value=
[[[[2.04832339e+000, 1.70094419e+000, 3.09892225e+000 ... -2.30953366e-001, -3.53927016e-001, -3.63039553e-001],
   [8.82165790e-001, -1.32288861e+000, -3.99333143e+000 ... -5.02879143e-001, 1.79400802e-001, 4.44507170e+000],
   [2.50508308e-001, 2.34005475e+000, -3.77179527e+000 ... -3.90845728e+000, 9.68176723e-001, 1.24695253e+000],
   ...
   [-5.22292197e-001, 3.34748483e+000, -2.84090579e-001 ... 1.32359803e-001, -3.12110734e+000, -2.67133856e+000],
   [-8.66347075e-001, -1.77348590e+000, -2.46368432e+000 ... -1.46376872e+000, 2.76193833e+000, -6.12947583e-001],
   [-1.14426589e+000, -2.68883348e+000, 5.34736514e-001 ... -1.46551788e-001, 3.97472471e-001, -1.73738694e+000]],
  [[2.04832339e+000, 1.70094419e+000, 3.09892225e+000 ... -2.30953366e-001, -3.53927016e-001, -3.63039553e-001],
   [8.82165790e-001, -1.32288861e+000, -3.99333143e+000 ... -5.02879143e-001, 1.79400802e-001, 4.44507170e+000],
   [2.50508308e-001, 2.34005475e+000, -3.77179527e+000 ... -3.90845728e+000, 9.68176723e-001, 1.24695253e+000],
   ...
   [-5.22292197e-001, 3.34748483e+000, -2.84090579e-001 ... 1.32359803e-001, -3.12110734e+000, -2.67133856e+000],
   [-8.66347075e-001, -1.77348590e+000, -2.46368432e+000 ... -1.46376872e+000, 2.76193833e+000, -6.12947583e-001],
   [-1.14426589e+000, -2.68883348e+000, 5.34736514e-001 ... -1.46551788e-001, 3.97472471e-001, -1.73738694e+000]],
  [[2.04832339e+000, 1.70094419e+000, 3.09892225e+000 ... -2.30953366e-001, -3.53927016e-001, -3.63039553e-001],
   [8.82165790e-001, -1.32288861e+000, -3.99333143e+000 ... -5.02879143e-001, 1.79400802e-001, 4.44507170e+000],
   [2.50508308e-001, 2.34005475e+000, -3.77179527e+000 ... -3.90845728e+000, 9.68176723e-001, 1.24695253e+000],
   ...
   [-5.22292197e-001, 3.34748483e+000, -2.84090579e-001 ... 1.32359803e-001, -3.12110734e+000, -2.67133856e+000],
   [-8.66347075e-001, -1.77348590e+000, -2.46368432e+000 ... -1.46376872e+000, 2.76193833e+000, -6.12947583e-001],
   [-1.14426589e+000, -2.68883348e+000, 5.34736514e-001 ... -1.46551788e-001, 3.97472471e-001, -1.73738694e+000]],
  ...
  [[2.04832339e+000, 1.70094419e+000, 3.09892225e+000 ... -2.30953366e-001, -3.53927016e-001, -3.63039553e-001],
   [8.82165790e-001, -1.32288861e+000, -3.99333143e+000 ... -5.02879143e-001, 1.79400802e-001, 4.44507170e+000],
   [2.50508308e-001, 2.34005475e+000, -3.77179527e+000 ... -3.90845728e+000, 9.68176723e-001, 1.24695253e+000],
   ...
   [-5.22292197e-001, 3.34748483e+000, -2.84090579e-001 ... 1.32359803e-001, -3.12110734e+000, -2.67133856e+000],
   [-8.66347075e-001, -1.77348590e+000, -2.46368432e+000 ... -1.46376872e+000, 2.76193833e+000, -6.12947583e-001],
   [-1.14426589e+000, -2.68883348e+000, 5.34736514e-001 ... -1.46551788e-001, 3.97472471e-001, -1.73738694e+000]],
  [[2.04832339e+000, 1.70094419e+000, 3.09892225e+000 ... -2.30953366e-001, -3.53927016e-001, -3.63039553e-001],
   [8.82165790e-001, -1.32288861e+000, -3.99333143e+000 ... -5.02879143e-001, 1.79400802e-001, 4.44507170e+000],
   [2.50508308e-001, 2.34005475e+000, -3.77179527e+000 ... -3.90845728e+000, 9.68176723e-001, 1.24695253e+000],
   ...
   [-5.22292197e-001, 3.34748483e+000, -2.84090579e-001 ... 1.32359803e-001, -3.12110734e+000, -2.67133856e+000],
   [-8.66347075e-001, -1.77348590e+000, -2.46368432e+000 ... -1.46376872e+000, 2.76193833e+000, -6.12947583e-001],
   [-1.14426589e+000, -2.68883348e+000, 5.34736514e-001 ... -1.46551788e-001, 3.97472471e-001, -1.73738694e+000]],
  [[2.04832339e+000, 1.70094419e+000, 3.09892225e+000 ... -2.30953366e-001, -3.53927016e-001, -3.63039553e-001],
   [8.82165790e-001, -1.32288861e+000, -3.99333143e+000 ... -5.02879143e-001, 1.79400802e-001, 4.44507170e+000],
   [2.50508308e-001, 2.34005475e+000, -3.77179527e+000 ... -3.90845728e+000, 9.68176723e-001, 1.24695253e+000],
   ...
   [-5.22292197e-001, 3.34748483e+000, -2.84090579e-001 ... 1.32359803e-001, -3.12110734e+000, -2.67133856e+000],
   [-8.66347075e-001, -1.77348590e+000, -2.46368432e+000 ... -1.46376872e+000, 2.76193833e+000, -6.12947583e-001],
   [-1.14426589e+000, -2.68883348e+000, 5.34736514e-001 ... -1.46551788e-001, 3.97472471e-001, -1.73738694e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:316

analyse output arrays in iter:374

pre layer res:
0:avgpool2d
{'name': 'avgpool2d', 'output': array([[[[ 0.29028776, -0.05593529,  0.3858603 , ..., -0.48751625,
          -0.34226567, -0.45305666],
         [ 2.62844   , -0.6465074 , -0.41484684, ...,  0.32147807,
          -1.8137251 ,  0.6037656 ],
         [-2.0044584 , -0.00714999,  0.6442734 , ...,  0.90351105,
          -1.2325335 ,  1.8982953 ],
         ...,
         [ 0.19133613,  1.0862765 , -0.2256797 , ..., -0.7947029 ,
           0.14580925, -1.5200578 ],
         [ 0.27703   , -1.1052285 , -1.4335666 , ..., -0.28547892,
           1.3675143 ,  1.5113647 ],
         [-0.48268926, -1.1287806 ,  1.1331413 , ..., -0.13378152,
           1.3436085 ,  0.33964643]],

        [[ 0.31007296, -2.3747096 ,  1.9978778 , ..., -1.4291055 ,
           1.8940768 , -0.39809546],
         [-0.6489118 ,  0.5444924 ,  0.59487855, ...,  0.2758163 ,
          -0.7298239 ,  0.32283357],
         [-0.5101807 , -0.7931659 ,  0.03435317, ..., -0.73034483,
          -2.1957948 ,  0.09186223],
         ...,
         [-3.0999415 , -0.44508734,  0.8663971 , ..., -1.2379428 ,
          -0.69150734, -0.09845649],
         [ 0.57113934, -0.14738579,  2.5240762 , ..., -0.42294478,
          -0.9587481 ,  1.6574118 ],
         [-1.8026774 , -2.2264292 , -1.3331178 , ..., -0.24945651,
          -0.8454506 , -0.72314143]],

        [[-1.3410217 ,  1.0459746 ,  0.33756343, ..., -0.41375002,
           0.7139978 , -1.0406612 ],
         [ 1.3189642 ,  1.2865907 , -0.33127704, ..., -0.8907571 ,
           0.1172075 ,  0.2631098 ],
         [ 0.7016484 , -0.65266   , -0.99629194, ...,  0.51974404,
           0.27835736, -0.5358032 ],
         ...,
         [-0.42692745,  0.29724282,  2.228835  , ..., -2.044266  ,
          -0.14808044, -1.6101346 ],
         [ 2.0658622 ,  2.689571  , -2.210833  , ..., -0.96164644,
          -0.22417864,  1.7481258 ],
         [ 0.41628996,  1.1446532 ,  0.40437192, ..., -0.5398998 ,
          -0.6189764 ,  0.08026684]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [5]}
tf node:
{'name': 'log', 'output': array([[[[-1.2368826 ,         nan, -0.9522799 , ...,         nan,
                  nan,         nan],
         [ 0.9663905 ,         nan,         nan, ..., -1.134826  ,
                  nan, -0.50456923],
         [        nan,         nan, -0.43963212, ..., -0.10146694,
                  nan,  0.6409563 ],
         ...,
         [-1.6537236 ,  0.08275582,         nan, ...,         nan,
          -1.925456  ,         nan],
         [-1.2836295 ,         nan,         nan, ...,         nan,
           0.3129947 ,  0.413013  ],
         [        nan,         nan,  0.12499367, ...,         nan,
           0.2953589 , -1.0798502 ]],

        [[-1.1709477 ,         nan,  0.69208556, ...,         nan,
           0.63873154,         nan],
         [        nan, -0.6079013 , -0.519398  , ..., -1.2880203 ,
                  nan, -1.1306183 ],
         [        nan,         nan, -3.371061  , ...,         nan,
                  nan, -2.3874652 ],
         ...,
         [        nan,         nan, -0.14341195, ...,         nan,
                  nan,         nan],
         [-0.5601221 ,         nan,  0.9258751 , ...,         nan,
                  nan,  0.50525725],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,  0.0449491 , -1.0860019 , ...,         nan,
          -0.33687544,         nan],
         [ 0.27684677,  0.25199586,         nan, ...,         nan,
          -2.1438093 , -1.3351839 ],
         [-0.35432285,         nan,         nan, ..., -0.6544188 ,
          -1.2788496 ,         nan],
         ...,
         [        nan, -1.2132059 ,  0.8014791 , ...,         nan,
                  nan,         nan],
         [ 0.7255477 ,  0.9893817 ,         nan, ...,         nan,
                  nan,  0.5585442 ],
         [-0.8763733 ,  0.1351017 , -0.90542024, ...,         nan,
                  nan, -2.5223987 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[-1.236884  ,         nan, -0.95228213, ...,         nan,
                  nan,         nan],
         [ 0.9663886 ,         nan,         nan, ..., -1.1348232 ,
                  nan, -0.5045707 ],
         [        nan,         nan, -0.4396293 , ..., -0.10146793,
                  nan,  0.6409563 ],
         ...,
         [-1.6537259 ,  0.08275292,         nan, ...,         nan,
          -1.9254575 ,         nan],
         [-1.283629  ,         nan,         nan, ...,         nan,
           0.31299275,  0.4130108 ],
         [        nan,         nan,  0.12499051, ...,         nan,
           0.295357  , -1.0798521 ]],

        [[-1.1709468 ,         nan,  0.69208413, ...,         nan,
           0.6387316 ,         nan],
         [        nan, -0.60790414, -0.51939946, ..., -1.2880197 ,
                  nan, -1.1306156 ],
         [        nan,         nan, -3.3710606 , ...,         nan,
                  nan, -2.3874655 ],
         ...,
         [        nan,         nan, -0.14341293, ...,         nan,
                  nan,         nan],
         [-0.56012523,         nan,  0.9258779 , ...,         nan,
                  nan,  0.505254  ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,  0.0449525 , -1.0860038 , ...,         nan,
          -0.33687258,         nan],
         [ 0.27684483,  0.25199866,         nan, ...,         nan,
          -2.1438093 , -1.3351804 ],
         [-0.35432   ,         nan,         nan, ..., -0.6544154 ,
          -1.278849  ,         nan],
         ...,
         [        nan, -1.2132074 ,  0.80147964, ...,         nan,
                  nan,         nan],
         [ 0.72555107,  0.98937976,         nan, ...,         nan,
                  nan,  0.55854326],
         [-0.87637657,  0.13509855, -0.9054226 , ...,         nan,
                  nan, -2.5223958 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[-1.2368826 ,         nan, -0.9522799 , ...,         nan,
                  nan,         nan],
         [ 0.9663905 ,         nan,         nan, ..., -1.134826  ,
                  nan, -0.50456923],
         [        nan,         nan, -0.43963212, ..., -0.10146694,
                  nan,  0.6409563 ],
         ...,
         [-1.6537236 ,  0.08275582,         nan, ...,         nan,
          -1.925456  ,         nan],
         [-1.2836295 ,         nan,         nan, ...,         nan,
           0.3129947 ,  0.413013  ],
         [        nan,         nan,  0.12499367, ...,         nan,
           0.2953589 , -1.0798502 ]],

        [[-1.1709477 ,         nan,  0.69208556, ...,         nan,
           0.63873154,         nan],
         [        nan, -0.6079013 , -0.519398  , ..., -1.2880203 ,
                  nan, -1.1306183 ],
         [        nan,         nan, -3.371061  , ...,         nan,
                  nan, -2.3874652 ],
         ...,
         [        nan,         nan, -0.14341195, ...,         nan,
                  nan,         nan],
         [-0.5601221 ,         nan,  0.9258751 , ...,         nan,
                  nan,  0.50525725],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,  0.0449491 , -1.0860019 , ...,         nan,
          -0.33687544,         nan],
         [ 0.27684677,  0.25199583,         nan, ...,         nan,
          -2.1438093 , -1.3351839 ],
         [-0.35432285,         nan,         nan, ..., -0.6544188 ,
          -1.2788495 ,         nan],
         ...,
         [        nan, -1.2132059 ,  0.8014791 , ...,         nan,
                  nan,         nan],
         [ 0.7255477 ,  0.9893817 ,         nan, ...,         nan,
                  nan,  0.5585442 ],
         [-0.8763733 ,  0.1351017 , -0.90542024, ...,         nan,
                  nan, -2.5223987 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [1]}

generate models:323

analyse output arrays in iter:376

pre layer res:
8:transpose
{'name': 'transpose', 'output': array([[[[-537.6241  ,   85.12073 ,  981.43756 , ...,  504.3313  ,
            79.56287 ,  702.3438  ],
         [1336.2942  , -125.04786 , 1063.3468  , ..., 1430.5629  ,
           366.33966 ,  746.7498  ],
         [ 465.35965 , 1044.0621  , -421.2959  , ..., 1585.4808  ,
           557.9241  ,  771.02155 ],
         ...,
         [ 631.6532  , 1246.5564  , 1250.8545  , ...,  -53.675816,
           181.8728  ,  682.5289  ],
         [ -13.680629, 1156.8125  ,  474.9679  , ...,  469.879   ,
           387.17184 ,   40.97732 ],
         [1703.4519  ,  425.3907  , 1794.1418  , ...,  372.33838 ,
          1292.7689  , -950.1955  ]],

        [[-537.6241  ,   85.12073 ,  981.43756 , ...,  504.3313  ,
            79.56287 ,  702.3438  ],
         [1336.2942  , -125.04786 , 1063.3468  , ..., 1430.5629  ,
           366.33966 ,  746.7498  ],
         [ 465.35965 , 1044.0621  , -421.2959  , ..., 1585.4808  ,
           557.9241  ,  771.02155 ],
         ...,
         [ 631.6532  , 1246.5564  , 1250.8545  , ...,  -53.675816,
           181.8728  ,  682.5289  ],
         [ -13.680629, 1156.8125  ,  474.9679  , ...,  469.879   ,
           387.17184 ,   40.97732 ],
         [1703.4519  ,  425.3907  , 1794.1418  , ...,  372.33838 ,
          1292.7689  , -950.1955  ]],

        [[-537.6241  ,   85.12073 ,  981.43756 , ...,  504.3313  ,
            79.56287 ,  702.3438  ],
         [1336.2942  , -125.04786 , 1063.3468  , ..., 1430.5629  ,
           366.33966 ,  746.7498  ],
         [ 465.35965 , 1044.0621  , -421.2959  , ..., 1585.4808  ,
           557.9241  ,  771.02155 ],
         ...,
         [ 631.6532  , 1246.5564  , 1250.8545  , ...,  -53.675816,
           181.8728  ,  682.5289  ],
         [ -13.680629, 1156.8125  ,  474.9679  , ...,  469.879   ,
           387.17184 ,   40.97732 ],
         [1703.4519  ,  425.3907  , 1794.1418  , ...,  372.33838 ,
          1292.7689  , -950.1955  ]],

        ...,

        [[-537.6241  ,   85.12073 ,  981.43756 , ...,  504.3313  ,
            79.56287 ,  702.3438  ],
         [1336.2942  , -125.04786 , 1063.3468  , ..., 1430.5629  ,
           366.33966 ,  746.7498  ],
         [ 465.35965 , 1044.0621  , -421.2959  , ..., 1585.4808  ,
           557.9241  ,  771.02155 ],
         ...,
         [ 631.6532  , 1246.5564  , 1250.8545  , ...,  -53.675816,
           181.8728  ,  682.5289  ],
         [ -13.680629, 1156.8125  ,  474.9679  , ...,  469.879   ,
           387.17184 ,   40.97732 ],
         [1703.4519  ,  425.3907  , 1794.1418  , ...,  372.33838 ,
          1292.7689  , -950.1955  ]],

        [[-537.6241  ,   85.12073 ,  981.43756 , ...,  504.3313  ,
            79.56287 ,  702.3438  ],
         [1336.2942  , -125.04786 , 1063.3468  , ..., 1430.5629  ,
           366.33966 ,  746.7498  ],
         [ 465.35965 , 1044.0621  , -421.2959  , ..., 1585.4808  ,
           557.9241  ,  771.02155 ],
         ...,
         [ 631.6532  , 1246.5564  , 1250.8545  , ...,  -53.675816,
           181.8728  ,  682.5289  ],
         [ -13.680629, 1156.8125  ,  474.9679  , ...,  469.879   ,
           387.17184 ,   40.97732 ],
         [1703.4519  ,  425.3907  , 1794.1418  , ...,  372.33838 ,
          1292.7689  , -950.1955  ]],

        [[-537.6241  ,   85.12073 ,  981.43756 , ...,  504.3313  ,
            79.56287 ,  702.3438  ],
         [1336.2942  , -125.04786 , 1063.3468  , ..., 1430.5629  ,
           366.33966 ,  746.7498  ],
         [ 465.35965 , 1044.0621  , -421.2959  , ..., 1585.4808  ,
           557.9241  ,  771.02155 ],
         ...,
         [ 631.6532  , 1246.5564  , 1250.8545  , ...,  -53.675816,
           181.8728  ,  682.5289  ],
         [ -13.680629, 1156.8125  ,  474.9679  , ...,  469.879   ,
           387.17184 ,   40.97732 ],
         [1703.4519  ,  425.3907  , 1794.1418  , ...,  372.33838 ,
          1292.7689  , -950.1955  ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 16, 16]), 'from': [2], 'to': [10]}
tf node:
{'name': 'cos', 'output': array([[[[-0.9164256 , -0.95600605,  0.305195  , ..., -0.10548133,
          -0.5207647 ,  0.19656463],
         [-0.43810064,  0.81628454,  0.08221857, ..., -0.41922137,
          -0.33736512,  0.58230543],
         [ 0.91952074,  0.49464256,  0.94845146, ..., -0.5204187 ,
           0.28727075, -0.23716937],
         ...,
         [-0.9814189 , -0.7925073 ,  0.87728703, ..., -0.9641061 ,
           0.9428976 , -0.6943617 ],
         [ 0.44084346,  0.7607013 , -0.8323818 , ...,  0.20933622,
          -0.7276215 , -0.99068236],
         [ 0.7592177 , -0.29085326, -0.95754313, ..., -0.05961409,
           0.00354394,  0.13586064]],

        [[-0.9164256 , -0.95600605,  0.305195  , ..., -0.10548133,
          -0.5207647 ,  0.19656463],
         [-0.43810064,  0.81628454,  0.08221857, ..., -0.41922137,
          -0.33736512,  0.58230543],
         [ 0.91952074,  0.49464256,  0.94845146, ..., -0.5204187 ,
           0.28727075, -0.23716937],
         ...,
         [-0.9814189 , -0.7925073 ,  0.87728703, ..., -0.9641061 ,
           0.9428976 , -0.6943617 ],
         [ 0.44084346,  0.7607013 , -0.8323818 , ...,  0.20933622,
          -0.7276215 , -0.99068236],
         [ 0.7592177 , -0.29085326, -0.95754313, ..., -0.05961409,
           0.00354394,  0.13586064]],

        [[-0.9164256 , -0.95600605,  0.305195  , ..., -0.10548133,
          -0.5207647 ,  0.19656463],
         [-0.43810064,  0.81628454,  0.08221857, ..., -0.41922137,
          -0.33736512,  0.58230543],
         [ 0.91952074,  0.49464256,  0.94845146, ..., -0.5204187 ,
           0.28727075, -0.23716937],
         ...,
         [-0.9814189 , -0.7925073 ,  0.87728703, ..., -0.9641061 ,
           0.9428976 , -0.6943617 ],
         [ 0.44084346,  0.7607013 , -0.8323818 , ...,  0.20933622,
          -0.7276215 , -0.99068236],
         [ 0.7592177 , -0.29085326, -0.95754313, ..., -0.05961409,
           0.00354394,  0.13586064]],

        ...,

        [[-0.9164256 , -0.95600605,  0.305195  , ..., -0.10548133,
          -0.5207647 ,  0.19656463],
         [-0.43810064,  0.81628454,  0.08221857, ..., -0.41922137,
          -0.33736512,  0.58230543],
         [ 0.91952074,  0.49464256,  0.94845146, ..., -0.5204187 ,
           0.28727075, -0.23716937],
         ...,
         [-0.9814189 , -0.7925073 ,  0.87728703, ..., -0.9641061 ,
           0.9428976 , -0.6943617 ],
         [ 0.44084346,  0.7607013 , -0.8323818 , ...,  0.20933622,
          -0.7276215 , -0.99068236],
         [ 0.7592177 , -0.29085326, -0.95754313, ..., -0.05961409,
           0.00354394,  0.13586064]],

        [[-0.9164256 , -0.95600605,  0.305195  , ..., -0.10548133,
          -0.5207647 ,  0.19656463],
         [-0.43810064,  0.81628454,  0.08221857, ..., -0.41922137,
          -0.33736512,  0.58230543],
         [ 0.91952074,  0.49464256,  0.94845146, ..., -0.5204187 ,
           0.28727075, -0.23716937],
         ...,
         [-0.9814189 , -0.7925073 ,  0.87728703, ..., -0.9641061 ,
           0.9428976 , -0.6943617 ],
         [ 0.44084346,  0.7607013 , -0.8323818 , ...,  0.20933622,
          -0.7276215 , -0.99068236],
         [ 0.7592177 , -0.29085326, -0.95754313, ..., -0.05961409,
           0.00354394,  0.13586064]],

        [[-0.9164256 , -0.95600605,  0.305195  , ..., -0.10548133,
          -0.5207647 ,  0.19656463],
         [-0.43810064,  0.81628454,  0.08221857, ..., -0.41922137,
          -0.33736512,  0.58230543],
         [ 0.91952074,  0.49464256,  0.94845146, ..., -0.5204187 ,
           0.28727075, -0.23716937],
         ...,
         [-0.9814189 , -0.7925073 ,  0.87728703, ..., -0.9641061 ,
           0.9428976 , -0.6943617 ],
         [ 0.44084346,  0.7607013 , -0.8323818 , ...,  0.20933622,
          -0.7276215 , -0.99068236],
         [ 0.7592177 , -0.29085326, -0.95754313, ..., -0.05961409,
           0.00354394,  0.13586064]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 16, 16]), 'from': [8], 'to': [7]}
ms node:
{'name': 'cos', 'output': array([[[[-0.91679156, -0.9561112 ,  0.305195  , ..., -0.10851558,
          -0.520452  ,  0.19656463],
         [-0.43963623,  0.8168262 ,  0.0814886 , ..., -0.41888884,
          -0.3364169 ,  0.5822062 ],
         [ 0.91941273,  0.4949608 ,  0.94875085, ..., -0.51184535,
           0.28691995, -0.24167313],
         ...,
         [-0.9819883 , -0.7888453 ,  0.8775213 , ..., -0.96409696,
           0.9426992 , -0.6960727 ],
         [ 0.44087514,  0.7607013 , -0.8328381 , ...,  0.21255796,
          -0.7276424 , -0.9906538 ],
         [ 0.7539496 , -0.29079485, -0.95391613, ..., -0.05717685,
           0.00415429,  0.12914549]],

        [[-0.91679156, -0.9561112 ,  0.305195  , ..., -0.10851558,
          -0.520452  ,  0.19656463],
         [-0.43963623,  0.8168262 ,  0.0814886 , ..., -0.41888884,
          -0.3364169 ,  0.5822062 ],
         [ 0.91941273,  0.4949608 ,  0.94875085, ..., -0.51184535,
           0.28691995, -0.24167313],
         ...,
         [-0.9819883 , -0.7888453 ,  0.8775213 , ..., -0.96409696,
           0.9426992 , -0.6960727 ],
         [ 0.44087514,  0.7607013 , -0.8328381 , ...,  0.21255796,
          -0.7276424 , -0.9906538 ],
         [ 0.7539496 , -0.29079485, -0.95391613, ..., -0.05717685,
           0.00415429,  0.12914549]],

        [[-0.91679156, -0.9561112 ,  0.305195  , ..., -0.10851558,
          -0.520452  ,  0.19656463],
         [-0.43963623,  0.8168262 ,  0.0814886 , ..., -0.41888884,
          -0.3364169 ,  0.5822062 ],
         [ 0.91941273,  0.4949608 ,  0.94875085, ..., -0.51184535,
           0.28691995, -0.24167313],
         ...,
         [-0.9819883 , -0.7888453 ,  0.8775213 , ..., -0.96409696,
           0.9426992 , -0.6960727 ],
         [ 0.44087514,  0.7607013 , -0.8328381 , ...,  0.21255796,
          -0.7276424 , -0.9906538 ],
         [ 0.7539496 , -0.29079485, -0.95391613, ..., -0.05717685,
           0.00415429,  0.12914549]],

        ...,

        [[-0.91679156, -0.9561112 ,  0.305195  , ..., -0.10851558,
          -0.520452  ,  0.19656463],
         [-0.43963623,  0.8168262 ,  0.0814886 , ..., -0.41888884,
          -0.3364169 ,  0.5822062 ],
         [ 0.91941273,  0.4949608 ,  0.94875085, ..., -0.51184535,
           0.28691995, -0.24167313],
         ...,
         [-0.9819883 , -0.7888453 ,  0.8775213 , ..., -0.96409696,
           0.9426992 , -0.6960727 ],
         [ 0.44087514,  0.7607013 , -0.8328381 , ...,  0.21255796,
          -0.7276424 , -0.9906538 ],
         [ 0.7539496 , -0.29079485, -0.95391613, ..., -0.05717685,
           0.00415429,  0.12914549]],

        [[-0.91679156, -0.9561112 ,  0.305195  , ..., -0.10851558,
          -0.520452  ,  0.19656463],
         [-0.43963623,  0.8168262 ,  0.0814886 , ..., -0.41888884,
          -0.3364169 ,  0.5822062 ],
         [ 0.91941273,  0.4949608 ,  0.94875085, ..., -0.51184535,
           0.28691995, -0.24167313],
         ...,
         [-0.9819883 , -0.7888453 ,  0.8775213 , ..., -0.96409696,
           0.9426992 , -0.6960727 ],
         [ 0.44087514,  0.7607013 , -0.8328381 , ...,  0.21255796,
          -0.7276424 , -0.9906538 ],
         [ 0.7539496 , -0.29079485, -0.95391613, ..., -0.05717685,
           0.00415429,  0.12914549]],

        [[-0.91679156, -0.9561112 ,  0.305195  , ..., -0.10851558,
          -0.520452  ,  0.19656463],
         [-0.43963623,  0.8168262 ,  0.0814886 , ..., -0.41888884,
          -0.3364169 ,  0.5822062 ],
         [ 0.91941273,  0.4949608 ,  0.94875085, ..., -0.51184535,
           0.28691995, -0.24167313],
         ...,
         [-0.9819883 , -0.7888453 ,  0.8775213 , ..., -0.96409696,
           0.9426992 , -0.6960727 ],
         [ 0.44087514,  0.7607013 , -0.8328381 , ...,  0.21255796,
          -0.7276424 , -0.9906538 ],
         [ 0.7539496 , -0.29079485, -0.95391613, ..., -0.05717685,
           0.00415429,  0.12914549]]]], dtype=float32), 'output_shape': (1, 256, 16, 16), 'from': [8], 'to': [7]}
torch node:
{'name': 'cos', 'output': array([[[[-0.9175213 , -0.95617825,  0.30519503, ..., -0.10696824,
          -0.5203282 ,  0.19656463],
         [-0.437003  ,  0.8168086 ,  0.07783814, ..., -0.41833454,
          -0.33750874,  0.58195806],
         [ 0.9192086 ,  0.4955971 ,  0.94908786, ..., -0.51352227,
           0.28867352, -0.24048842],
         ...,
         [-0.98220676, -0.7876434 ,  0.8774042 , ..., -0.9640787 ,
           0.94280607, -0.69668597],
         [ 0.4409205 ,  0.7607013 , -0.8335975 , ...,  0.2120808 ,
          -0.72766334, -0.9906543 ],
         [ 0.7576265 , -0.29067805, -0.9545368 , ..., -0.05717685,
           0.00146875,  0.12993225]],

        [[-0.9175213 , -0.95617825,  0.30519503, ..., -0.10696824,
          -0.5203282 ,  0.19656463],
         [-0.437003  ,  0.8168086 ,  0.07783814, ..., -0.41833454,
          -0.33750874,  0.58195806],
         [ 0.9192086 ,  0.4955971 ,  0.94908786, ..., -0.51352227,
           0.28867352, -0.24048842],
         ...,
         [-0.98220676, -0.7876434 ,  0.8774042 , ..., -0.9640787 ,
           0.94280607, -0.69668597],
         [ 0.4409205 ,  0.7607013 , -0.8335975 , ...,  0.2120808 ,
          -0.72766334, -0.9906543 ],
         [ 0.7576265 , -0.29067805, -0.9545368 , ..., -0.05717685,
           0.00146875,  0.12993225]],

        [[-0.9175213 , -0.95617825,  0.30519503, ..., -0.10696824,
          -0.5203282 ,  0.19656463],
         [-0.437003  ,  0.8168086 ,  0.07783814, ..., -0.41833454,
          -0.33750874,  0.58195806],
         [ 0.9192086 ,  0.4955971 ,  0.94908786, ..., -0.51352227,
           0.28867352, -0.24048842],
         ...,
         [-0.98220676, -0.7876434 ,  0.8774042 , ..., -0.9640787 ,
           0.94280607, -0.69668597],
         [ 0.4409205 ,  0.7607013 , -0.8335975 , ...,  0.2120808 ,
          -0.72766334, -0.9906543 ],
         [ 0.7576265 , -0.29067805, -0.9545368 , ..., -0.05717685,
           0.00146875,  0.12993225]],

        ...,

        [[-0.9175213 , -0.95617825,  0.30519503, ..., -0.10696824,
          -0.5203282 ,  0.19656463],
         [-0.437003  ,  0.8168086 ,  0.07783814, ..., -0.41833454,
          -0.33750874,  0.58195806],
         [ 0.9192086 ,  0.4955971 ,  0.94908786, ..., -0.51352227,
           0.28867352, -0.24048842],
         ...,
         [-0.98220676, -0.7876434 ,  0.8774042 , ..., -0.9640787 ,
           0.94280607, -0.69668597],
         [ 0.4409205 ,  0.7607013 , -0.8335975 , ...,  0.2120808 ,
          -0.72766334, -0.9906543 ],
         [ 0.7576265 , -0.29067805, -0.9545368 , ..., -0.05717685,
           0.00146875,  0.12993225]],

        [[-0.9175213 , -0.95617825,  0.30519503, ..., -0.10696824,
          -0.5203282 ,  0.19656463],
         [-0.437003  ,  0.8168086 ,  0.07783814, ..., -0.41833454,
          -0.33750874,  0.58195806],
         [ 0.9192086 ,  0.4955971 ,  0.94908786, ..., -0.51352227,
           0.28867352, -0.24048842],
         ...,
         [-0.98220676, -0.7876434 ,  0.8774042 , ..., -0.9640787 ,
           0.94280607, -0.69668597],
         [ 0.4409205 ,  0.7607013 , -0.8335975 , ...,  0.2120808 ,
          -0.72766334, -0.9906543 ],
         [ 0.7576265 , -0.29067805, -0.9545368 , ..., -0.05717685,
           0.00146875,  0.12993225]],

        [[-0.9175213 , -0.95617825,  0.30519503, ..., -0.10696824,
          -0.5203282 ,  0.19656463],
         [-0.437003  ,  0.8168086 ,  0.07783814, ..., -0.41833454,
          -0.33750874,  0.58195806],
         [ 0.9192086 ,  0.4955971 ,  0.94908786, ..., -0.51352227,
           0.28867352, -0.24048842],
         ...,
         [-0.98220676, -0.7876434 ,  0.8774042 , ..., -0.9640787 ,
           0.94280607, -0.69668597],
         [ 0.4409205 ,  0.7607013 , -0.8335975 , ...,  0.2120808 ,
          -0.72766334, -0.9906543 ],
         [ 0.7576265 , -0.29067805, -0.9545368 , ..., -0.05717685,
           0.00146875,  0.12993225]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 16, 16]), 'from': [8], 'to': [7]}

generate models:325

analyse output arrays in iter:381

pre layer res:
6:cos
{'name': 'cos', 'output': array([[[[ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         ...,
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965]],

        [[ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         ...,
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965]],

        [[ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         ...,
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965],
         [ 1.        , -0.8517353 ,  0.9409015 , ...,  1.        ,
           1.        ,  0.33056965]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [5], 'to': [12]}
tf node:
{'name': 'log', 'output': array([[[[ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         ...,
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379]],

        [[ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         ...,
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379]],

        [[ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         ...,
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069379]],

        ...,

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [6], 'to': [10]}
ms node:
{'name': 'log', 'output': array([[[[-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         ...,
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00]],

        [[-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         ...,
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00]],

        [[-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         ...,
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00],
         [-1.4305115e-06,            nan, -6.0916778e-02, ...,
          -1.4305115e-06, -1.4305115e-06, -1.1069371e+00]],

        ...,

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]]]],
      dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [6], 'to': [10]}
torch node:
{'name': 'log', 'output': array([[[[ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         ...,
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351]],

        [[ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         ...,
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351]],

        [[ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         ...,
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351],
         [ 0.       ,        nan, -0.0609168, ...,  0.       ,
           0.       , -1.1069351]],

        ...,

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [6], 'to': [10]}

generate models:329

analyse output arrays in iter:382

pre layer res:
4:add
{'name': 'add', 'output': array([[[[ 0.06165153,  0.06902611,  1.3081038 , ...,  2.126623  ,
          -0.6476339 , -2.5646796 ],
         [ 2.437621  , -2.4399195 ,  0.5481497 , ..., -0.39277422,
          -3.1002693 ,  0.49094176],
         [-0.5261812 , -1.6838732 ,  0.9932853 , ..., -0.698646  ,
          -2.6070623 ,  0.38807717],
         ...,
         [ 2.2341516 ,  0.84765923, -0.96775436, ...,  1.212635  ,
           3.360829  , -2.0840678 ],
         [ 0.1442393 ,  3.3105922 ,  4.7387195 , ..., -2.2165601 ,
           2.9354377 ,  0.05571264],
         [ 1.0984263 ,  1.0867076 , -0.7268063 , ...,  0.6568041 ,
          -4.7507877 ,  0.23820943]],

        [[ 0.06165153,  0.06902611,  1.3081038 , ...,  2.126623  ,
          -0.6476339 , -2.5646796 ],
         [ 2.437621  , -2.4399195 ,  0.5481497 , ..., -0.39277422,
          -3.1002693 ,  0.49094176],
         [-0.5261812 , -1.6838732 ,  0.9932853 , ..., -0.698646  ,
          -2.6070623 ,  0.38807717],
         ...,
         [ 2.2341516 ,  0.84765923, -0.96775436, ...,  1.212635  ,
           3.360829  , -2.0840678 ],
         [ 0.1442393 ,  3.3105922 ,  4.7387195 , ..., -2.2165601 ,
           2.9354377 ,  0.05571264],
         [ 1.0984263 ,  1.0867076 , -0.7268063 , ...,  0.6568041 ,
          -4.7507877 ,  0.23820943]],

        [[ 0.06165153,  0.06902611,  1.3081038 , ...,  2.126623  ,
          -0.6476339 , -2.5646796 ],
         [ 2.437621  , -2.4399195 ,  0.5481497 , ..., -0.39277422,
          -3.1002693 ,  0.49094176],
         [-0.5261812 , -1.6838732 ,  0.9932853 , ..., -0.698646  ,
          -2.6070623 ,  0.38807717],
         ...,
         [ 2.2341516 ,  0.84765923, -0.96775436, ...,  1.212635  ,
           3.360829  , -2.0840678 ],
         [ 0.1442393 ,  3.3105922 ,  4.7387195 , ..., -2.2165601 ,
           2.9354377 ,  0.05571264],
         [ 1.0984263 ,  1.0867076 , -0.7268063 , ...,  0.6568041 ,
          -4.7507877 ,  0.23820943]],

        ...,

        [[ 0.06165153,  0.06902611,  1.3081038 , ...,  2.126623  ,
          -0.6476339 , -2.5646796 ],
         [ 2.437621  , -2.4399195 ,  0.5481497 , ..., -0.39277422,
          -3.1002693 ,  0.49094176],
         [-0.5261812 , -1.6838732 ,  0.9932853 , ..., -0.698646  ,
          -2.6070623 ,  0.38807717],
         ...,
         [ 2.2341516 ,  0.84765923, -0.96775436, ...,  1.212635  ,
           3.360829  , -2.0840678 ],
         [ 0.1442393 ,  3.3105922 ,  4.7387195 , ..., -2.2165601 ,
           2.9354377 ,  0.05571264],
         [ 1.0984263 ,  1.0867076 , -0.7268063 , ...,  0.6568041 ,
          -4.7507877 ,  0.23820943]],

        [[ 0.06165153,  0.06902611,  1.3081038 , ...,  2.126623  ,
          -0.6476339 , -2.5646796 ],
         [ 2.437621  , -2.4399195 ,  0.5481497 , ..., -0.39277422,
          -3.1002693 ,  0.49094176],
         [-0.5261812 , -1.6838732 ,  0.9932853 , ..., -0.698646  ,
          -2.6070623 ,  0.38807717],
         ...,
         [ 2.2341516 ,  0.84765923, -0.96775436, ...,  1.212635  ,
           3.360829  , -2.0840678 ],
         [ 0.1442393 ,  3.3105922 ,  4.7387195 , ..., -2.2165601 ,
           2.9354377 ,  0.05571264],
         [ 1.0984263 ,  1.0867076 , -0.7268063 , ...,  0.6568041 ,
          -4.7507877 ,  0.23820943]],

        [[ 0.06165153,  0.06902611,  1.3081038 , ...,  2.126623  ,
          -0.6476339 , -2.5646796 ],
         [ 2.437621  , -2.4399195 ,  0.5481497 , ..., -0.39277422,
          -3.1002693 ,  0.49094176],
         [-0.5261812 , -1.6838732 ,  0.9932853 , ..., -0.698646  ,
          -2.6070623 ,  0.38807717],
         ...,
         [ 2.2341516 ,  0.84765923, -0.96775436, ...,  1.212635  ,
           3.360829  , -2.0840678 ],
         [ 0.1442393 ,  3.3105922 ,  4.7387195 , ..., -2.2165601 ,
           2.9354377 ,  0.05571264],
         [ 1.0984263 ,  1.0867076 , -0.7268063 , ...,  0.6568041 ,
          -4.7507877 ,  0.23820943]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [0, 9], 'to': [5, 10]}
tf node:
{'name': 'log', 'output': array([[[[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        ...,

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [4], 'to': [12, 12]}
ms node:
{'name': 'log', 'output': array([[[[-2.7862587 , -2.6732697 ,  0.26858142, ...,  0.75453234,
                  nan,         nan],
         [ 0.8910234 ,         nan, -0.60120624, ...,         nan,
                  nan, -0.7114312 ],
         [        nan,         nan, -0.00673878, ...,         nan,
                  nan, -0.9465533 ],
         ...,
         [ 0.80386215, -0.16527987,         nan, ...,  0.19279423,
           1.2121844 ,         nan],
         [-1.9362847 ,  1.1971247 ,  1.5557655 , ...,         nan,
           1.0768565 , -2.8875492 ],
         [ 0.09387913,  0.08314966,         nan, ..., -0.4203714 ,
                  nan, -1.434605  ]],

        [[-2.7862587 , -2.6732697 ,  0.26858142, ...,  0.75453234,
                  nan,         nan],
         [ 0.8910234 ,         nan, -0.60120624, ...,         nan,
                  nan, -0.7114312 ],
         [        nan,         nan, -0.00673878, ...,         nan,
                  nan, -0.9465533 ],
         ...,
         [ 0.80386215, -0.16527987,         nan, ...,  0.19279423,
           1.2121844 ,         nan],
         [-1.9362847 ,  1.1971247 ,  1.5557655 , ...,         nan,
           1.0768565 , -2.8875492 ],
         [ 0.09387913,  0.08314966,         nan, ..., -0.4203714 ,
                  nan, -1.434605  ]],

        [[-2.7862587 , -2.6732697 ,  0.26858142, ...,  0.75453234,
                  nan,         nan],
         [ 0.8910234 ,         nan, -0.60120624, ...,         nan,
                  nan, -0.7114312 ],
         [        nan,         nan, -0.00673878, ...,         nan,
                  nan, -0.9465533 ],
         ...,
         [ 0.80386215, -0.16527987,         nan, ...,  0.19279423,
           1.2121844 ,         nan],
         [-1.9362847 ,  1.1971247 ,  1.5557655 , ...,         nan,
           1.0768565 , -2.8875492 ],
         [ 0.09387913,  0.08314966,         nan, ..., -0.4203714 ,
                  nan, -1.434605  ]],

        ...,

        [[-2.7862587 , -2.6732697 ,  0.26858142, ...,  0.75453234,
                  nan,         nan],
         [ 0.8910234 ,         nan, -0.60120624, ...,         nan,
                  nan, -0.7114312 ],
         [        nan,         nan, -0.00673878, ...,         nan,
                  nan, -0.9465533 ],
         ...,
         [ 0.80386215, -0.16527987,         nan, ...,  0.19279423,
           1.2121844 ,         nan],
         [-1.9362847 ,  1.1971247 ,  1.5557655 , ...,         nan,
           1.0768565 , -2.8875492 ],
         [ 0.09387913,  0.08314966,         nan, ..., -0.4203714 ,
                  nan, -1.434605  ]],

        [[-2.7862587 , -2.6732697 ,  0.26858142, ...,  0.75453234,
                  nan,         nan],
         [ 0.8910234 ,         nan, -0.60120624, ...,         nan,
                  nan, -0.7114312 ],
         [        nan,         nan, -0.00673878, ...,         nan,
                  nan, -0.9465533 ],
         ...,
         [ 0.80386215, -0.16527987,         nan, ...,  0.19279423,
           1.2121844 ,         nan],
         [-1.9362847 ,  1.1971247 ,  1.5557655 , ...,         nan,
           1.0768565 , -2.8875492 ],
         [ 0.09387913,  0.08314966,         nan, ..., -0.4203714 ,
                  nan, -1.434605  ]],

        [[-2.7862587 , -2.6732697 ,  0.26858142, ...,  0.75453234,
                  nan,         nan],
         [ 0.8910234 ,         nan, -0.60120624, ...,         nan,
                  nan, -0.7114312 ],
         [        nan,         nan, -0.00673878, ...,         nan,
                  nan, -0.9465533 ],
         ...,
         [ 0.80386215, -0.16527987,         nan, ...,  0.19279423,
           1.2121844 ,         nan],
         [-1.9362847 ,  1.1971247 ,  1.5557655 , ...,         nan,
           1.0768565 , -2.8875492 ],
         [ 0.09387913,  0.08314966,         nan, ..., -0.4203714 ,
                  nan, -1.434605  ]]]], dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [4], 'to': [12, 12]}
torch node:
{'name': 'log', 'output': array([[[[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        ...,

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]],

        [[-2.7862573 , -2.6732705 ,  0.26857862, ...,  0.75453526,
                  nan,         nan],
         [ 0.8910226 ,         nan, -0.60120684, ...,         nan,
                  nan, -0.7114298 ],
         [        nan,         nan, -0.00673735, ...,         nan,
                  nan, -0.9465511 ],
         ...,
         [ 0.80386156, -0.16527657,         nan, ...,  0.19279571,
           1.2121878 ,         nan],
         [-1.9362816 ,  1.1971271 ,  1.5557669 , ...,         nan,
           1.0768566 , -2.8875482 ],
         [ 0.09387856,  0.08315257,         nan, ..., -0.4203695 ,
                  nan, -1.434605  ]]]], dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [4], 'to': [12, 12]}

generate models:330

analyse the exceptions in iter:389
torch exception:
{'id': 5, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 7.2487,  7.2487,  7.2487,  ...,  7.2487,  7.2487,  7.2487],
          [ 7.6212,  7.6212,  7.6212,  ...,  7.6212,  7.6212,  7.6212],
          [12.4810, 12.4810, 12.4810,  ..., 12.4810, 12.4810, 12.4810],
          ...,
          [ 7.6547,  7.6547,  7.6547,  ...,  7.6547,  7.6547,  7.6547],
          [10.1089, 10.1089, 10.1089,  ..., 10.1089, 10.1089, 10.1089],
          [ 6.8971,  6.8971,  6.8971,  ...,  6.8971,  6.8971,  6.8971]],

         [[ 7.2487,  7.2487,  7.2487,  ...,  7.2487,  7.2487,  7.2487],
          [ 7.6212,  7.6212,  7.6212,  ...,  7.6212,  7.6212,  7.6212],
          [12.4810, 12.4810, 12.4810,  ..., 12.4810, 12.4810, 12.4810],
          ...,
          [ 7.6547,  7.6547,  7.6547,  ...,  7.6547,  7.6547,  7.6547],
          [10.1089, 10.1089, 10.1089,  ..., 10.1089, 10.1089, 10.1089],
          [ 6.8971,  6.8971,  6.8971,  ...,  6.8971,  6.8971,  6.8971]],

         [[ 7.2487,  7.2487,  7.2487,  ...,  7.2487,  7.2487,  7.2487],
          [ 7.6212,  7.6212,  7.6212,  ...,  7.6212,  7.6212,  7.6212],
          [12.4810, 12.4810, 12.4810,  ..., 12.4810, 12.4810, 12.4810],
          ...,
          [ 7.6547,  7.6547,  7.6547,  ...,  7.6547,  7.6547,  7.6547],
          [10.1089, 10.1089, 10.1089,  ..., 10.1089, 10.1089, 10.1089],
          [ 6.8971,  6.8971,  6.8971,  ...,  6.8971,  6.8971,  6.8971]],

         ...,

         [[ 7.2487,  7.2487,  7.2487,  ...,  7.2487,  7.2487,  7.2487],
          [ 7.6212,  7.6212,  7.6212,  ...,  7.6212,  7.6212,  7.6212],
          [12.4810, 12.4810, 12.4810,  ..., 12.4810, 12.4810, 12.4810],
          ...,
          [ 7.6547,  7.6547,  7.6547,  ...,  7.6547,  7.6547,  7.6547],
          [10.1089, 10.1089, 10.1089,  ..., 10.1089, 10.1089, 10.1089],
          [ 6.8971,  6.8971,  6.8971,  ...,  6.8971,  6.8971,  6.8971]],

         [[ 7.2487,  7.2487,  7.2487,  ...,  7.2487,  7.2487,  7.2487],
          [ 7.6212,  7.6212,  7.6212,  ...,  7.6212,  7.6212,  7.6212],
          [12.4810, 12.4810, 12.4810,  ..., 12.4810, 12.4810, 12.4810],
          ...,
          [ 7.6547,  7.6547,  7.6547,  ...,  7.6547,  7.6547,  7.6547],
          [10.1089, 10.1089, 10.1089,  ..., 10.1089, 10.1089, 10.1089],
          [ 6.8971,  6.8971,  6.8971,  ...,  6.8971,  6.8971,  6.8971]],

         [[ 7.2487,  7.2487,  7.2487,  ...,  7.2487,  7.2487,  7.2487],
          [ 7.6212,  7.6212,  7.6212,  ...,  7.6212,  7.6212,  7.6212],
          [12.4810, 12.4810, 12.4810,  ..., 12.4810, 12.4810, 12.4810],
          ...,
          [ 7.6547,  7.6547,  7.6547,  ...,  7.6547,  7.6547,  7.6547],
          [10.1089, 10.1089, 10.1089,  ..., 10.1089, 10.1089, 10.1089],
          [ 6.8971,  6.8971,  6.8971,  ...,  6.8971,  6.8971,  6.8971]]]],
       grad_fn=<UnsafeViewBackward0>)]}
Given groups=1, weight of size [128, 128, 1, 1], expected input[1, 256, 16, 100] to have 128 channels, but got 256 channels instead
mindspore exception:
{'id': 5, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 16, 100], dtype=Float32, value=
[[[[7.24761629e+000, 7.24761629e+000, 7.24761629e+000 ... 7.24761581e+000, 7.24761581e+000, 7.24761581e+000],
   [7.62382793e+000, 7.62382793e+000, 7.62382793e+000 ... 7.62382889e+000, 7.62382889e+000, 7.62382889e+000],
   [1.24855089e+001, 1.24855089e+001, 1.24855089e+001 ... 1.24855099e+001, 1.24855099e+001, 1.24855099e+001],
   ...
   [7.66174507e+000, 7.66174507e+000, 7.66174507e+000 ... 7.66174555e+000, 7.66174555e+000, 7.66174555e+000],
   [1.01272936e+001, 1.01272936e+001, 1.01272936e+001 ... 1.01272945e+001, 1.01272945e+001, 1.01272945e+001],
   [6.87950373e+000, 6.87950373e+000, 6.87950373e+000 ... 6.87950420e+000, 6.87950420e+000, 6.87950420e+000]],
  [[7.24761629e+000, 7.24761629e+000, 7.24761629e+000 ... 7.24761581e+000, 7.24761581e+000, 7.24761581e+000],
   [7.62382793e+000, 7.62382793e+000, 7.62382793e+000 ... 7.62382889e+000, 7.62382889e+000, 7.62382889e+000],
   [1.24855089e+001, 1.24855089e+001, 1.24855089e+001 ... 1.24855099e+001, 1.24855099e+001, 1.24855099e+001],
   ...
   [7.66174507e+000, 7.66174507e+000, 7.66174507e+000 ... 7.66174555e+000, 7.66174555e+000, 7.66174555e+000],
   [1.01272936e+001, 1.01272936e+001, 1.01272936e+001 ... 1.01272945e+001, 1.01272945e+001, 1.01272945e+001],
   [6.87950373e+000, 6.87950373e+000, 6.87950373e+000 ... 6.87950420e+000, 6.87950420e+000, 6.87950420e+000]],
  [[7.24761629e+000, 7.24761629e+000, 7.24761629e+000 ... 7.24761581e+000, 7.24761581e+000, 7.24761581e+000],
   [7.62382793e+000, 7.62382793e+000, 7.62382793e+000 ... 7.62382889e+000, 7.62382889e+000, 7.62382889e+000],
   [1.24855089e+001, 1.24855089e+001, 1.24855089e+001 ... 1.24855099e+001, 1.24855099e+001, 1.24855099e+001],
   ...
   [7.66174507e+000, 7.66174507e+000, 7.66174507e+000 ... 7.66174555e+000, 7.66174555e+000, 7.66174555e+000],
   [1.01272936e+001, 1.01272936e+001, 1.01272936e+001 ... 1.01272945e+001, 1.01272945e+001, 1.01272945e+001],
   [6.87950373e+000, 6.87950373e+000, 6.87950373e+000 ... 6.87950420e+000, 6.87950420e+000, 6.87950420e+000]],
  ...
  [[7.24761629e+000, 7.24761629e+000, 7.24761629e+000 ... 7.24761581e+000, 7.24761581e+000, 7.24761581e+000],
   [7.62382793e+000, 7.62382793e+000, 7.62382793e+000 ... 7.62382889e+000, 7.62382889e+000, 7.62382889e+000],
   [1.24855089e+001, 1.24855089e+001, 1.24855089e+001 ... 1.24855099e+001, 1.24855099e+001, 1.24855099e+001],
   ...
   [7.66174507e+000, 7.66174507e+000, 7.66174507e+000 ... 7.66174555e+000, 7.66174555e+000, 7.66174555e+000],
   [1.01272936e+001, 1.01272936e+001, 1.01272936e+001 ... 1.01272945e+001, 1.01272945e+001, 1.01272945e+001],
   [6.87950373e+000, 6.87950373e+000, 6.87950373e+000 ... 6.87950420e+000, 6.87950420e+000, 6.87950420e+000]],
  [[7.24761629e+000, 7.24761629e+000, 7.24761629e+000 ... 7.24761581e+000, 7.24761581e+000, 7.24761581e+000],
   [7.62382793e+000, 7.62382793e+000, 7.62382793e+000 ... 7.62382889e+000, 7.62382889e+000, 7.62382889e+000],
   [1.24855089e+001, 1.24855089e+001, 1.24855089e+001 ... 1.24855099e+001, 1.24855099e+001, 1.24855099e+001],
   ...
   [7.66174507e+000, 7.66174507e+000, 7.66174507e+000 ... 7.66174555e+000, 7.66174555e+000, 7.66174555e+000],
   [1.01272936e+001, 1.01272936e+001, 1.01272936e+001 ... 1.01272945e+001, 1.01272945e+001, 1.01272945e+001],
   [6.87950373e+000, 6.87950373e+000, 6.87950373e+000 ... 6.87950420e+000, 6.87950420e+000, 6.87950420e+000]],
  [[7.24761629e+000, 7.24761629e+000, 7.24761629e+000 ... 7.24761581e+000, 7.24761581e+000, 7.24761581e+000],
   [7.62382793e+000, 7.62382793e+000, 7.62382793e+000 ... 7.62382889e+000, 7.62382889e+000, 7.62382889e+000],
   [1.24855089e+001, 1.24855089e+001, 1.24855089e+001 ... 1.24855099e+001, 1.24855099e+001, 1.24855099e+001],
   ...
   [7.66174507e+000, 7.66174507e+000, 7.66174507e+000 ... 7.66174555e+000, 7.66174555e+000, 7.66174555e+000],
   [1.01272945e+001, 1.01272945e+001, 1.01272945e+001 ... 1.01272945e+001, 1.01272945e+001, 1.01272945e+001],
   [6.87950420e+000, 6.87950420e+000, 6.87950420e+000 ... 6.87950420e+000, 6.87950420e+000, 6.87950420e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 256, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:336

analyse output arrays in iter:392

pre layer res:
tf node:
{'name': 'linear', 'output': array([[[[  0.5951233,   0.5951233,   0.5951233, ...,   0.5951233,
            0.5951233,   0.5951233],
         [  1.0270157,   1.0270157,   1.0270157, ...,   1.0270157,
            1.0270157,   1.0270157],
         [ -5.261926 ,  -5.261926 ,  -5.261926 , ...,  -5.261926 ,
           -5.261926 ,  -5.261926 ],
         ...,
         [  3.4176025,   3.4176025,   3.4176025, ...,   3.4176025,
            3.4176025,   3.4176025],
         [ -8.946716 ,  -8.946716 ,  -8.946716 , ...,  -8.946716 ,
           -8.946716 ,  -8.946716 ],
         [  6.2749023,   6.2749023,   6.2749023, ...,   6.2749023,
            6.2749023,   6.2749023]],

        [[  2.455101 ,   2.455101 ,   2.455101 , ...,   2.455101 ,
            2.455101 ,   2.455101 ],
         [-15.916061 , -15.916061 , -15.916061 , ..., -15.916061 ,
          -15.916061 , -15.916061 ],
         [ -4.687889 ,  -4.687889 ,  -4.687889 , ...,  -4.687889 ,
           -4.687889 ,  -4.687889 ],
         ...,
         [ -6.0321045,  -6.0321045,  -6.0321045, ...,  -6.0321045,
           -6.0321045,  -6.0321045],
         [  5.4538574,   5.4538574,   5.4538574, ...,   5.4538574,
            5.4538574,   5.4538574],
         [  5.7590714,   5.7590714,   5.7590714, ...,   5.7590714,
            5.7590714,   5.7590714]],

        [[  1.6308212,   1.6308212,   1.6308212, ...,   1.6308212,
            1.6308212,   1.6308212],
         [ 12.224743 ,  12.224743 ,  12.224743 , ...,  12.224743 ,
           12.224743 ,  12.224743 ],
         [ -4.3260956,  -4.3260956,  -4.3260956, ...,  -4.3260956,
           -4.3260956,  -4.3260956],
         ...,
         [  6.418579 ,   6.418579 ,   6.418579 , ...,   6.418579 ,
            6.418579 ,   6.418579 ],
         [ -2.1692944,  -2.1692944,  -2.1692944, ...,  -2.1692944,
           -2.1692944,  -2.1692944],
         [ -2.6078072,  -2.6078072,  -2.6078072, ...,  -2.6078072,
           -2.6078072,  -2.6078072]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 100]), 'from': [], 'to': [3, 11]}
ms node:
{'name': 'linear', 'output': array([[[[  0.59475833,   0.59475833,   0.59475833, ...,   0.5947573 ,
            0.5947573 ,   0.5947573 ],
         [  1.0269185 ,   1.0269185 ,   1.0269185 , ...,   1.0269186 ,
            1.0269186 ,   1.0269186 ],
         [ -5.261507  ,  -5.261507  ,  -5.261507  , ...,  -5.261506  ,
           -5.261506  ,  -5.261506  ],
         ...,
         [  3.4180403 ,   3.4180403 ,   3.4180403 , ...,   3.4180408 ,
            3.4180408 ,   3.4180408 ],
         [ -8.944877  ,  -8.944877  ,  -8.944877  , ...,  -8.944877  ,
           -8.944877  ,  -8.944877  ],
         [  6.275188  ,   6.275188  ,   6.275188  , ...,   6.275187  ,
            6.275187  ,   6.275187  ]],

        [[  2.4553576 ,   2.4553576 ,   2.4553576 , ...,   2.455358  ,
            2.455358  ,   2.455358  ],
         [-15.916961  , -15.916961  , -15.916961  , ..., -15.916961  ,
          -15.916961  , -15.916961  ],
         [ -4.6884866 ,  -4.6884866 ,  -4.6884866 , ...,  -4.688487  ,
           -4.688487  ,  -4.688487  ],
         ...,
         [ -6.032414  ,  -6.032414  ,  -6.032414  , ...,  -6.032414  ,
           -6.032414  ,  -6.032414  ],
         [  5.454642  ,   5.454642  ,   5.454642  , ...,   5.4546413 ,
            5.4546413 ,   5.4546413 ],
         [  5.761779  ,   5.761779  ,   5.761779  , ...,   5.761779  ,
            5.761779  ,   5.761779  ]],

        [[  1.629575  ,   1.629575  ,   1.629575  , ...,   1.6295753 ,
            1.6295753 ,   1.6295753 ],
         [ 12.22548   ,  12.22548   ,  12.22548   , ...,  12.22548   ,
           12.22548   ,  12.22548   ],
         [ -4.325128  ,  -4.325128  ,  -4.325128  , ...,  -4.325128  ,
           -4.325128  ,  -4.325128  ],
         ...,
         [  6.4190044 ,   6.4190044 ,   6.4190044 , ...,   6.419004  ,
            6.419004  ,   6.419004  ],
         [ -2.1691732 ,  -2.1691732 ,  -2.1691732 , ...,  -2.1691728 ,
           -2.1691728 ,  -2.1691728 ],
         [ -2.6093025 ,  -2.6093025 ,  -2.6093025 , ...,  -2.6093025 ,
           -2.6093025 ,  -2.6093025 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 100), 'from': [], 'to': [3, 11]}
torch node:
{'name': 'linear', 'output': array([[[[  0.59475833,   0.59475833,   0.59475833, ...,   0.5947573 ,
            0.5947573 ,   0.5947573 ],
         [  1.0269185 ,   1.0269185 ,   1.0269185 , ...,   1.0269186 ,
            1.0269186 ,   1.0269186 ],
         [ -5.261507  ,  -5.261507  ,  -5.261507  , ...,  -5.261506  ,
           -5.261506  ,  -5.261506  ],
         ...,
         [  3.4180403 ,   3.4180403 ,   3.4180403 , ...,   3.4180408 ,
            3.4180408 ,   3.4180408 ],
         [ -8.944877  ,  -8.944877  ,  -8.944877  , ...,  -8.944877  ,
           -8.944877  ,  -8.944877  ],
         [  6.275188  ,   6.275188  ,   6.275188  , ...,   6.275187  ,
            6.275187  ,   6.275187  ]],

        [[  2.4553576 ,   2.4553576 ,   2.4553576 , ...,   2.455358  ,
            2.455358  ,   2.455358  ],
         [-15.916961  , -15.916961  , -15.916961  , ..., -15.916961  ,
          -15.916961  , -15.916961  ],
         [ -4.6884866 ,  -4.6884866 ,  -4.6884866 , ...,  -4.688487  ,
           -4.688487  ,  -4.688487  ],
         ...,
         [ -6.032414  ,  -6.032414  ,  -6.032414  , ...,  -6.032414  ,
           -6.032414  ,  -6.032414  ],
         [  5.454642  ,   5.454642  ,   5.454642  , ...,   5.4546413 ,
            5.4546413 ,   5.4546413 ],
         [  5.761779  ,   5.761779  ,   5.761779  , ...,   5.761779  ,
            5.761779  ,   5.761779  ]],

        [[  1.629575  ,   1.629575  ,   1.629575  , ...,   1.6295753 ,
            1.6295753 ,   1.6295753 ],
         [ 12.22548   ,  12.22548   ,  12.22548   , ...,  12.22548   ,
           12.22548   ,  12.22548   ],
         [ -4.325128  ,  -4.325128  ,  -4.325128  , ...,  -4.325128  ,
           -4.325128  ,  -4.325128  ],
         ...,
         [  6.4190044 ,   6.4190044 ,   6.4190044 , ...,   6.419004  ,
            6.419004  ,   6.419004  ],
         [ -2.1691732 ,  -2.1691732 ,  -2.1691732 , ...,  -2.1691728 ,
           -2.1691728 ,  -2.1691728 ],
         [ -2.6093025 ,  -2.6093025 ,  -2.6093025 , ...,  -2.6093025 ,
           -2.6093025 ,  -2.6093025 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 100]), 'from': [], 'to': [3, 11]}

generate models:338

analyse output arrays in iter:395

pre layer res:
4:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[34455300.,        0.,        0., ...,        0.,        0.,
                 0.],
         [34455300.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        ...,

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16], 'to': [6]}
tf node:
{'name': 'sin', 'output': array([[[[0.92811525, 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.92811525, 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        ...,

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [7, 7]}
ms node:
{'name': 'sin', 'output': array([[[[0.07421121, 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.07421121, 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        ...,

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         ...,
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.        ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [4], 'to': [7, 7]}
torch node:
{'name': 'sin', 'output': array([[[[-0.8884089,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [-0.8884089,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        ...,

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]],

        [[ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         ...,
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ],
         [ 0.       ,  0.       ,  0.       , ...,  0.       ,
           0.       ,  0.       ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [4], 'to': [7, 7]}

generate models:341

analyse the exceptions in iter:398
torch exception:
{'id': 0, 'name': 'linear', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 9.1533e-01, -1.5163e+00,  1.7230e+00,  ..., -4.0551e-03,
             1.5919e+00,  6.5257e-01],
           [ 1.1540e-01,  1.4462e-01, -1.5607e-01,  ..., -5.3410e-01,
            -2.6847e+00,  3.6124e-01],
           [-1.1360e+00,  7.4961e-01,  5.5238e-01,  ..., -1.3782e+00,
            -1.1790e+00,  1.1375e+00],
           ...,
           [ 2.5024e-01,  7.8333e-01,  1.1507e+00,  ...,  1.3413e+00,
            -6.6509e-01,  3.2515e-01],
           [ 9.1127e-01,  7.5126e-01,  1.2106e+00,  ...,  2.3927e+00,
             6.9138e-01,  1.0068e+00],
           [ 1.7759e-01,  2.4108e+00,  1.3579e+00,  ..., -2.5116e+00,
            -5.1750e-01, -1.1860e+00]],

          [[-3.2380e+00,  1.9182e+00, -1.6603e-01,  ..., -4.0758e-02,
            -1.0434e+00,  1.4053e-01],
           [ 1.8642e+00, -4.0605e-01, -1.6167e-01,  ...,  1.0567e+00,
            -1.4631e+00, -4.5120e-01],
           [-9.7220e-01, -6.4473e-01,  9.3080e-01,  ...,  1.9547e+00,
             1.6298e+00,  6.2282e-01],
           ...,
           [-8.3164e-02, -1.4561e-01,  1.7798e-01,  ...,  2.2376e+00,
             2.8774e-01,  1.1348e+00],
           [-6.3717e-02, -2.3720e-01, -1.7853e+00,  ..., -5.6334e-01,
            -1.2762e+00, -8.2241e-01],
           [-3.5141e-01,  7.3153e-01, -3.6296e-01,  ...,  7.0332e-01,
             5.3239e-01, -1.2073e+00]],

          [[-2.6840e-03, -8.9005e-01,  3.5994e-01,  ..., -1.6656e+00,
            -3.3866e-01, -4.7529e-01],
           [-1.2607e+00, -1.0507e+00,  1.2317e-01,  ..., -1.3916e+00,
             1.6712e-01, -1.2895e+00],
           [ 3.7340e-01,  1.8979e+00, -3.9024e-01,  ..., -1.5073e+00,
             9.0682e-01, -2.2871e-03],
           ...,
           [-3.8702e-01,  4.3031e-01, -5.4348e-02,  ...,  5.4842e-01,
            -7.0312e-01, -1.4418e+00],
           [-1.0538e+00, -1.4493e-01, -2.0657e-01,  ...,  8.3767e-02,
            -1.0242e+00,  1.1035e+00],
           [ 1.9981e+00,  7.2343e-01,  1.8206e+00,  ..., -4.3185e-02,
            -2.8168e-01,  4.2459e-01]]]]])}
mat1 and mat2 shapes cannot be multiplied (96x32 and 100x100)
mindspore exception:
{'id': 0, 'name': 'linear', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[9.15329099e-001, -1.51631474e+000, 1.72299230e+000 ... -4.05508187e-003, 1.59185600e+000, 6.52574480e-001],
    [1.15399577e-001, 1.44620031e-001, -1.56070098e-001 ... -5.34096777e-001, -2.68469906e+000, 3.61243546e-001],
    [-1.13603985e+000, 7.49612629e-001, 5.52376509e-001 ... -1.37816322e+000, -1.17895782e+000, 1.13746309e+000],
    ...
    [2.50235260e-001, 7.83329844e-001, 1.15071702e+000 ... 1.34133112e+000, -6.65094137e-001, 3.25146258e-001],
    [9.11266506e-001, 7.51258254e-001, 1.21060300e+000 ... 2.39273477e+000, 6.91382110e-001, 1.00678027e+000],
    [1.77585796e-001, 2.41084671e+000, 1.35789680e+000 ... -2.51157165e+000, -5.17496884e-001, -1.18602753e+000]],
   [[-3.23804307e+000, 1.91819155e+000, -1.66027308e-001 ... -4.07583863e-002, -1.04341626e+000, 1.40527666e-001],
    [1.86423504e+000, -4.06053543e-001, -1.61668196e-001 ... 1.05669689e+000, -1.46311545e+000, -4.51198310e-001],
    [-9.72200871e-001, -6.44729972e-001, 9.30804431e-001 ... 1.95474041e+000, 1.62976456e+000, 6.22817993e-001],
    ...
    [-8.31638575e-002, -1.45614669e-001, 1.77977085e-001 ... 2.23764753e+000, 2.87741750e-001, 1.13475490e+000],
    [-6.37165457e-002, -2.37203196e-001, -1.78530347e+000 ... -5.63337028e-001, -1.27616787e+000, -8.22413146e-001],
    [-3.51409584e-001, 7.31525302e-001, -3.62962544e-001 ... 7.03322589e-001, 5.32385767e-001, -1.20733631e+000]],
   [[-2.68404256e-003, -8.90048146e-001, 3.59937519e-001 ... -1.66556442e+000, -3.38664681e-001, -4.75287259e-001],
    [-1.26068735e+000, -1.05065584e+000, 1.23173788e-001 ... -1.39158535e+000, 1.67115062e-001, -1.28947830e+000],
    [3.73402864e-001, 1.89789689e+000, -3.90244603e-001 ... -1.50725007e+000, 9.06819642e-001, -2.28710985e-003],
    ...
    [-3.87024105e-001, 4.30311322e-001, -5.43479994e-002 ... 5.48417687e-001, -7.03117192e-001, -1.44182801e+000],
    [-1.05378425e+000, -1.44933254e-001, -2.06573427e-001 ... 8.37666988e-002, -1.02424920e+000, 1.10351145e+000],
    [1.99812412e+000, 7.23427713e-001, 1.82062149e+000 ... -4.31849286e-002, -2.81681776e-001, 4.24594074e-001]]]]])}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 100. And 'x' shape [96, 32](transpose_a=False), 'y' shape [100, 100](transpose_b=True).

generate models:344

analyse output arrays in iter:406

pre layer res:
14:flatten
{'name': 'flatten', 'output': array([[ 1.1930401 ,  2.5723815 ,  1.7393911 , ..., -0.26092947,
         3.4299712 ,  5.565511  ]], dtype=float32), 'output_shape': TensorShape([1, 16384]), 'from': [1], 'to': [15, 26]}
tf node:
{'name': 'log', 'output': array([[0.17650479, 0.9448321 , 0.5535351 , ...,        nan, 1.2325518 ,
        1.7165889 ]], dtype=float32), 'output_shape': TensorShape([1, 16384]), 'from': [14], 'to': [25]}
ms node:
{'name': 'log', 'output': array([[0.1765033 , 0.94483495, 0.5535341 , ...,        nan, 1.2325486 ,
        1.7165917 ]], dtype=float32), 'output_shape': (1, 16384), 'from': [14], 'to': [25]}
torch node:
{'name': 'log', 'output': array([[0.17650478, 0.9448321 , 0.5535351 , ...,        nan, 1.2325518 ,
        1.7165889 ]], dtype=float32), 'output_shape': torch.Size([1, 16384]), 'from': [14], 'to': [25]}

generate models:351

analyse the exceptions in iter:407
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[2.2818e+00, 6.6101e+00, 8.4956e-01,  ..., 1.4029e+00,
           7.6266e-01, 3.3927e+00],
          [4.3776e-03, 5.5757e-03, 3.3596e+00,  ..., 3.2791e-01,
           7.9535e-02, 1.3645e+00],
          [0.0000e+00, 5.4356e-01, 8.5349e-02,  ..., 2.1984e+00,
           1.3001e+00, 0.0000e+00],
          ...,
          [1.3823e+00, 9.0910e-01, 3.8082e+00,  ..., 0.0000e+00,
           1.3404e+01, 3.8872e-03],
          [5.3214e+00, 8.7462e-03, 0.0000e+00,  ..., 2.6381e-01,
           1.3041e+00, 2.0756e-02],
          [1.6737e-02, 2.5031e-02, 0.0000e+00,  ..., 0.0000e+00,
           1.7999e-01, 1.6939e+00]],

         [[2.2818e+00, 6.6101e+00, 8.4956e-01,  ..., 1.4029e+00,
           7.6266e-01, 3.3927e+00],
          [4.3776e-03, 5.5757e-03, 3.3596e+00,  ..., 3.2791e-01,
           7.9535e-02, 1.3645e+00],
          [0.0000e+00, 5.4356e-01, 8.5349e-02,  ..., 2.1984e+00,
           1.3001e+00, 0.0000e+00],
          ...,
          [1.3823e+00, 9.0910e-01, 3.8082e+00,  ..., 0.0000e+00,
           1.3404e+01, 3.8872e-03],
          [5.3214e+00, 8.7462e-03, 0.0000e+00,  ..., 2.6381e-01,
           1.3041e+00, 2.0756e-02],
          [1.6737e-02, 2.5031e-02, 0.0000e+00,  ..., 0.0000e+00,
           1.7999e-01, 1.6939e+00]],

         [[2.2818e+00, 6.6101e+00, 8.4956e-01,  ..., 1.4029e+00,
           7.6266e-01, 3.3927e+00],
          [4.3776e-03, 5.5757e-03, 3.3596e+00,  ..., 3.2791e-01,
           7.9535e-02, 1.3645e+00],
          [0.0000e+00, 5.4356e-01, 8.5349e-02,  ..., 2.1984e+00,
           1.3001e+00, 0.0000e+00],
          ...,
          [1.3823e+00, 9.0910e-01, 3.8082e+00,  ..., 0.0000e+00,
           1.3404e+01, 3.8872e-03],
          [5.3214e+00, 8.7462e-03, 0.0000e+00,  ..., 2.6381e-01,
           1.3041e+00, 2.0756e-02],
          [1.6737e-02, 2.5031e-02, 0.0000e+00,  ..., 0.0000e+00,
           1.7999e-01, 1.6939e+00]],

         ...,

         [[2.2818e+00, 6.6101e+00, 8.4956e-01,  ..., 1.4029e+00,
           7.6266e-01, 3.3927e+00],
          [4.3776e-03, 5.5757e-03, 3.3596e+00,  ..., 3.2791e-01,
           7.9535e-02, 1.3645e+00],
          [0.0000e+00, 5.4356e-01, 8.5349e-02,  ..., 2.1984e+00,
           1.3001e+00, 0.0000e+00],
          ...,
          [1.3823e+00, 9.0910e-01, 3.8082e+00,  ..., 0.0000e+00,
           1.3404e+01, 3.8872e-03],
          [5.3214e+00, 8.7462e-03, 0.0000e+00,  ..., 2.6381e-01,
           1.3041e+00, 2.0756e-02],
          [1.6737e-02, 2.5031e-02, 0.0000e+00,  ..., 0.0000e+00,
           1.7999e-01, 1.6939e+00]],

         [[2.2818e+00, 6.6101e+00, 8.4956e-01,  ..., 1.4029e+00,
           7.6266e-01, 3.3927e+00],
          [4.3776e-03, 5.5757e-03, 3.3596e+00,  ..., 3.2791e-01,
           7.9535e-02, 1.3645e+00],
          [0.0000e+00, 5.4356e-01, 8.5349e-02,  ..., 2.1984e+00,
           1.3001e+00, 0.0000e+00],
          ...,
          [1.3823e+00, 9.0910e-01, 3.8082e+00,  ..., 0.0000e+00,
           1.3404e+01, 3.8872e-03],
          [5.3214e+00, 8.7462e-03, 0.0000e+00,  ..., 2.6381e-01,
           1.3041e+00, 2.0756e-02],
          [1.6737e-02, 2.5031e-02, 0.0000e+00,  ..., 0.0000e+00,
           1.7999e-01, 1.6939e+00]],

         [[2.2818e+00, 6.6101e+00, 8.4956e-01,  ..., 1.4029e+00,
           7.6266e-01, 3.3927e+00],
          [4.3776e-03, 5.5757e-03, 3.3596e+00,  ..., 3.2791e-01,
           7.9535e-02, 1.3645e+00],
          [0.0000e+00, 5.4356e-01, 8.5349e-02,  ..., 2.1984e+00,
           1.3001e+00, 0.0000e+00],
          ...,
          [1.3823e+00, 9.0910e-01, 3.8082e+00,  ..., 0.0000e+00,
           1.3404e+01, 3.8872e-03],
          [5.3214e+00, 8.7462e-03, 0.0000e+00,  ..., 2.6381e-01,
           1.3041e+00, 2.0756e-02],
          [1.6737e-02, 2.5031e-02, 0.0000e+00,  ..., 0.0000e+00,
           1.7999e-01, 1.6939e+00]]]], grad_fn=<ConvolutionBackward0>)]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 64, 32, 32] to have 512 channels, but got 64 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 64, 32, 32], dtype=Float32, value=
[[[[2.28182697e+000, 6.61012220e+000, 8.49560797e-001 ... 1.40294909e+000, 7.62659788e-001, 3.39268255e+000],
   [4.37757373e-003, 5.57566155e-003, 3.35961843e+000 ... 3.27906191e-001, 7.95345753e-002, 1.36453748e+000],
   [0.00000000e+000, 5.43561935e-001, 8.53491798e-002 ... 2.19836426e+000, 1.30010450e+000, 0.00000000e+000],
   ...
   [1.38227665e+000, 9.09097612e-001, 3.80824566e+000 ... 0.00000000e+000, 1.34043083e+001, 3.88715230e-003],
   [5.32140875e+000, 8.74623749e-003, 0.00000000e+000 ... 2.63806373e-001, 1.30405557e+000, 2.07564272e-002],
   [1.67365130e-002, 2.50313357e-002, 0.00000000e+000 ... 0.00000000e+000, 1.79989204e-001, 1.69394898e+000]],
  [[2.28182697e+000, 6.61012220e+000, 8.49560797e-001 ... 1.40294909e+000, 7.62659788e-001, 3.39268255e+000],
   [4.37757373e-003, 5.57566155e-003, 3.35961843e+000 ... 3.27906191e-001, 7.95345753e-002, 1.36453748e+000],
   [0.00000000e+000, 5.43561935e-001, 8.53491798e-002 ... 2.19836426e+000, 1.30010450e+000, 0.00000000e+000],
   ...
   [1.38227665e+000, 9.09097612e-001, 3.80824566e+000 ... 0.00000000e+000, 1.34043083e+001, 3.88715230e-003],
   [5.32140875e+000, 8.74623749e-003, 0.00000000e+000 ... 2.63806373e-001, 1.30405557e+000, 2.07564272e-002],
   [1.67365130e-002, 2.50313357e-002, 0.00000000e+000 ... 0.00000000e+000, 1.79989204e-001, 1.69394898e+000]],
  [[2.28182697e+000, 6.61012220e+000, 8.49560797e-001 ... 1.40294909e+000, 7.62659788e-001, 3.39268255e+000],
   [4.37757373e-003, 5.57566155e-003, 3.35961843e+000 ... 3.27906191e-001, 7.95345753e-002, 1.36453748e+000],
   [0.00000000e+000, 5.43561935e-001, 8.53491798e-002 ... 2.19836426e+000, 1.30010450e+000, 0.00000000e+000],
   ...
   [1.38227665e+000, 9.09097612e-001, 3.80824566e+000 ... 0.00000000e+000, 1.34043083e+001, 3.88715230e-003],
   [5.32140875e+000, 8.74623749e-003, 0.00000000e+000 ... 2.63806373e-001, 1.30405557e+000, 2.07564272e-002],
   [1.67365130e-002, 2.50313357e-002, 0.00000000e+000 ... 0.00000000e+000, 1.79989204e-001, 1.69394898e+000]],
  ...
  [[2.28182697e+000, 6.61012220e+000, 8.49560797e-001 ... 1.40294909e+000, 7.62659788e-001, 3.39268255e+000],
   [4.37757373e-003, 5.57566155e-003, 3.35961843e+000 ... 3.27906191e-001, 7.95345753e-002, 1.36453748e+000],
   [0.00000000e+000, 5.43561935e-001, 8.53491798e-002 ... 2.19836426e+000, 1.30010450e+000, 0.00000000e+000],
   ...
   [1.38227665e+000, 9.09097612e-001, 3.80824566e+000 ... 0.00000000e+000, 1.34043083e+001, 3.88715230e-003],
   [5.32140875e+000, 8.74623749e-003, 0.00000000e+000 ... 2.63806373e-001, 1.30405557e+000, 2.07564272e-002],
   [1.67365130e-002, 2.50313357e-002, 0.00000000e+000 ... 0.00000000e+000, 1.79989204e-001, 1.69394898e+000]],
  [[2.28182697e+000, 6.61012220e+000, 8.49560797e-001 ... 1.40294909e+000, 7.62659788e-001, 3.39268255e+000],
   [4.37757373e-003, 5.57566155e-003, 3.35961843e+000 ... 3.27906191e-001, 7.95345753e-002, 1.36453748e+000],
   [0.00000000e+000, 5.43561935e-001, 8.53491798e-002 ... 2.19836426e+000, 1.30010450e+000, 0.00000000e+000],
   ...
   [1.38227665e+000, 9.09097612e-001, 3.80824566e+000 ... 0.00000000e+000, 1.34043083e+001, 3.88715230e-003],
   [5.32140875e+000, 8.74623749e-003, 0.00000000e+000 ... 2.63806373e-001, 1.30405557e+000, 2.07564272e-002],
   [1.67365130e-002, 2.50313357e-002, 0.00000000e+000 ... 0.00000000e+000, 1.79989204e-001, 1.69394898e+000]],
  [[2.28182697e+000, 6.61012220e+000, 8.49560797e-001 ... 1.40294909e+000, 7.62659788e-001, 3.39268255e+000],
   [4.37757373e-003, 5.57566155e-003, 3.35961843e+000 ... 3.27906191e-001, 7.95345753e-002, 1.36453748e+000],
   [0.00000000e+000, 5.43561935e-001, 8.53491798e-002 ... 2.19836426e+000, 1.30010450e+000, 0.00000000e+000],
   ...
   [1.38227665e+000, 9.09097612e-001, 3.80824566e+000 ... 0.00000000e+000, 1.34043083e+001, 3.88715230e-003],
   [5.32140875e+000, 8.74623749e-003, 0.00000000e+000 ... 2.63806373e-001, 1.30405557e+000, 2.07564272e-002],
   [1.67365130e-002, 2.50313357e-002, 0.00000000e+000 ... 0.00000000e+000, 1.79989204e-001, 1.69394898e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 64, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:352

analyse the exceptions in iter:408
torch exception:
{'id': 3, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],

         [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],

         [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]]])]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 16, 16] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 3, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 16], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:353

analyse the exceptions in iter:411
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[-0.2516, -2.5113,  1.3038,  ...,  0.0451, -0.3111, -0.8715],
           [ 1.0568,  0.2473, -0.3144,  ..., -1.7919,  0.1126, -1.8786],
           [-1.0429,  0.3578, -0.9419,  ..., -0.4107, -0.0784,  0.1406],
           ...,
           [ 0.2714, -1.2008, -0.8829,  ...,  0.3549,  0.1778, -1.3997],
           [-0.6883, -1.7281, -1.2986,  ...,  0.3988, -1.5204, -0.3887],
           [ 1.1314, -0.5291, -0.4375,  ..., -0.3103, -0.4666,  0.2884]],

          [[-0.4041, -2.4975, -1.5935,  ..., -0.9167,  0.5430, -1.0879],
           [-1.0969,  0.2472,  0.4283,  ..., -0.8208, -1.7827,  1.9927],
           [ 0.2389, -0.5569, -1.4218,  ...,  0.8008, -0.5584, -2.2374],
           ...,
           [-0.0728,  1.6288, -2.1200,  ...,  0.7765,  0.3077, -0.8172],
           [-1.7135,  1.8525,  1.6124,  ..., -1.4558, -1.2419,  0.2818],
           [ 0.9365,  1.2830, -0.7248,  ...,  0.2167,  0.5958,  1.0468]],

          [[ 1.7278, -0.9423, -1.7882,  ...,  1.4542, -1.6955, -0.7912],
           [-0.1457,  0.9376, -1.2866,  ..., -0.0778, -0.9124, -0.4796],
           [-0.7583, -0.7383,  0.4879,  ...,  0.2320,  2.1068, -1.0265],
           ...,
           [ 0.9112,  0.0952, -0.4852,  ...,  0.0665, -0.8150,  0.2102],
           [-0.2468,  1.2235,  0.3727,  ...,  0.5581,  0.0430,  0.8802],
           [ 0.1062, -1.0874,  0.2956,  ..., -0.3463,  0.5326,  1.1987]]]]])}
Given groups=1, weight of size [64, 64, 1, 1], expected input[1, 3, 32, 32] to have 64 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[-2.51615018e-001, -2.51134992e+000, 1.30380738e+000 ... 4.51205224e-002, -3.11073542e-001, -8.71454895e-001],
    [1.05676746e+000, 2.47284904e-001, -3.14420432e-001 ... -1.79192746e+000, 1.12562157e-001, -1.87858748e+000],
    [-1.04288757e+000, 3.57786983e-001, -9.41890180e-001 ... -4.10713047e-001, -7.84037113e-002, 1.40579253e-001],
    ...
    [2.71362841e-001, -1.20078099e+000, -8.82858694e-001 ... 3.54905635e-001, 1.77846923e-001, -1.39966977e+000],
    [-6.88299537e-001, -1.72812414e+000, -1.29862213e+000 ... 3.98834765e-001, -1.52040935e+000, -3.88688385e-001],
    [1.13136244e+000, -5.29064417e-001, -4.37478900e-001 ... -3.10302109e-001, -4.66595173e-001, 2.88368732e-001]],
   [[-4.04119283e-001, -2.49752426e+000, -1.59351873e+000 ... -9.16678488e-001, 5.42986214e-001, -1.08794701e+000],
    [-1.09686494e+000, 2.47204557e-001, 4.28256840e-001 ... -8.20849001e-001, -1.78273058e+000, 1.99268985e+000],
    [2.38855109e-001, -5.56929171e-001, -1.42175984e+000 ... 8.00774992e-001, -5.58414817e-001, -2.23736048e+000],
    ...
    [-7.27818608e-002, 1.62880838e+000, -2.12002659e+000 ... 7.76526630e-001, 3.07666808e-001, -8.17194700e-001],
    [-1.71352291e+000, 1.85254264e+000, 1.61236322e+000 ... -1.45581174e+000, -1.24190557e+000, 2.81762958e-001],
    [9.36492562e-001, 1.28296328e+000, -7.24766016e-001 ... 2.16665998e-001, 5.95828712e-001, 1.04676843e+000]],
   [[1.72783589e+000, -9.42326605e-001, -1.78817213e+000 ... 1.45424187e+000, -1.69553101e+000, -7.91238248e-001],
    [-1.45712644e-001, 9.37557161e-001, -1.28655279e+000 ... -7.78209344e-002, -9.12421823e-001, -4.79565561e-001],
    [-7.58346260e-001, -7.38273919e-001, 4.87853676e-001 ... 2.32045531e-001, 2.10676122e+000, -1.02654243e+000],
    ...
    [9.11186874e-001, 9.52062681e-002, -4.85189497e-001 ... 6.64969161e-002, -8.15025747e-001, 2.10151419e-001],
    [-2.46801302e-001, 1.22352564e+000, 3.72711927e-001 ... 5.58092892e-001, 4.30177562e-002, 8.80188107e-001],
    [1.06193818e-001, -1.08740783e+000, 2.95557290e-001 ... -3.46260518e-001, 5.32644987e-001, 1.19874382e+000]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:355

analyse output arrays in iter:415

pre layer res:
12:relu
{'name': 'relu', 'output': array([[[[ 264.42188,  548.94434,  788.8166 , ...,  512.65466,
           728.1261 ,  669.8014 ],
         [ 526.9161 ,  554.5486 ,  932.12396, ...,  279.31607,
           437.87726,  849.4366 ],
         [ 640.25946,  620.8762 ,  390.18765, ...,  171.73158,
           695.5934 ,  432.71313],
         ...,
         [ 836.9534 ,  245.06741,  402.84128, ...,  327.3352 ,
           379.5104 ,  225.08986],
         [1387.9908 ,  239.61229,  764.35516, ...,  853.5159 ,
           668.44714, 1225.7533 ],
         [ 383.412  ,  623.17175,  715.3864 , ...,  421.9008 ,
           471.39673,  811.239  ]],

        [[ 264.42188,  548.94434,  788.8166 , ...,  512.65466,
           728.1261 ,  669.8014 ],
         [ 526.9161 ,  554.5486 ,  932.12396, ...,  279.31607,
           437.87726,  849.4366 ],
         [ 640.25946,  620.8762 ,  390.18765, ...,  171.73158,
           695.5934 ,  432.71313],
         ...,
         [ 836.9534 ,  245.06741,  402.84128, ...,  327.3352 ,
           379.5104 ,  225.08986],
         [1387.9908 ,  239.61229,  764.35516, ...,  853.5159 ,
           668.44714, 1225.7533 ],
         [ 383.412  ,  623.17175,  715.3864 , ...,  421.9008 ,
           471.39673,  811.239  ]],

        [[ 264.42188,  548.94434,  788.8166 , ...,  512.65466,
           728.1261 ,  669.8014 ],
         [ 526.9161 ,  554.5486 ,  932.12396, ...,  279.31607,
           437.87726,  849.4366 ],
         [ 640.25946,  620.8762 ,  390.18765, ...,  171.73158,
           695.5934 ,  432.71313],
         ...,
         [ 836.9534 ,  245.06741,  402.84128, ...,  327.3352 ,
           379.5104 ,  225.08986],
         [1387.9908 ,  239.61229,  764.35516, ...,  853.5159 ,
           668.44714, 1225.7533 ],
         [ 383.412  ,  623.17175,  715.3864 , ...,  421.9008 ,
           471.39673,  811.239  ]],

        ...,

        [[ 264.42188,  548.94434,  788.8166 , ...,  512.65466,
           728.1261 ,  669.8014 ],
         [ 526.9161 ,  554.5486 ,  932.12396, ...,  279.31607,
           437.87726,  849.4366 ],
         [ 640.25946,  620.8762 ,  390.18765, ...,  171.73158,
           695.5934 ,  432.71313],
         ...,
         [ 836.9534 ,  245.06741,  402.84128, ...,  327.3352 ,
           379.5104 ,  225.08986],
         [1387.9908 ,  239.61229,  764.35516, ...,  853.5159 ,
           668.44714, 1225.7533 ],
         [ 383.412  ,  623.17175,  715.3864 , ...,  421.9008 ,
           471.39673,  811.239  ]],

        [[ 264.42188,  548.94434,  788.8166 , ...,  512.65466,
           728.1261 ,  669.8014 ],
         [ 526.9161 ,  554.5486 ,  932.12396, ...,  279.31607,
           437.87726,  849.4366 ],
         [ 640.25946,  620.8762 ,  390.18765, ...,  171.73158,
           695.5934 ,  432.71313],
         ...,
         [ 836.9534 ,  245.06741,  402.84128, ...,  327.3352 ,
           379.5104 ,  225.08986],
         [1387.9908 ,  239.61229,  764.35516, ...,  853.5159 ,
           668.44714, 1225.7533 ],
         [ 383.412  ,  623.17175,  715.3864 , ...,  421.9008 ,
           471.39673,  811.239  ]],

        [[ 264.42188,  548.94434,  788.8166 , ...,  512.65466,
           728.1261 ,  669.8014 ],
         [ 526.9161 ,  554.5486 ,  932.12396, ...,  279.31607,
           437.87726,  849.4366 ],
         [ 640.25946,  620.8762 ,  390.18765, ...,  171.73158,
           695.5934 ,  432.71313],
         ...,
         [ 836.9534 ,  245.06741,  402.84128, ...,  327.3352 ,
           379.5104 ,  225.08986],
         [1387.9908 ,  239.61229,  764.35516, ...,  853.5159 ,
           668.44714, 1225.7533 ],
         [ 383.412  ,  623.17175,  715.3864 , ...,  421.9008 ,
           471.39673,  811.239  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [3], 'to': [13]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.80080616],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079312 , ..., -0.49234602,
          -0.2661425 ,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590453 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.86171263],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.80080616],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079312 , ..., -0.49234602,
          -0.2661425 ,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590453 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.86171263],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.80080616],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079312 , ..., -0.49234602,
          -0.2661425 ,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590453 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.86171263],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        ...,

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.80080616],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079312 , ..., -0.49234602,
          -0.2661425 ,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590453 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.86171263],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.80080616],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079312 , ..., -0.49234602,
          -0.2661425 ,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590453 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.86171263],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.80080616],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079312 , ..., -0.49234602,
          -0.2661425 ,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590453 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.86171263],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [12], 'to': [4]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.8008061 ],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079311 , ..., -0.492346  ,
          -0.26614252,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590452 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.8617126 ],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.8008061 ],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079311 , ..., -0.492346  ,
          -0.26614252,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590452 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.8617126 ],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.8008061 ],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079311 , ..., -0.492346  ,
          -0.26614252,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590452 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.8617126 ],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        ...,

        [[ 0.86377   , -0.6716383 , -0.96192575, ..., -0.83915937,
           0.7495615 , -0.8008061 ],
         [ 0.64368767, -0.05744898, -0.5985907 , ..., -0.95947146,
          -0.36619517,  0.35622835],
         [ 0.81070507,  0.40014184,  0.8079311 , ..., -0.492346  ,
          -0.26614252,  0.677343  ],
         ...,
         [ 0.2773281 ,  0.9997312 ,  0.75350547, ...,  0.8198948 ,
          -0.81253725,  0.44930235],
         [ 0.8292074 ,  0.6590452 , -0.58318794, ...,  0.54259616,
          -0.7569968 ,  0.8617126 ],
         [ 0.9905366 ,  0.42085606,  0.62418264, ...,  0.59993875,
           0.9875706 ,  0.7595931 ]],

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.80984664,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]],

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.80984664,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [12], 'to': [4]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.8098466 ,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]],

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.8098466 ,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]],

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.8098466 ,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]],

        ...,

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.8098466 ,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]],

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.8098466 ,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]],

        [[ 0.86377   , -0.67172873, -0.9614405 , ..., -0.8399883 ,
           0.7502479 , -0.8005867 ],
         [ 0.6448546 , -0.05915505, -0.5978081 , ..., -0.9595574 ,
          -0.36468962,  0.35702667],
         [ 0.8098466 ,  0.40126026,  0.80784124, ..., -0.49247882,
          -0.26643667,  0.6784199 ],
         ...,
         [ 0.27703488,  0.9997092 ,  0.7544277 , ...,  0.8202964 ,
          -0.8132482 ,  0.44930235],
         [ 0.8281826 ,  0.65968764, -0.5844763 , ...,  0.5428012 ,
          -0.75583905,  0.8600979 ],
         [ 0.9906452 ,  0.42096677,  0.6235148 , ...,  0.5987173 ,
           0.98778075,  0.7579233 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [12], 'to': [4]}

generate models:359

analyse output arrays in iter:422

pre layer res:
8:transpose
{'name': 'transpose', 'output': array([[[[-0.87496066, -2.9410453 , -0.392717  , ...,  1.0812224 ,
           2.2354665 ,  0.9229884 ],
         [-1.4162029 , -0.81770784,  1.1684942 , ...,  1.2078725 ,
          -2.047462  , -5.8443727 ],
         [-1.3581946 , -0.33898896,  2.3042989 , ..., -0.57036287,
          -0.7247291 , -0.45069253],
         ...,
         [ 0.1321311 , -1.5147878 ,  0.99844575, ...,  3.5616097 ,
          -0.03757799, -0.22398773],
         [ 0.6358425 , -2.3659232 , -0.6547675 , ..., -0.5600978 ,
           0.48210707, -1.052372  ],
         [-0.4095688 ,  2.5737495 ,  1.6133845 , ..., -2.5051167 ,
           1.5758549 , -0.2714017 ]],

        [[-0.87496066, -2.9410453 , -0.392717  , ...,  1.0812224 ,
           2.2354665 ,  0.9229884 ],
         [-1.4162029 , -0.81770784,  1.1684942 , ...,  1.2078725 ,
          -2.047462  , -5.8443727 ],
         [-1.3581946 , -0.33898896,  2.3042989 , ..., -0.57036287,
          -0.7247291 , -0.45069253],
         ...,
         [ 0.1321311 , -1.5147878 ,  0.99844575, ...,  3.5616097 ,
          -0.03757799, -0.22398773],
         [ 0.6358425 , -2.3659232 , -0.6547675 , ..., -0.5600978 ,
           0.48210707, -1.052372  ],
         [-0.4095688 ,  2.5737495 ,  1.6133845 , ..., -2.5051167 ,
           1.5758549 , -0.2714017 ]],

        [[-0.87496066, -2.9410453 , -0.392717  , ...,  1.0812224 ,
           2.2354665 ,  0.9229884 ],
         [-1.4162029 , -0.81770784,  1.1684942 , ...,  1.2078725 ,
          -2.047462  , -5.8443727 ],
         [-1.3581946 , -0.33898896,  2.3042989 , ..., -0.57036287,
          -0.7247291 , -0.45069253],
         ...,
         [ 0.1321311 , -1.5147878 ,  0.99844575, ...,  3.5616097 ,
          -0.03757799, -0.22398773],
         [ 0.6358425 , -2.3659232 , -0.6547675 , ..., -0.5600978 ,
           0.48210707, -1.052372  ],
         [-0.4095688 ,  2.5737495 ,  1.6133845 , ..., -2.5051167 ,
           1.5758549 , -0.2714017 ]],

        ...,

        [[-0.87496066, -2.9410453 , -0.392717  , ...,  1.0812224 ,
           2.2354665 ,  0.9229884 ],
         [-1.4162029 , -0.81770784,  1.1684942 , ...,  1.2078725 ,
          -2.047462  , -5.8443727 ],
         [-1.3581946 , -0.33898896,  2.3042989 , ..., -0.57036287,
          -0.7247291 , -0.45069253],
         ...,
         [ 0.1321311 , -1.5147878 ,  0.99844575, ...,  3.5616097 ,
          -0.03757799, -0.22398773],
         [ 0.6358425 , -2.3659232 , -0.6547675 , ..., -0.5600978 ,
           0.48210707, -1.052372  ],
         [-0.4095688 ,  2.5737495 ,  1.6133845 , ..., -2.5051167 ,
           1.5758549 , -0.2714017 ]],

        [[-0.87496066, -2.9410453 , -0.392717  , ...,  1.0812224 ,
           2.2354665 ,  0.9229884 ],
         [-1.4162029 , -0.81770784,  1.1684942 , ...,  1.2078725 ,
          -2.047462  , -5.8443727 ],
         [-1.3581946 , -0.33898896,  2.3042989 , ..., -0.57036287,
          -0.7247291 , -0.45069253],
         ...,
         [ 0.1321311 , -1.5147878 ,  0.99844575, ...,  3.5616097 ,
          -0.03757799, -0.22398773],
         [ 0.6358425 , -2.3659232 , -0.6547675 , ..., -0.5600978 ,
           0.48210707, -1.052372  ],
         [-0.4095688 ,  2.5737495 ,  1.6133845 , ..., -2.5051167 ,
           1.5758549 , -0.2714017 ]],

        [[-0.87496066, -2.9410453 , -0.392717  , ...,  1.0812224 ,
           2.2354665 ,  0.9229884 ],
         [-1.4162029 , -0.81770784,  1.1684942 , ...,  1.2078725 ,
          -2.047462  , -5.8443727 ],
         [-1.3581946 , -0.33898896,  2.3042989 , ..., -0.57036287,
          -0.7247291 , -0.45069253],
         ...,
         [ 0.1321311 , -1.5147878 ,  0.99844575, ...,  3.5616097 ,
          -0.03757799, -0.22398773],
         [ 0.6358425 , -2.3659232 , -0.6547675 , ..., -0.5600978 ,
           0.48210707, -1.052372  ],
         [-0.4095688 ,  2.5737495 ,  1.6133845 , ..., -2.5051167 ,
           1.5758549 , -0.2714017 ]]]], dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [0], 'to': [7]}
tf node:
{'name': 'log', 'output': array([[[[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        ...,

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]]]],
      dtype=float32), 'output_shape': TensorShape([1, 512, 32, 32]), 'from': [8], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[           nan,            nan,            nan, ...,
           7.8089364e-02,  8.0445051e-01, -8.0138579e-02],
         [           nan,            nan,  1.5571445e-01, ...,
           1.8885908e-01,            nan,            nan],
         [           nan,            nan,  8.3477330e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239573e+00,            nan, -1.5568903e-03, ...,
           1.2702116e+00,            nan,            nan],
         [-4.5280159e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536662e-01,  4.7833171e-01, ...,
                     nan,  4.5479551e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8089364e-02,  8.0445051e-01, -8.0138579e-02],
         [           nan,            nan,  1.5571445e-01, ...,
           1.8885908e-01,            nan,            nan],
         [           nan,            nan,  8.3477330e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239573e+00,            nan, -1.5568903e-03, ...,
           1.2702116e+00,            nan,            nan],
         [-4.5280159e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536662e-01,  4.7833171e-01, ...,
                     nan,  4.5479551e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8089364e-02,  8.0445051e-01, -8.0138579e-02],
         [           nan,            nan,  1.5571445e-01, ...,
           1.8885908e-01,            nan,            nan],
         [           nan,            nan,  8.3477330e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239573e+00,            nan, -1.5568903e-03, ...,
           1.2702116e+00,            nan,            nan],
         [-4.5280159e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536662e-01,  4.7833171e-01, ...,
                     nan,  4.5479551e-01,            nan]],

        ...,

        [[           nan,            nan,            nan, ...,
           7.8089364e-02,  8.0445051e-01, -8.0138579e-02],
         [           nan,            nan,  1.5571445e-01, ...,
           1.8885908e-01,            nan,            nan],
         [           nan,            nan,  8.3477330e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239573e+00,            nan, -1.5568903e-03, ...,
           1.2702116e+00,            nan,            nan],
         [-4.5280159e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536662e-01,  4.7833171e-01, ...,
                     nan,  4.5479551e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8089364e-02,  8.0445051e-01, -8.0138579e-02],
         [           nan,            nan,  1.5571445e-01, ...,
           1.8885908e-01,            nan,            nan],
         [           nan,            nan,  8.3477330e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239573e+00,            nan, -1.5568903e-03, ...,
           1.2702116e+00,            nan,            nan],
         [-4.5280159e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536662e-01,  4.7833171e-01, ...,
                     nan,  4.5479551e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8089364e-02,  8.0445051e-01, -8.0138579e-02],
         [           nan,            nan,  1.5571445e-01, ...,
           1.8885908e-01,            nan,            nan],
         [           nan,            nan,  8.3477330e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239573e+00,            nan, -1.5568903e-03, ...,
           1.2702116e+00,            nan,            nan],
         [-4.5280159e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536662e-01,  4.7833171e-01, ...,
                     nan,  4.5479551e-01,            nan]]]],
      dtype=float32), 'output_shape': (1, 512, 32, 32), 'from': [8], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        ...,

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]],

        [[           nan,            nan,            nan, ...,
           7.8092270e-02,  8.0444992e-01, -8.0138594e-02],
         [           nan,            nan,  1.5571593e-01, ...,
           1.8886055e-01,            nan,            nan],
         [           nan,            nan,  8.3477646e-01, ...,
                     nan,            nan,            nan],
         ...,
         [-2.0239606e+00,            nan, -1.5554598e-03, ...,
           1.2702127e+00,            nan,            nan],
         [-4.5280439e-01,            nan,            nan, ...,
                     nan, -7.2958905e-01,            nan],
         [           nan,  9.4536376e-01,  4.7833413e-01, ...,
                     nan,  4.5479792e-01,            nan]]]],
      dtype=float32), 'output_shape': torch.Size([1, 512, 32, 32]), 'from': [8], 'to': [1]}

generate models:364

analyse the exceptions in iter:425
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 0.0757, -0.3400, -0.3060,  ...,  0.0717,  0.7815,  1.0029],
           [ 0.0863,  0.2975, -0.9935,  ...,  0.8567, -1.2253, -0.1936],
           [ 0.8260, -1.0297, -2.3565,  ..., -2.0633, -0.8024,  0.8012],
           ...,
           [ 0.3161, -0.5005, -1.0075,  ..., -0.6354, -1.4625,  0.2746],
           [ 0.8806, -1.3376,  0.0562,  ..., -0.8066,  0.2563,  0.2530],
           [ 0.1607, -0.5982, -0.4270,  ...,  1.0604, -0.9557,  0.0359]],

          [[ 0.3833,  0.9274, -0.5740,  ..., -0.7811, -0.1798, -0.0581],
           [ 0.0733, -0.3858,  0.7126,  ..., -1.2070,  0.0657,  0.7805],
           [-0.4240, -1.1843, -0.1644,  ...,  0.5942,  0.9243,  0.4506],
           ...,
           [-1.0439,  0.1030,  0.7989,  ...,  0.1117,  0.5201, -1.8776],
           [-2.2308, -0.2971,  1.2861,  ..., -2.8577, -0.2832,  1.5442],
           [ 0.1271,  1.4607, -0.0313,  ..., -0.4169,  0.2831,  0.1818]],

          [[ 1.1609, -0.2739, -1.7074,  ...,  0.5192, -0.7395,  0.2895],
           [ 0.0289,  0.9544, -1.4071,  ..., -0.6479, -0.0585,  1.2874],
           [ 0.4425, -0.0118,  0.3727,  ...,  1.1095, -0.7408, -0.4454],
           ...,
           [-0.1611,  0.3481,  1.1389,  ..., -0.0090,  0.6756,  0.9456],
           [-0.5239, -2.3348, -0.2694,  ..., -1.3318, -0.7953, -0.2207],
           [ 1.0368,  0.2755,  1.5842,  ..., -0.0647, -1.7433, -0.8116]]]]])}
Given groups=1, weight of size [64, 64, 1, 1], expected input[1, 3, 32, 32] to have 64 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[7.57383183e-002, -3.39958519e-001, -3.06013525e-001 ... 7.16707036e-002, 7.81473160e-001, 1.00294173e+000],
    [8.63401666e-002, 2.97483683e-001, -9.93457675e-001 ... 8.56692910e-001, -1.22534919e+000, -1.93607375e-001],
    [8.26029241e-001, -1.02972651e+000, -2.35647631e+000 ... -2.06334376e+000, -8.02377284e-001, 8.01150799e-001],
    ...
    [3.16102445e-001, -5.00540495e-001, -1.00754464e+000 ... -6.35441959e-001, -1.46250772e+000, 2.74575263e-001],
    [8.80564809e-001, -1.33764672e+000, 5.61775267e-002 ... -8.06644440e-001, 2.56318778e-001, 2.52998471e-001],
    [1.60657436e-001, -5.98221123e-001, -4.26990241e-001 ... 1.06039178e+000, -9.55744505e-001, 3.59402224e-002]],
   [[3.83265585e-001, 9.27444220e-001, -5.74023247e-001 ... -7.81126142e-001, -1.79838553e-001, -5.80602214e-002],
    [7.33354241e-002, -3.85826916e-001, 7.12615311e-001 ... -1.20704198e+000, 6.56566173e-002, 7.80525327e-001],
    [-4.24010992e-001, -1.18429863e+000, -1.64445192e-001 ... 5.94179392e-001, 9.24342752e-001, 4.50615495e-001],
    ...
    [-1.04394901e+000, 1.02965534e-001, 7.98865914e-001 ... 1.11681245e-001, 5.20146370e-001, -1.87756062e+000],
    [-2.23083043e+000, -2.97122121e-001, 1.28606606e+000 ... -2.85770726e+000, -2.83212215e-001, 1.54421246e+000],
    [1.27089486e-001, 1.46073830e+000, -3.12854089e-002 ... -4.16916490e-001, 2.83086360e-001, 1.81822360e-001]],
   [[1.16090393e+000, -2.73911655e-001, -1.70735502e+000 ... 5.19225121e-001, -7.39537299e-001, 2.89525509e-001],
    [2.89054159e-002, 9.54417050e-001, -1.40707445e+000 ... -6.47937417e-001, -5.84892780e-002, 1.28741956e+000],
    [4.42527086e-001, -1.18462369e-002, 3.72653246e-001 ... 1.10947120e+000, -7.40770936e-001, -4.45393622e-001],
    ...
    [-1.61076441e-001, 3.48084241e-001, 1.13892353e+000 ... -8.98871664e-003, 6.75639451e-001, 9.45555806e-001],
    [-5.23904324e-001, -2.33477163e+000, -2.69440681e-001 ... -1.33178914e+000, -7.95264304e-001, -2.20688686e-001],
    [1.03684473e+000, 2.75450319e-001, 1.58415592e+000 ... -6.47030622e-002, -1.74331880e+000, -8.11626256e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:367

analyse the exceptions in iter:437
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 4.5142,  4.5142,  4.5142,  ...,  4.5142,  4.5142,  4.5142],
          [ 5.6832,  5.6832,  5.6832,  ...,  5.6832,  5.6832,  5.6832],
          [ 3.5282,  3.5282,  3.5282,  ...,  3.5282,  3.5282,  3.5282],
          ...,
          [ 8.0579,  8.0579,  8.0579,  ...,  8.0579,  8.0579,  8.0579],
          [12.5350, 12.5350, 12.5350,  ..., 12.5350, 12.5350, 12.5350],
          [-4.8343, -4.8343, -4.8343,  ..., -4.8343, -4.8343, -4.8343]],

         [[-3.5793, -3.5793, -3.5793,  ..., -3.5793, -3.5793, -3.5793],
          [-2.3511, -2.3511, -2.3511,  ..., -2.3511, -2.3511, -2.3511],
          [ 3.6842,  3.6842,  3.6842,  ...,  3.6842,  3.6842,  3.6842],
          ...,
          [10.9719, 10.9719, 10.9719,  ..., 10.9719, 10.9719, 10.9719],
          [ 4.0024,  4.0024,  4.0024,  ...,  4.0024,  4.0024,  4.0024],
          [ 3.0766,  3.0766,  3.0766,  ...,  3.0766,  3.0766,  3.0766]],

         [[-4.2481, -4.2481, -4.2481,  ..., -4.2481, -4.2481, -4.2481],
          [10.1427, 10.1427, 10.1427,  ..., 10.1427, 10.1427, 10.1427],
          [-2.5008, -2.5008, -2.5008,  ..., -2.5008, -2.5008, -2.5008],
          ...,
          [ 2.1578,  2.1578,  2.1578,  ...,  2.1578,  2.1578,  2.1578],
          [ 6.7020,  6.7020,  6.7020,  ...,  6.7020,  6.7020,  6.7020],
          [ 4.6815,  4.6815,  4.6815,  ...,  4.6815,  4.6815,  4.6815]]]],
       grad_fn=<MaxPool2DWithIndicesBackward0>)]}
Given groups=1, weight of size [128, 256, 1, 1], expected input[1, 3, 16, 50] to have 256 channels, but got 3 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 50], dtype=Float32, value=
[[[[4.51419163e+000, 4.51419163e+000, 4.51419163e+000 ... 4.51419163e+000, 4.51419258e+000, 4.51419258e+000],
   [5.68318892e+000, 5.68318892e+000, 5.68318892e+000 ... 5.68318892e+000, 5.68318939e+000, 5.68318939e+000],
   [3.52823710e+000, 3.52823710e+000, 3.52823710e+000 ... 3.52823710e+000, 3.52823734e+000, 3.52823734e+000],
   ...
   [8.05790710e+000, 8.05790710e+000, 8.05790710e+000 ... 8.05790710e+000, 8.05790710e+000, 8.05790710e+000],
   [1.25349712e+001, 1.25349712e+001, 1.25349712e+001 ... 1.25349712e+001, 1.25349712e+001, 1.25349712e+001],
   [-4.83428526e+000, -4.83428526e+000, -4.83428526e+000 ... -4.83428526e+000, -4.83428526e+000, -4.83428526e+000]],
  [[-3.57925153e+000, -3.57925153e+000, -3.57925153e+000 ... -3.57925153e+000, -3.57925034e+000, -3.57925034e+000],
   [-2.35107136e+000, -2.35107136e+000, -2.35107136e+000 ... -2.35107136e+000, -2.35107160e+000, -2.35107160e+000],
   [3.68422413e+000, 3.68422413e+000, 3.68422413e+000 ... 3.68422413e+000, 3.68422389e+000, 3.68422389e+000],
   ...
   [1.09719276e+001, 1.09719276e+001, 1.09719276e+001 ... 1.09719276e+001, 1.09719276e+001, 1.09719276e+001],
   [4.00241375e+000, 4.00241375e+000, 4.00241375e+000 ... 4.00241375e+000, 4.00241470e+000, 4.00241470e+000],
   [3.07661486e+000, 3.07661486e+000, 3.07661486e+000 ... 3.07661486e+000, 3.07661438e+000, 3.07661438e+000]],
  [[-4.24809456e+000, -4.24809456e+000, -4.24809456e+000 ... -4.24809456e+000, -4.24809456e+000, -4.24809456e+000],
   [1.01426563e+001, 1.01426563e+001, 1.01426563e+001 ... 1.01426563e+001, 1.01426563e+001, 1.01426563e+001],
   [-2.50080299e+000, -2.50080299e+000, -2.50080299e+000 ... -2.50080299e+000, -2.50080299e+000, -2.50080299e+000],
   ...
   [2.15776587e+000, 2.15776587e+000, 2.15776587e+000 ... 2.15776587e+000, 2.15776587e+000, 2.15776587e+000],
   [6.70204306e+000, 6.70204306e+000, 6.70204306e+000 ... 6.70204306e+000, 6.70204353e+000, 6.70204353e+000],
   [4.68150997e+000, 4.68150997e+000, 4.68150997e+000 ... 4.68150997e+000, 4.68150997e+000, 4.68150997e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 256, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:378

analyse the exceptions in iter:438
torch exception:
{'id': 5, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[1.3726e+00, 0.0000e+00, 1.7533e+00, 1.4593e-01, 2.4405e-01,
           6.8838e-01, 1.1308e+00, 1.3070e+00, 5.6915e-01, 1.6358e+00,
           1.4329e+00, 6.8286e-01, 1.2519e-01, 2.0128e+00, 2.0030e+00,
           2.0964e+00],
          [3.2055e-01, 1.5791e+00, 1.6966e+00, 1.3938e+00, 1.9001e+00,
           1.7435e-01, 6.0889e-01, 2.1405e+00, 1.5243e+00, 8.5564e-01,
           1.0135e+00, 1.3004e+00, 2.0683e+00, 5.1440e-01, 1.1990e+00,
           4.5433e-01],
          [6.8939e-01, 9.3823e-01, 9.1089e-01, 5.3178e-01, 3.1647e-01,
           1.2147e+00, 6.1887e-01, 0.0000e+00, 2.3973e-01, 6.8553e-01,
           2.1191e+00, 1.0697e+00, 1.2189e+00, 6.7171e-01, 1.3385e+00,
           1.6534e+00],
          [1.3456e+00, 1.5743e+00, 4.8859e-01, 3.7882e-01, 2.8752e-01,
           1.0119e+00, 8.4000e-01, 5.5399e-01, 5.8329e-01, 1.6457e+00,
           1.0095e+00, 4.2880e-01, 8.6704e-01, 1.1672e+00, 2.9141e+00,
           6.9123e-01],
          [1.4407e+00, 2.5116e-02, 7.4854e-01, 1.0762e+00, 1.6351e+00,
           1.9801e+00, 2.0540e+00, 8.1841e-01, 3.8204e-01, 5.0908e-01,
           1.8406e+00, 4.3293e-01, 1.3324e+00, 1.2403e+00, 8.8788e-01,
           8.3574e-01],
          [1.8857e+00, 9.6920e-01, 5.7661e-01, 9.3769e-01, 2.7848e+00,
           2.7558e+00, 5.3805e-01, 8.2199e-01, 2.9960e+00, 1.5891e+00,
           2.1038e+00, 3.2453e-01, 0.0000e+00, 8.6025e-01, 1.0181e+00,
           3.2427e-01],
          [4.1157e-01, 2.4780e-01, 1.5202e+00, 1.4181e+00, 1.1927e+00,
           1.0242e+00, 1.6758e+00, 1.8885e-01, 1.2078e+00, 1.1525e+00,
           6.7438e-01, 7.0744e-01, 1.9301e+00, 1.7947e+00, 4.5500e-01,
           7.4568e-01],
          [4.7409e-01, 7.0774e-01, 1.7850e+00, 5.3570e-01, 7.5447e-01,
           6.3624e-01, 1.6894e+00, 2.4810e+00, 1.4118e+00, 9.4642e-01,
           1.6864e+00, 2.0303e+00, 1.7459e+00, 1.6975e+00, 1.3203e+00,
           5.2820e-01],
          [1.0397e+00, 1.7473e+00, 6.3975e-01, 1.0916e+00, 5.3648e-01,
           3.6318e-01, 1.4203e+00, 4.5922e-01, 9.2356e-01, 1.9278e+00,
           1.6481e+00, 0.0000e+00, 1.6905e-01, 7.3154e-01, 1.4631e-01,
           1.5262e+00],
          [1.5346e+00, 1.5577e+00, 2.1010e+00, 2.3737e-01, 1.1812e-01,
           1.1347e+00, 8.5649e-01, 4.9524e-01, 2.5998e-01, 1.4694e+00,
           4.0430e-02, 3.1728e-01, 1.6530e+00, 1.4053e+00, 0.0000e+00,
           0.0000e+00],
          [7.8498e-01, 1.3161e+00, 4.1121e-02, 1.4767e+00, 3.7490e-01,
           7.9885e-02, 6.3194e-01, 5.4181e-01, 0.0000e+00, 1.6258e+00,
           1.5183e+00, 9.4549e-01, 2.0483e+00, 8.3504e-01, 5.5345e-01,
           1.0281e+00],
          [1.9770e+00, 0.0000e+00, 6.2192e-01, 1.1993e+00, 2.3745e-01,
           5.0331e-01, 2.5564e-01, 1.5618e+00, 0.0000e+00, 6.8425e-01,
           1.2976e+00, 0.0000e+00, 7.3406e-01, 5.7446e-01, 4.1078e-01,
           5.8945e-01],
          [1.0692e+00, 3.7381e-01, 0.0000e+00, 1.0879e+00, 1.2522e+00,
           7.2070e-01, 7.4095e-01, 2.1566e+00, 2.3931e+00, 1.9575e+00,
           6.3402e-01, 2.2637e+00, 2.0668e+00, 7.0902e-01, 1.3994e+00,
           2.9713e-01],
          [1.6666e+00, 1.5614e+00, 1.4339e+00, 1.2256e+00, 1.0994e+00,
           1.3438e+00, 4.6099e-01, 1.1600e+00, 0.0000e+00, 1.7972e+00,
           4.5944e-01, 1.6028e+00, 8.7253e-01, 2.0512e+00, 1.2268e+00,
           1.1026e+00],
          [2.0417e-01, 8.1813e-01, 3.4097e-01, 1.0318e+00, 8.2422e-01,
           6.2255e-01, 1.7539e+00, 7.2639e-01, 7.1692e-01, 3.0562e-01,
           8.2076e-02, 9.2690e-01, 0.0000e+00, 1.1289e+00, 6.7399e-03,
           2.7938e-01],
          [6.2884e-01, 1.0318e+00, 1.3740e+00, 6.4440e-01, 1.8928e+00,
           2.4676e-01, 8.6510e-01, 1.9847e+00, 1.1753e+00, 1.3478e+00,
           2.1771e+00, 6.6161e-01, 1.1153e+00, 1.2611e+00, 5.6412e-02,
           1.2764e+00]],

         [[8.4535e-01, 1.2713e+00, 3.2505e-01, 2.1295e+00, 1.0983e+00,
           7.1581e-01, 1.4464e+00, 1.3500e+00, 7.4380e-01, 1.0179e+00,
           1.5031e+00, 2.4029e+00, 1.5067e+00, 4.3123e-01, 2.1566e+00,
           9.8595e-01],
          [2.2803e+00, 9.3886e-01, 6.1679e-01, 1.5043e+00, 6.6831e-02,
           1.3480e+00, 2.5359e+00, 1.7073e-01, 0.0000e+00, 0.0000e+00,
           2.0223e+00, 0.0000e+00, 4.8401e-01, 8.5894e-01, 1.5473e+00,
           2.2720e+00],
          [1.3795e+00, 0.0000e+00, 7.2062e-01, 7.9556e-01, 1.1812e+00,
           5.3636e-01, 7.0909e-01, 2.3223e+00, 9.2986e-01, 4.0732e-01,
           9.1261e-01, 8.5676e-01, 5.6985e-01, 1.0556e+00, 1.6624e+00,
           5.6213e-01],
          [4.6194e-01, 2.2147e+00, 1.7407e+00, 9.7482e-02, 8.4695e-01,
           1.5513e+00, 2.6686e-01, 1.0797e+00, 6.5428e-01, 1.1288e+00,
           7.0763e-01, 0.0000e+00, 8.6340e-01, 1.1571e+00, 1.2674e-01,
           1.0286e+00],
          [2.5809e+00, 6.4129e-01, 5.6849e-01, 3.2439e-01, 9.9477e-01,
           7.3881e-01, 8.5543e-01, 6.6640e-01, 1.8223e+00, 1.1780e+00,
           8.2314e-01, 0.0000e+00, 6.6737e-01, 1.8070e+00, 1.1357e+00,
           7.8354e-01],
          [5.4273e-01, 1.0962e+00, 1.3510e+00, 0.0000e+00, 4.0583e-01,
           1.1607e+00, 3.7080e-01, 2.4916e+00, 1.7309e+00, 1.3189e+00,
           1.8835e-01, 1.3921e+00, 6.1736e-01, 6.5980e-01, 7.6112e-01,
           1.0368e+00],
          [7.6584e-01, 9.9377e-02, 3.1900e-01, 2.0445e+00, 1.7836e+00,
           1.2967e+00, 1.4245e+00, 2.8656e-01, 2.1720e+00, 1.3357e+00,
           2.4553e-01, 4.2525e-01, 7.4474e-01, 2.2179e+00, 6.3159e-01,
           1.4964e+00],
          [1.4638e-01, 0.0000e+00, 3.5507e-02, 6.6275e-01, 1.1638e+00,
           0.0000e+00, 1.7473e+00, 1.6180e+00, 1.7307e+00, 9.4517e-01,
           1.2988e+00, 6.1380e-01, 1.5952e+00, 9.1716e-01, 1.6947e-01,
           2.2332e-01],
          [7.9112e-01, 2.5120e+00, 1.7207e+00, 5.3009e-01, 1.8912e+00,
           1.1411e+00, 0.0000e+00, 7.0345e-01, 1.3258e+00, 2.1393e+00,
           7.7148e-01, 7.2462e-01, 1.6040e+00, 0.0000e+00, 2.1854e+00,
           1.9753e+00],
          [0.0000e+00, 5.7971e-01, 5.3069e-01, 7.2873e-01, 6.1130e-01,
           1.7686e+00, 5.6605e-01, 1.3313e+00, 0.0000e+00, 1.4976e+00,
           1.2020e+00, 1.3926e+00, 9.1229e-01, 9.6484e-01, 1.1978e+00,
           1.8003e+00],
          [1.5714e+00, 8.1627e-01, 1.0964e+00, 1.7959e+00, 1.8263e-01,
           5.9610e-01, 4.3006e-01, 1.2574e+00, 6.0595e-01, 1.4956e+00,
           1.5332e+00, 4.5167e-02, 9.5684e-01, 1.2650e+00, 2.3611e+00,
           7.2207e-01],
          [1.2441e-02, 9.4799e-01, 2.0314e+00, 1.1529e+00, 2.4306e-02,
           1.0588e+00, 1.1468e+00, 6.6405e-01, 8.8560e-01, 4.7038e-01,
           7.9901e-02, 7.4787e-01, 1.0875e-01, 1.7595e+00, 3.1600e-01,
           1.9515e+00],
          [1.8307e+00, 1.1155e+00, 2.0368e+00, 5.9707e-01, 1.3241e+00,
           1.1649e+00, 1.9685e+00, 1.7288e-01, 8.4870e-01, 2.2751e+00,
           1.5266e+00, 0.0000e+00, 0.0000e+00, 1.3848e-01, 1.0679e+00,
           1.9382e+00],
          [1.8596e+00, 0.0000e+00, 1.9500e+00, 1.1945e+00, 5.6856e-01,
           7.7236e-01, 1.0528e+00, 1.9164e+00, 2.4436e-01, 1.1342e+00,
           1.0681e+00, 2.0615e-01, 6.0839e-01, 1.1314e+00, 7.8602e-02,
           1.5463e+00],
          [1.3776e+00, 1.2182e+00, 2.0474e+00, 3.7475e-01, 1.2389e+00,
           1.2328e+00, 3.4460e-01, 5.3811e-01, 7.3823e-02, 8.8471e-01,
           2.8430e+00, 1.0201e+00, 6.3829e-01, 1.6121e+00, 3.8058e-01,
           1.4489e+00],
          [2.0293e+00, 6.8908e-02, 9.1656e-01, 1.1407e+00, 5.3600e-01,
           1.0928e+00, 1.3299e+00, 4.0834e-01, 1.6274e+00, 1.4522e+00,
           3.2551e-01, 9.3244e-01, 1.3399e+00, 4.1573e-01, 7.2312e-01,
           9.9371e-01]],

         [[1.3524e+00, 7.4462e-01, 5.3312e-01, 1.6779e+00, 1.6016e-01,
           9.4804e-01, 9.7475e-01, 8.7725e-01, 1.0116e+00, 1.5230e-01,
           1.1428e+00, 1.9754e+00, 3.1629e+00, 1.6622e+00, 7.6905e-01,
           1.2006e+00],
          [9.8139e-01, 2.0707e+00, 1.2369e+00, 1.5184e+00, 8.1796e-01,
           1.6505e+00, 9.9424e-01, 4.1537e-01, 1.2362e+00, 5.8006e-01,
           1.1032e+00, 1.1926e+00, 1.8332e-01, 1.6764e+00, 3.2294e-01,
           1.4427e+00],
          [2.5360e+00, 6.8622e-01, 5.0785e-01, 3.0888e-01, 1.4295e+00,
           7.1403e-01, 7.7114e-01, 1.1926e+00, 1.9177e+00, 0.0000e+00,
           1.3635e+00, 4.5601e-01, 1.8046e+00, 5.7902e-01, 9.3942e-01,
           1.9512e+00],
          [6.7992e-01, 0.0000e+00, 1.5463e+00, 2.4774e-02, 1.1669e+00,
           1.2152e+00, 1.9077e+00, 7.1817e-01, 9.2401e-01, 1.1535e+00,
           1.1447e+00, 0.0000e+00, 1.2752e+00, 7.5354e-01, 1.6976e+00,
           0.0000e+00],
          [3.1657e-01, 1.4512e+00, 7.4655e-01, 9.4594e-01, 8.5755e-01,
           1.0950e+00, 2.2310e+00, 8.6764e-01, 1.0080e+00, 6.1759e-01,
           8.9840e-01, 4.9745e-02, 7.5745e-01, 9.8493e-01, 2.2809e+00,
           2.2578e+00],
          [8.0588e-01, 6.6926e-01, 3.4123e+00, 7.1663e-01, 1.6521e+00,
           1.7843e+00, 1.2698e+00, 6.1536e-01, 1.6769e+00, 0.0000e+00,
           0.0000e+00, 1.4378e+00, 6.5682e-01, 1.8278e+00, 2.7378e-03,
           5.1491e-01],
          [4.4477e-01, 1.7459e-01, 3.1853e-01, 1.0203e+00, 1.2344e+00,
           8.0377e-01, 1.1030e+00, 1.2717e+00, 1.5140e+00, 7.1170e-01,
           1.5180e+00, 8.0999e-01, 7.6319e-01, 1.3120e-01, 0.0000e+00,
           1.4767e+00],
          [1.0579e+00, 1.0713e+00, 1.2807e+00, 1.2753e+00, 9.8238e-01,
           1.0985e+00, 7.6609e-01, 1.3598e+00, 8.0547e-01, 6.1351e-01,
           8.7651e-01, 8.2785e-01, 0.0000e+00, 1.3809e+00, 1.4698e+00,
           8.7828e-01],
          [7.1713e-01, 0.0000e+00, 1.3614e+00, 3.9212e-01, 2.3930e-01,
           2.0180e+00, 7.2454e-01, 1.2772e+00, 8.5083e-01, 1.3527e+00,
           1.5488e+00, 1.1632e+00, 6.2162e-01, 1.9098e+00, 0.0000e+00,
           8.0390e-01],
          [1.6831e-01, 1.1056e+00, 4.2283e-01, 2.9784e-01, 1.6252e+00,
           7.7287e-01, 4.7610e-01, 1.1841e+00, 9.5978e-01, 2.0439e+00,
           3.7971e-01, 4.2715e-01, 8.7966e-01, 3.5988e+00, 1.7841e+00,
           4.1809e-01],
          [1.1628e+00, 0.0000e+00, 1.9892e+00, 1.6306e+00, 5.6773e-01,
           8.4661e-01, 1.4865e+00, 1.3938e+00, 5.0467e-01, 4.5035e-02,
           1.3350e+00, 5.5241e-01, 1.3691e+00, 1.1949e+00, 1.5717e+00,
           0.0000e+00],
          [2.2674e+00, 1.0484e+00, 1.7725e+00, 8.1300e-01, 1.9248e+00,
           1.5154e+00, 6.8132e-01, 1.4367e+00, 9.6534e-01, 1.7150e+00,
           2.0817e+00, 2.8088e-01, 1.0704e+00, 4.0120e-01, 9.1049e-01,
           2.7230e-01],
          [6.8038e-01, 1.7090e+00, 8.2139e-01, 1.2378e+00, 3.5873e-01,
           1.8994e-01, 2.5537e-01, 1.2322e+00, 2.7032e-01, 7.9598e-01,
           1.6438e+00, 1.1030e+00, 6.1402e-01, 1.2142e+00, 7.6677e-01,
           4.0773e-03],
          [3.6155e-01, 1.2249e+00, 8.5512e-01, 6.4748e-01, 3.1111e+00,
           6.8996e-01, 2.8163e+00, 3.3373e-01, 1.0191e+00, 9.3729e-01,
           1.6463e+00, 9.1258e-01, 1.4350e-02, 1.3726e+00, 6.5934e-01,
           9.0205e-01],
          [1.8352e-01, 1.0683e+00, 1.9201e+00, 4.9689e-01, 0.0000e+00,
           1.7838e+00, 5.4065e-01, 1.2808e+00, 1.1746e+00, 1.2348e+00,
           7.1493e-01, 1.5121e+00, 2.2278e-01, 0.0000e+00, 1.4372e+00,
           2.4915e+00],
          [2.6967e+00, 1.4218e+00, 1.4590e+00, 8.5556e-01, 9.4345e-01,
           1.4983e+00, 8.5317e-01, 6.3861e-01, 1.0972e+00, 1.2257e+00,
           3.4870e-01, 1.7971e+00, 6.2217e-01, 0.0000e+00, 1.7902e+00,
           7.8393e-01]]]])]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 16, 16] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 5, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 16], dtype=Float32, value=
[[[[1.37258983e+000, 0.00000000e+000, 1.75325978e+000 ... 2.01277971e+000, 2.00296474e+000, 2.09640503e+000],
   [3.20551664e-001, 1.57910180e+000, 1.69662023e+000 ... 5.14401555e-001, 1.19898462e+000, 4.54334885e-001],
   [6.89385593e-001, 9.38228607e-001, 9.10893440e-001 ... 6.71712756e-001, 1.33849037e+000, 1.65340054e+000],
   ...
   [1.66657460e+000, 1.56139016e+000, 1.43385112e+000 ... 2.05115175e+000, 1.22675765e+000, 1.10259938e+000],
   [2.04173476e-001, 8.18128765e-001, 3.40972245e-001 ... 1.12888885e+000, 6.73993584e-003, 2.79380709e-001],
   [6.28836095e-001, 1.03184009e+000, 1.37399459e+000 ... 1.26109290e+000, 5.64116426e-002, 1.27639294e+000]],
  [[8.45350802e-001, 1.27126443e+000, 3.25047523e-001 ... 4.31232005e-001, 2.15662885e+000, 9.85946655e-001],
   [2.28029203e+000, 9.38862503e-001, 6.16793096e-001 ... 8.58941078e-001, 1.54734933e+000, 2.27197957e+000],
   [1.37945354e+000, 0.00000000e+000, 7.20622361e-001 ... 1.05558050e+000, 1.66242266e+000, 5.62133253e-001],
   ...
   [1.85957348e+000, 0.00000000e+000, 1.95000017e+000 ... 1.13136399e+000, 7.86015615e-002, 1.54627955e+000],
   [1.37762547e+000, 1.21821773e+000, 2.04744363e+000 ... 1.61206830e+000, 3.80582392e-001, 1.44888628e+000],
   [2.02930140e+000, 6.89081699e-002, 9.16561425e-001 ... 4.15725857e-001, 7.23118722e-001, 9.93705451e-001]],
  [[1.35241914e+000, 7.44616151e-001, 5.33118665e-001 ... 1.66222203e+000, 7.69050896e-001, 1.20057821e+000],
   [9.81392682e-001, 2.07069802e+000, 1.23689806e+000 ... 1.67635155e+000, 3.22938234e-001, 1.44271147e+000],
   [2.53601360e+000, 6.86223507e-001, 5.07848620e-001 ... 5.79024494e-001, 9.39415932e-001, 1.95116639e+000],
   ...
   [3.61546814e-001, 1.22490120e+000, 8.55117083e-001 ... 1.37263048e+000, 6.59342229e-001, 9.02048647e-001],
   [1.83521613e-001, 1.06827128e+000, 1.92013681e+000 ... 0.00000000e+000, 1.43717408e+000, 2.49148440e+000],
   [2.69672155e+000, 1.42177296e+000, 1.45896077e+000 ... 0.00000000e+000, 1.79019678e+000, 7.83933699e-001]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:379

analyse output arrays in iter:439

pre layer res:
10:add
{'name': 'add', 'output': array([[[[ 2.71984965e-01,  2.42703176e+00,  1.88567173e+00,
           5.00155354e+00,  1.42703283e+00,  1.71848619e+00,
           1.10561514e+00,  7.88425863e-01,  1.46029210e+00,
           1.54197323e+00,  4.46673012e+00,  4.44606733e+00,
           2.94143391e+00,  2.92283821e+00,  1.00627673e+00,
           4.16502762e+00],
         [ 1.77631247e+00,  1.31126583e+00,  2.07792854e+00,
           4.95954752e+00,  2.14012098e+00,  6.93143368e+00,
           1.13166344e+00,  1.30452549e+00,  2.68878245e+00,
           2.39153481e+00,  1.72123969e+00,  5.42528450e-01,
           8.78979087e-01,  8.80235970e-01,  2.05893517e+00,
          -3.29425067e-01],
         [ 2.67993307e+00,  2.39889622e+00, -3.21193725e-01,
           1.43693900e+00,  9.21662390e-01,  8.00695240e-01,
           3.41308427e+00,  1.02760327e+00,  3.49846506e+00,
           3.02768874e+00,  5.62313890e+00,  1.64984798e+00,
           8.33655834e-01,  3.92273903e+00,  3.55595559e-01,
          -3.48516405e-01],
         [ 1.23777699e+00,  3.33596873e+00,  2.28770351e+00,
           9.77220058e-01,  2.24538779e+00,  3.26017880e+00,
           3.33973193e+00,  8.93988192e-01,  2.52528214e+00,
           3.07092309e+00,  1.77487981e+00,  2.68565226e+00,
           6.36679888e-01,  1.10598195e+00,  1.96072292e+00,
           2.68329024e+00],
         [ 2.73405242e+00,  2.12169600e+00,  3.11820626e+00,
           2.93321967e+00,  5.57871401e-01,  5.20842373e-01,
           4.05596584e-01, -5.45933127e-01,  1.68915021e+00,
           1.78180361e+00,  3.76799083e+00, -6.55515909e-01,
           7.78850019e-01,  9.11919415e-01,  1.57542610e+00,
           2.12102437e+00],
         [-8.22182894e-01,  2.84786439e+00,  6.38397789e+00,
           1.42823362e+00,  2.05547810e+00,  2.14349365e+00,
           2.39140606e+00,  1.57789910e+00,  1.03494036e+00,
           4.35569143e+00,  3.33874965e+00,  9.59258497e-01,
           5.73880672e-01,  2.33250976e+00,  1.44568110e+00,
           1.34601271e+00],
         [ 4.10699463e+00,  2.60298252e+00,  2.53382444e+00,
           1.10441244e+00,  1.84986222e+00,  1.92463613e+00,
           9.42407787e-01,  4.36769962e+00,  3.13105607e+00,
           8.85017157e-01,  4.54893398e+00,  1.23993468e+00,
           1.25982821e+00,  2.85391045e+00,  1.31663978e-01,
           1.93466222e+00],
         [ 3.18341351e+00,  6.93593621e-01,  1.92952335e+00,
           3.74434018e+00,  2.00258136e+00,  1.37784123e+00,
           2.59114116e-01,  3.82970166e+00, -5.40188253e-02,
           1.90750027e+00,  1.90636110e+00,  2.19389272e+00,
           1.89366198e+00,  1.74855053e+00,  1.61301875e+00,
           2.34000444e+00],
         [ 5.47648525e+00,  3.47007006e-01,  1.64128077e+00,
           1.72702003e+00,  2.30612087e+00,  1.97062695e+00,
           5.23080587e+00,  2.19591951e+00,  5.14589965e-01,
           2.85845971e+00,  1.80252862e+00,  2.37579274e+00,
           2.54997034e-02,  2.81742716e+00,  2.06359529e+00,
           2.81139302e+00],
         [ 1.01404762e+00,  3.37485623e+00,  9.39516485e-01,
           7.33627677e-02,  5.05133629e+00,  4.08553648e+00,
           5.21061361e-01,  1.84422159e+00,  5.81430972e-01,
           3.13150811e+00,  2.02973104e+00,  6.40903533e-01,
           2.76120543e+00, -5.65054305e-02,  4.01715612e+00,
           6.67711735e-01],
         [ 3.70187330e+00,  1.06118214e+00, -2.68903226e-02,
          -3.72946054e-01,  1.35952389e+00,  2.99945116e+00,
           1.98020673e+00,  2.90263486e+00,  1.78311706e+00,
           2.08560133e+00,  1.48011494e+00,  5.31777024e-01,
           4.54365492e+00,  4.32431030e+00,  2.27575707e+00,
          -3.14634323e-01],
         [ 2.15912628e+00,  9.41488802e-01, -1.54369271e+00,
           3.94606590e+00,  4.64087963e+00,  4.79577243e-01,
           1.36907089e+00,  3.51972294e+00,  2.84675503e+00,
           3.42124128e+00,  3.21861410e+00,  2.31829262e+00,
           2.59254050e+00, -4.64447960e-02,  2.28078723e+00,
           9.77364480e-01],
         [ 3.59144258e+00,  2.01120377e+00,  2.51256323e+00,
           1.56257439e+00,  3.52762270e+00,  1.27263844e-01,
           2.78695655e+00,  2.19604659e+00,  3.52677107e+00,
           1.25194860e+00,  6.92668974e-01,  5.11469173e+00,
           1.53011262e+00, -3.65123004e-01,  2.85929251e+00,
           9.02556181e-01],
         [ 4.15889883e+00,  1.11633122e+00,  2.64544034e+00,
           1.79181147e+00,  1.41725004e+00,  7.09787756e-02,
           1.47844517e+00,  4.02530241e+00,  9.94818509e-01,
           4.69984245e+00,  4.34248352e+00,  1.58457255e+00,
           2.41530395e+00,  4.17147970e+00,  4.45381641e+00,
           1.65967977e+00],
         [ 2.11137462e+00,  2.75950933e+00,  2.72944355e+00,
           2.41184521e+00,  3.77504206e+00, -6.33796930e-01,
           2.19936681e+00,  2.04440928e+00,  2.78699827e+00,
           3.22309613e-01,  1.71405584e-01,  1.88846397e+00,
           3.83484983e+00,  2.53556705e+00,  1.45144928e+00,
           2.68474030e+00],
         [ 2.88413048e+00,  4.35034096e-01,  4.52276325e+00,
           5.81328011e+00,  1.69191682e+00, -2.25657314e-01,
           1.88760996e+00,  5.16994333e+00,  3.75091404e-01,
           3.77425790e+00,  6.45446777e-01,  2.07730937e+00,
           5.83778799e-01,  3.69371581e+00,  2.08587217e+00,
          -1.65719792e-01]],

        [[ 6.56994224e-01,  2.04942060e+00, -7.96084642e-01,
           2.69394070e-01,  1.91065776e+00,  4.81479597e+00,
          -4.37804759e-02,  1.16159809e+00,  1.36589527e-03,
           1.69584620e+00, -2.65411317e-01,  4.90561438e+00,
           3.05105418e-01,  1.02210402e+00,  2.72047329e+00,
           3.40344667e+00],
         [ 1.58717453e+00,  2.00969934e+00, -6.28239632e-01,
           2.37121820e+00,  5.48187304e+00,  2.13403845e+00,
           4.10937697e-01,  2.60142660e+00,  4.64496076e-01,
           2.10626411e+00,  2.24612999e+00,  3.70267868e+00,
           1.65410781e+00,  1.99897397e+00,  2.02492189e+00,
           1.93150115e+00],
         [ 2.03892517e+00,  3.16448116e+00,  1.95955896e+00,
           2.43009067e+00,  3.50556588e+00,  3.25155544e+00,
           2.38045382e+00,  4.10809183e+00,  1.84201443e+00,
           3.68901205e+00,  3.86618614e-01, -9.71200585e-01,
           2.43925667e+00,  2.85405040e+00,  1.22464299e+00,
           2.74651098e+00],
         [ 3.94802719e-01,  6.80251956e-01,  3.84639353e-02,
           3.99643254e+00,  3.49404144e+00,  7.65398502e-01,
           3.29272056e+00, -5.60066223e-01,  1.38418591e+00,
           4.41366863e+00,  4.76716518e+00,  2.70325613e+00,
           3.82514191e+00,  1.84937000e-01, -6.53537869e-01,
           1.44961715e+00],
         [ 2.94457746e+00,  4.27113199e+00,  1.26809502e+00,
           1.17302084e+00,  1.34184396e+00,  4.16754693e-01,
           1.50317943e+00,  8.69963408e-01,  4.86686796e-01,
           7.49059856e-01,  2.55571365e+00,  1.45751846e+00,
           1.47788084e+00,  1.95160806e+00,  2.65731454e+00,
          -7.23886073e-01],
         [ 7.66228616e-01,  3.21198845e+00,  1.69202101e+00,
           3.30495334e+00,  1.96295619e+00,  1.34800577e+00,
           3.68981266e+00,  1.24464405e+00, -7.74098635e-02,
          -4.73149002e-01, -5.88174574e-02,  1.50727320e+00,
           1.50929296e+00,  1.52960694e+00, -3.39355707e-01,
           1.65173197e+00],
         [ 1.21690929e+00,  9.01133776e-01,  1.76376140e+00,
           1.89807367e+00,  2.62434673e+00,  3.80390906e+00,
           7.09456325e-01,  1.91088545e+00,  1.74817181e+00,
           1.80151677e+00,  3.69042802e+00,  1.26296103e+00,
           1.92673957e+00,  6.74916565e-01,  2.47130203e+00,
           9.99117911e-01],
         [ 2.69360828e+00,  2.72667813e+00,  3.97097540e+00,
           5.43823242e-01,  2.09587169e+00,  5.23687482e-01,
           4.52080917e+00,  2.71276188e+00,  4.11312628e+00,
           1.72144198e+00,  3.54329848e+00,  2.37552240e-01,
           2.45700336e+00,  5.28884053e-01,  1.32008767e+00,
           2.82289410e+00],
         [ 3.10697198e+00,  2.75880575e+00,  1.35524440e+00,
           2.56097126e+00,  3.13179898e+00,  5.27594507e-01,
           1.98532987e+00,  1.19088352e+00,  6.28360987e+00,
           7.30163932e-01,  4.27850008e+00,  2.25592566e+00,
           1.67753708e+00,  2.10509038e+00,  3.38204575e+00,
           2.76420784e+00],
         [ 3.85906720e+00,  3.81658983e+00,  1.15096128e+00,
           1.91508770e+00,  9.31677341e-01,  1.62532854e+00,
           1.53881833e-01,  2.89756298e+00,  1.62118733e+00,
           2.17930365e+00,  5.44310391e-01,  2.07868028e+00,
           3.25171185e+00,  1.64601111e+00,  3.37995434e+00,
          -4.57351118e-01],
         [ 1.68255463e-01,  2.20951700e+00,  3.79559493e+00,
           4.29915142e+00,  1.00108218e+00,  3.79753089e+00,
           2.07099175e+00,  1.40842402e+00,  8.69043827e-01,
           2.94094253e+00,  2.79069519e+00,  2.14126730e+00,
           3.63195348e+00,  1.82304394e+00,  5.24221754e+00,
           1.09513068e+00],
         [ 2.32008123e+00,  1.05862105e+00,  1.88840532e+00,
           2.34288979e+00,  3.71733856e+00,  4.94893581e-01,
           9.79158878e-01,  1.79538286e+00,  1.91528237e+00,
           2.69661844e-01,  1.17318916e+00, -1.08743943e-01,
           2.66168642e+00,  2.28854346e+00,  3.76125455e+00,
           2.12537742e+00],
         [ 3.53206325e+00,  7.22967386e-02,  3.37082505e+00,
           2.04490137e+00,  1.99836755e+00,  4.68871802e-01,
           2.76235127e+00,  6.49353683e-01,  2.68391562e+00,
           4.86499071e+00,  3.12527704e+00,  2.29147530e+00,
           1.74039602e+00,  2.51683283e+00,  1.96044540e+00,
           3.61201978e+00],
         [ 4.04303217e+00,  1.47847295e+00,  2.52673817e+00,
           2.57714748e+00,  5.20296669e+00,  1.74297214e+00,
           2.33083412e-01,  3.08116722e+00,  2.08192682e+00,
           9.55261648e-01,  3.13834405e+00,  2.22401118e+00,
           2.36052418e+00,  8.73156130e-01,  5.37100220e+00,
           3.57191086e+00],
         [ 2.60053134e+00,  4.24595356e+00,  1.34565675e+00,
           3.78159380e+00,  3.47032499e+00,  1.24381387e+00,
           5.09912634e+00,  1.98400366e+00,  1.14457572e+00,
           1.65698946e+00,  2.72392464e+00,  4.09047651e+00,
           1.41183436e+00,  9.65633094e-01,  1.31074727e+00,
           1.84025192e+00],
         [-2.49208584e-01,  2.76740217e+00,  2.61711383e+00,
           2.26563111e-01,  3.39483047e+00,  8.15962732e-01,
           3.71603990e+00,  4.58740234e+00, -2.73021489e-01,
           3.00564384e+00,  2.91288710e+00,  4.78855848e-01,
           3.73460364e+00, -3.93489888e-03,  2.02028155e+00,
           4.17683887e+00]],

        [[ 1.86733103e+00,  2.46975350e+00, -5.61079323e-01,
           1.18702926e-01,  4.51463413e+00,  5.00637341e+00,
           9.93381321e-01,  5.00960445e+00,  2.18618274e+00,
           7.59061515e-01,  1.55044687e+00,  1.55927610e+00,
           2.19339943e+00,  1.53499806e+00,  1.98763049e+00,
           2.58593845e+00],
         [-1.43285962e-02,  2.69898510e+00,  1.31842339e+00,
           2.63217735e+00,  3.20989341e-01,  2.04899049e+00,
           2.50968170e+00,  1.40037417e+00,  2.59596229e+00,
           3.99929070e+00,  3.06294203e-01,  8.06015730e-01,
           1.58711159e+00,  2.47122955e+00,  5.15873909e+00,
           4.41961884e-01],
         [ 3.17871213e+00,  1.96374929e+00,  2.55651426e+00,
           1.15064955e+00,  3.03239107e+00,  2.14919877e+00,
           1.15568995e+00,  1.43642676e+00,  8.34061861e-01,
           6.25226080e-01,  5.32923269e+00,  2.55226302e+00,
           4.81040430e+00,  1.98949337e+00,  5.21929502e+00,
           3.93373817e-01],
         [ 3.06179023e+00,  1.77152443e+00,  1.28484130e+00,
           2.14025116e+00,  2.98407888e+00,  2.15918136e+00,
          -5.10717571e-01,  2.11322761e+00, -8.11018109e-01,
          -8.71076062e-02,  1.33324599e+00,  8.54280889e-01,
           1.53462791e+00,  8.49212110e-01,  8.11283290e-01,
           4.31871796e+00],
         [ 3.08655167e+00,  3.35322475e+00,  2.72126985e+00,
           5.76672435e-01,  1.82834136e+00,  3.76136923e+00,
           1.77902544e+00,  1.71863174e+00,  1.67084479e+00,
           2.16100380e-01,  2.11997533e+00,  3.08324242e+00,
           3.06650591e+00,  2.05925798e+00,  3.27940822e+00,
           3.27784657e+00],
         [-9.42201726e-03,  2.54409575e+00,  8.01529944e-01,
           2.61389351e+00,  2.09783697e+00,  4.30771112e+00,
           1.16132867e+00,  1.27030182e+00,  9.03870046e-01,
           3.50871062e+00, -8.28950644e-01,  2.81225610e+00,
           2.01653504e+00,  3.07371688e+00,  1.72159064e+00,
          -5.49248829e-02],
         [ 2.01130772e+00,  6.78350568e-01,  4.49879599e+00,
           1.82969904e+00,  1.97142982e+00,  2.78883123e+00,
           1.37679803e+00,  2.86421061e+00,  2.20973110e+00,
           3.60542178e+00,  9.07462656e-01,  5.88204801e-01,
           2.06638670e+00,  1.46369946e+00,  1.00807416e+00,
           3.22710943e+00],
         [-3.20303708e-01,  7.98674345e-01,  1.66436088e+00,
           1.26355767e+00, -3.40262383e-01,  1.31938398e+00,
           1.85066140e+00,  3.23072171e+00,  4.61438656e+00,
           2.04627848e+00,  4.79084998e-01,  2.57851648e+00,
           2.86130118e+00,  1.89204812e+00,  3.70210600e+00,
           7.61750698e-01],
         [ 3.40087247e+00, -5.13687193e-01,  3.44808722e+00,
           2.66515303e+00,  1.80532408e+00,  1.57439351e+00,
           4.55678627e-02,  1.82575476e+00,  3.49640322e+00,
           2.69814610e+00,  1.16079831e+00,  1.78642964e+00,
           9.65383351e-01,  2.75444388e+00,  4.89799690e+00,
           2.01902771e+00],
         [ 2.68388343e+00,  2.27302647e+00, -1.48922890e-01,
           3.59784389e+00,  2.96929121e+00,  1.57608223e+00,
           2.38826299e+00,  3.15681957e-02,  2.36757255e+00,
           8.41334701e-01,  1.29255390e+00,  6.12145233e+00,
           2.82963443e+00,  2.55184031e+00,  3.34985137e+00,
           9.42688107e-01],
         [ 1.76409137e+00,  3.61113501e+00,  2.10226607e+00,
           1.16795647e+00, -3.73477221e-01,  1.48602080e+00,
           1.90093267e+00, -6.03187859e-01,  2.60881543e+00,
           8.60648632e-01,  3.63059855e+00,  3.96178722e+00,
           1.51525438e+00,  1.31584597e+00,  2.34711337e+00,
           1.48188877e+00],
         [ 1.39963865e-01,  1.52974975e+00,  5.84955156e-01,
           2.32896996e+00,  2.41110611e+00, -9.92487818e-02,
          -3.45959179e-02,  1.71121228e+00,  2.13850212e+00,
           2.47312284e+00,  2.27686986e-01,  2.53471446e+00,
           2.32541943e+00,  2.21960282e+00,  2.24458981e+00,
           1.35189518e-01],
         [ 1.53343797e+00,  2.98356223e+00,  1.12622905e+00,
           3.58820271e+00,  7.40209997e-01,  1.81877136e+00,
           2.92273593e+00,  5.46329212e+00,  3.40167212e+00,
           5.39490128e+00,  3.14715028e+00,  2.09950447e+00,
           8.59395862e-01,  4.29848671e+00,  4.82856601e-01,
           2.64767587e-01],
         [-1.54509202e-01,  1.15868676e+00,  4.77780676e+00,
           7.25796700e-01,  2.33266664e+00,  1.61661577e+00,
           3.90555859e+00,  1.12993860e+00,  1.78027463e+00,
           5.79711723e+00,  1.69181299e+00,  1.67762625e+00,
           3.05140257e+00,  8.57751727e-01,  6.46200299e-01,
           2.60893154e+00],
         [ 1.78888309e+00,  2.90751147e+00,  9.83989120e-01,
           1.01921976e+00,  3.57549691e+00,  1.87830758e+00,
           3.04309797e+00,  2.48713279e+00,  9.74828422e-01,
           3.76975846e+00,  1.72203779e+00, -7.09939539e-01,
           3.88277888e+00,  7.95753956e-01,  1.03977931e+00,
           2.36859512e+00],
         [ 6.21587515e+00,  2.40773916e+00,  2.79783583e+00,
           8.04524541e-01,  5.78458197e-02,  4.09229696e-01,
           2.70358872e+00,  3.13318753e+00,  2.49133015e+00,
           1.45778525e+00,  1.68242633e+00,  6.75544322e-01,
           4.66105986e+00,  2.39269733e+00,  6.35186553e-01,
           1.67838979e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 16]), 'from': [3, 1], 'to': [21]}
tf node:
{'name': 'log', 'output': array([[[[-1.30200851e+00,  8.86669040e-01,  6.34284139e-01,
           1.60974860e+00,  3.55597347e-01,  5.41443765e-01,
           1.00401863e-01, -2.37716898e-01,  3.78636479e-01,
           4.33062911e-01,  1.49665666e+00,  1.49202001e+00,
           1.07889724e+00,  1.07255507e+00,  6.25711028e-03,
           1.42672288e+00],
         [ 5.74539542e-01,  2.70992935e-01,  7.31371522e-01,
           1.60131454e+00,  7.60862350e-01,  1.93606663e+00,
           1.23688623e-01,  2.65839368e-01,  9.89088476e-01,
           8.71935368e-01,  5.43044806e-01, -6.11514747e-01,
          -1.28994167e-01, -1.27565265e-01,  7.22188950e-01,
                      nan],
         [ 9.85791802e-01,  8.75008702e-01,             nan,
           3.62515152e-01, -8.15762952e-02, -2.22274885e-01,
           1.22761631e+00,  2.72291675e-02,  1.25232434e+00,
           1.10779953e+00,  1.72689009e+00,  5.00683188e-01,
          -1.81934625e-01,  1.36679018e+00, -1.03396130e+00,
                      nan],
         [ 2.13317022e-01,  1.20476317e+00,  8.27548504e-01,
          -2.30434127e-02,  8.08878243e-01,  1.18178201e+00,
           1.20589054e+00, -1.12062708e-01,  9.26352799e-01,
           1.12197816e+00,  5.73732734e-01,  9.87923622e-01,
          -4.51488286e-01,  1.00733578e-01,  6.73313260e-01,
           9.87043738e-01],
         [ 1.00578487e+00,  7.52215743e-01,  1.13725793e+00,
           1.07610071e+00, -5.83626807e-01, -6.52307808e-01,
          -9.02396262e-01,             nan,  5.24225593e-01,
           5.77626109e-01,  1.32654190e+00,             nan,
          -2.49936789e-01, -9.22036543e-02,  4.54525769e-01,
           7.51899183e-01],
         [            nan,  1.04656935e+00,  1.85379136e+00,
           3.56438458e-01,  7.20508456e-01,  7.62437046e-01,
           8.71881485e-01,  4.56094265e-01,  3.43438052e-02,
           1.47148335e+00,  1.20559645e+00, -4.15946916e-02,
          -5.55333793e-01,  8.46944809e-01,  3.68580550e-01,
           2.97146678e-01],
         [ 1.41269147e+00,  9.56657887e-01,  9.29729819e-01,
           9.93134603e-02,  6.15111172e-01,  6.54736936e-01,
          -5.93172014e-02,  1.47423649e+00,  1.14137030e+00,
          -1.22148246e-01,  1.51489294e+00,  2.15058699e-01,
           2.30975375e-01,  1.04869008e+00, -2.02750230e+00,
           6.59932733e-01],
         [ 1.15795410e+00, -3.65869045e-01,  6.57272995e-01,
           1.32024539e+00,  6.94437027e-01,  3.20517957e-01,
          -1.35048676e+00,  1.34278691e+00,             nan,
           6.45793617e-01,  6.45196259e-01,  7.85677433e-01,
           6.38512492e-01,  5.58787167e-01,  4.78107423e-01,
           8.50152850e-01],
         [ 1.70046353e+00, -1.05841029e+00,  4.95476902e-01,
           5.46397388e-01,  8.35566819e-01,  6.78351760e-01,
           1.65456533e+00,  7.86600888e-01, -6.64384902e-01,
           1.05028296e+00,  5.89190483e-01,  8.65331173e-01,
          -3.66908836e+00,  1.03582406e+00,  7.24449754e-01,
           1.03368008e+00],
         [ 1.39498692e-02,  1.21635270e+00, -6.23899139e-02,
          -2.61233878e+00,  1.61965287e+00,  1.40745306e+00,
          -6.51887476e-01,  6.12057269e-01, -5.42263031e-01,
           1.14151478e+00,  7.07903266e-01, -4.44876313e-01,
           1.01566732e+00,             nan,  1.39057422e+00,
          -4.03898746e-01],
         [ 1.30883896e+00,  5.93835153e-02,             nan,
                      nan,  3.07134569e-01,  1.09842932e+00,
           6.83201253e-01,  1.06561887e+00,  5.78363001e-01,
           7.35057235e-01,  3.92119735e-01, -6.31531000e-01,
           1.51373172e+00,  1.46425271e+00,  8.22312772e-01,
                      nan],
         [ 7.69703627e-01, -6.02928251e-02,             nan,
           1.37271917e+00,  1.53490388e+00, -7.34850287e-01,
           3.14132333e-01,  1.25838232e+00,  1.04617977e+00,
           1.23000348e+00,  1.16895092e+00,  8.40830982e-01,
           9.52638268e-01,             nan,  8.24520648e-01,
          -2.28956360e-02],
         [ 1.27855396e+00,  6.98733449e-01,  9.21303451e-01,
           4.46334720e-01,  1.26062417e+00, -2.06149292e+00,
           1.02495015e+00,  7.86658764e-01,  1.26038277e+00,
           2.24701211e-01, -3.67203057e-01,  1.63211715e+00,
           4.25341338e-01,             nan,  1.05057418e+00,
          -1.02524340e-01],
         [ 1.42525029e+00,  1.10047609e-01,  9.72837567e-01,
           5.83227098e-01,  3.48718405e-01, -2.64537430e+00,
           3.90990973e-01,  1.39260006e+00, -5.19496202e-03,
           1.54752898e+00,  1.46844637e+00,  4.60314691e-01,
           8.81825149e-01,  1.42827082e+00,  1.49376130e+00,
           5.06624699e-01],
         [ 7.47339189e-01,  1.01505291e+00,  1.00409770e+00,
           8.80392075e-01,  1.32841158e+00,             nan,
           7.88169503e-01,  7.15108871e-01,  1.02496517e+00,
          -1.13224268e+00, -1.76372266e+00,  6.35763764e-01,
           1.34413028e+00,  9.30417299e-01,  3.72562557e-01,
           9.87583995e-01],
         [ 1.05922341e+00, -8.32330883e-01,  1.50912309e+00,
           1.76014495e+00,  5.25862098e-01,             nan,
           6.35311484e-01,  1.64286172e+00, -9.80585575e-01,
           1.32820380e+00, -4.37812537e-01,  7.31073499e-01,
          -5.38233161e-01,  1.30663300e+00,  7.35187054e-01,
                      nan]],

        [[-4.20080066e-01,  7.17557132e-01,             nan,
          -1.31158006e+00,  6.47447586e-01,  1.57169366e+00,
                      nan,  1.49796724e-01, -6.59594536e+00,
           5.28181851e-01,             nan,  1.59038031e+00,
          -1.18709791e+00,  2.18632724e-02,  1.00080585e+00,
           1.22478867e+00],
         [ 4.61955428e-01,  6.97985113e-01,             nan,
           8.63403857e-01,  1.70144677e+00,  7.58016169e-01,
          -8.89313698e-01,  9.56059992e-01, -7.66802192e-01,
           7.44915843e-01,  8.09208751e-01,  1.30905652e+00,
           5.03261805e-01,  6.92634046e-01,  7.05531120e-01,
           6.58297479e-01],
         [ 7.12422788e-01,  1.15198910e+00,  6.72719419e-01,
           8.87928605e-01,  1.25435197e+00,  1.17913353e+00,
           8.67291152e-01,  1.41295862e+00,  6.10859752e-01,
           1.30535865e+00, -9.50316548e-01,             nan,
           8.91693354e-01,  1.04873919e+00,  2.02649370e-01,
           1.01033139e+00],
         [-9.29369092e-01, -3.85292023e-01, -3.25803423e+00,
           1.38540208e+00,  1.25105906e+00, -2.67358661e-01,
           1.19171417e+00,             nan,  3.25112164e-01,
           1.48470628e+00,  1.56175184e+00,  9.94457006e-01,
           1.34159553e+00, -1.68774009e+00,             nan,
           3.71299475e-01],
         [ 1.07996535e+00,  1.45187891e+00,  2.37515792e-01,
           1.59582332e-01,  2.94044763e-01, -8.75257492e-01,
           4.07582492e-01, -1.39304131e-01, -7.20134497e-01,
          -2.88936377e-01,  9.38331485e-01,  3.76735300e-01,
           3.90609205e-01,  6.68653667e-01,  9.77316022e-01,
                      nan],
         [-2.66274691e-01,  1.16689014e+00,  5.25923669e-01,
           1.19542241e+00,  6.74451590e-01,  2.98626274e-01,
           1.30557573e+00,  2.18849584e-01,             nan,
                      nan,             nan,  4.10302192e-01,
           4.11641300e-01,  4.25010800e-01,             nan,
           5.01824439e-01],
         [ 1.96314275e-01, -1.04101554e-01,  5.67448676e-01,
           6.40839517e-01,  9.64832008e-01,  1.33602929e+00,
          -3.43256354e-01,  6.47566736e-01,  5.58570564e-01,
           5.88628948e-01,  1.30574250e+00,  2.33458996e-01,
           6.55829251e-01, -3.93166214e-01,  9.04745162e-01,
          -8.82478431e-04],
         [ 9.90881681e-01,  1.00308406e+00,  1.37901175e+00,
          -6.09130979e-01,  7.39969552e-01, -6.46860182e-01,
           1.50869095e+00,  9.97967243e-01,  1.41418338e+00,
           5.43162286e-01,  1.26505804e+00, -1.43736768e+00,
           8.98942471e-01, -6.36986077e-01,  2.77698159e-01,
           1.03776264e+00],
         [ 1.13364863e+00,  1.01479793e+00,  3.03981811e-01,
           9.40386593e-01,  1.14160764e+00, -6.39427245e-01,
           6.85785055e-01,  1.74695492e-01,  1.83794463e+00,
          -3.14486206e-01,  1.45360255e+00,  8.13560367e-01,
           5.17326713e-01,  7.44358420e-01,  1.21848083e+00,
           1.01675415e+00],
         [ 1.35042548e+00,  1.33935726e+00,  1.40597492e-01,
           6.49763405e-01, -7.07687214e-02,  4.85709965e-01,
          -1.87157035e+00,  1.06387007e+00,  4.83158797e-01,
           7.79005408e-01, -6.08235598e-01,  7.31733203e-01,
           1.17918158e+00,  4.98354852e-01,  1.21786225e+00,
                      nan],
         [-1.78227186e+00,  7.92773962e-01,  1.33384120e+00,
           1.45841765e+00,  1.08159683e-03,  1.33435106e+00,
           7.28027582e-01,  3.42471361e-01, -1.40361726e-01,
           1.07873011e+00,  1.02629077e+00,  7.61397839e-01,
           1.28977060e+00,  6.00507617e-01,  1.65674460e+00,
           9.08737034e-02],
         [ 8.41602206e-01,  5.69671653e-02,  6.35732710e-01,
           8.51385117e-01,  1.31300795e+00, -7.03412533e-01,
          -2.10613627e-02,  5.85218310e-01,  6.49865091e-01,
          -1.31058657e+00,  1.59725815e-01,             nan,
           9.78959918e-01,  8.27915549e-01,  1.32475257e+00,
           7.53949404e-01],
         [ 1.26188219e+00, -2.62697625e+00,  1.21515751e+00,
           7.15349555e-01,  6.92330599e-01, -7.57425904e-01,
           1.01608229e+00, -4.31777745e-01,  9.87276793e-01,
           1.58206487e+00,  1.13952291e+00,  8.29195857e-01,
           5.54112673e-01,  9.23001289e-01,  6.73171699e-01,
           1.28426707e+00],
         [ 1.39699495e+00,  3.91009778e-01,  9.26929235e-01,
           9.46683168e-01,  1.64922905e+00,  5.55591762e-01,
          -1.45635891e+00,  1.12530851e+00,  7.33293831e-01,
          -4.57700007e-02,  1.14369535e+00,  7.99312413e-01,
           8.58883739e-01, -1.35640889e-01,  1.68101454e+00,
           1.27310073e+00],
         [ 9.55715775e-01,  1.44596648e+00,  2.96882182e-01,
           1.33014560e+00,  1.24424827e+00,  2.18182370e-01,
           1.62906921e+00,  6.85116887e-01,  1.35034010e-01,
           5.05002379e-01,  1.00207376e+00,  1.40866148e+00,
           3.44889820e-01, -3.49713378e-02,  2.70597398e-01,
           6.09902501e-01],
         [            nan,  1.01790905e+00,  9.62072134e-01,
          -1.48473179e+00,  1.22225380e+00, -2.03386605e-01,
           1.31265855e+00,  1.52331388e+00,             nan,
           1.10049176e+00,  1.06914473e+00, -7.36355662e-01,
           1.31764174e+00,             nan,  7.03236878e-01,
           1.42955470e+00]],

        [[ 6.24510169e-01,  9.04118359e-01,             nan,
          -2.13113141e+00,  1.50732410e+00,  1.61071181e+00,
          -6.64067920e-03,  1.61135697e+00,  7.82157004e-01,
          -2.75672466e-01,  4.38543200e-01,  4.44221675e-01,
           7.85452604e-01,  4.28529114e-01,  6.86943233e-01,
           9.50088501e-01],
         [            nan,  9.92875814e-01,  2.76436627e-01,
           9.67811406e-01, -1.13634741e+00,  7.17347205e-01,
           9.20155942e-01,  3.36739480e-01,  9.53957260e-01,
           1.38611698e+00, -1.18320918e+00, -2.15652019e-01,
           4.61915761e-01,  9.04715836e-01,  1.64069223e+00,
          -8.16531658e-01],
         [ 1.15647614e+00,  6.74855530e-01,  9.38644707e-01,
           1.40326604e-01,  1.10935140e+00,  7.65095115e-01,
           1.44697532e-01,  3.62158626e-01, -1.81447700e-01,
          -4.69641984e-01,  1.67320728e+00,  9.36980426e-01,
           1.57078111e+00,  6.87880039e-01,  1.65236235e+00,
          -9.32994962e-01],
         [ 1.11899972e+00,  5.71840405e-01,  2.50635207e-01,
           7.60923207e-01,  1.09329116e+00,  7.69729137e-01,
                      nan,  7.48216450e-01,             nan,
                      nan,  2.87616551e-01, -1.57495230e-01,
           4.28287953e-01, -1.63446292e-01, -2.09137976e-01,
           1.46295857e+00],
         [ 1.12705445e+00,  1.20992255e+00,  1.00109863e+00,
          -5.50480843e-01,  6.03409171e-01,  1.32478309e+00,
           5.76065719e-01,  5.41528463e-01,  5.13329387e-01,
          -1.53201222e+00,  7.51404464e-01,  1.12598181e+00,
           1.12053871e+00,  7.22345710e-01,  1.18766296e+00,
           1.18718672e+00],
         [            nan,  9.33775306e-01, -2.21232951e-01,
           9.60840881e-01,  7.40906775e-01,  1.46040666e+00,
           1.49564758e-01,  2.39254519e-01, -1.01069681e-01,
           1.25524867e+00,             nan,  1.03398705e+00,
           7.01380730e-01,  1.12288761e+00,  5.43248653e-01,
                      nan],
         [ 6.98785126e-01, -3.88091058e-01,  1.50380981e+00,
           6.04151487e-01,  6.78759098e-01,  1.02562261e+00,
           3.19760531e-01,  1.05229282e+00,  7.92870820e-01,
           1.28243876e+00, -9.71028656e-02, -5.30680060e-01,
           7.25801528e-01,  3.80967110e-01,  8.04174319e-03,
           1.17158687e+00],
         [            nan, -2.24801987e-01,  5.09441197e-01,
           2.33931288e-01,             nan,  2.77164936e-01,
           6.15543067e-01,  1.17270553e+00,  1.52917898e+00,
           7.16022789e-01, -7.35877275e-01,  9.47214246e-01,
           1.05127645e+00,  6.37659907e-01,  1.30890191e+00,
          -2.72135943e-01],
         [ 1.22403204e+00,             nan,  1.23781967e+00,
           9.80261445e-01,  5.90740144e-01,  4.53870118e-01,
          -3.08855247e+00,  6.01993442e-01,  1.25173473e+00,
           9.92564917e-01,  1.49107963e-01,  5.80219030e-01,
          -3.52300033e-02,  1.01321554e+00,  1.58882630e+00,
           7.02616096e-01],
         [ 9.87264752e-01,  8.21112156e-01,             nan,
           1.28033471e+00,  1.08832324e+00,  4.54942167e-01,
           8.70566308e-01, -3.45560503e+00,  8.61865163e-01,
          -1.72765717e-01,  2.56620020e-01,  1.81179941e+00,
           1.04014754e+00,  9.36814785e-01,  1.20891595e+00,
          -5.90197966e-02],
         [ 5.67635775e-01,  1.28402209e+00,  7.43015826e-01,
           1.55255616e-01,             nan,  3.96101952e-01,
           6.42344654e-01,             nan,  9.58896279e-01,
          -1.50068954e-01,  1.28939748e+00,  1.37669528e+00,
           4.15583342e-01,  2.74479777e-01,  8.53186250e-01,
           3.93317461e-01],
         [-1.96637106e+00,  4.25104171e-01, -5.36220074e-01,
           8.45426083e-01,  8.80085588e-01,             nan,
                      nan,  5.37202060e-01,  7.60105610e-01,
           9.05481696e-01, -1.47978342e+00,  9.30081010e-01,
           8.43900442e-01,  7.97328293e-01,  8.08522820e-01,
          -2.00107765e+00],
         [ 4.27512258e-01,  1.09311795e+00,  1.18874930e-01,
           1.27765143e+00, -3.00821364e-01,  5.98161221e-01,
           1.07252014e+00,  1.69805157e+00,  1.22426713e+00,
           1.68545437e+00,  1.14649737e+00,  7.41701365e-01,
          -1.51525617e-01,  1.45826304e+00, -7.28035569e-01,
          -1.32890284e+00],
         [            nan,  1.47287264e-01,  1.56398165e+00,
          -3.20485324e-01,  8.47012103e-01,  4.80334938e-01,
           1.36240077e+00,  1.22163296e-01,  5.76767623e-01,
           1.75736070e+00,  5.25800705e-01,  5.17379880e-01,
           1.11560130e+00, -1.53440580e-01, -4.36645776e-01,
           9.58940744e-01],
         [ 5.81591487e-01,  1.06729758e+00, -1.61404386e-02,
           1.90373901e-02,  1.27410412e+00,  6.30371153e-01,
           1.11287606e+00,  9.11130548e-01, -2.54938006e-02,
           1.32701099e+00,  5.43508351e-01,             nan,
           1.35655105e+00, -2.28465244e-01,  3.90084833e-02,
           8.62296999e-01],
         [ 1.82710648e+00,  8.78688216e-01,  1.02884626e+00,
          -2.17503816e-01, -2.84997416e+00, -8.93478692e-01,
           9.94580030e-01,  1.14205086e+00,  9.12816763e-01,
           3.76918346e-01,  5.20236969e-01, -3.92236531e-01,
           1.53924286e+00,  8.72421324e-01, -4.53836560e-01,
           5.17834902e-01]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 16, 16]), 'from': [10], 'to': [13]}
ms node:
{'name': 'log', 'output': array([[[[-1.30201137e+00,  8.86667550e-01,  6.34284139e-01,
           1.60975134e+00,  3.55600208e-01,  5.41440487e-01,
           1.00402445e-01, -2.37719312e-01,  3.78636420e-01,
           4.33060706e-01,  1.49665725e+00,  1.49202049e+00,
           1.07889712e+00,  1.07255507e+00,  6.25567930e-03,
           1.42672634e+00],
         [ 5.74538589e-01,  2.70995766e-01,  7.31374919e-01,
           1.60131538e+00,  7.60859489e-01,  1.93606567e+00,
           1.23685464e-01,  2.65842170e-01,  9.89086568e-01,
           8.71933877e-01,  5.43043792e-01, -6.11517668e-01,
          -1.28995165e-01, -1.27566248e-01,  7.22187519e-01,
                      nan],
         [ 9.85789895e-01,  8.75007272e-01,             nan,
           3.62518013e-01, -8.15772787e-02, -2.22277284e-01,
           1.22761309e+00,  2.72277370e-02,  1.25232339e+00,
           1.10779727e+00,  1.72689295e+00,  5.00680745e-01,
          -1.81937918e-01,  1.36678874e+00, -1.03395844e+00,
                      nan],
         [ 2.13317826e-01,  1.20475984e+00,  8.27545345e-01,
          -2.30448432e-02,  8.08878839e-01,  1.18177962e+00,
           1.20588732e+00, -1.12063698e-01,  9.26355600e-01,
           1.12197602e+00,  5.73731720e-01,  9.87921715e-01,
          -4.51485485e-01,  1.00734152e-01,  6.73311830e-01,
           9.87041831e-01],
         [ 1.00578296e+00,  7.52219200e-01,  1.13725567e+00,
           1.07610059e+00, -5.83626211e-01, -6.52304411e-01,
          -9.02398646e-01,             nan,  5.24222314e-01,
           5.77625155e-01,  1.32654190e+00,             nan,
          -2.49939010e-01, -9.22046453e-02,  4.54523355e-01,
           7.51902580e-01],
         [            nan,  1.04657221e+00,  1.85378897e+00,
           3.56441319e-01,  7.20507026e-01,  7.62434125e-01,
           8.71879995e-01,  4.56091881e-01,  3.43472138e-02,
           1.47148049e+00,  1.20559311e+00, -4.15946692e-02,
          -5.55336952e-01,  8.46943378e-01,  3.68580490e-01,
           2.97144741e-01],
         [ 1.41269004e+00,  9.56660748e-01,  9.29732621e-01,
           9.93140340e-02,  6.15111172e-01,  6.54736936e-01,
          -5.93171827e-02,  1.47423363e+00,  1.14136791e+00,
          -1.22149237e-01,  1.51488972e+00,  2.15059504e-01,
           2.30978176e-01,  1.04869294e+00, -2.02749872e+00,
           6.59932792e-01],
         [ 1.15795159e+00, -3.65866184e-01,  6.57273054e-01,
           1.32024539e+00,  6.94435596e-01,  3.20520818e-01,
          -1.35048330e+00,  1.34278691e+00,             nan,
           6.45793676e-01,  6.45196259e-01,  7.85678029e-01,
           6.38512552e-01,  5.58786213e-01,  4.78105009e-01,
           8.50151360e-01],
         [ 1.70046163e+00, -1.05840743e+00,  4.95474488e-01,
           5.46396434e-01,  8.35563660e-01,  6.78350329e-01,
           1.65456820e+00,  7.86601424e-01, -6.64386332e-01,
           1.05028582e+00,  5.89189470e-01,  8.65329683e-01,
          -3.66909099e+00,  1.03582692e+00,  7.24453151e-01,
           1.03368294e+00],
         [ 1.39484387e-02,  1.21634948e+00, -6.23898916e-02,
          -2.61234021e+00,  1.61965561e+00,  1.40745163e+00,
          -6.51884079e-01,  6.12057328e-01, -5.42264521e-01,
           1.14151227e+00,  7.07901835e-01, -4.44873512e-01,
           1.01567018e+00,             nan,  1.39057279e+00,
          -4.03900653e-01],
         [ 1.30883896e+00,  5.93869239e-02,             nan,
                      nan,  3.07132632e-01,  1.09842932e+00,
           6.83199823e-01,  1.06561887e+00,  5.78361988e-01,
           7.35060632e-01,  3.92119676e-01, -6.31533921e-01,
           1.51372862e+00,  1.46424973e+00,  8.22309613e-01,
                      nan],
         [ 7.69700766e-01, -6.02928028e-02,             nan,
           1.37271774e+00,  1.53490245e+00, -7.34850287e-01,
           3.14130396e-01,  1.25838125e+00,  1.04618263e+00,
           1.23000014e+00,  1.16894841e+00,  8.40829492e-01,
           9.52641070e-01,             nan,  8.24517488e-01,
          -2.28970665e-02],
         [ 1.27855301e+00,  6.98732018e-01,  9.21306252e-01,
           4.46332306e-01,  1.26062322e+00, -2.06149435e+00,
           1.02495301e+00,  7.86659300e-01,  1.26038170e+00,
           2.24704027e-01, -3.67200226e-01,  1.63211989e+00,
           4.25339133e-01,             nan,  1.05057704e+00,
          -1.02525331e-01],
         [ 1.42525375e+00,  1.10048190e-01,  9.72835600e-01,
           5.83226085e-01,  3.48721266e-01, -2.64537764e+00,
           3.90990913e-01,  1.39259863e+00, -5.19639207e-03,
           1.54752755e+00,  1.46844351e+00,  4.60312277e-01,
           8.81823659e-01,  1.42827427e+00,  1.49376190e+00,
           5.06621420e-01],
         [ 7.47342646e-01,  1.01505578e+00,  1.00409579e+00,
           8.80390644e-01,  1.32841158e+00,             nan,
           7.88170099e-01,  7.15107441e-01,  1.02496803e+00,
          -1.13223982e+00, -1.76372457e+00,  6.35763824e-01,
           1.34413028e+00,  9.30420101e-01,  3.72562498e-01,
           9.87582088e-01],
         [ 1.05922341e+00, -8.32331836e-01,  1.50911999e+00,
           1.76014495e+00,  5.25858819e-01,             nan,
           6.35311484e-01,  1.64286458e+00, -9.80587780e-01,
           1.32820380e+00, -4.37809706e-01,  7.31076896e-01,
          -5.38234591e-01,  1.30663300e+00,  7.35190511e-01,
                      nan]],

        [[-4.20081973e-01,  7.17555702e-01,             nan,
          -1.31158292e+00,  6.47447586e-01,  1.57169223e+00,
                      nan,  1.49795234e-01, -6.59594250e+00,
           5.28178573e-01,             nan,  1.59038115e+00,
          -1.18709707e+00,  2.18618419e-02,  1.00080395e+00,
           1.22478533e+00],
         [ 4.61953014e-01,  6.97983682e-01,             nan,
           8.63402367e-01,  1.70144486e+00,  7.58013248e-01,
          -8.89316082e-01,  9.56062794e-01, -7.66802132e-01,
           7.44919240e-01,  8.09209287e-01,  1.30905652e+00,
           5.03259361e-01,  6.92632616e-01,  7.05529690e-01,
           6.58297539e-01],
         [ 7.12421358e-01,  1.15198672e+00,  6.72717988e-01,
           8.87927115e-01,  1.25435102e+00,  1.17913103e+00,
           8.67289662e-01,  1.41295719e+00,  6.10858798e-01,
           1.30535877e+00, -9.50318813e-01,             nan,
           8.91694129e-01,  1.04874206e+00,  2.02650174e-01,
           1.01032948e+00],
         [-9.29371476e-01, -3.85293961e-01, -3.25803351e+00,
           1.38540065e+00,  1.25105810e+00, -2.67360896e-01,
           1.19171178e+00,             nan,  3.25115025e-01,
           1.48470676e+00,  1.56175029e+00,  9.94455099e-01,
           1.34159565e+00, -1.68774009e+00,             nan,
           3.71299416e-01],
         [ 1.07996523e+00,  1.45187604e+00,  2.37518594e-01,
           1.59580857e-01,  2.94042826e-01, -8.75260770e-01,
           4.07580256e-01, -1.39305115e-01, -7.20135927e-01,
          -2.88936436e-01,  9.38334286e-01,  3.76735240e-01,
           3.90609145e-01,  6.68652236e-01,  9.77314115e-01,
                      nan],
         [-2.66276926e-01,  1.16688776e+00,  5.25920391e-01,
           1.19541991e+00,  6.74450159e-01,  2.98624367e-01,
           1.30557573e+00,  2.18850389e-01,             nan,
                      nan,             nan,  4.10299957e-01,
           4.11639094e-01,  4.25008565e-01,             nan,
           5.01821995e-01],
         [ 1.96312800e-01, -1.04102544e-01,  5.67447722e-01,
           6.40839517e-01,  9.64834809e-01,  1.33602929e+00,
          -3.43253493e-01,  6.47566736e-01,  5.58569551e-01,
           5.88627994e-01,  1.30574250e+00,  2.33461797e-01,
           6.55829251e-01, -3.93168122e-01,  9.04745936e-01,
          -8.83908942e-04],
         [ 9.90879714e-01,  1.00308216e+00,  1.37901032e+00,
          -6.09133899e-01,  7.39972949e-01, -6.46856785e-01,
           1.50868785e+00,  9.97965336e-01,  1.41418195e+00,
           5.43161333e-01,  1.26505709e+00, -1.43736768e+00,
           8.98943245e-01, -6.36982620e-01,  2.77696222e-01,
           1.03776550e+00],
         [ 1.13364637e+00,  1.01480079e+00,  3.03979874e-01,
           9.40389395e-01,  1.14160514e+00, -6.39423847e-01,
           6.85783625e-01,  1.74694002e-01,  1.83794224e+00,
          -3.14486265e-01,  1.45359957e+00,  8.13557208e-01,
           5.17323434e-01,  7.44361818e-01,  1.21847749e+00,
           1.01675701e+00],
         [ 1.35042548e+00,  1.33935738e+00,  1.40594333e-01,
           6.49763465e-01, -7.07686990e-02,  4.85707581e-01,
          -1.87156951e+00,  1.06386995e+00,  4.83156383e-01,
           7.79002488e-01, -6.08238518e-01,  7.31736600e-01,
           1.17917919e+00,  4.98352438e-01,  1.21785891e+00,
                      nan],
         [-1.78227377e+00,  7.92774498e-01,  1.33384120e+00,
           1.45841479e+00,  1.08016632e-03,  1.33435106e+00,
           7.28031039e-01,  3.42474222e-01, -1.40362710e-01,
           1.07873011e+00,  1.02629364e+00,  7.61394978e-01,
           1.28976965e+00,  6.00506604e-01,  1.65674746e+00,
           9.08742771e-02],
         [ 8.41600716e-01,  5.69705740e-02,  6.35732770e-01,
           8.51383626e-01,  1.31300795e+00, -7.03413963e-01,
          -2.10627951e-02,  5.85217297e-01,  6.49865091e-01,
          -1.31058943e+00,  1.59724340e-01,             nan,
           9.78958011e-01,  8.27912390e-01,  1.32475257e+00,
           7.53946483e-01],
         [ 1.26188123e+00, -2.62697768e+00,  1.21515429e+00,
           7.15348125e-01,  6.92329168e-01, -7.57425845e-01,
           1.01608503e+00, -4.31774944e-01,  9.87274885e-01,
           1.58206332e+00,  1.13952053e+00,  8.29192698e-01,
           5.54111719e-01,  9.23004091e-01,  6.73170269e-01,
           1.28426611e+00],
         [ 1.39699352e+00,  3.91009718e-01,  9.26932037e-01,
           9.46685970e-01,  1.64923179e+00,  5.55590808e-01,
          -1.45635891e+00,  1.12530625e+00,  7.33297229e-01,
          -4.57699783e-02,  1.14369285e+00,  7.99313009e-01,
           8.58882248e-01, -1.35641888e-01,  1.68101263e+00,
           1.27309978e+00],
         [ 9.55718577e-01,  1.44596982e+00,  2.96880275e-01,
           1.33014560e+00,  1.24424732e+00,  2.18183175e-01,
           1.62907207e+00,  6.85115397e-01,  1.35030851e-01,
           5.04999101e-01,  1.00207186e+00,  1.40866005e+00,
           3.44892681e-01, -3.49713117e-02,  2.70600230e-01,
           6.09901488e-01],
         [            nan,  1.01791191e+00,  9.62074935e-01,
          -1.48473275e+00,  1.22225058e+00, -2.03389004e-01,
           1.31265855e+00,  1.52331078e+00,             nan,
           1.10048962e+00,  1.06914461e+00, -7.36355662e-01,
           1.31764174e+00,             nan,  7.03235447e-01,
           1.42955816e+00]],

        [[ 6.24510169e-01,  9.04119134e-01,             nan,
          -2.13113141e+00,  1.50732100e+00,  1.61071455e+00,
          -6.64210971e-03,  1.61135983e+00,  7.82154083e-01,
          -2.75674671e-01,  4.38540965e-01,  4.44219470e-01,
           7.85453141e-01,  4.28526908e-01,  6.86941803e-01,
           9.50091302e-01],
         [            nan,  9.92873907e-01,  2.76434690e-01,
           9.67809498e-01, -1.13634455e+00,  7.17345774e-01,
           9.20158744e-01,  3.36742312e-01,  9.53960061e-01,
           1.38611555e+00, -1.18320835e+00, -2.15654433e-01,
           4.61913347e-01,  9.04716611e-01,  1.64069498e+00,
          -8.16532612e-01],
         [ 1.15647376e+00,  6.74854100e-01,  9.38647509e-01,
           1.40323445e-01,  1.10934925e+00,  7.65092194e-01,
           1.44694373e-01,  3.62161458e-01, -1.81450993e-01,
          -4.69639152e-01,  1.67320538e+00,  9.36983228e-01,
           1.57077968e+00,  6.87878609e-01,  1.65236521e+00,
          -9.32997346e-01],
         [ 1.11899757e+00,  5.71839452e-01,  2.50638008e-01,
           7.60920286e-01,  1.09329104e+00,  7.69726276e-01,
                      nan,  7.48219848e-01,             nan,
                      nan,  2.87614644e-01, -1.57498509e-01,
           4.28285718e-01, -1.63449571e-01, -2.09140390e-01,
           1.46295571e+00],
         [ 1.12705231e+00,  1.20991921e+00,  1.00109673e+00,
          -5.50484061e-01,  6.03408217e-01,  1.32478309e+00,
           5.76064706e-01,  5.41525185e-01,  5.13326049e-01,
          -1.53201330e+00,  7.51407862e-01,  1.12597954e+00,
           1.12053657e+00,  7.22344279e-01,  1.18766057e+00,
           1.18718421e+00],
         [            nan,  9.33778107e-01, -2.21235365e-01,
           9.60843682e-01,  7.40910232e-01,  1.46040380e+00,
           1.49563283e-01,  2.39257336e-01, -1.01070672e-01,
           1.25524759e+00,             nan,  1.03398991e+00,
           7.01379299e-01,  1.12288535e+00,  5.43247640e-01,
                      nan],
         [ 6.98783696e-01, -3.88092995e-01,  1.50381041e+00,
           6.04150534e-01,  6.78757668e-01,  1.02562547e+00,
           3.19763392e-01,  1.05229568e+00,  7.92871416e-01,
           1.28243780e+00, -9.71038491e-02, -5.30681551e-01,
           7.25804925e-01,  3.80967051e-01,  8.04031175e-03,
           1.17158437e+00],
         [            nan, -2.24804401e-01,  5.09437919e-01,
           2.33934104e-01,             nan,  2.77163029e-01,
           6.15543127e-01,  1.17270315e+00,  1.52917576e+00,
           7.16021359e-01, -7.35877216e-01,  9.47217047e-01,
           1.05127931e+00,  6.37659907e-01,  1.30890191e+00,
          -2.72138178e-01],
         [ 1.22402871e+00,             nan,  1.23781872e+00,
           9.80259538e-01,  5.90739131e-01,  4.53867704e-01,
          -3.08855271e+00,  6.01992488e-01,  1.25173378e+00,
           9.92563009e-01,  1.49106488e-01,  5.80218017e-01,
          -3.52299809e-02,  1.01321840e+00,  1.58882713e+00,
           7.02614665e-01],
         [ 9.87262845e-01,  8.21109056e-01,             nan,
           1.28033376e+00,  1.08832324e+00,  4.54939753e-01,
           8.70564818e-01, -3.45560646e+00,  8.61863732e-01,
          -1.72769010e-01,  2.56622851e-01,  1.81179714e+00,
           1.04015040e+00,  9.36817586e-01,  1.20891273e+00,
          -5.90197742e-02],
         [ 5.67634761e-01,  1.28402114e+00,  7.43019283e-01,
           1.55254140e-01,             nan,  3.96101892e-01,
           6.42344654e-01,             nan,  9.58899081e-01,
          -1.50069937e-01,  1.28939652e+00,  1.37669384e+00,
           4.15581107e-01,  2.74477869e-01,  8.53184760e-01,
           3.93317401e-01],
         [-1.96637046e+00,  4.25101936e-01, -5.36221564e-01,
           8.45424592e-01,  8.80084157e-01,             nan,
                      nan,  5.37198782e-01,  7.60102749e-01,
           9.05482471e-01, -1.47978449e+00,  9.30083811e-01,
           8.43898952e-01,  7.97328830e-01,  8.08523357e-01,
          -2.00108051e+00],
         [ 4.27510023e-01,  1.09311795e+00,  1.18871763e-01,
           1.27765048e+00, -3.00821424e-01,  5.98160207e-01,
           1.07252014e+00,  1.69804966e+00,  1.22426379e+00,
           1.68545234e+00,  1.14649498e+00,  7.41704762e-01,
          -1.51526615e-01,  1.45826018e+00, -7.28035569e-01,
          -1.32889950e+00],
         [            nan,  1.47285774e-01,  1.56398010e+00,
          -3.20485383e-01,  8.47010612e-01,  4.80332524e-01,
           1.36239934e+00,  1.22160137e-01,  5.76766670e-01,
           1.75736070e+00,  5.25797427e-01,  5.17376542e-01,
           1.11559916e+00, -1.53443873e-01, -4.36642945e-01,
           9.58943605e-01],
         [ 5.81590474e-01,  1.06729746e+00, -1.61418691e-02,
           1.90359596e-02,  1.27410316e+00,  6.30371153e-01,
           1.11287379e+00,  9.11131382e-01, -2.54952312e-02,
           1.32701099e+00,  5.43507338e-01,             nan,
           1.35654962e+00, -2.28467658e-01,  3.90118957e-02,
           8.62295508e-01],
         [ 1.82710433e+00,  8.78686726e-01,  1.02884901e+00,
          -2.17506215e-01, -2.84997416e+00, -8.93481076e-01,
           9.94578123e-01,  1.14204848e+00,  9.12817597e-01,
           3.76918286e-01,  5.20233691e-01, -3.92238438e-01,
           1.53924143e+00,  8.72419834e-01, -4.53833729e-01,
           5.17831564e-01]]]], dtype=float32), 'output_shape': (1, 3, 16, 16), 'from': [10], 'to': [13]}
torch node:
{'name': 'log', 'output': array([[[[-1.30200851e+00,  8.86669040e-01,  6.34284139e-01,
           1.60974860e+00,  3.55597347e-01,  5.41443765e-01,
           1.00401863e-01, -2.37716898e-01,  3.78636479e-01,
           4.33062911e-01,  1.49665666e+00,  1.49202001e+00,
           1.07889724e+00,  1.07255507e+00,  6.25711028e-03,
           1.42672288e+00],
         [ 5.74539542e-01,  2.70992935e-01,  7.31371522e-01,
           1.60131454e+00,  7.60862350e-01,  1.93606663e+00,
           1.23688623e-01,  2.65839368e-01,  9.89088476e-01,
           8.71935368e-01,  5.43044806e-01, -6.11514747e-01,
          -1.28994167e-01, -1.27565265e-01,  7.22188950e-01,
                      nan],
         [ 9.85791802e-01,  8.75008702e-01,             nan,
           3.62515152e-01, -8.15762952e-02, -2.22274885e-01,
           1.22761631e+00,  2.72291675e-02,  1.25232434e+00,
           1.10779953e+00,  1.72689009e+00,  5.00683188e-01,
          -1.81934625e-01,  1.36679018e+00, -1.03396130e+00,
                      nan],
         [ 2.13317022e-01,  1.20476317e+00,  8.27548504e-01,
          -2.30434127e-02,  8.08878243e-01,  1.18178201e+00,
           1.20589054e+00, -1.12062708e-01,  9.26352799e-01,
           1.12197816e+00,  5.73732734e-01,  9.87923622e-01,
          -4.51488286e-01,  1.00733578e-01,  6.73313260e-01,
           9.87043738e-01],
         [ 1.00578487e+00,  7.52215743e-01,  1.13725793e+00,
           1.07610071e+00, -5.83626807e-01, -6.52307808e-01,
          -9.02396262e-01,             nan,  5.24225593e-01,
           5.77626109e-01,  1.32654190e+00,             nan,
          -2.49936774e-01, -9.22036543e-02,  4.54525769e-01,
           7.51899183e-01],
         [            nan,  1.04656935e+00,  1.85379136e+00,
           3.56438458e-01,  7.20508456e-01,  7.62437046e-01,
           8.71881485e-01,  4.56094265e-01,  3.43438052e-02,
           1.47148335e+00,  1.20559645e+00, -4.15946916e-02,
          -5.55333793e-01,  8.46944809e-01,  3.68580550e-01,
           2.97146678e-01],
         [ 1.41269147e+00,  9.56657887e-01,  9.29729819e-01,
           9.93134603e-02,  6.15111172e-01,  6.54736936e-01,
          -5.93172014e-02,  1.47423649e+00,  1.14137030e+00,
          -1.22148246e-01,  1.51489294e+00,  2.15058699e-01,
           2.30975375e-01,  1.04869008e+00, -2.02750230e+00,
           6.59932733e-01],
         [ 1.15795410e+00, -3.65869045e-01,  6.57272995e-01,
           1.32024539e+00,  6.94437027e-01,  3.20517957e-01,
          -1.35048676e+00,  1.34278691e+00,             nan,
           6.45793617e-01,  6.45196259e-01,  7.85677433e-01,
           6.38512492e-01,  5.58787167e-01,  4.78107423e-01,
           8.50152850e-01],
         [ 1.70046353e+00, -1.05841029e+00,  4.95476902e-01,
           5.46397388e-01,  8.35566819e-01,  6.78351760e-01,
           1.65456533e+00,  7.86600888e-01, -6.64384902e-01,
           1.05028296e+00,  5.89190483e-01,  8.65331173e-01,
          -3.66908836e+00,  1.03582406e+00,  7.24449754e-01,
           1.03368008e+00],
         [ 1.39498692e-02,  1.21635270e+00, -6.23899139e-02,
          -2.61233878e+00,  1.61965287e+00,  1.40745306e+00,
          -6.51887476e-01,  6.12057269e-01, -5.42263031e-01,
           1.14151478e+00,  7.07903266e-01, -4.44876313e-01,
           1.01566732e+00,             nan,  1.39057422e+00,
          -4.03898716e-01],
         [ 1.30883896e+00,  5.93835153e-02,             nan,
                      nan,  3.07134569e-01,  1.09842932e+00,
           6.83201253e-01,  1.06561887e+00,  5.78363001e-01,
           7.35057235e-01,  3.92119735e-01, -6.31531000e-01,
           1.51373172e+00,  1.46425271e+00,  8.22312772e-01,
                      nan],
         [ 7.69703627e-01, -6.02928251e-02,             nan,
           1.37271905e+00,  1.53490388e+00, -7.34850287e-01,
           3.14132333e-01,  1.25838232e+00,  1.04617977e+00,
           1.23000348e+00,  1.16895092e+00,  8.40830982e-01,
           9.52638268e-01,             nan,  8.24520648e-01,
          -2.28956360e-02],
         [ 1.27855396e+00,  6.98733449e-01,  9.21303451e-01,
           4.46334720e-01,  1.26062417e+00, -2.06149292e+00,
           1.02495015e+00,  7.86658764e-01,  1.26038277e+00,
           2.24701211e-01, -3.67203057e-01,  1.63211715e+00,
           4.25341338e-01,             nan,  1.05057418e+00,
          -1.02524340e-01],
         [ 1.42525029e+00,  1.10047609e-01,  9.72837567e-01,
           5.83227098e-01,  3.48718405e-01, -2.64537430e+00,
           3.90990973e-01,  1.39260006e+00, -5.19496202e-03,
           1.54752898e+00,  1.46844637e+00,  4.60314691e-01,
           8.81825149e-01,  1.42827082e+00,  1.49376130e+00,
           5.06624699e-01],
         [ 7.47339189e-01,  1.01505291e+00,  1.00409770e+00,
           8.80392075e-01,  1.32841158e+00,             nan,
           7.88169503e-01,  7.15108871e-01,  1.02496517e+00,
          -1.13224268e+00, -1.76372266e+00,  6.35763764e-01,
           1.34413028e+00,  9.30417299e-01,  3.72562557e-01,
           9.87583995e-01],
         [ 1.05922341e+00, -8.32330883e-01,  1.50912309e+00,
           1.76014495e+00,  5.25862098e-01,             nan,
           6.35311484e-01,  1.64286172e+00, -9.80585575e-01,
           1.32820380e+00, -4.37812537e-01,  7.31073499e-01,
          -5.38233161e-01,  1.30663300e+00,  7.35187054e-01,
                      nan]],

        [[-4.20080066e-01,  7.17557132e-01,             nan,
          -1.31158006e+00,  6.47447586e-01,  1.57169366e+00,
                      nan,  1.49796724e-01, -6.59594536e+00,
           5.28181851e-01,             nan,  1.59038031e+00,
          -1.18709791e+00,  2.18632724e-02,  1.00080585e+00,
           1.22478867e+00],
         [ 4.61955428e-01,  6.97985113e-01,             nan,
           8.63403857e-01,  1.70144677e+00,  7.58016169e-01,
          -8.89313698e-01,  9.56059992e-01, -7.66802192e-01,
           7.44915843e-01,  8.09208751e-01,  1.30905652e+00,
           5.03261805e-01,  6.92634046e-01,  7.05531120e-01,
           6.58297479e-01],
         [ 7.12422788e-01,  1.15198910e+00,  6.72719419e-01,
           8.87928605e-01,  1.25435197e+00,  1.17913353e+00,
           8.67291152e-01,  1.41295862e+00,  6.10859752e-01,
           1.30535865e+00, -9.50316548e-01,             nan,
           8.91693354e-01,  1.04873919e+00,  2.02649370e-01,
           1.01033139e+00],
         [-9.29369092e-01, -3.85292023e-01, -3.25803423e+00,
           1.38540208e+00,  1.25105906e+00, -2.67358661e-01,
           1.19171417e+00,             nan,  3.25112164e-01,
           1.48470628e+00,  1.56175184e+00,  9.94457006e-01,
           1.34159553e+00, -1.68774009e+00,             nan,
           3.71299475e-01],
         [ 1.07996535e+00,  1.45187891e+00,  2.37515792e-01,
           1.59582332e-01,  2.94044763e-01, -8.75257492e-01,
           4.07582492e-01, -1.39304131e-01, -7.20134497e-01,
          -2.88936377e-01,  9.38331485e-01,  3.76735300e-01,
           3.90609205e-01,  6.68653667e-01,  9.77316022e-01,
                      nan],
         [-2.66274691e-01,  1.16689014e+00,  5.25923669e-01,
           1.19542241e+00,  6.74451590e-01,  2.98626304e-01,
           1.30557573e+00,  2.18849584e-01,             nan,
                      nan,             nan,  4.10302192e-01,
           4.11641300e-01,  4.25010800e-01,             nan,
           5.01824439e-01],
         [ 1.96314275e-01, -1.04101554e-01,  5.67448676e-01,
           6.40839517e-01,  9.64832008e-01,  1.33602929e+00,
          -3.43256354e-01,  6.47566736e-01,  5.58570564e-01,
           5.88628948e-01,  1.30574250e+00,  2.33458981e-01,
           6.55829251e-01, -3.93166214e-01,  9.04745162e-01,
          -8.82478431e-04],
         [ 9.90881681e-01,  1.00308406e+00,  1.37901175e+00,
          -6.09130979e-01,  7.39969552e-01, -6.46860182e-01,
           1.50869095e+00,  9.97967243e-01,  1.41418338e+00,
           5.43162286e-01,  1.26505804e+00, -1.43736768e+00,
           8.98942471e-01, -6.36986077e-01,  2.77698159e-01,
           1.03776264e+00],
         [ 1.13364863e+00,  1.01479793e+00,  3.03981811e-01,
           9.40386593e-01,  1.14160764e+00, -6.39427245e-01,
           6.85785055e-01,  1.74695492e-01,  1.83794463e+00,
          -3.14486206e-01,  1.45360255e+00,  8.13560367e-01,
           5.17326713e-01,  7.44358420e-01,  1.21848083e+00,
           1.01675415e+00],
         [ 1.35042548e+00,  1.33935726e+00,  1.40597492e-01,
           6.49763405e-01, -7.07687214e-02,  4.85709965e-01,
          -1.87157035e+00,  1.06387007e+00,  4.83158797e-01,
           7.79005408e-01, -6.08235598e-01,  7.31733203e-01,
           1.17918158e+00,  4.98354852e-01,  1.21786225e+00,
                      nan],
         [-1.78227186e+00,  7.92773962e-01,  1.33384120e+00,
           1.45841765e+00,  1.08159683e-03,  1.33435106e+00,
           7.28027582e-01,  3.42471361e-01, -1.40361726e-01,
           1.07873011e+00,  1.02629077e+00,  7.61397839e-01,
           1.28977060e+00,  6.00507617e-01,  1.65674460e+00,
           9.08737034e-02],
         [ 8.41602206e-01,  5.69671653e-02,  6.35732710e-01,
           8.51385117e-01,  1.31300795e+00, -7.03412533e-01,
          -2.10613627e-02,  5.85218310e-01,  6.49865031e-01,
          -1.31058657e+00,  1.59725815e-01,             nan,
           9.78959918e-01,  8.27915549e-01,  1.32475257e+00,
           7.53949404e-01],
         [ 1.26188219e+00, -2.62697625e+00,  1.21515751e+00,
           7.15349555e-01,  6.92330599e-01, -7.57425904e-01,
           1.01608229e+00, -4.31777745e-01,  9.87276793e-01,
           1.58206487e+00,  1.13952291e+00,  8.29195857e-01,
           5.54112673e-01,  9.23001289e-01,  6.73171699e-01,
           1.28426707e+00],
         [ 1.39699495e+00,  3.91009778e-01,  9.26929235e-01,
           9.46683168e-01,  1.64922905e+00,  5.55591762e-01,
          -1.45635891e+00,  1.12530851e+00,  7.33293831e-01,
          -4.57700007e-02,  1.14369535e+00,  7.99312413e-01,
           8.58883739e-01, -1.35640889e-01,  1.68101454e+00,
           1.27310073e+00],
         [ 9.55715775e-01,  1.44596648e+00,  2.96882182e-01,
           1.33014560e+00,  1.24424827e+00,  2.18182355e-01,
           1.62906921e+00,  6.85116827e-01,  1.35034010e-01,
           5.05002379e-01,  1.00207376e+00,  1.40866148e+00,
           3.44889820e-01, -3.49713378e-02,  2.70597398e-01,
           6.09902501e-01],
         [            nan,  1.01790905e+00,  9.62072134e-01,
          -1.48473167e+00,  1.22225380e+00, -2.03386605e-01,
           1.31265855e+00,  1.52331388e+00,             nan,
           1.10049176e+00,  1.06914473e+00, -7.36355662e-01,
           1.31764174e+00,             nan,  7.03236878e-01,
           1.42955470e+00]],

        [[ 6.24510169e-01,  9.04118359e-01,             nan,
          -2.13113141e+00,  1.50732410e+00,  1.61071181e+00,
          -6.64067920e-03,  1.61135697e+00,  7.82157004e-01,
          -2.75672466e-01,  4.38543200e-01,  4.44221675e-01,
           7.85452604e-01,  4.28529114e-01,  6.86943233e-01,
           9.50088501e-01],
         [            nan,  9.92875814e-01,  2.76436627e-01,
           9.67811406e-01, -1.13634741e+00,  7.17347205e-01,
           9.20155942e-01,  3.36739480e-01,  9.53957260e-01,
           1.38611698e+00, -1.18320918e+00, -2.15652019e-01,
           4.61915761e-01,  9.04715836e-01,  1.64069223e+00,
          -8.16531658e-01],
         [ 1.15647614e+00,  6.74855530e-01,  9.38644707e-01,
           1.40326604e-01,  1.10935140e+00,  7.65095115e-01,
           1.44697532e-01,  3.62158626e-01, -1.81447700e-01,
          -4.69641984e-01,  1.67320728e+00,  9.36980426e-01,
           1.57078111e+00,  6.87880039e-01,  1.65236235e+00,
          -9.32994962e-01],
         [ 1.11899972e+00,  5.71840405e-01,  2.50635207e-01,
           7.60923207e-01,  1.09329116e+00,  7.69729137e-01,
                      nan,  7.48216450e-01,             nan,
                      nan,  2.87616551e-01, -1.57495230e-01,
           4.28287953e-01, -1.63446292e-01, -2.09137976e-01,
           1.46295857e+00],
         [ 1.12705445e+00,  1.20992255e+00,  1.00109863e+00,
          -5.50480902e-01,  6.03409171e-01,  1.32478309e+00,
           5.76065719e-01,  5.41528463e-01,  5.13329387e-01,
          -1.53201222e+00,  7.51404464e-01,  1.12598181e+00,
           1.12053871e+00,  7.22345710e-01,  1.18766296e+00,
           1.18718672e+00],
         [            nan,  9.33775306e-01, -2.21232951e-01,
           9.60840881e-01,  7.40906775e-01,  1.46040666e+00,
           1.49564758e-01,  2.39254519e-01, -1.01069681e-01,
           1.25524867e+00,             nan,  1.03398705e+00,
           7.01380730e-01,  1.12288761e+00,  5.43248653e-01,
                      nan],
         [ 6.98785126e-01, -3.88091058e-01,  1.50380981e+00,
           6.04151487e-01,  6.78759098e-01,  1.02562261e+00,
           3.19760531e-01,  1.05229282e+00,  7.92870820e-01,
           1.28243876e+00, -9.71028656e-02, -5.30680060e-01,
           7.25801528e-01,  3.80967110e-01,  8.04174319e-03,
           1.17158687e+00],
         [            nan, -2.24801987e-01,  5.09441197e-01,
           2.33931288e-01,             nan,  2.77164936e-01,
           6.15543067e-01,  1.17270553e+00,  1.52917898e+00,
           7.16022789e-01, -7.35877275e-01,  9.47214246e-01,
           1.05127645e+00,  6.37659907e-01,  1.30890179e+00,
          -2.72135943e-01],
         [ 1.22403204e+00,             nan,  1.23781967e+00,
           9.80261445e-01,  5.90740144e-01,  4.53870118e-01,
          -3.08855247e+00,  6.01993442e-01,  1.25173473e+00,
           9.92564917e-01,  1.49107963e-01,  5.80219030e-01,
          -3.52300033e-02,  1.01321554e+00,  1.58882630e+00,
           7.02616036e-01],
         [ 9.87264752e-01,  8.21112156e-01,             nan,
           1.28033471e+00,  1.08832335e+00,  4.54942167e-01,
           8.70566308e-01, -3.45560503e+00,  8.61865163e-01,
          -1.72765717e-01,  2.56620020e-01,  1.81179941e+00,
           1.04014754e+00,  9.36814785e-01,  1.20891595e+00,
          -5.90197966e-02],
         [ 5.67635775e-01,  1.28402209e+00,  7.43015826e-01,
           1.55255616e-01,             nan,  3.96101952e-01,
           6.42344654e-01,             nan,  9.58896279e-01,
          -1.50068954e-01,  1.28939748e+00,  1.37669528e+00,
           4.15583342e-01,  2.74479777e-01,  8.53186250e-01,
           3.93317461e-01],
         [-1.96637094e+00,  4.25104171e-01, -5.36220074e-01,
           8.45426083e-01,  8.80085588e-01,             nan,
                      nan,  5.37202060e-01,  7.60105610e-01,
           9.05481696e-01, -1.47978342e+00,  9.30081010e-01,
           8.43900442e-01,  7.97328293e-01,  8.08522820e-01,
          -2.00107765e+00],
         [ 4.27512258e-01,  1.09311795e+00,  1.18874930e-01,
           1.27765143e+00, -3.00821364e-01,  5.98161221e-01,
           1.07252014e+00,  1.69805157e+00,  1.22426713e+00,
           1.68545437e+00,  1.14649737e+00,  7.41701365e-01,
          -1.51525617e-01,  1.45826304e+00, -7.28035569e-01,
          -1.32890284e+00],
         [            nan,  1.47287264e-01,  1.56398165e+00,
          -3.20485324e-01,  8.47012103e-01,  4.80334938e-01,
           1.36240077e+00,  1.22163296e-01,  5.76767623e-01,
           1.75736070e+00,  5.25800705e-01,  5.17379880e-01,
           1.11560130e+00, -1.53440580e-01, -4.36645776e-01,
           9.58940744e-01],
         [ 5.81591487e-01,  1.06729758e+00, -1.61404386e-02,
           1.90373901e-02,  1.27410412e+00,  6.30371153e-01,
           1.11287606e+00,  9.11130548e-01, -2.54938006e-02,
           1.32701099e+00,  5.43508351e-01,             nan,
           1.35655105e+00, -2.28465244e-01,  3.90084833e-02,
           8.62296999e-01],
         [ 1.82710648e+00,  8.78688216e-01,  1.02884626e+00,
          -2.17503816e-01, -2.84997416e+00, -8.93478692e-01,
           9.94580030e-01,  1.14205086e+00,  9.12816763e-01,
           3.76918346e-01,  5.20236969e-01, -3.92236501e-01,
           1.53924286e+00,  8.72421324e-01, -4.53836560e-01,
           5.17834902e-01]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 16, 16]), 'from': [10], 'to': [13]}

generate models:380

analyse the exceptions in iter:455
torch exception:
{'id': 0, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': tensor([[[[[ 7.5786e-01, -1.0363e+00,  2.8209e-03,  ...,  3.4537e-01,
             1.8779e-01, -6.1630e-01],
           [-2.6921e-01,  2.5656e-01,  1.0578e+00,  ..., -2.7555e-01,
            -8.4129e-02,  1.5829e+00],
           [-2.1723e-01, -2.8078e+00,  2.4714e-02,  ...,  1.8566e-01,
            -1.3161e+00, -2.1801e+00],
           ...,
           [-9.3750e-01,  2.7734e-01, -8.7808e-01,  ...,  2.1839e-01,
             2.2954e+00,  6.5342e-01],
           [ 1.0519e-02, -2.9271e+00, -7.1807e-01,  ..., -1.2268e-01,
            -4.9394e-01, -1.5863e+00],
           [ 1.5060e+00, -7.0931e-01, -5.5759e-01,  ...,  6.8956e-02,
            -1.6636e+00, -5.0300e-01]],

          [[ 1.0575e-01, -1.2204e+00, -9.8094e-01,  ..., -8.8651e-01,
             5.5774e-01,  9.7726e-01],
           [ 1.1850e+00, -2.1204e-02,  1.9565e-01,  ...,  1.1799e+00,
            -6.0872e-01,  4.5395e-01],
           [ 1.5260e-01, -9.0628e-01,  6.3003e-01,  ..., -3.3518e-01,
             1.5868e+00,  1.0786e+00],
           ...,
           [ 6.3835e-01,  7.6784e-01, -8.0291e-01,  ..., -9.8419e-01,
            -6.2857e-01, -6.6066e-01],
           [ 4.0796e-01,  1.1773e+00,  6.5071e-01,  ..., -1.0358e+00,
             9.1186e-02,  2.4717e-01],
           [-1.5925e+00, -9.9395e-01,  6.1608e-01,  ..., -2.9634e-01,
             5.4126e-01,  7.6437e-03]],

          [[-1.7658e+00,  1.5430e+00,  1.2057e+00,  ..., -3.9777e-01,
            -9.7506e-01,  1.1992e+00],
           [ 9.1345e-01, -1.0624e+00, -7.0275e-01,  ...,  3.8420e-02,
            -1.2866e-01,  1.2979e+00],
           [ 1.8634e+00, -7.3822e-01, -1.1708e+00,  ...,  3.7582e-01,
            -1.2516e-01, -1.9811e-01],
           ...,
           [ 5.4081e-01, -8.6819e-01,  3.4843e-01,  ...,  1.4079e-01,
             1.9795e-01, -5.6768e-03],
           [ 1.4010e-01, -4.5054e-01, -1.9141e+00,  ..., -1.4194e-01,
             4.9527e-01,  1.5872e+00],
           [ 1.9550e+00,  4.3197e-01, -5.8043e-01,  ..., -6.0385e-01,
            -1.3565e+00,  3.3547e-01]]]]])}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 0, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': Tensor(shape=[1, 1, 3, 32, 32], dtype=Float32, value=
[[[[[7.57862628e-001, -1.03626359e+000, 2.82093324e-003 ... 3.45369339e-001, 1.87788427e-001, -6.16304338e-001],
    [-2.69211322e-001, 2.56561279e-001, 1.05779362e+000 ... -2.75554448e-001, -8.41290653e-002, 1.58286953e+000],
    [-2.17232704e-001, -2.80781078e+000, 2.47139055e-002 ... 1.85661793e-001, -1.31614542e+000, -2.18012238e+000],
    ...
    [-9.37502742e-001, 2.77339101e-001, -8.78082037e-001 ... 2.18386248e-001, 2.29544282e+000, 6.53421342e-001],
    [1.05194561e-002, -2.92710137e+000, -7.18071282e-001 ... -1.22679077e-001, -4.93943989e-001, -1.58633888e+000],
    [1.50601733e+000, -7.09312201e-001, -5.57585001e-001 ... 6.89563155e-002, -1.66357672e+000, -5.02999663e-001]],
   [[1.05746619e-001, -1.22035027e+000, -9.80941296e-001 ... -8.86505604e-001, 5.57737291e-001, 9.77260351e-001],
    [1.18497491e+000, -2.12037154e-002, 1.95649490e-001 ... 1.17990720e+000, -6.08715892e-001, 4.53952581e-001],
    [1.52603447e-001, -9.06279266e-001, 6.30025983e-001 ... -3.35175395e-001, 1.58680809e+000, 1.07858729e+000],
    ...
    [6.38351738e-001, 7.67835498e-001, -8.02912712e-001 ... -9.84190643e-001, -6.28567517e-001, -6.60660505e-001],
    [4.07962412e-001, 1.17731905e+000, 6.50708020e-001 ... -1.03584611e+000, 9.11863893e-002, 2.47166142e-001],
    [-1.59245539e+000, -9.93946791e-001, 6.16078794e-001 ... -2.96335876e-001, 5.41258574e-001, 7.64371967e-003]],
   [[-1.76584148e+000, 1.54295313e+000, 1.20572555e+000 ... -3.97772700e-001, -9.75063384e-001, 1.19916427e+000],
    [9.13453937e-001, -1.06241059e+000, -7.02750087e-001 ... 3.84199582e-002, -1.28657848e-001, 1.29790199e+000],
    [1.86341846e+000, -7.38220692e-001, -1.17077172e+000 ... 3.75824720e-001, -1.25162840e-001, -1.98111117e-001],
    ...
    [5.40805399e-001, -8.68188143e-001, 3.48427057e-001 ... 1.40789464e-001, 1.97949901e-001, -5.67684602e-003],
    [1.40096664e-001, -4.50541526e-001, -1.91409373e+000 ... -1.41943991e-001, 4.95273173e-001, 1.58715463e+000],
    [1.95500398e+000, 4.31973845e-001, -5.80430627e-001 ... -6.03848517e-001, -1.35650849e+000, 3.35472822e-001]]]]])}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:392

analyse the exceptions in iter:457
torch exception:
{'id': 2, 'name': 'linear', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.8415, 0.8415, 0.8415,  ..., 0.8415, 0.8415, 0.8415],
          [0.4794, 0.4794, 0.8415,  ..., 0.8415, 0.4794, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          ...,
          [0.4794, 0.4794, 0.4794,  ..., 0.4794, 0.8415, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          [0.8415, 0.4794, 0.4794,  ..., 0.8415, 0.4794, 0.8415]],

         [[0.8415, 0.8415, 0.8415,  ..., 0.8415, 0.8415, 0.8415],
          [0.4794, 0.4794, 0.8415,  ..., 0.8415, 0.4794, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          ...,
          [0.4794, 0.4794, 0.4794,  ..., 0.4794, 0.8415, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          [0.8415, 0.4794, 0.4794,  ..., 0.8415, 0.4794, 0.8415]],

         [[0.8415, 0.8415, 0.8415,  ..., 0.8415, 0.8415, 0.8415],
          [0.4794, 0.4794, 0.8415,  ..., 0.8415, 0.4794, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          ...,
          [0.4794, 0.4794, 0.4794,  ..., 0.4794, 0.8415, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          [0.8415, 0.4794, 0.4794,  ..., 0.8415, 0.4794, 0.8415]],

         ...,

         [[0.8415, 0.8415, 0.8415,  ..., 0.8415, 0.8415, 0.8415],
          [0.4794, 0.4794, 0.8415,  ..., 0.8415, 0.4794, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          ...,
          [0.4794, 0.4794, 0.4794,  ..., 0.4794, 0.8415, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          [0.8415, 0.4794, 0.4794,  ..., 0.8415, 0.4794, 0.8415]],

         [[0.8415, 0.8415, 0.8415,  ..., 0.8415, 0.8415, 0.8415],
          [0.4794, 0.4794, 0.8415,  ..., 0.8415, 0.4794, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          ...,
          [0.4794, 0.4794, 0.4794,  ..., 0.4794, 0.8415, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          [0.8415, 0.4794, 0.4794,  ..., 0.8415, 0.4794, 0.8415]],

         [[0.8415, 0.8415, 0.8415,  ..., 0.8415, 0.8415, 0.8415],
          [0.4794, 0.4794, 0.8415,  ..., 0.8415, 0.4794, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          ...,
          [0.4794, 0.4794, 0.4794,  ..., 0.4794, 0.8415, 0.8415],
          [0.8415, 0.4794, 0.4794,  ..., 0.4794, 0.4794, 0.4794],
          [0.8415, 0.4794, 0.4794,  ..., 0.8415, 0.4794, 0.8415]]]],
       grad_fn=<SinBackward0>)]}
mat1 and mat2 shapes cannot be multiplied (8192x32 and 50x100)
mindspore exception:
{'id': 2, 'name': 'linear', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 256, 32, 32], dtype=Float32, value=
[[[[8.41470957e-001, 8.41470957e-001, 8.41470957e-001 ... 8.41470957e-001, 8.41470957e-001, 8.41470957e-001],
   [4.79425550e-001, 4.79425550e-001, 8.41470957e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   ...
   [4.79425550e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 8.41470957e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001]],
  [[8.41470957e-001, 8.41470957e-001, 8.41470957e-001 ... 8.41470957e-001, 8.41470957e-001, 8.41470957e-001],
   [4.79425550e-001, 4.79425550e-001, 8.41470957e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   ...
   [4.79425550e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 8.41470957e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001]],
  [[8.41470957e-001, 8.41470957e-001, 8.41470957e-001 ... 8.41470957e-001, 8.41470957e-001, 8.41470957e-001],
   [4.79425550e-001, 4.79425550e-001, 8.41470957e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   ...
   [4.79425550e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 8.41470957e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001]],
  ...
  [[8.41470957e-001, 8.41470957e-001, 8.41470957e-001 ... 8.41470957e-001, 8.41470957e-001, 8.41470957e-001],
   [4.79425550e-001, 4.79425550e-001, 8.41470957e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   ...
   [4.79425550e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 8.41470957e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001]],
  [[8.41470957e-001, 8.41470957e-001, 8.41470957e-001 ... 8.41470957e-001, 8.41470957e-001, 8.41470957e-001],
   [4.79425550e-001, 4.79425550e-001, 8.41470957e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   ...
   [4.79425550e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 8.41470957e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001]],
  [[8.41470957e-001, 8.41470957e-001, 8.41470957e-001 ... 8.41470957e-001, 8.41470957e-001, 8.41470957e-001],
   [4.79425550e-001, 4.79425550e-001, 8.41470957e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   ...
   [4.79425550e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 8.41470957e-001, 8.41470957e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 4.79425550e-001, 4.79425550e-001, 4.79425550e-001],
   [8.41470957e-001, 4.79425550e-001, 4.79425550e-001 ... 8.41470957e-001, 4.79425550e-001, 8.41470957e-001]]]])]}
For 'MatMul', the input dimensions must be equal, but got 'x1_col': 32 and 'x2_row': 50. And 'x' shape [8192, 32](transpose_a=False), 'y' shape [100, 50](transpose_b=True).

generate models:394

analyse output arrays in iter:468

pre layer res:
12:reshape
{'name': 'reshape', 'output': array([[[[37.31056 , 37.31056 , 37.31056 , ..., 43.976425, 43.976425,
          43.976425],
         [43.976425, 43.976425, 43.976425, ..., 39.29532 , 39.29532 ,
          39.29532 ],
         [39.29532 , 39.29532 , 39.29532 , ..., 44.55363 , 44.55363 ,
          44.55363 ],
         ...,
         [39.29532 , 39.29532 , 39.29532 , ..., 44.55363 , 44.55363 ,
          44.55363 ],
         [44.55363 , 44.55363 , 44.55363 , ..., 37.13539 , 37.13539 ,
          37.13539 ],
         [37.13539 , 37.13539 , 37.13539 , ..., 31.719456, 31.719456,
          31.719456]],

        [[31.719456, 31.719456, 31.719456, ..., 41.093414, 41.093414,
          41.093414],
         [41.093414, 41.093414, 41.093414, ..., 38.084324, 38.084324,
          38.084324],
         [38.084324, 38.084324, 38.084324, ..., 37.445637, 37.445637,
          37.445637],
         ...,
         [38.084324, 38.084324, 38.084324, ..., 37.445637, 37.445637,
          37.445637],
         [37.445637, 37.445637, 37.445637, ..., 43.836563, 43.836563,
          43.836563],
         [43.836563, 43.836563, 43.836563, ..., 37.304565, 37.304565,
          37.304565]],

        [[37.304565, 37.304565, 37.304565, ..., 34.695557, 34.695557,
          34.695557],
         [37.13539 , 37.13539 , 37.13539 , ..., 31.719456, 31.719456,
          31.719456],
         [31.719456, 31.719456, 31.719456, ..., 43.4765  , 43.4765  ,
          43.4765  ],
         ...,
         [39.201965, 39.201965, 39.201965, ..., 43.4765  , 43.4765  ,
          43.4765  ],
         [43.4765  , 43.4765  , 43.4765  , ..., 38.456482, 38.456482,
          38.456482],
         [38.456482, 38.456482, 38.456482, ..., 37.31056 , 37.31056 ,
          37.31056 ]],

        [[37.31056 , 37.31056 , 37.31056 , ..., 43.976425, 43.976425,
          43.976425],
         [43.976425, 43.976425, 43.976425, ..., 37.304565, 37.304565,
          37.304565],
         [37.304565, 37.304565, 37.304565, ..., 34.695557, 34.695557,
          34.695557],
         ...,
         [39.29532 , 39.29532 , 39.29532 , ..., 44.55363 , 34.695557,
          34.695557],
         [34.695557, 34.695557, 34.695557, ..., 39.201965, 39.201965,
          39.201965],
         [39.201965, 39.201965, 39.201965, ..., 49.94832 , 49.94832 ,
          49.94832 ]]]], dtype=float32), 'output_shape': TensorShape([1, 4, 112, 112]), 'from': [11], 'to': [16]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.925458  ,  0.925458  ,  0.925458  , ...,  0.9999828 ,
           0.9999828 ,  0.9999828 ],
         [ 0.9999828 ,  0.9999828 ,  0.9999828 , ..., -0.0254077 ,
          -0.0254077 , -0.0254077 ],
         [-0.0254077 , -0.0254077 , -0.0254077 , ...,  0.8411805 ,
           0.8411805 ,  0.8411805 ],
         ...,
         [-0.0254077 , -0.0254077 , -0.0254077 , ...,  0.8411805 ,
           0.8411805 ,  0.8411805 ],
         [ 0.8411805 ,  0.8411805 ,  0.8411805 , ...,  0.84527296,
           0.84527296,  0.84527296],
         [ 0.84527296,  0.84527296,  0.84527296, ...,  0.9542876 ,
           0.9542876 ,  0.9542876 ]],

        [[ 0.9542876 ,  0.9542876 ,  0.9542876 , ..., -0.9682385 ,
          -0.9682385 , -0.9682385 ],
         [-0.9682385 , -0.9682385 , -0.9682385 , ...,  0.9267188 ,
           0.9267188 ,  0.9267188 ],
         [ 0.9267188 ,  0.9267188 ,  0.9267188 , ...,  0.96804684,
           0.96804684,  0.96804684],
         ...,
         [ 0.9267188 ,  0.9267188 ,  0.9267188 , ...,  0.96804684,
           0.96804684,  0.96804684],
         [ 0.96804684,  0.96804684,  0.96804684, ...,  0.98939955,
           0.98939955,  0.98939955],
         [ 0.98939955,  0.98939955,  0.98939955, ...,  0.92317104,
           0.92317104,  0.92317104]],

        [[ 0.92317104,  0.92317104,  0.92317104, ..., -0.99048793,
          -0.99048793, -0.99048793],
         [ 0.84527296,  0.84527296,  0.84527296, ...,  0.9542876 ,
           0.9542876 ,  0.9542876 ],
         [ 0.9542876 ,  0.9542876 ,  0.9542876 , ...,  0.87478924,
           0.87478924,  0.87478924],
         ...,
         [ 0.06789058,  0.06789058,  0.06789058, ...,  0.87478924,
           0.87478924,  0.87478924],
         [ 0.87478924,  0.87478924,  0.87478924, ...,  0.7266453 ,
           0.7266453 ,  0.7266453 ],
         [ 0.7266453 ,  0.7266453 ,  0.7266453 , ...,  0.925458  ,
           0.925458  ,  0.925458  ]],

        [[ 0.925458  ,  0.925458  ,  0.925458  , ...,  0.9999828 ,
           0.9999828 ,  0.9999828 ],
         [ 0.9999828 ,  0.9999828 ,  0.9999828 , ...,  0.92317104,
           0.92317104,  0.92317104],
         [ 0.92317104,  0.92317104,  0.92317104, ..., -0.99048793,
          -0.99048793, -0.99048793],
         ...,
         [-0.0254077 , -0.0254077 , -0.0254077 , ...,  0.8411805 ,
          -0.99048793, -0.99048793],
         [-0.99048793, -0.99048793, -0.99048793, ...,  0.06789058,
           0.06789058,  0.06789058],
         [ 0.06789058,  0.06789058,  0.06789058, ...,  0.9501237 ,
           0.9501237 ,  0.9501237 ]]]], dtype=float32), 'output_shape': TensorShape([1, 4, 112, 112]), 'from': [12], 'to': [17]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.92552304,  0.92552304,  0.92552304, ...,  0.9999948 ,
           0.9999948 ,  0.9999948 ],
         [ 0.9999948 ,  0.9999948 ,  0.9999948 , ..., -0.02946119,
          -0.02946119, -0.02946119],
         [-0.02946119, -0.02946119, -0.02946119, ...,  0.84019727,
           0.84019727,  0.84019727],
         ...,
         [-0.02946119, -0.02946119, -0.02946119, ...,  0.84019727,
           0.84019727,  0.84019727],
         [ 0.84019727,  0.84019727,  0.84019727, ...,  0.8448936 ,
           0.8448936 ,  0.8448936 ],
         [ 0.8448936 ,  0.8448936 ,  0.8448936 , ...,  0.95392776,
           0.95392776,  0.95392776]],

        [[ 0.95392776,  0.95392776,  0.95392776, ..., -0.9685875 ,
          -0.9685875 , -0.9685875 ],
         [-0.9685875 , -0.9685875 , -0.9685875 , ...,  0.9262752 ,
           0.9262752 ,  0.9262752 ],
         [ 0.9262752 ,  0.9262752 ,  0.9262752 , ...,  0.9679712 ,
           0.9679712 ,  0.9679712 ],
         ...,
         [ 0.9262752 ,  0.9262752 ,  0.9262752 , ...,  0.9679712 ,
           0.9679712 ,  0.9679712 ],
         [ 0.9679712 ,  0.9679712 ,  0.9679712 , ...,  0.98934686,
           0.98934686,  0.98934686],
         [ 0.98934686,  0.98934686,  0.98934686, ...,  0.92413294,
           0.92413294,  0.92413294]],

        [[ 0.92413294,  0.92413294,  0.92413294, ..., -0.99042696,
          -0.9904275 , -0.9904275 ],
         [ 0.8448936 ,  0.8448936 ,  0.8448936 , ...,  0.95392776,
           0.95392776,  0.95392776],
         [ 0.95392776,  0.95392776,  0.95392776, ...,  0.87512726,
           0.87512726,  0.87512726],
         ...,
         [ 0.06974012,  0.06974012,  0.06974012, ...,  0.87512726,
           0.87512726,  0.87512726],
         [ 0.87512726,  0.87512726,  0.87512726, ...,  0.7281165 ,
           0.7281165 ,  0.7281165 ],
         [ 0.7281165 ,  0.7281165 ,  0.7281165 , ...,  0.92552304,
           0.92552304,  0.92552304]],

        [[ 0.92552304,  0.92552304,  0.92552304, ...,  0.9999948 ,
           0.9999948 ,  0.9999948 ],
         [ 0.9999948 ,  0.9999948 ,  0.9999948 , ...,  0.92413294,
           0.92413294,  0.92413294],
         [ 0.92413294,  0.92413294,  0.92413294, ..., -0.99042696,
          -0.99042696, -0.99042696],
         ...,
         [-0.02946119, -0.02946119, -0.02946119, ...,  0.8401952 ,
          -0.99042696, -0.99042696],
         [-0.99042696, -0.99042696, -0.99042696, ...,  0.06974012,
           0.06974012,  0.06974012],
         [ 0.06974012,  0.06974012,  0.06974012, ...,  0.94959414,
           0.94959414,  0.94959414]]]], dtype=float32), 'output_shape': (1, 4, 112, 112), 'from': [12], 'to': [17]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.92552304,  0.92552304,  0.92552304, ...,  0.9999948 ,
           0.9999948 ,  0.9999948 ],
         [ 0.9999948 ,  0.9999948 ,  0.9999948 , ..., -0.02946119,
          -0.02946119, -0.02946119],
         [-0.02946119, -0.02946119, -0.02946119, ...,  0.84019727,
           0.84019727,  0.84019727],
         ...,
         [-0.02946119, -0.02946119, -0.02946119, ...,  0.84019727,
           0.84019727,  0.84019727],
         [ 0.84019727,  0.84019727,  0.84019727, ...,  0.8448936 ,
           0.8448936 ,  0.8448936 ],
         [ 0.8448936 ,  0.8448936 ,  0.8448936 , ...,  0.95392776,
           0.95392776,  0.95392776]],

        [[ 0.95392776,  0.95392776,  0.95392776, ..., -0.9685875 ,
          -0.9685875 , -0.9685875 ],
         [-0.9685875 , -0.9685875 , -0.9685875 , ...,  0.9262752 ,
           0.9262752 ,  0.9262752 ],
         [ 0.9262752 ,  0.9262752 ,  0.9262752 , ...,  0.9679712 ,
           0.9679712 ,  0.9679712 ],
         ...,
         [ 0.9262752 ,  0.9262752 ,  0.9262752 , ...,  0.9679712 ,
           0.9679712 ,  0.9679712 ],
         [ 0.9679712 ,  0.9679712 ,  0.9679712 , ...,  0.98934686,
           0.98934686,  0.98934686],
         [ 0.98934686,  0.98934686,  0.98934686, ...,  0.92413294,
           0.92413294,  0.92413294]],

        [[ 0.92413294,  0.92413294,  0.92413294, ..., -0.99042696,
          -0.9904275 , -0.9904275 ],
         [ 0.8448936 ,  0.8448936 ,  0.8448936 , ...,  0.95392776,
           0.95392776,  0.95392776],
         [ 0.95392776,  0.95392776,  0.95392776, ...,  0.87512726,
           0.87512726,  0.87512726],
         ...,
         [ 0.06974012,  0.06974012,  0.06974012, ...,  0.87512726,
           0.87512726,  0.87512726],
         [ 0.87512726,  0.87512726,  0.87512726, ...,  0.7281165 ,
           0.7281165 ,  0.7281165 ],
         [ 0.7281165 ,  0.7281165 ,  0.7281165 , ...,  0.92552304,
           0.92552304,  0.92552304]],

        [[ 0.92552304,  0.92552304,  0.92552304, ...,  0.9999948 ,
           0.9999948 ,  0.9999948 ],
         [ 0.9999948 ,  0.9999948 ,  0.9999948 , ...,  0.92413294,
           0.92413294,  0.92413294],
         [ 0.92413294,  0.92413294,  0.92413294, ..., -0.99042696,
          -0.99042696, -0.99042696],
         ...,
         [-0.02946119, -0.02946119, -0.02946119, ...,  0.8401952 ,
          -0.99042696, -0.99042696],
         [-0.99042696, -0.99042696, -0.99042696, ...,  0.06974012,
           0.06974012,  0.06974012],
         [ 0.06974012,  0.06974012,  0.06974012, ...,  0.94959414,
           0.94959414,  0.94959414]]]], dtype=float32), 'output_shape': torch.Size([1, 4, 112, 112]), 'from': [12], 'to': [17]}

generate models:404

analyse output arrays in iter:473

pre layer res:
5:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[ 1.6087054 ,  3.1181593 ,  1.240037  , ..., -0.3142675 ,
           0.47988236, -1.0256138 ],
         [-1.2421867 , -1.2869419 ,  0.5431856 , ..., -4.20241   ,
           1.6779988 , -0.0998177 ],
         [-1.2496222 , -0.9718362 ,  0.8701953 , ..., -1.0223383 ,
           3.026694  ,  2.1152844 ],
         ...,
         [-0.49812633,  2.1077628 ,  0.34375435, ..., -2.0346694 ,
          -1.8228606 , -2.4706497 ],
         [ 0.10783833,  0.89024884,  0.6733141 , ..., -0.96959615,
          -1.499078  ,  0.6571879 ],
         [-0.7503549 , -0.3352975 ,  0.16142714, ...,  2.4106874 ,
           2.7224526 , -0.74997187]],

        [[ 1.6087054 ,  3.1181593 ,  1.240037  , ..., -0.3142675 ,
           0.47988236, -1.0256138 ],
         [-1.2421867 , -1.2869419 ,  0.5431856 , ..., -4.20241   ,
           1.6779988 , -0.0998177 ],
         [-1.2496222 , -0.9718362 ,  0.8701953 , ..., -1.0223383 ,
           3.026694  ,  2.1152844 ],
         ...,
         [-0.49812633,  2.1077628 ,  0.34375435, ..., -2.0346694 ,
          -1.8228606 , -2.4706497 ],
         [ 0.10783833,  0.89024884,  0.6733141 , ..., -0.96959615,
          -1.499078  ,  0.6571879 ],
         [-0.7503549 , -0.3352975 ,  0.16142714, ...,  2.4106874 ,
           2.7224526 , -0.74997187]],

        [[ 1.6087054 ,  3.1181593 ,  1.240037  , ..., -0.3142675 ,
           0.47988236, -1.0256138 ],
         [-1.2421867 , -1.2869419 ,  0.5431856 , ..., -4.20241   ,
           1.6779988 , -0.0998177 ],
         [-1.2496222 , -0.9718362 ,  0.8701953 , ..., -1.0223383 ,
           3.026694  ,  2.1152844 ],
         ...,
         [-0.49812633,  2.1077628 ,  0.34375435, ..., -2.0346694 ,
          -1.8228606 , -2.4706497 ],
         [ 0.10783833,  0.89024884,  0.6733141 , ..., -0.96959615,
          -1.499078  ,  0.6571879 ],
         [-0.7503549 , -0.3352975 ,  0.16142714, ...,  2.4106874 ,
           2.7224526 , -0.74997187]],

        ...,

        [[ 1.6087054 ,  3.1181593 ,  1.240037  , ..., -0.3142675 ,
           0.47988236, -1.0256138 ],
         [-1.2421867 , -1.2869419 ,  0.5431856 , ..., -4.20241   ,
           1.6779988 , -0.0998177 ],
         [-1.2496222 , -0.9718362 ,  0.8701953 , ..., -1.0223383 ,
           3.026694  ,  2.1152844 ],
         ...,
         [-0.49812633,  2.1077628 ,  0.34375435, ..., -2.0346694 ,
          -1.8228606 , -2.4706497 ],
         [ 0.10783833,  0.89024884,  0.6733141 , ..., -0.96959615,
          -1.499078  ,  0.6571879 ],
         [-0.7503549 , -0.3352975 ,  0.16142714, ...,  2.4106874 ,
           2.7224526 , -0.74997187]],

        [[ 1.6087054 ,  3.1181593 ,  1.240037  , ..., -0.3142675 ,
           0.47988236, -1.0256138 ],
         [-1.2421867 , -1.2869419 ,  0.5431856 , ..., -4.20241   ,
           1.6779988 , -0.0998177 ],
         [-1.2496222 , -0.9718362 ,  0.8701953 , ..., -1.0223383 ,
           3.026694  ,  2.1152844 ],
         ...,
         [-0.49812633,  2.1077628 ,  0.34375435, ..., -2.0346694 ,
          -1.8228606 , -2.4706497 ],
         [ 0.10783833,  0.89024884,  0.6733141 , ..., -0.96959615,
          -1.499078  ,  0.6571879 ],
         [-0.7503549 , -0.3352975 ,  0.16142714, ...,  2.4106874 ,
           2.7224526 , -0.74997187]],

        [[ 1.6087054 ,  3.1181593 ,  1.240037  , ..., -0.3142675 ,
           0.47988236, -1.0256138 ],
         [-1.2421867 , -1.2869419 ,  0.5431856 , ..., -4.20241   ,
           1.6779988 , -0.0998177 ],
         [-1.2496222 , -0.9718362 ,  0.8701953 , ..., -1.0223383 ,
           3.026694  ,  2.1152844 ],
         ...,
         [-0.49812633,  2.1077628 ,  0.34375435, ..., -2.0346694 ,
          -1.8228606 , -2.4706497 ],
         [ 0.10783833,  0.89024884,  0.6733141 , ..., -0.96959615,
          -1.499078  ,  0.6571879 ],
         [-0.7503549 , -0.3352975 ,  0.16142714, ...,  2.4106874 ,
           2.7224526 , -0.74997187]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [0], 'to': [1]}
tf node:
{'name': 'linear', 'output': array([[[[ 4.2358093,  4.2358093,  4.2358093, ...,  4.2358093,
           4.2358093,  4.2358093],
         [-5.939331 , -5.939331 , -5.939331 , ..., -5.939331 ,
          -5.939331 , -5.939331 ],
         [ 2.819687 ,  2.819687 ,  2.819687 , ...,  2.819687 ,
           2.819687 ,  2.819687 ],
         ...,
         [ 7.04718  ,  7.04718  ,  7.04718  , ...,  7.04718  ,
           7.04718  ,  7.04718  ],
         [ 7.981386 ,  7.981386 ,  7.981386 , ...,  7.981386 ,
           7.981386 ,  7.981386 ],
         [ 7.083191 ,  7.083191 ,  7.083191 , ...,  7.083191 ,
           7.083191 ,  7.083191 ]],

        [[ 4.2358093,  4.2358093,  4.2358093, ...,  4.2358093,
           4.2358093,  4.2358093],
         [-5.939331 , -5.939331 , -5.939331 , ..., -5.939331 ,
          -5.939331 , -5.939331 ],
         [ 2.819687 ,  2.819687 ,  2.819687 , ...,  2.819687 ,
           2.819687 ,  2.819687 ],
         ...,
         [ 7.04718  ,  7.04718  ,  7.04718  , ...,  7.04718  ,
           7.04718  ,  7.04718  ],
         [ 7.981386 ,  7.981386 ,  7.981386 , ...,  7.981386 ,
           7.981386 ,  7.981386 ],
         [ 7.083191 ,  7.083191 ,  7.083191 , ...,  7.083191 ,
           7.083191 ,  7.083191 ]],

        [[ 4.2358093,  4.2358093,  4.2358093, ...,  4.2358093,
           4.2358093,  4.2358093],
         [-5.939331 , -5.939331 , -5.939331 , ..., -5.939331 ,
          -5.939331 , -5.939331 ],
         [ 2.819687 ,  2.819687 ,  2.819687 , ...,  2.819687 ,
           2.819687 ,  2.819687 ],
         ...,
         [ 7.04718  ,  7.04718  ,  7.04718  , ...,  7.04718  ,
           7.04718  ,  7.04718  ],
         [ 7.981386 ,  7.981386 ,  7.981386 , ...,  7.981386 ,
           7.981386 ,  7.981386 ],
         [ 7.083191 ,  7.083191 ,  7.083191 , ...,  7.083191 ,
           7.083191 ,  7.083191 ]],

        ...,

        [[ 4.2358093,  4.2358093,  4.2358093, ...,  4.2358093,
           4.2358093,  4.2358093],
         [-5.939331 , -5.939331 , -5.939331 , ..., -5.939331 ,
          -5.939331 , -5.939331 ],
         [ 2.819687 ,  2.819687 ,  2.819687 , ...,  2.819687 ,
           2.819687 ,  2.819687 ],
         ...,
         [ 7.04718  ,  7.04718  ,  7.04718  , ...,  7.04718  ,
           7.04718  ,  7.04718  ],
         [ 7.981386 ,  7.981386 ,  7.981386 , ...,  7.981386 ,
           7.981386 ,  7.981386 ],
         [ 7.083191 ,  7.083191 ,  7.083191 , ...,  7.083191 ,
           7.083191 ,  7.083191 ]],

        [[ 4.2358093,  4.2358093,  4.2358093, ...,  4.2358093,
           4.2358093,  4.2358093],
         [-5.939331 , -5.939331 , -5.939331 , ..., -5.939331 ,
          -5.939331 , -5.939331 ],
         [ 2.819687 ,  2.819687 ,  2.819687 , ...,  2.819687 ,
           2.819687 ,  2.819687 ],
         ...,
         [ 7.04718  ,  7.04718  ,  7.04718  , ...,  7.04718  ,
           7.04718  ,  7.04718  ],
         [ 7.981386 ,  7.981386 ,  7.981386 , ...,  7.981386 ,
           7.981386 ,  7.981386 ],
         [ 7.083191 ,  7.083191 ,  7.083191 , ...,  7.083191 ,
           7.083191 ,  7.083191 ]],

        [[ 4.2358093,  4.2358093,  4.2358093, ...,  4.2358093,
           4.2358093,  4.2358093],
         [-5.939331 , -5.939331 , -5.939331 , ..., -5.939331 ,
          -5.939331 , -5.939331 ],
         [ 2.819687 ,  2.819687 ,  2.819687 , ...,  2.819687 ,
           2.819687 ,  2.819687 ],
         ...,
         [ 7.04718  ,  7.04718  ,  7.04718  , ...,  7.04718  ,
           7.04718  ,  7.04718  ],
         [ 7.981386 ,  7.981386 ,  7.981386 , ...,  7.981386 ,
           7.981386 ,  7.981386 ],
         [ 7.083191 ,  7.083191 ,  7.083191 , ...,  7.083191 ,
           7.083191 ,  7.083191 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 100]), 'from': [5], 'to': [4, 6]}
ms node:
{'name': 'linear', 'output': array([[[[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        ...,

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.978532 ,  7.978532 ,  7.978532 , ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]]]], dtype=float32), 'output_shape': (1, 256, 32, 100), 'from': [5], 'to': [4, 6]}
torch node:
{'name': 'linear', 'output': array([[[[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        ...,

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]],

        [[ 4.234761 ,  4.234761 ,  4.234761 , ...,  4.234763 ,
           4.234763 ,  4.234763 ],
         [-5.9370503, -5.9370503, -5.9370503, ..., -5.9370503,
          -5.9370503, -5.9370503],
         [ 2.817867 ,  2.817867 ,  2.817867 , ...,  2.8178668,
           2.8178668,  2.8178668],
         ...,
         [ 7.0434704,  7.0434704,  7.0434704, ...,  7.0434694,
           7.0434694,  7.0434694],
         [ 7.9785323,  7.9785323,  7.9785323, ...,  7.978532 ,
           7.978532 ,  7.978532 ],
         [ 7.0852575,  7.0852575,  7.0852575, ...,  7.0852575,
           7.0852575,  7.0852575]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 100]), 'from': [5], 'to': [4, 6]}

generate models:407

analyse the exceptions in iter:485
torch exception:
{'id': 1, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[ 2.5945e+00,  1.7026e+00,  2.3317e-01,  1.1952e+00,  2.5777e+00,
            4.0931e-01,  2.0673e+00,  8.4928e-01, -1.5345e-01,  1.2667e+00,
            2.7382e+00,  1.5296e+00,  2.2339e+00,  3.3992e-01,  1.8405e+00,
            2.6496e+00],
          [ 1.7918e+00,  1.4443e+00,  4.0060e+00,  3.0727e+00,  2.8107e+00,
            1.0710e+00,  2.5304e+00,  2.8552e-01,  3.2867e+00,  1.9161e+00,
            1.2419e+00,  3.6527e+00,  1.4945e+00,  2.1618e+00,  1.8444e+00,
            1.4061e+00],
          [ 1.6743e+00,  2.2976e+00,  1.7714e+00,  7.8410e-01,  1.9544e+00,
            6.2073e-01,  3.7143e+00,  2.8245e+00,  2.8945e+00,  1.8985e+00,
            2.6365e+00,  1.6410e+00,  7.0778e-01,  2.6719e+00,  1.8344e+00,
            1.0247e+00],
          [ 2.1546e+00, -1.4394e-01,  1.7484e+00,  1.8719e+00,  2.3642e+00,
            2.4974e+00,  1.4634e+00,  2.6824e+00,  2.8105e+00, -5.5216e-02,
            2.2814e+00,  1.0435e+00,  6.7042e-01, -1.1681e-01,  2.3116e+00,
            1.8475e+00],
          [ 1.7212e+00,  1.9764e+00, -3.9656e-01,  8.5077e-01, -1.1147e+00,
            7.9563e-01,  1.7208e+00,  9.7952e-01,  8.4031e-01,  2.7829e+00,
            3.6689e+00,  1.2708e+00,  2.4222e+00,  2.7773e+00,  3.8771e+00,
            8.3728e-01],
          [ 2.0639e+00,  4.4395e-01, -2.7787e-01,  1.2212e+00,  2.7025e+00,
            1.3591e+00,  3.8830e+00,  2.6339e+00,  1.7600e+00,  1.0758e+00,
            8.0563e-01,  1.5107e+00,  1.9168e+00, -1.8716e-01,  2.8924e+00,
            3.2320e+00],
          [ 1.7053e+00,  3.1412e+00,  1.5048e+00,  1.1546e+00,  2.5479e+00,
            1.3591e+00,  9.8035e-01,  1.4110e+00,  1.4864e+00,  2.6215e+00,
            3.3954e+00,  1.2040e+00,  2.2311e+00,  2.0569e+00,  4.7265e-01,
            3.7450e+00],
          [ 1.2190e+00,  2.9505e+00,  1.5901e+00,  1.4969e-01,  1.0014e+00,
            1.5357e+00,  1.8398e-01,  1.9501e+00,  2.1772e+00,  1.6431e+00,
            2.2626e+00,  6.8260e-02,  1.7948e+00,  3.7109e+00,  2.1121e+00,
            1.7547e+00],
          [ 1.7278e+00,  1.9962e+00,  2.4661e+00,  2.9488e+00,  2.4832e+00,
            1.7854e+00,  1.6822e+00,  1.6200e+00,  2.9426e+00,  1.5685e+00,
            1.4045e+00,  1.7699e+00,  1.6045e+00,  2.6778e+00,  1.9000e+00,
            2.9164e+00],
          [ 7.3048e-02,  2.3337e+00,  2.5251e+00,  2.0885e+00,  3.1144e+00,
            1.0270e+00,  1.0512e+00,  1.3497e+00, -1.0370e-01, -6.5698e-02,
            2.5497e+00,  3.0245e+00,  2.7860e+00,  1.1210e+00,  3.9479e+00,
            2.1982e+00],
          [ 4.1954e-01,  6.9351e-02,  1.4152e+00,  2.7482e+00,  3.0203e+00,
            1.5246e+00,  1.5615e+00,  1.5841e+00,  1.2729e+00,  2.9978e+00,
            3.0370e+00,  1.9135e+00,  1.9528e+00,  1.0599e+00, -1.5862e-01,
            1.8945e+00],
          [ 3.3883e+00, -8.4869e-02,  1.4593e+00,  2.0910e+00,  1.1537e+00,
            1.4366e+00,  2.5024e+00,  2.1695e+00,  1.3998e+00,  2.9285e+00,
            2.8514e+00,  2.0519e+00,  1.2887e+00,  2.7476e+00,  2.6607e+00,
            9.9457e-01],
          [ 1.8584e+00,  3.1561e+00,  1.5817e+00,  1.2210e+00,  1.2486e+00,
            4.6474e-02,  1.2070e-01,  5.4615e-01,  2.1523e+00,  9.3321e-01,
            2.2469e+00, -6.4658e-02,  1.0974e+00,  1.2045e+00, -6.0800e-01,
            9.9127e-01],
          [ 2.5728e+00,  1.3845e+00,  1.7952e+00,  2.6925e+00,  2.5904e+00,
            3.9673e+00,  3.0411e+00,  3.4261e-01,  3.5097e+00,  3.5476e+00,
            8.4965e-01,  2.6649e-01,  6.6179e-01,  2.8514e+00,  2.4942e+00,
            6.8925e-02],
          [ 2.6681e+00,  1.8064e+00,  2.5945e+00,  1.2912e+00,  3.2168e+00,
            2.1931e+00,  3.5713e+00,  6.6986e-01,  1.2642e+00,  2.0276e+00,
            3.2774e+00,  2.4277e+00,  2.8183e+00,  2.1230e+00,  3.0710e+00,
            1.6251e+00],
          [ 1.7251e+00,  2.2989e+00,  3.0539e+00,  2.6940e+00, -7.2439e-02,
            3.4451e+00,  2.5578e+00,  2.2484e+00,  1.9720e+00,  1.9062e+00,
            3.3459e+00,  1.5891e+00,  1.5013e+00,  1.5618e+00,  2.0230e+00,
            3.1695e+00]],

         [[ 9.5123e-01,  1.8463e+00,  1.8080e+00,  2.8149e-01,  4.0427e+00,
            1.1045e+00,  2.7196e+00,  1.3466e+00,  1.2332e+00,  3.0613e+00,
            1.3457e+00,  1.8377e+00,  3.7660e-04,  2.4120e+00,  1.8827e+00,
            2.7588e+00],
          [ 2.3958e+00,  2.7231e-01,  2.6534e-02,  2.1179e+00,  3.6924e+00,
            3.7111e+00,  2.8212e+00,  1.6564e+00,  2.1333e+00,  2.3832e+00,
            3.2894e+00,  1.9393e+00,  3.0799e+00,  1.9699e+00,  1.8421e+00,
            1.0899e+00],
          [ 2.3623e+00,  2.9270e+00, -8.4481e-01,  8.0090e-01,  1.1433e+00,
            3.1070e+00,  2.5641e+00,  3.4201e+00,  1.9660e+00, -6.2531e-01,
           -1.7469e-01,  3.5128e+00,  1.8360e+00,  2.6391e+00, -1.0820e+00,
            1.5735e+00],
          [ 7.5008e-02,  1.9376e+00,  3.5361e+00,  2.2470e+00,  2.5212e+00,
            3.0291e+00,  1.8132e+00, -4.7421e-01,  4.3085e+00,  3.1898e+00,
            2.8252e+00,  7.7717e-01,  1.6440e+00,  2.7854e+00,  9.0344e-01,
            5.0690e-01],
          [ 4.0050e-01,  3.0997e+00,  1.9795e+00,  1.3508e+00,  7.0589e-01,
            2.9837e+00,  1.6563e-01,  2.1419e+00,  3.1490e+00,  9.8213e-01,
            1.8751e+00,  1.3500e+00,  2.6792e+00,  4.6972e-01,  1.0253e+00,
            2.5644e+00],
          [ 6.7172e-01,  2.4814e+00,  1.1413e+00,  3.3004e+00, -3.4642e-01,
            2.2616e+00,  3.2746e+00,  3.2782e+00,  1.3177e+00,  1.6697e+00,
            5.6354e-01,  7.0901e-02,  2.8593e+00,  2.6848e+00,  2.4109e+00,
            4.6056e+00],
          [ 1.5256e+00,  1.1780e+00,  2.5343e+00,  1.2513e+00,  2.1683e+00,
            3.9498e+00,  1.2365e+00,  1.0284e+00,  2.2564e+00,  1.9053e+00,
            2.4126e+00,  3.3511e+00,  2.0651e+00,  2.1347e+00,  3.0806e+00,
            1.8186e+00],
          [ 5.9671e-02,  1.3899e+00,  1.0023e+00,  7.5543e-01,  1.9475e-01,
            3.4253e+00,  1.1169e+00,  3.4650e+00, -7.5198e-01,  2.8929e+00,
            2.3265e+00, -3.5653e-03,  1.7540e+00,  1.5312e+00,  2.4713e+00,
            2.5972e+00],
          [ 1.5417e+00,  3.1020e+00,  2.1209e+00,  1.4007e+00, -1.6618e+00,
           -2.6526e-01,  2.1215e+00,  3.1554e+00,  1.4831e+00,  2.9992e+00,
            4.5722e+00,  1.3095e+00,  3.1713e+00, -8.9727e-01,  1.0050e+00,
            1.3956e+00],
          [ 2.1934e+00,  3.0922e+00,  6.4039e-01,  1.7577e+00,  2.4353e+00,
            2.6261e+00,  2.4058e+00,  2.5699e+00, -5.0139e-02,  2.1064e+00,
            1.5336e+00,  4.4066e-01,  2.0291e+00,  2.4760e-01,  2.4607e+00,
            1.1516e+00],
          [ 2.2274e+00,  2.1726e+00,  1.1683e+00,  2.7478e+00,  2.9217e+00,
            2.5540e+00, -6.3794e-02,  1.0916e+00,  2.2190e+00,  2.2959e+00,
            2.1052e+00,  7.9773e-01,  1.4676e+00,  4.1264e-01,  6.4830e-01,
            2.0002e-01],
          [ 1.9351e+00,  3.6004e+00,  2.4252e+00,  7.8594e-01,  3.0591e+00,
            2.2320e+00,  3.7502e+00,  2.3544e+00,  1.5001e+00,  1.1651e+00,
            2.0784e+00,  2.2962e+00,  2.0544e+00,  1.3580e+00,  2.8882e+00,
            1.8750e+00],
          [ 5.7188e-01,  3.1253e+00,  5.6432e-01,  1.9401e+00,  2.2481e+00,
            1.9719e+00,  1.6344e+00,  2.3966e+00,  2.6100e+00, -1.6675e+00,
            3.1852e+00,  3.2788e+00, -3.1762e-01,  2.2364e+00,  1.7231e+00,
           -6.4783e-01],
          [ 2.6436e+00,  2.0406e-01,  2.7999e+00,  2.8011e+00,  1.2331e+00,
            2.3749e+00,  1.4677e+00,  3.1379e+00,  1.6884e+00,  1.5561e+00,
            2.1204e+00,  4.2181e+00,  2.7760e+00,  1.0539e+00,  1.0200e+00,
            2.4431e+00],
          [ 2.2903e+00,  8.2146e-01, -1.3554e+00,  9.7905e-01, -1.2387e+00,
            1.7949e+00,  8.6008e-01,  2.1573e+00,  1.5022e+00,  2.1926e+00,
            1.5042e+00,  1.7912e-01,  1.0716e+00,  1.6085e+00,  3.0759e+00,
            2.4430e+00],
          [ 1.4184e-01,  7.2895e-01,  2.5264e+00,  7.2112e-01,  2.1845e+00,
           -1.4191e+00,  2.2514e+00,  2.7081e+00,  1.3929e+00,  1.4584e+00,
            1.7450e+00,  2.4333e+00,  1.9489e+00,  1.6122e+00,  4.8674e-01,
            2.0840e+00]],

         [[ 6.1607e-01,  1.1370e+00,  1.9192e+00,  1.5348e+00,  2.4738e+00,
            1.8425e-01,  2.1192e+00,  1.2921e+00,  1.0443e+00,  2.2408e+00,
            1.3269e+00,  1.5678e+00,  1.5924e+00, -8.7401e-01,  1.4087e+00,
           -1.2399e-01],
          [-5.3032e-01,  2.7984e+00,  1.4090e+00,  1.0610e+00,  1.1284e+00,
            1.0514e+00,  3.2153e-01,  3.1616e+00,  1.4921e+00,  1.2939e+00,
            2.0490e+00,  3.4073e+00,  2.9995e+00,  4.6365e-01,  1.0843e+00,
            1.9225e+00],
          [ 1.1227e+00,  7.6977e-01,  1.8159e+00,  1.7418e+00,  7.9385e-01,
            2.4581e+00,  1.3383e+00,  2.3597e+00,  1.2303e+00,  1.3150e+00,
            1.3622e+00,  3.2756e+00,  1.5212e+00,  2.0078e+00,  1.3692e+00,
            3.0942e+00],
          [ 1.3349e+00,  6.7626e-01,  1.9225e+00, -1.1942e-01,  3.2997e+00,
            3.3506e+00,  2.2723e+00,  4.8728e-01,  2.1392e+00,  1.2277e+00,
            1.3248e+00,  2.2739e+00,  1.2629e+00,  2.3363e+00,  1.8529e+00,
            2.6089e+00],
          [ 1.7757e+00,  5.6497e-01,  1.8758e+00,  1.8664e+00,  1.3634e+00,
            2.1418e+00,  1.6430e+00,  2.1548e+00,  2.0133e+00,  2.0495e+00,
            3.5116e-01,  2.2696e+00,  1.1259e+00, -6.8346e-01,  1.6775e+00,
            6.2489e-01],
          [ 1.3910e+00,  2.0227e+00,  1.0197e+00,  1.0446e+00,  1.4043e+00,
            6.9560e-01,  1.9981e+00,  2.4804e+00,  2.2791e+00,  4.4210e-01,
            2.3941e+00,  4.2475e-01,  3.1953e+00,  1.3424e+00,  9.2788e-01,
            2.4047e+00],
          [ 2.1257e+00,  2.1819e+00,  1.8403e+00,  2.6949e+00,  9.2174e-01,
            2.3460e+00,  2.8444e+00,  9.0310e-01,  1.4417e+00,  2.3017e-01,
            3.3204e+00,  2.0735e+00,  1.6390e+00,  4.0968e-01,  3.1742e-01,
            1.4335e+00],
          [ 2.7577e+00,  1.2737e+00,  2.7779e+00,  7.0016e-02,  2.5273e+00,
            2.1197e+00,  2.2608e+00,  1.1176e+00,  4.7460e+00, -5.4228e-01,
            4.0066e+00,  1.2408e+00,  6.2114e-01,  3.3490e+00,  9.5934e-01,
            1.6069e+00],
          [ 1.4779e+00,  2.4023e+00,  1.7663e+00,  2.7580e+00,  1.6885e+00,
            2.7766e+00,  2.4445e+00,  2.2014e+00,  7.4556e-01,  2.6370e+00,
            1.5471e+00,  3.1302e+00,  2.3452e+00,  1.0327e+00,  6.6250e-02,
            3.3719e+00],
          [ 3.5129e+00, -1.3318e-01, -2.6231e-01,  2.5233e+00,  1.8189e+00,
            2.5195e+00,  1.6920e+00, -8.7005e-02,  3.0958e+00,  1.3051e+00,
            1.3212e+00,  3.9368e+00,  2.9513e+00,  6.8663e-01,  2.4440e+00,
            1.6885e+00],
          [ 2.4020e+00,  5.4470e-02,  7.8046e-01,  1.1523e+00,  1.0484e+00,
            2.0826e+00,  1.4931e+00,  1.8287e+00,  2.7791e+00,  4.9350e-01,
            3.1361e-01,  2.7326e+00, -9.9472e-02,  1.9720e+00,  1.4117e+00,
            5.0225e-01],
          [ 2.1183e+00,  2.2470e+00,  1.9462e+00,  2.4419e+00,  3.2940e+00,
            3.7959e+00,  7.1671e-02,  2.1681e+00,  3.1153e+00,  2.7181e+00,
            1.3996e+00,  1.0666e+00,  1.6931e+00,  2.6490e+00,  3.0756e+00,
            6.8461e-02],
          [ 2.0973e+00,  8.7743e-01,  1.4141e+00,  2.6725e+00,  2.8639e+00,
            1.8696e+00,  2.2635e+00,  2.3812e+00, -4.0674e-01,  1.2072e+00,
            1.3719e+00,  9.9089e-01,  2.1954e+00,  2.8956e+00,  3.0365e+00,
            2.9500e+00],
          [ 1.6584e+00,  2.9597e+00,  3.2325e+00,  1.0557e+00,  1.0706e+00,
            4.5015e+00,  1.6052e+00,  1.5170e+00,  2.1318e+00, -7.9644e-02,
            1.2983e+00,  2.6465e+00,  2.1056e+00,  1.9859e+00,  9.8541e-01,
            9.3143e-01],
          [ 2.3946e+00,  1.9160e+00,  2.5260e+00,  2.1261e+00,  4.1501e+00,
            3.0367e-01,  3.0891e+00,  8.5305e-01,  6.8043e-01,  2.5423e-01,
           -3.2158e-01,  2.9093e+00,  2.0363e-01,  3.1329e+00,  2.6157e+00,
            1.4502e+00],
          [ 1.2496e+00,  7.8251e-01,  2.4529e+00,  5.5641e-01,  1.3265e+00,
            8.4047e-01, -3.5097e-01,  2.4672e+00,  2.2239e+00,  1.7099e+00,
            2.0920e+00,  3.1676e+00,  2.9686e+00,  2.0481e-01,  1.4618e+00,
            2.8068e+00]]]])]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 16, 16] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 1, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 16, 16], dtype=Float32, value=
[[[[2.59454417e+000, 1.70264399e+000, 2.33168513e-001 ... 3.39915335e-001, 1.84045351e+000, 2.64958358e+000],
   [1.79184294e+000, 1.44425416e+000, 4.00600433e+000 ... 2.16177201e+000, 1.84442043e+000, 1.40613532e+000],
   [1.67431104e+000, 2.29760027e+000, 1.77138174e+000 ... 2.67190361e+000, 1.83435440e+000, 1.02472901e+000],
   ...
   [2.57283020e+000, 1.38446915e+000, 1.79518080e+000 ... 2.85137224e+000, 2.49422026e+000, 6.89247549e-002],
   [2.66809750e+000, 1.80642772e+000, 2.59447098e+000 ... 2.12295389e+000, 3.07103157e+000, 1.62508464e+000],
   [1.72508526e+000, 2.29890013e+000, 3.05391097e+000 ... 1.56178212e+000, 2.02304935e+000, 3.16951466e+000]],
  [[9.51227963e-001, 1.84629607e+000, 1.80798841e+000 ... 2.41199589e+000, 1.88269985e+000, 2.75881648e+000],
   [2.39583254e+000, 2.72306681e-001, 2.65342966e-002 ... 1.96989965e+000, 1.84209573e+000, 1.08985579e+000],
   [2.36229110e+000, 2.92697763e+000, -8.44812274e-001 ... 2.63905668e+000, -1.08195257e+000, 1.57349563e+000],
   ...
   [2.64359856e+000, 2.04061985e-001, 2.79988432e+000 ... 1.05389297e+000, 1.02002823e+000, 2.44306374e+000],
   [2.29028034e+000, 8.21458340e-001, -1.35543883e+000 ... 1.60845828e+000, 3.07588482e+000, 2.44303179e+000],
   [1.41835600e-001, 7.28953183e-001, 2.52640200e+000 ... 1.61217070e+000, 4.86742496e-001, 2.08399510e+000]],
  [[6.16066396e-001, 1.13699007e+000, 1.91919637e+000 ... -8.74013066e-001, 1.40867054e+000, -1.23985067e-001],
   [-5.30321062e-001, 2.79835129e+000, 1.40901148e+000 ... 4.63647366e-001, 1.08425379e+000, 1.92252254e+000],
   [1.12274241e+000, 7.69774914e-001, 1.81594682e+000 ... 2.00779629e+000, 1.36921167e+000, 3.09421611e+000],
   ...
   [1.65840554e+000, 2.95970392e+000, 3.23246098e+000 ... 1.98591304e+000, 9.85412359e-001, 9.31429625e-001],
   [2.39461517e+000, 1.91604614e+000, 2.52601123e+000 ... 3.13289690e+000, 2.61569071e+000, 1.45020688e+000],
   [1.24961674e+000, 7.82507300e-001, 2.45289302e+000 ... 2.04812527e-001, 1.46183085e+000, 2.80683374e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:418

analyse the exceptions in iter:488
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[16.2102, 15.8290, 13.7454,  ...,  9.6019, 10.5298, 17.5217],
          [14.8377, 13.0904,  9.7434,  ...,  9.8425, 12.2778, 10.2932],
          [19.1533, 18.3012, 12.7091,  ..., 14.2361, 15.4941, 10.2539],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]])]}
Given groups=1, weight of size [512, 512, 1, 1], expected input[1, 3, 32, 32] to have 512 channels, but got 3 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[1.62102203e+001, 1.58290024e+001, 1.37454128e+001 ... 9.60190964e+000, 1.05298367e+001, 1.75217247e+001],
   [1.48377476e+001, 1.30903568e+001, 9.74344730e+000 ... 9.84247684e+000, 1.22777967e+001, 1.02932472e+001],
   [1.91533184e+001, 1.83012447e+001, 1.27091188e+001 ... 1.42360611e+001, 1.54941120e+001, 1.02539206e+001],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 512, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:421

analyse output arrays in iter:494

pre layer res:
12:add
{'name': 'add', 'output': array([[[[ 2.26187061e+03,  1.98172046e+03,  2.51782861e+03, ...,
           2.62212061e+03,  3.32287036e+03,  1.85513367e+03],
         [ 2.11768579e+03,  1.99166797e+03,  2.45072095e+03, ...,
           2.67367529e+03,  2.86269458e+03,  1.74670007e+03],
         [ 2.42597266e+03,  2.41676270e+03,  2.70805200e+03, ...,
           2.74262256e+03,  3.23036938e+03,  1.70827197e+03],
         ...,
         [ 1.95465173e+03,  2.28059961e+03,  2.76300903e+03, ...,
           3.08421411e+03,  3.30421899e+03,  1.71192090e+03],
         [ 2.01816064e+03,  2.20172607e+03,  2.54488257e+03, ...,
           2.82560132e+03,  3.34992603e+03,  1.82992688e+03],
         [ 2.14609985e+03,  2.00553589e+03,  2.65678296e+03, ...,
           3.08697314e+03,  2.99471167e+03,  1.61844763e+03]],

        [[ 2.26187061e+03,  1.98172046e+03,  2.51782861e+03, ...,
           2.62212061e+03,  3.32287036e+03,  1.85513367e+03],
         [ 2.11768579e+03,  1.99166797e+03,  2.45072095e+03, ...,
           2.67367529e+03,  2.86269458e+03,  1.74670007e+03],
         [ 2.42597266e+03,  2.41676270e+03,  2.70805200e+03, ...,
           2.74262256e+03,  3.23036938e+03,  1.70827197e+03],
         ...,
         [ 1.95465173e+03,  2.28059961e+03,  2.76300903e+03, ...,
           3.08421411e+03,  3.30421899e+03,  1.71192090e+03],
         [ 2.01816064e+03,  2.20172607e+03,  2.54488257e+03, ...,
           2.82560132e+03,  3.34992603e+03,  1.82992688e+03],
         [ 2.14609985e+03,  2.00553589e+03,  2.65678296e+03, ...,
           3.08697314e+03,  2.99471167e+03,  1.61844763e+03]],

        [[ 2.26187061e+03,  1.98172046e+03,  2.51782861e+03, ...,
           2.62212061e+03,  3.32287036e+03,  1.85513367e+03],
         [ 2.11768579e+03,  1.99166797e+03,  2.45072095e+03, ...,
           2.67367529e+03,  2.86269458e+03,  1.74670007e+03],
         [ 2.42597266e+03,  2.41676270e+03,  2.70805200e+03, ...,
           2.74262256e+03,  3.23036938e+03,  1.70827197e+03],
         ...,
         [ 1.95465173e+03,  2.28059961e+03,  2.76300903e+03, ...,
           3.08421411e+03,  3.30421899e+03,  1.71192090e+03],
         [ 2.01816064e+03,  2.20172607e+03,  2.54488257e+03, ...,
           2.82560132e+03,  3.34992603e+03,  1.82992688e+03],
         [ 2.14609985e+03,  2.00553589e+03,  2.65678296e+03, ...,
           3.08697314e+03,  2.99471167e+03,  1.61844763e+03]],

        ...,

        [[ 8.68625641e+01, -2.53292175e+02,  1.35477543e+00, ...,
          -2.53882751e+02,  2.14878021e+02, -1.66216297e+01],
         [-5.73222847e+01, -2.43344711e+02, -6.57529678e+01, ...,
          -2.02328064e+02, -2.45297882e+02, -1.25055183e+02],
         [ 2.50964600e+02,  1.81749908e+02,  1.91578140e+02, ...,
          -1.33380768e+02,  1.22376945e+02, -1.63483215e+02],
         ...,
         [-2.20356323e+02,  4.55868340e+01,  2.46535217e+02, ...,
           2.08210709e+02,  1.96226593e+02, -1.59834381e+02],
         [-1.56847351e+02, -3.32866402e+01,  2.84086628e+01, ...,
          -5.04020348e+01,  2.41933594e+02, -4.18284111e+01],
         [-2.89081936e+01, -2.29476791e+02,  1.40309021e+02, ...,
           2.10969711e+02, -1.13280830e+02, -2.53307617e+02]],

        [[ 8.68625641e+01, -2.53292175e+02,  1.35477543e+00, ...,
          -2.53882751e+02,  2.14878021e+02, -1.66216297e+01],
         [-5.73222847e+01, -2.43344711e+02, -6.57529678e+01, ...,
          -2.02328064e+02, -2.45297882e+02, -1.25055183e+02],
         [ 2.50964600e+02,  1.81749908e+02,  1.91578140e+02, ...,
          -1.33380768e+02,  1.22376945e+02, -1.63483215e+02],
         ...,
         [-2.20356323e+02,  4.55868340e+01,  2.46535217e+02, ...,
           2.08210709e+02,  1.96226593e+02, -1.59834381e+02],
         [-1.56847351e+02, -3.32866402e+01,  2.84086628e+01, ...,
          -5.04020348e+01,  2.41933594e+02, -4.18284111e+01],
         [-2.89081936e+01, -2.29476791e+02,  1.40309021e+02, ...,
           2.10969711e+02, -1.13280830e+02, -2.53307617e+02]],

        [[ 8.68625641e+01, -2.53292175e+02,  1.35477543e+00, ...,
          -2.53882751e+02,  2.14878021e+02, -1.66216297e+01],
         [-5.73222847e+01, -2.43344711e+02, -6.57529678e+01, ...,
          -2.02328064e+02, -2.45297882e+02, -1.25055183e+02],
         [ 2.50964600e+02,  1.81749908e+02,  1.91578140e+02, ...,
          -1.33380768e+02,  1.22376945e+02, -1.63483215e+02],
         ...,
         [-2.20356323e+02,  4.55868340e+01,  2.46535217e+02, ...,
           2.08210709e+02,  1.96226593e+02, -1.59834381e+02],
         [-1.56847351e+02, -3.32866402e+01,  2.84086628e+01, ...,
          -5.04020348e+01,  2.41933594e+02, -4.18284111e+01],
         [-2.89081936e+01, -2.29476791e+02,  1.40309021e+02, ...,
           2.10969711e+02, -1.13280830e+02, -2.53307617e+02]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 32, 32]), 'from': [3, 1], 'to': [4]}
tf node:
{'name': 'linear', 'output': array([[[[ 8.6039000e+04,  8.6039000e+04,  8.6039000e+04, ...,
           8.6039000e+04,  8.6039000e+04,  8.6039000e+04],
         [ 8.3631000e+04,  8.3631000e+04,  8.3631000e+04, ...,
           8.3631000e+04,  8.3631000e+04,  8.3631000e+04],
         [ 8.6987000e+04,  8.6987000e+04,  8.6987000e+04, ...,
           8.6987000e+04,  8.6987000e+04,  8.6987000e+04],
         ...,
         [ 8.6262000e+04,  8.6262000e+04,  8.6262000e+04, ...,
           8.6262000e+04,  8.6262000e+04,  8.6262000e+04],
         [ 8.7023000e+04,  8.7023000e+04,  8.7023000e+04, ...,
           8.7023000e+04,  8.7023000e+04,  8.7023000e+04],
         [ 8.6291000e+04,  8.6291000e+04,  8.6291000e+04, ...,
           8.6291000e+04,  8.6291000e+04,  8.6291000e+04]],

        [[ 8.6039000e+04,  8.6039000e+04,  8.6039000e+04, ...,
           8.6039000e+04,  8.6039000e+04,  8.6039000e+04],
         [ 8.3631000e+04,  8.3631000e+04,  8.3631000e+04, ...,
           8.3631000e+04,  8.3631000e+04,  8.3631000e+04],
         [ 8.6987000e+04,  8.6987000e+04,  8.6987000e+04, ...,
           8.6987000e+04,  8.6987000e+04,  8.6987000e+04],
         ...,
         [ 8.6262000e+04,  8.6262000e+04,  8.6262000e+04, ...,
           8.6262000e+04,  8.6262000e+04,  8.6262000e+04],
         [ 8.7023000e+04,  8.7023000e+04,  8.7023000e+04, ...,
           8.7023000e+04,  8.7023000e+04,  8.7023000e+04],
         [ 8.6291000e+04,  8.6291000e+04,  8.6291000e+04, ...,
           8.6291000e+04,  8.6291000e+04,  8.6291000e+04]],

        [[ 8.6039000e+04,  8.6039000e+04,  8.6039000e+04, ...,
           8.6039000e+04,  8.6039000e+04,  8.6039000e+04],
         [ 8.3631000e+04,  8.3631000e+04,  8.3631000e+04, ...,
           8.3631000e+04,  8.3631000e+04,  8.3631000e+04],
         [ 8.6987000e+04,  8.6987000e+04,  8.6987000e+04, ...,
           8.6987000e+04,  8.6987000e+04,  8.6987000e+04],
         ...,
         [ 8.6262000e+04,  8.6262000e+04,  8.6262000e+04, ...,
           8.6262000e+04,  8.6262000e+04,  8.6262000e+04],
         [ 8.7023000e+04,  8.7023000e+04,  8.7023000e+04, ...,
           8.7023000e+04,  8.7023000e+04,  8.7023000e+04],
         [ 8.6291000e+04,  8.6291000e+04,  8.6291000e+04, ...,
           8.6291000e+04,  8.6291000e+04,  8.6291000e+04]],

        ...,

        [[-1.7752637e+02, -1.7752637e+02, -1.7752637e+02, ...,
          -1.7752637e+02, -1.7752637e+02, -1.7752637e+02],
         [-2.5808040e+03, -2.5808040e+03, -2.5808040e+03, ...,
          -2.5808040e+03, -2.5808040e+03, -2.5808040e+03],
         [ 7.7155469e+02,  7.7155469e+02,  7.7155469e+02, ...,
           7.7155469e+02,  7.7155469e+02,  7.7155469e+02],
         ...,
         [ 4.8250000e+01,  4.8250000e+01,  4.8250000e+01, ...,
           4.8250000e+01,  4.8250000e+01,  4.8250000e+01],
         [ 8.0860938e+02,  8.0860938e+02,  8.0860938e+02, ...,
           8.0860938e+02,  8.0860938e+02,  8.0860938e+02],
         [ 8.1189453e+01,  8.1189453e+01,  8.1189453e+01, ...,
           8.1189453e+01,  8.1189453e+01,  8.1189453e+01]],

        [[-1.7752637e+02, -1.7752637e+02, -1.7752637e+02, ...,
          -1.7752637e+02, -1.7752637e+02, -1.7752637e+02],
         [-2.5808040e+03, -2.5808040e+03, -2.5808040e+03, ...,
          -2.5808040e+03, -2.5808040e+03, -2.5808040e+03],
         [ 7.7155469e+02,  7.7155469e+02,  7.7155469e+02, ...,
           7.7155469e+02,  7.7155469e+02,  7.7155469e+02],
         ...,
         [ 4.8250000e+01,  4.8250000e+01,  4.8250000e+01, ...,
           4.8250000e+01,  4.8250000e+01,  4.8250000e+01],
         [ 8.0860938e+02,  8.0860938e+02,  8.0860938e+02, ...,
           8.0860938e+02,  8.0860938e+02,  8.0860938e+02],
         [ 8.1189453e+01,  8.1189453e+01,  8.1189453e+01, ...,
           8.1189453e+01,  8.1189453e+01,  8.1189453e+01]],

        [[-1.7752637e+02, -1.7752637e+02, -1.7752637e+02, ...,
          -1.7752637e+02, -1.7752637e+02, -1.7752637e+02],
         [-2.5808040e+03, -2.5808040e+03, -2.5808040e+03, ...,
          -2.5808040e+03, -2.5808040e+03, -2.5808040e+03],
         [ 7.7155469e+02,  7.7155469e+02,  7.7155469e+02, ...,
           7.7155469e+02,  7.7155469e+02,  7.7155469e+02],
         ...,
         [ 4.8250000e+01,  4.8250000e+01,  4.8250000e+01, ...,
           4.8250000e+01,  4.8250000e+01,  4.8250000e+01],
         [ 8.0860938e+02,  8.0860938e+02,  8.0860938e+02, ...,
           8.0860938e+02,  8.0860938e+02,  8.0860938e+02],
         [ 8.1189453e+01,  8.1189453e+01,  8.1189453e+01, ...,
           8.1189453e+01,  8.1189453e+01,  8.1189453e+01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 32, 100]), 'from': [12], 'to': []}
ms node:
{'name': 'linear', 'output': array([[[[ 8.6035453e+04,  8.6035453e+04,  8.6035453e+04, ...,
           8.6035453e+04,  8.6035453e+04,  8.6035453e+04],
         [ 8.3632172e+04,  8.3632172e+04,  8.3632172e+04, ...,
           8.3632172e+04,  8.3632172e+04,  8.3632172e+04],
         [ 8.6984523e+04,  8.6984523e+04,  8.6984523e+04, ...,
           8.6984516e+04,  8.6984516e+04,  8.6984516e+04],
         ...,
         [ 8.6261406e+04,  8.6261406e+04,  8.6261406e+04, ...,
           8.6261398e+04,  8.6261398e+04,  8.6261398e+04],
         [ 8.7021797e+04,  8.7021797e+04,  8.7021797e+04, ...,
           8.7021797e+04,  8.7021797e+04,  8.7021797e+04],
         [ 8.6294039e+04,  8.6294039e+04,  8.6294039e+04, ...,
           8.6294047e+04,  8.6294047e+04,  8.6294047e+04]],

        [[ 8.6035453e+04,  8.6035453e+04,  8.6035453e+04, ...,
           8.6035453e+04,  8.6035453e+04,  8.6035453e+04],
         [ 8.3632172e+04,  8.3632172e+04,  8.3632172e+04, ...,
           8.3632172e+04,  8.3632172e+04,  8.3632172e+04],
         [ 8.6984523e+04,  8.6984523e+04,  8.6984523e+04, ...,
           8.6984516e+04,  8.6984516e+04,  8.6984516e+04],
         ...,
         [ 8.6261406e+04,  8.6261406e+04,  8.6261406e+04, ...,
           8.6261398e+04,  8.6261398e+04,  8.6261398e+04],
         [ 8.7021797e+04,  8.7021797e+04,  8.7021797e+04, ...,
           8.7021797e+04,  8.7021797e+04,  8.7021797e+04],
         [ 8.6294039e+04,  8.6294039e+04,  8.6294039e+04, ...,
           8.6294047e+04,  8.6294047e+04,  8.6294047e+04]],

        [[ 8.6035453e+04,  8.6035453e+04,  8.6035453e+04, ...,
           8.6035453e+04,  8.6035453e+04,  8.6035453e+04],
         [ 8.3632172e+04,  8.3632172e+04,  8.3632172e+04, ...,
           8.3632172e+04,  8.3632172e+04,  8.3632172e+04],
         [ 8.6984523e+04,  8.6984523e+04,  8.6984523e+04, ...,
           8.6984516e+04,  8.6984516e+04,  8.6984516e+04],
         ...,
         [ 8.6261406e+04,  8.6261406e+04,  8.6261406e+04, ...,
           8.6261398e+04,  8.6261398e+04,  8.6261398e+04],
         [ 8.7021797e+04,  8.7021797e+04,  8.7021797e+04, ...,
           8.7021797e+04,  8.7021797e+04,  8.7021797e+04],
         [ 8.6294039e+04,  8.6294039e+04,  8.6294039e+04, ...,
           8.6294047e+04,  8.6294047e+04,  8.6294047e+04]],

        ...,

        [[-1.7754988e+02, -1.7754988e+02, -1.7754988e+02, ...,
          -1.7754993e+02, -1.7754993e+02, -1.7754993e+02],
         [-2.5808293e+03, -2.5808293e+03, -2.5808293e+03, ...,
          -2.5808291e+03, -2.5808291e+03, -2.5808291e+03],
         [ 7.7151642e+02,  7.7151642e+02,  7.7151642e+02, ...,
           7.7151636e+02,  7.7151636e+02,  7.7151636e+02],
         ...,
         [ 4.8396744e+01,  4.8396744e+01,  4.8396744e+01, ...,
           4.8396759e+01,  4.8396759e+01,  4.8396759e+01],
         [ 8.0878949e+02,  8.0878949e+02,  8.0878949e+02, ...,
           8.0878943e+02,  8.0878943e+02,  8.0878943e+02],
         [ 8.1041443e+01,  8.1041443e+01,  8.1041443e+01, ...,
           8.1041382e+01,  8.1041382e+01,  8.1041382e+01]],

        [[-1.7755389e+02, -1.7755389e+02, -1.7755389e+02, ...,
          -1.7755383e+02, -1.7755383e+02, -1.7755383e+02],
         [-2.5808330e+03, -2.5808330e+03, -2.5808330e+03, ...,
          -2.5808330e+03, -2.5808330e+03, -2.5808330e+03],
         [ 7.7151373e+02,  7.7151373e+02,  7.7151373e+02, ...,
           7.7151367e+02,  7.7151367e+02,  7.7151367e+02],
         ...,
         [ 4.8398636e+01,  4.8398636e+01,  4.8398636e+01, ...,
           4.8398621e+01,  4.8398621e+01,  4.8398621e+01],
         [ 8.0878815e+02,  8.0878815e+02,  8.0878815e+02, ...,
           8.0878809e+02,  8.0878809e+02,  8.0878809e+02],
         [ 8.1046310e+01,  8.1046310e+01,  8.1046310e+01, ...,
           8.1046356e+01,  8.1046356e+01,  8.1046356e+01]],

        [[-1.7755389e+02, -1.7755389e+02, -1.7755389e+02, ...,
          -1.7755383e+02, -1.7755383e+02, -1.7755383e+02],
         [-2.5808330e+03, -2.5808330e+03, -2.5808330e+03, ...,
          -2.5808330e+03, -2.5808330e+03, -2.5808330e+03],
         [ 7.7151373e+02,  7.7151373e+02,  7.7151373e+02, ...,
           7.7151367e+02,  7.7151367e+02,  7.7151367e+02],
         ...,
         [ 4.8398636e+01,  4.8398636e+01,  4.8398636e+01, ...,
           4.8398621e+01,  4.8398621e+01,  4.8398621e+01],
         [ 8.0878809e+02,  8.0878809e+02,  8.0878809e+02, ...,
           8.0878809e+02,  8.0878809e+02,  8.0878809e+02],
         [ 8.1046356e+01,  8.1046356e+01,  8.1046356e+01, ...,
           8.1046356e+01,  8.1046356e+01,  8.1046356e+01]]]],
      dtype=float32), 'output_shape': (1, 128, 32, 100), 'from': [12], 'to': []}
torch node:
{'name': 'linear', 'output': array([[[[ 8.6035461e+04,  8.6035461e+04,  8.6035461e+04, ...,
           8.6035453e+04,  8.6035453e+04,  8.6035453e+04],
         [ 8.3632164e+04,  8.3632164e+04,  8.3632164e+04, ...,
           8.3632172e+04,  8.3632172e+04,  8.3632172e+04],
         [ 8.6984523e+04,  8.6984523e+04,  8.6984523e+04, ...,
           8.6984516e+04,  8.6984516e+04,  8.6984516e+04],
         ...,
         [ 8.6261398e+04,  8.6261398e+04,  8.6261398e+04, ...,
           8.6261406e+04,  8.6261406e+04,  8.6261406e+04],
         [ 8.7021789e+04,  8.7021789e+04,  8.7021789e+04, ...,
           8.7021797e+04,  8.7021797e+04,  8.7021797e+04],
         [ 8.6294047e+04,  8.6294047e+04,  8.6294047e+04, ...,
           8.6294047e+04,  8.6294047e+04,  8.6294047e+04]],

        [[ 8.6035461e+04,  8.6035461e+04,  8.6035461e+04, ...,
           8.6035453e+04,  8.6035453e+04,  8.6035453e+04],
         [ 8.3632164e+04,  8.3632164e+04,  8.3632164e+04, ...,
           8.3632172e+04,  8.3632172e+04,  8.3632172e+04],
         [ 8.6984523e+04,  8.6984523e+04,  8.6984523e+04, ...,
           8.6984516e+04,  8.6984516e+04,  8.6984516e+04],
         ...,
         [ 8.6261398e+04,  8.6261398e+04,  8.6261398e+04, ...,
           8.6261406e+04,  8.6261406e+04,  8.6261406e+04],
         [ 8.7021789e+04,  8.7021789e+04,  8.7021789e+04, ...,
           8.7021797e+04,  8.7021797e+04,  8.7021797e+04],
         [ 8.6294047e+04,  8.6294047e+04,  8.6294047e+04, ...,
           8.6294047e+04,  8.6294047e+04,  8.6294047e+04]],

        [[ 8.6035461e+04,  8.6035461e+04,  8.6035461e+04, ...,
           8.6035453e+04,  8.6035453e+04,  8.6035453e+04],
         [ 8.3632164e+04,  8.3632164e+04,  8.3632164e+04, ...,
           8.3632172e+04,  8.3632172e+04,  8.3632172e+04],
         [ 8.6984523e+04,  8.6984523e+04,  8.6984523e+04, ...,
           8.6984516e+04,  8.6984516e+04,  8.6984516e+04],
         ...,
         [ 8.6261398e+04,  8.6261398e+04,  8.6261398e+04, ...,
           8.6261406e+04,  8.6261406e+04,  8.6261406e+04],
         [ 8.7021789e+04,  8.7021789e+04,  8.7021789e+04, ...,
           8.7021797e+04,  8.7021797e+04,  8.7021797e+04],
         [ 8.6294047e+04,  8.6294047e+04,  8.6294047e+04, ...,
           8.6294047e+04,  8.6294047e+04,  8.6294047e+04]],

        ...,

        [[-1.7755389e+02, -1.7755389e+02, -1.7755389e+02, ...,
          -1.7755383e+02, -1.7755383e+02, -1.7755383e+02],
         [-2.5808330e+03, -2.5808330e+03, -2.5808330e+03, ...,
          -2.5808330e+03, -2.5808330e+03, -2.5808330e+03],
         [ 7.7151373e+02,  7.7151373e+02,  7.7151373e+02, ...,
           7.7151367e+02,  7.7151367e+02,  7.7151367e+02],
         ...,
         [ 4.8398636e+01,  4.8398636e+01,  4.8398636e+01, ...,
           4.8398621e+01,  4.8398621e+01,  4.8398621e+01],
         [ 8.0878815e+02,  8.0878815e+02,  8.0878815e+02, ...,
           8.0878809e+02,  8.0878809e+02,  8.0878809e+02],
         [ 8.1046310e+01,  8.1046310e+01,  8.1046310e+01, ...,
           8.1046356e+01,  8.1046356e+01,  8.1046356e+01]],

        [[-1.7755389e+02, -1.7755389e+02, -1.7755389e+02, ...,
          -1.7755383e+02, -1.7755383e+02, -1.7755383e+02],
         [-2.5808330e+03, -2.5808330e+03, -2.5808330e+03, ...,
          -2.5808330e+03, -2.5808330e+03, -2.5808330e+03],
         [ 7.7151373e+02,  7.7151373e+02,  7.7151373e+02, ...,
           7.7151367e+02,  7.7151367e+02,  7.7151367e+02],
         ...,
         [ 4.8398636e+01,  4.8398636e+01,  4.8398636e+01, ...,
           4.8398621e+01,  4.8398621e+01,  4.8398621e+01],
         [ 8.0878815e+02,  8.0878815e+02,  8.0878815e+02, ...,
           8.0878809e+02,  8.0878809e+02,  8.0878809e+02],
         [ 8.1046310e+01,  8.1046310e+01,  8.1046310e+01, ...,
           8.1046356e+01,  8.1046356e+01,  8.1046356e+01]],

        [[-1.7755389e+02, -1.7755389e+02, -1.7755389e+02, ...,
          -1.7755383e+02, -1.7755383e+02, -1.7755383e+02],
         [-2.5808330e+03, -2.5808330e+03, -2.5808330e+03, ...,
          -2.5808330e+03, -2.5808330e+03, -2.5808330e+03],
         [ 7.7151373e+02,  7.7151373e+02,  7.7151373e+02, ...,
           7.7151367e+02,  7.7151367e+02,  7.7151367e+02],
         ...,
         [ 4.8398636e+01,  4.8398636e+01,  4.8398636e+01, ...,
           4.8398621e+01,  4.8398621e+01,  4.8398621e+01],
         [ 8.0878815e+02,  8.0878815e+02,  8.0878815e+02, ...,
           8.0878809e+02,  8.0878809e+02,  8.0878809e+02],
         [ 8.1046310e+01,  8.1046310e+01,  8.1046310e+01, ...,
           8.1046356e+01,  8.1046356e+01,  8.1046356e+01]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 32, 100]), 'from': [12], 'to': []}

generate models:426

analyse the exceptions in iter:499
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])]}
Given groups=1, weight of size [512, 64, 1, 1], expected input[1, 3, 32, 100] to have 64 channels, but got 3 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 100], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:430

final statics:
total operators:28
tensorflow --> nums:58,distinct_bugs:7
mindspore --> nums:89,distinct_bugs:6
torch --> nums:85,distinct_bugs:7
tensorflow --> 
conv2d:7
linear:18
log:15
add:1
cos:11
sin:5
softmax:1
mindspore --> 
conv2d:45
log:21
linear:10
sin:5
cos:7
softmax:1
torch --> 
conv2d:45
maxpool2d:1
log:15
linear:10
sin:5
cos:7
softmax:2

generate models:430
