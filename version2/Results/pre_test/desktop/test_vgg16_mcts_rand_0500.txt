
analyse output arrays in iter:0

pre layer res:
tf node:
{'name': 'conv2d', 'output': array([[[[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        ...,

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        ...,

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        ...,

        [[  1.9693093 ,   2.0403676 ,  -3.2810204 , ...,   3.4880779 ,
            0.7750627 ,   0.17545867],
         [ -2.7328353 ,  -4.107739  , -10.119788  , ...,  -0.92468566,
           -1.6420453 ,   0.7950801 ],
         [ -4.188627  ,  -4.4819493 ,  -9.533054  , ...,  -2.9369438 ,
           -4.222205  ,   0.62740695],
         ...,
         [  0.3896155 ,  -2.8211007 ,  -8.503252  , ..., -11.0004015 ,
           -4.1650324 ,  -0.69577944],
         [  1.9790244 ,  -0.15955746,  -2.714744  , ...,  -1.6771541 ,
           -0.26267186,   4.5183835 ],
         [ -0.62968445,  -0.19477999,   1.7631321 , ...,  -1.346988  ,
            0.6268982 ,   4.281181  ]],

        [[  1.9693093 ,   2.0403671 ,  -3.2810202 , ...,   3.4880774 ,
            0.7750629 ,   0.17545855],
         [ -2.7328353 ,  -4.1077394 , -10.119787  , ...,  -0.9246853 ,
           -1.6420453 ,   0.7950804 ],
         [ -4.188627  ,  -4.4819484 ,  -9.533054  , ...,  -2.9369435 ,
           -4.2222047 ,   0.6274071 ],
         ...,
         [  0.3896154 ,  -2.8211012 ,  -8.503252  , ..., -11.000402  ,
           -4.165033  ,  -0.6957797 ],
         [  1.9790242 ,  -0.15955794,  -2.7147443 , ...,  -1.6771543 ,
           -0.26267168,   4.518383  ],
         [ -0.62968457,  -0.19477975,   1.7631316 , ...,  -1.3469884 ,
            0.62689805,   4.2811804 ]],

        [[  1.9693093 ,   2.0403671 ,  -3.2810202 , ...,   3.4880774 ,
            0.7750629 ,   0.17545855],
         [ -2.7328353 ,  -4.1077394 , -10.119787  , ...,  -0.9246853 ,
           -1.6420453 ,   0.7950804 ],
         [ -4.188627  ,  -4.4819484 ,  -9.533054  , ...,  -2.9369435 ,
           -4.2222047 ,   0.6274071 ],
         ...,
         [  0.3896154 ,  -2.8211012 ,  -8.503252  , ..., -11.000402  ,
           -4.165033  ,  -0.6957797 ],
         [  1.9790242 ,  -0.15955794,  -2.7147443 , ...,  -1.6771543 ,
           -0.26267168,   4.518383  ],
         [ -0.62968457,  -0.19477975,   1.7631316 , ...,  -1.3469884 ,
            0.62689805,   4.2811804 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [], 'to': []}

generate models:1

analyse output arrays in iter:6

pre layer res:
8:transpose
{'name': 'transpose', 'output': array([[[[         inf,          inf,          inf, ...,          inf,
          1.000000e+00,          inf],
         [         inf,          inf,          inf, ...,          inf,
                   inf,          inf],
         [         inf,          inf,          inf, ...,          inf,
                   inf,          inf],
         ...,
         [         inf,          inf,          inf, ...,          inf,
                   inf,          inf],
         [         inf, 1.000000e+00,          inf, ...,          inf,
                   inf,          inf],
         [         inf, 1.000000e+00,          inf, ...,          inf,
                   inf,          inf]],

        [[1.000000e+00,          inf, 1.000000e+00, ...,          inf,
          1.000000e+00,          inf],
         [         inf, 1.000000e+00,          inf, ...,          inf,
          1.000000e+00,          inf],
         [         inf,          inf,          inf, ...,          inf,
          1.000000e+00,          inf],
         ...,
         [         inf,          inf,          inf, ...,          inf,
                   inf,          inf],
         [         inf,          inf,          inf, ..., 1.000000e+00,
                   inf,          inf],
         [         inf,          inf,          inf, ..., 1.000000e+00,
                   inf,          inf]],

        [[1.000000e+00,          inf, 1.000000e+00, ...,          inf,
                   inf,          inf],
         [1.000000e+00,          inf, 1.000000e+00, ...,          inf,
                   inf,          inf],
         [1.000000e+00,          inf, 1.000000e+00, ...,          inf,
                   inf,          inf],
         ...,
         [         inf,          inf,          inf, ..., 5.712809e+24,
                   inf, 1.000000e+00],
         [         inf,          inf,          inf, ...,          inf,
                   inf,          inf],
         [         inf,          inf,          inf, ...,          inf,
                   inf,          inf]],

        ...,

        [[1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         ...,
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00]],

        [[1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         ...,
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00]],

        [[1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         ...,
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00],
         [1.000000e+00, 1.000000e+00, 1.000000e+00, ..., 1.000000e+00,
          1.000000e+00, 1.000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [11], 'to': [5]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [7]}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [7]}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [7]}

generate models:7

analyse output arrays in iter:8

pre layer res:
24:relu
{'name': 'relu', 'output': array([[[[6.85810730e+02, 1.31133386e+03, 1.00930206e+03, ...,
          2.34862402e+03, 2.62839404e+03, 6.32029053e+02],
         [2.46818994e+03, 3.70063281e+03, 2.60617041e+03, ...,
          2.14805933e+03, 2.01998535e+03, 3.78022278e+02],
         [1.45612378e+03, 3.39457593e+03, 3.21422070e+03, ...,
          1.73697485e+03, 1.04171851e+03, 8.33482910e+02],
         ...,
         [4.92880066e+02, 2.64841675e+02, 3.43963440e+02, ...,
          1.87568359e+03, 4.86080029e+03, 4.11276172e+03],
         [0.00000000e+00, 4.29009857e+02, 1.21867432e+03, ...,
          2.02368933e+03, 5.27771582e+03, 4.79526318e+03],
         [2.66841164e+01, 4.65753662e+02, 1.09044922e+03, ...,
          1.82635571e+03, 2.45904688e+03, 1.54636401e+03]],

        [[6.78852112e+02, 1.29606091e+03, 1.00407501e+03, ...,
          2.33702441e+03, 2.62537744e+03, 6.27293457e+02],
         [2.47678662e+03, 3.70547021e+03, 2.62436230e+03, ...,
          2.14358130e+03, 2.00699902e+03, 3.66937866e+02],
         [1.45165625e+03, 3.38444897e+03, 3.21269092e+03, ...,
          1.73332397e+03, 1.03750659e+03, 8.40531494e+02],
         ...,
         [4.99365356e+02, 2.55812531e+02, 3.36599365e+02, ...,
          1.87168237e+03, 4.86198193e+03, 4.12266992e+03],
         [7.56900120e+00, 4.46189789e+02, 1.23595728e+03, ...,
          2.02952698e+03, 5.28373535e+03, 4.79271045e+03],
         [1.88561287e+01, 4.54442810e+02, 1.07422388e+03, ...,
          1.83663257e+03, 2.46508154e+03, 1.54967236e+03]],

        [[6.88256775e+02, 1.29825452e+03, 1.00664362e+03, ...,
          2.32648047e+03, 2.61311719e+03, 6.17161499e+02],
         [2.46567871e+03, 3.70384766e+03, 2.60368750e+03, ...,
          2.15721753e+03, 2.01827368e+03, 3.74024414e+02],
         [1.46040576e+03, 3.38774683e+03, 3.22244775e+03, ...,
          1.69913794e+03, 1.01493921e+03, 8.12974731e+02],
         ...,
         [5.02906311e+02, 2.64445801e+02, 3.56340210e+02, ...,
          1.89029980e+03, 4.87121533e+03, 4.12930176e+03],
         [0.00000000e+00, 4.36725250e+02, 1.21698340e+03, ...,
          2.02127039e+03, 5.27466602e+03, 4.78271143e+03],
         [1.58955078e+01, 4.59295776e+02, 1.10108057e+03, ...,
          1.84225220e+03, 2.45825781e+03, 1.55084473e+03]],

        ...,

        [[6.78852112e+02, 1.29606091e+03, 1.00407501e+03, ...,
          2.33702441e+03, 2.62537744e+03, 6.27293457e+02],
         [2.47678662e+03, 3.70547021e+03, 2.62436230e+03, ...,
          2.14358130e+03, 2.00699902e+03, 3.66937866e+02],
         [1.45165625e+03, 3.38444897e+03, 3.21269092e+03, ...,
          1.73332397e+03, 1.03750659e+03, 8.40531494e+02],
         ...,
         [4.99365356e+02, 2.55812531e+02, 3.36599365e+02, ...,
          1.87168237e+03, 4.86198193e+03, 4.12266992e+03],
         [7.56900120e+00, 4.46189789e+02, 1.23595728e+03, ...,
          2.02952698e+03, 5.28373535e+03, 4.79271045e+03],
         [1.88561287e+01, 4.54442810e+02, 1.07422388e+03, ...,
          1.83663257e+03, 2.46508154e+03, 1.54967236e+03]],

        [[6.88256775e+02, 1.29825452e+03, 1.00664362e+03, ...,
          2.32648047e+03, 2.61311719e+03, 6.17161499e+02],
         [2.46567871e+03, 3.70384766e+03, 2.60368750e+03, ...,
          2.15721753e+03, 2.01827368e+03, 3.74024414e+02],
         [1.46040576e+03, 3.38774683e+03, 3.22244775e+03, ...,
          1.69913794e+03, 1.01493921e+03, 8.12974731e+02],
         ...,
         [5.02906311e+02, 2.64445801e+02, 3.56340210e+02, ...,
          1.89029980e+03, 4.87121533e+03, 4.12930176e+03],
         [0.00000000e+00, 4.36725250e+02, 1.21698340e+03, ...,
          2.02127039e+03, 5.27466602e+03, 4.78271143e+03],
         [1.58955078e+01, 4.59295776e+02, 1.10108057e+03, ...,
          1.84225220e+03, 2.45825781e+03, 1.55084473e+03]],

        [[6.85588806e+02, 1.31653113e+03, 1.01048785e+03, ...,
          2.33961572e+03, 2.62826270e+03, 6.17739136e+02],
         [2.45163818e+03, 3.68453857e+03, 2.60495752e+03, ...,
          2.14885425e+03, 1.99751978e+03, 3.67006836e+02],
         [1.45617529e+03, 3.39544751e+03, 3.21518115e+03, ...,
          1.72673071e+03, 1.03637354e+03, 8.26093506e+02],
         ...,
         [4.80493713e+02, 2.61572510e+02, 3.33755371e+02, ...,
          1.87946313e+03, 4.86300049e+03, 4.11579883e+03],
         [2.44905412e-01, 4.40520844e+02, 1.23639233e+03, ...,
          2.03704138e+03, 5.28284668e+03, 4.79620264e+03],
         [4.71823740e+00, 4.48188354e+02, 1.08050952e+03, ...,
          1.83291284e+03, 2.46293799e+03, 1.54825000e+03]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [10], 'to': [9]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.8096359 , -0.96075904, -0.7518222 , ..., -0.9600781 ,
           0.89966786, -0.5387304 ],
         [-0.8920605 , -0.16260818, -0.9760491 , ..., -0.7103877 ,
           0.05869095,  0.8578953 ],
         [-0.9999902 ,  0.9963841 , -0.36293757, ...,  0.32014632,
          -0.96090573, -0.8196828 ],
         ...,
         [ 0.34287965,  0.8121875 , -0.9991614 , ..., -0.1521859 ,
          -0.6863497 , -0.40496013],
         [ 0.        ,  0.9834003 , -0.26058993, ...,  0.48263618,
          -0.159158  ,  0.92940384],
         [ 0.9998114 ,  0.71592593, -0.3113069 , ..., -0.88680315,
           0.7312637 ,  0.6445451 ]],

        [[ 0.26489848,  0.9881741 , -0.9440285 , ..., -0.31506032,
          -0.83822334, -0.8547524 ],
         [ 0.93618315, -0.99926585, -0.9054501 , ...,  0.8495381 ,
           0.4606099 ,  0.58791125],
         [ 0.2381339 , -0.81555444,  0.9161496 , ..., -0.74141073,
           0.7040014 , -0.98794055],
         ...,
         [ 0.14733712, -0.974285  , -0.434021  , ..., -0.6494406 ,
          -0.93329954,  0.78355086],
         [ 0.95966715,  0.08353455, -0.9665354 , ...,  0.0580906 ,
          -0.41094625, -0.9778521 ],
         [ 0.00657272,  0.88575804, -0.1994637 , ...,  0.9317249 ,
           0.8765708 , -0.7625108 ]],

        [[-0.2454499 , -0.70096576,  0.97208667, ...,  0.9914175 ,
          -0.6349164 ,  0.986994  ],
         [ 0.45424283,  0.08996055,  0.63870174, ...,  0.87069994,
           0.9801463 , -0.17399813],
         [ 0.42124915,  0.8956745 , -0.7354352 , ...,  0.44724807,
          -0.2033536 ,  0.6425073 ],
         ...,
         [ 0.24884392,  0.52440643, -0.9735394 , ..., -0.8069519 ,
           0.9845655 ,  0.9486723 ],
         [ 0.        , -0.04385732, -0.92726535, ..., -0.9412489 ,
           0.06799724,  0.9346975 ],
         [-0.18644705,  0.58367634,  0.99886453, ...,  0.95770055,
           0.9992613 , -0.8921328 ]],

        ...,

        [[ 0.26489848,  0.9881741 , -0.9440285 , ..., -0.31506032,
          -0.83822334, -0.8547524 ],
         [ 0.93618315, -0.99926585, -0.9054501 , ...,  0.8495381 ,
           0.4606099 ,  0.58791125],
         [ 0.2381339 , -0.81555444,  0.9161496 , ..., -0.74141073,
           0.7040014 , -0.98794055],
         ...,
         [ 0.14733712, -0.974285  , -0.434021  , ..., -0.6494406 ,
          -0.93329954,  0.78355086],
         [ 0.95966715,  0.08353455, -0.9665354 , ...,  0.0580906 ,
          -0.41094625, -0.9778521 ],
         [ 0.00657272,  0.88575804, -0.1994637 , ...,  0.9317249 ,
           0.8765708 , -0.7625108 ]],

        [[-0.2454499 , -0.70096576,  0.97208667, ...,  0.9914175 ,
          -0.6349164 ,  0.986994  ],
         [ 0.45424283,  0.08996055,  0.63870174, ...,  0.87069994,
           0.9801463 , -0.17399813],
         [ 0.42124915,  0.8956745 , -0.7354352 , ...,  0.44724807,
          -0.2033536 ,  0.6425073 ],
         ...,
         [ 0.24884392,  0.52440643, -0.9735394 , ..., -0.8069519 ,
           0.9845655 ,  0.9486723 ],
         [ 0.        , -0.04385732, -0.92726535, ..., -0.9412489 ,
           0.06799724,  0.9346975 ],
         [-0.18644705,  0.58367634,  0.99886453, ...,  0.95770055,
           0.9992613 , -0.8921328 ]],

        [[ 0.6605925 , -0.20239809, -0.89345545, ...,  0.76484734,
           0.94909674,  0.9146402 ],
         [ 0.93055063,  0.5223534 , -0.54568785, ...,  0.00487297,
          -0.50825065,  0.5307663 ],
         [-0.9988911 ,  0.576263  , -0.97159207, ..., -0.9108119 ,
          -0.3448139 ,  0.14485066],
         ...,
         [ 0.16914551, -0.7313638 ,  0.6791102 , ...,  0.71086544,
          -0.18388703,  0.30739278],
         [ 0.24246456,  0.6425887 , -0.9846176 , ...,  0.9606526 ,
          -0.9667406 ,  0.84648347],
         [-0.9999829 ,  0.8720595 , -0.19705328, ..., -0.97876036,
          -0.07059337,  0.5270948 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [24], 'to': [5]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.80974334, -0.96024954, -0.75154036, ..., -0.95939237,
           0.8979556 , -0.5384218 ],
         [-0.8921708 , -0.16308993, -0.9761552 , ..., -0.7081503 ,
           0.05795977,  0.857911  ],
         [-0.99998915,  0.9964048 , -0.36339253, ...,  0.3189896 ,
          -0.9609733 , -0.81940293],
         ...,
         [ 0.34322366,  0.8120094 , -0.9991714 , ..., -0.15278912,
          -0.6867047 , -0.40585282],
         [ 0.        ,  0.98335046, -0.26011848, ...,  0.48252922,
          -0.15433554,  0.92994344],
         [ 0.9998114 ,  0.71581936, -0.31072682, ..., -0.8869723 ,
           0.72976315,  0.6447317 ]],

        [[ 0.26507503,  0.9884532 , -0.94416934, ..., -0.31274232,
          -0.83608675, -0.85494244],
         [ 0.9360973 , -0.9992471 , -0.90524274, ...,  0.8512081 ,
           0.4599597 ,  0.5878866 ],
         [ 0.2378968 , -0.8154132 ,  0.9159538 , ..., -0.740591  ,
           0.70382804, -0.988016  ],
         ...,
         [ 0.14769933, -0.97421616, -0.43424094, ..., -0.6489763 ,
          -0.93312407,  0.7841573 ],
         [ 0.95966715,  0.08380824, -0.9666605 , ...,  0.05796874,
          -0.4064899 , -0.9775444 ],
         [ 0.00657272,  0.88582885, -0.20006174, ...,  0.93159187,
           0.8755112 , -0.76266867]],

        [[-0.2456274 , -0.69965863,  0.97198635, ...,  0.9910954 ,
          -0.63189363,  0.9869351 ],
         [ 0.45446032,  0.09044684,  0.63907737, ...,  0.8691346 ,
           0.98029125, -0.17402817],
         [ 0.42147055,  0.89556587, -0.7351042 , ...,  0.4461559 ,
          -0.20311455,  0.6428814 ],
         ...,
         [ 0.24848923,  0.52414656, -0.9735952 , ..., -0.8065912 ,
           0.9844799 ,  0.9489807 ],
         [ 0.        , -0.04413171, -0.92744803, ..., -0.94120765,
           0.06312494,  0.93521714],
         [-0.18644613,  0.5835524 ,  0.99883527, ...,  0.9578059 ,
           0.99934334, -0.8920225 ]],

        ...,

        [[ 0.26507503,  0.9884532 , -0.94416934, ..., -0.31274232,
          -0.83608675, -0.85494244],
         [ 0.9360973 , -0.9992471 , -0.90524274, ...,  0.8512081 ,
           0.4599597 ,  0.5878866 ],
         [ 0.2378968 , -0.8154132 ,  0.9159538 , ..., -0.740591  ,
           0.70382804, -0.988016  ],
         ...,
         [ 0.14769933, -0.97421616, -0.43424094, ..., -0.6489763 ,
          -0.93312407,  0.7841573 ],
         [ 0.95966715,  0.08380824, -0.9666605 , ...,  0.05796874,
          -0.4064899 , -0.9775444 ],
         [ 0.00657272,  0.88582885, -0.20006174, ...,  0.93159187,
           0.8755112 , -0.76266867]],

        [[-0.2456274 , -0.69965863,  0.97198635, ...,  0.9910954 ,
          -0.63189363,  0.9869351 ],
         [ 0.45446032,  0.09044684,  0.63907737, ...,  0.8691346 ,
           0.98029125, -0.17402817],
         [ 0.42147055,  0.89556587, -0.7351042 , ...,  0.4461559 ,
          -0.20311455,  0.6428814 ],
         ...,
         [ 0.24848923,  0.52414656, -0.9735952 , ..., -0.8065912 ,
           0.9844799 ,  0.9489807 ],
         [ 0.        , -0.04413171, -0.92744803, ..., -0.94120765,
           0.06312494,  0.93521714],
         [-0.18644613,  0.5835524 ,  0.99883527, ...,  0.9578059 ,
           0.99934334, -0.8920225 ]],

        [[ 0.66072994, -0.20060459, -0.89364725, ...,  0.7632722 ,
           0.9478591 ,  0.9147882 ],
         [ 0.9304612 ,  0.5227697 , -0.5452786 , ...,  0.00804673,
          -0.50761974,  0.5307405 ],
         [-0.99890256,  0.57646257, -0.9717075 , ..., -0.9103073 ,
          -0.34504306,  0.14533377],
         ...,
         [ 0.16950643, -0.73115563,  0.67928946, ...,  0.7112946 ,
          -0.18340707,  0.3083219 ],
         [ 0.24246456,  0.6427991 , -0.9845321 , ...,  0.9606187 ,
          -0.96548027,  0.84570265],
         [-0.9999829 ,  0.8721342 , -0.19765162, ..., -0.97883534,
          -0.06840142,  0.5268873 ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [24], 'to': [5]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.8094567 , -0.96018136, -0.75105697, ..., -0.96096116,
           0.9015777 , -0.5385761 ],
         [-0.89228106, -0.15658289, -0.97546136, ..., -0.70797795,
           0.0629555 ,  0.8579894 ],
         [-0.9999941 ,  0.9966087 , -0.36407477, ...,  0.31435812,
          -0.96043116, -0.8197177 ],
         ...,
         [ 0.34388286,  0.8120094 , -0.9991539 , ..., -0.15266848,
          -0.6863497 , -0.404067  ],
         [ 0.        ,  0.9832616 , -0.25976485, ...,  0.4795327 ,
          -0.15095763,  0.92958397],
         [ 0.9998114 ,  0.7161815 , -0.31142288, ..., -0.887085  ,
           0.73159665,  0.6447317 ]],

        [[ 0.2646042 ,  0.98849016, -0.9444104 , ..., -0.31807092,
          -0.84061164, -0.85484743],
         [ 0.93601143, -0.9994811 , -0.9065867 , ...,  0.8513362 ,
           0.46439794,  0.58776313],
         [ 0.23908228, -0.81399745,  0.91565967, ..., -0.7373012 ,
           0.7052141 , -0.9879311 ],
         ...,
         [ 0.1483935 , -0.97421616, -0.43385604, ..., -0.6490692 ,
          -0.93329954,  0.7829437 ],
         [ 0.95966715,  0.0842948 , -0.96675426, ...,  0.05455618,
          -0.40336472, -0.97774976],
         [ 0.00657272,  0.88558805, -0.19934407, ...,  0.9315031 ,
           0.8768057 , -0.76266867]],

        [[-0.24515405, -0.69948417,  0.9718139 , ...,  0.9918275 ,
          -0.63830537,  0.9869646 ],
         [ 0.4546778 ,  0.08388014,  0.63663304, ...,  0.86901385,
           0.97929025, -0.17417844],
         [ 0.42036328,  0.89447695, -0.73460746, ...,  0.44178072,
          -0.20502658,  0.6424605 ],
         ...,
         [ 0.24780928,  0.52414656, -0.97349757, ..., -0.80666333,
           0.9845655 ,  0.948363  ],
         [ 0.        , -0.04461952, -0.92758495, ..., -0.94004744,
           0.05971343,  0.93487096],
         [-0.18644705,  0.58397365,  0.9988704 , ...,  0.957876  ,
           0.9992424 , -0.8920225 ]],

        ...,

        [[ 0.2646042 ,  0.98849016, -0.9444104 , ..., -0.31807092,
          -0.84061164, -0.85484743],
         [ 0.93601143, -0.9994811 , -0.9065867 , ...,  0.8513362 ,
           0.46439794,  0.58776313],
         [ 0.23908228, -0.81399745,  0.91565967, ..., -0.7373012 ,
           0.7052141 , -0.9879311 ],
         ...,
         [ 0.1483935 , -0.97421616, -0.43385604, ..., -0.6490692 ,
          -0.93329954,  0.7829437 ],
         [ 0.95966715,  0.0842948 , -0.96675426, ...,  0.05455618,
          -0.40336472, -0.97774976],
         [ 0.00657272,  0.88558805, -0.19934407, ...,  0.9315031 ,
           0.8768057 , -0.76266867]],

        [[-0.24515405, -0.69948417,  0.9718139 , ...,  0.9918275 ,
          -0.63830537,  0.9869646 ],
         [ 0.4546778 ,  0.08388014,  0.63663304, ...,  0.86901385,
           0.97929025, -0.17417844],
         [ 0.42036328,  0.89447695, -0.73460746, ...,  0.44178072,
          -0.20502658,  0.6424605 ],
         ...,
         [ 0.24780928,  0.52414656, -0.97349757, ..., -0.80666333,
           0.9845655 ,  0.948363  ],
         [ 0.        , -0.04461952, -0.92758495, ..., -0.94004744,
           0.05971343,  0.93487096],
         [-0.18644705,  0.58397365,  0.9988704 , ...,  0.957876  ,
           0.9992424 , -0.8920225 ]],

        [[ 0.6603633 , -0.20036541, -0.8939757 , ...,  0.7668881 ,
           0.95047176,  0.9147142 ],
         [ 0.93037176,  0.517139  , -0.5479363 , ...,  0.00829087,
          -0.51192546,  0.53061116],
         [-0.9988446 ,  0.57845575, -0.97188026, ..., -0.9082753 ,
          -0.34320924,  0.14479026],
         ...,
         [ 0.17019814, -0.73115563,  0.6789758 , ...,  0.71120876,
          -0.18388705,  0.30646333],
         [ 0.24246456,  0.64317304, -0.9844679 , ...,  0.95966333,
          -0.9645843 ,  0.8462234 ],
         [-0.9999829 ,  0.87188023, -0.1969336 , ..., -0.9788853 ,
          -0.07108042,  0.5268873 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [24], 'to': [5]}

generate models:9

final statics:
total operators:28
tensorflow --> nums:2,distinct_bugs:2
mindspore --> nums:1,distinct_bugs:1
torch --> nums:2,distinct_bugs:2
tensorflow --> 
conv2d:1
sin:1
mindspore --> 
sin:1
torch --> 
conv2d:1
sin:1

generate models:10

analyse output arrays in iter:26

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[      inf,       inf,       inf, ...,       inf,       inf,
          266.06525],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         ...,
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf]],

        [[      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [280.11877,       inf,       inf, ...,       inf,       inf,
          699.31476],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         ...,
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf]],

        [[      inf,       inf,       inf, ...,       inf,       inf,
          266.06525],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         ...,
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf]],

        ...,

        [[      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [  0.     ,       inf,       inf, ...,       inf,       inf,
            0.     ],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         ...,
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf]],

        [[      inf,       inf,       inf, ...,       inf,       inf,
            0.     ],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         ...,
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf]],

        [[      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,   0.     ,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         ...,
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf],
         [      inf,       inf,       inf, ...,       inf,       inf,
                inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

pre layer res:
12:flatten
{'name': 'flatten', 'output': array([[0.        , 0.18416882, 0.44557005, ..., 2.1339548 , 2.1907587 ,
        0.79065377]], dtype=float32), 'output_shape': TensorShape([1, 65536]), 'from': [1], 'to': [16]}
tf node:
{'name': 'log', 'output': array([[       -inf, -1.6919024 , -0.8084008 , ...,  0.75797695,
         0.78424793, -0.23489513]], dtype=float32), 'output_shape': TensorShape([1, 65536]), 'from': [12], 'to': [13]}
ms node:
{'name': 'log', 'output': array([[       -inf, -1.6919025 , -0.80840176, ...,  0.757974  ,
         0.7842485 , -0.23489754]], dtype=float32), 'output_shape': (1, 65536), 'from': [12], 'to': [13]}
torch node:
{'name': 'log', 'output': array([[       -inf, -1.6919024 , -0.8084008 , ...,  0.75797695,
         0.78424793, -0.23489513]], dtype=float32), 'output_shape': torch.Size([1, 65536]), 'from': [12], 'to': [13]}

generate models:25

analyse output arrays in iter:38

pre layer res:
27:add
{'name': 'add', 'output': array([[[[1806235.2, 4524293.5, 4739221.5, ..., 3109852.5, 2704431.5,
          1422408.9],
         [2790717.2, 6991426.5, 7322147. , ..., 4805143. , 4178957. ,
          2197778. ],
         [2954803.2, 7402614.5, 7752647. , ..., 5087687.5, 4424713. ,
          2327006.5],
         ...,
         [2954803.2, 7402614.5, 7752647. , ..., 5087687.5, 4424713. ,
          2327006.5],
         [2790717.2, 6991426.5, 7322147. , ..., 4805143. , 4178957. ,
          2197778. ],
         [1805562.8, 4523681.5, 4737291. , ..., 3108941.8, 2703868.8,
          1421962.1]],

        [[1805565. , 4523681.5, 4737291. , ..., 3108942. , 2703868.8,
          1421962.1],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         ...,
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [1805562.8, 4523681.5, 4737291. , ..., 3108941.8, 2703868.8,
          1421962.1]],

        [[1805565. , 4523681.5, 4737291. , ..., 3108942. , 2703868.8,
          1421962.1],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         ...,
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [1805562.8, 4523681.5, 4737291. , ..., 3108941.8, 2703868.8,
          1421962.1]],

        ...,

        [[1805565. , 4523681.5, 4737291. , ..., 3108942. , 2703868.8,
          1421962.1],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         ...,
         [2954803.2, 7402614.5, 7752647. , ..., 5087687.5, 4424713. ,
          2327006.5],
         [2790717.2, 6991426.5, 7322147. , ..., 4805143. , 4178957. ,
          2197778. ],
         [1806233. , 4524293.5, 4739221.5, ..., 3109852.2, 2704431.5,
          1422408.9]],

        [[1806235.2, 4524293.5, 4739221.5, ..., 3109852.5, 2704431.5,
          1422408.9],
         [2790717.2, 6991426.5, 7322147. , ..., 4805143. , 4178957. ,
          2197778. ],
         [2954803.2, 7402614.5, 7752647. , ..., 5087687.5, 4424713. ,
          2327006.5],
         ...,
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [1805562.8, 4523681.5, 4737291. , ..., 3108941.8, 2703868.8,
          1421962.1]],

        [[1805565. , 4523681.5, 4737291. , ..., 3108942. , 2703868.8,
          1421962.1],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         ...,
         [2954133. , 7402002.5, 7750716.5, ..., 5086777.5, 4424150.5,
          2326559.5],
         [2790047. , 6990814.5, 7320216.5, ..., 4804233. , 4178394.2,
          2197331. ],
         [1805562.8, 4523681.5, 4737291. , ..., 3108941.8, 2703868.8,
          1421962.1]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7, 30], 'to': [19]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.9933069 , -0.88964343, -0.17584197, ...,  0.5996075 ,
          -0.7764011 ,  0.56957436],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.26751652, -0.9285658 ,  0.54690236, ..., -0.65910256,
          -0.33451965, -0.5202573 ],
         ...,
         [-0.26751652, -0.9285658 ,  0.54690236, ..., -0.65910256,
          -0.33451965, -0.5202573 ],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [ 0.9965235 ,  0.9907208 ,  0.982854  , ...,  0.32512227,
           0.4653413 ,  0.94893134]],

        [[-0.56116694,  0.9907208 ,  0.982854  , ...,  0.08105203,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         ...,
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [ 0.9965235 ,  0.9907208 ,  0.982854  , ...,  0.32512227,
           0.4653413 ,  0.94893134]],

        [[-0.56116694,  0.9907208 ,  0.982854  , ...,  0.08105203,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         ...,
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [ 0.9965235 ,  0.9907208 ,  0.982854  , ...,  0.32512227,
           0.4653413 ,  0.94893134]],

        ...,

        [[-0.56116694,  0.9907208 ,  0.982854  , ...,  0.08105203,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         ...,
         [-0.26751652, -0.9285658 ,  0.54690236, ..., -0.65910256,
          -0.33451965, -0.5202573 ],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.5340978 , -0.88964343, -0.17584197, ...,  0.77896315,
          -0.7764011 ,  0.56957436]],

        [[ 0.9933069 , -0.88964343, -0.17584197, ...,  0.5996075 ,
          -0.7764011 ,  0.56957436],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.26751652, -0.9285658 ,  0.54690236, ..., -0.65910256,
          -0.33451965, -0.5202573 ],
         ...,
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [ 0.9965235 ,  0.9907208 ,  0.982854  , ...,  0.32512227,
           0.4653413 ,  0.94893134]],

        [[-0.56116694,  0.9907208 ,  0.982854  , ...,  0.08105203,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         ...,
         [-0.7311118 ,  0.9735977 , -0.8324147 , ..., -0.9778852 ,
           0.4759206 ,  0.3397876 ],
         [-0.99088204, -0.9150221 , -0.7724236 , ...,  0.42739773,
           0.5830696 ,  0.53720045],
         [ 0.9965235 ,  0.9907208 ,  0.982854  , ...,  0.32512227,
           0.4653413 ,  0.94893134]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [27], 'to': [8]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.9933069 , -0.88964343, -0.9233673 , ...,  0.9098866 ,
          -0.7764011 ,  0.56957436],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.26751652, -0.9285658 ,  0.54690236, ..., -0.21786347,
          -0.33451965, -0.71536905],
         ...,
         [-0.26751652, -0.6369459 ,  0.54690236, ..., -0.21786347,
          -0.33451965, -0.71536905],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        [[-0.56116694,  0.9907208 ,  0.37588322, ...,  0.54897803,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
           0.4759206 ,  0.09654044],
         ...,
         [-0.73111176,  0.96385115, -0.8324147 , ..., -0.9584432 ,
           0.4759206 ,  0.09654044],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        [[-0.56116694,  0.9907208 ,  0.37588322, ...,  0.54897803,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
           0.4759206 ,  0.09654044],
         ...,
         [-0.73111176,  0.96385115, -0.8324147 , ..., -0.9584432 ,
           0.4759206 ,  0.09654044],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        ...,

        [[-0.56116694,  0.9907208 ,  0.37588322, ...,  0.54897803,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
           0.4759206 ,  0.09654044],
         ...,
         [-0.26751652, -0.6369459 ,  0.54690236, ..., -0.21786347,
          -0.33451965, -0.71536905],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [ 0.9933069 , -0.88964343, -0.9233673 , ...,  0.7789631 ,
          -0.7764011 ,  0.56957436]],

        [[ 0.4228244 ,  0.39258108, -0.44827232, ...,  0.99739367,
          -0.9498192 ,  0.99596995],
         [-0.3941214 ,  0.7266357 ,  0.582346  , ...,  0.65960765,
          -0.7816838 , -0.9685573 ],
         [ 0.79097897, -0.6866716 ,  0.8396086 , ...,  0.2767162 ,
           0.15823664, -0.9997205 ],
         ...,
         [ 0.1774133 ,  0.3592537 ,  0.55046374, ..., -0.704341  ,
          -0.00398951, -0.6078173 ],
         [-0.8049867 , -0.20145658,  0.81796837, ..., -0.33496955,
           0.96416456, -0.41279605],
         [ 0.6085286 ,  0.20565322, -0.8977568 , ...,  0.7387009 ,
           0.99623734,  0.8504087 ]],

        [[ 0.6085286 ,  0.20565322, -0.8977568 , ...,  0.88249505,
           0.99623734,  0.8504087 ],
         [-0.63317865, -0.20145658,  0.81796837, ..., -0.33496955,
           0.96416456, -0.41279605],
         [ 0.1774133 ,  0.9793999 ,  0.55046374, ..., -0.704341  ,
          -0.00398951, -0.6078173 ],
         ...,
         [ 0.1774133 ,  0.3592537 ,  0.55046374, ..., -0.704341  ,
          -0.00398951, -0.6078173 ],
         [-0.8049867 , -0.20145658,  0.81796837, ..., -0.33496955,
           0.96416456, -0.41279605],
         [ 0.6085286 ,  0.20565322, -0.8977568 , ...,  0.7387009 ,
           0.99623734,  0.8504087 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [27], 'to': [8]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.97115624, -0.88964343, -0.9233673 , ...,  0.7789631 ,
          -0.7764011 ,  0.56957436],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.26751652, -0.92856586,  0.54690236, ..., -0.21786347,
           0.15823664, -0.7153691 ],
         ...,
         [-0.26751652, -0.92856586,  0.54690236, ..., -0.21786347,
           0.15823664, -0.7153691 ],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        [[-0.65998214,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         ...,
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        [[-0.65998214,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         ...,
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        ...,

        [[-0.65998214,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         ...,
         [-0.26751652, -0.92856586,  0.54690236, ..., -0.21786347,
           0.15823664, -0.7153691 ],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [ 0.9933069 , -0.88964343, -0.9233673 , ...,  0.7789631 ,
          -0.7764011 ,  0.56957436]],

        [[ 0.97115624, -0.88964343, -0.9233673 , ...,  0.7789631 ,
          -0.7764011 ,  0.56957436],
         [ 0.33809155,  0.5184139 , -0.64179265, ...,  0.99773526,
          -0.8559663 ,  0.9939738 ],
         [-0.26751652, -0.92856586,  0.54690236, ..., -0.21786347,
           0.15823664, -0.7153691 ],
         ...,
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]],

        [[-0.65998214,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         ...,
         [-0.73111176,  0.9735977 , -0.8324147 , ..., -0.9584432 ,
          -0.00398951,  0.09654044],
         [-0.99088204, -0.9150221 , -0.77242357, ...,  0.42739773,
           0.58306956,  0.5372004 ],
         [-0.56116694,  0.9907208 ,  0.37588322, ...,  0.3251223 ,
           0.4653413 ,  0.94893134]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [27], 'to': [8]}

generate models:36

analyse output arrays in iter:44

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:42

final statics:
total operators:28
tensorflow --> nums:5,distinct_bugs:2
mindspore --> nums:3,distinct_bugs:2
torch --> nums:3,distinct_bugs:2
tensorflow --> 
conv2d:3
sin:2
mindspore --> 
sin:2
log:1
torch --> 
conv2d:1
sin:2

generate models:47

analyse output arrays in iter:52

pre layer res:
11:add
{'name': 'add', 'output': array([[[[      -inf, 4.7796516 ,       -inf, ..., 3.4461946 ,
          1.2916449 ,       -inf],
         [3.60915   , 4.6626005 , 3.9268408 , ..., 3.0646837 ,
          3.3095746 ,       -inf],
         [4.2878184 ,       -inf, 4.391793  , ..., 4.4851327 ,
                -inf,       -inf],
         ...,
         [      -inf,       -inf,       -inf, ..., 3.7946658 ,
                -inf,       -inf],
         [      -inf, 4.6520076 , 4.03074   , ...,       -inf,
          4.9324217 , 0.98375934],
         [      -inf,       -inf, 4.2470503 , ..., 3.4871428 ,
                -inf, 5.313887  ]],

        [[      -inf,       -inf, 5.1749024 , ..., 4.1570196 ,
          4.971554  ,       -inf],
         [4.935483  ,       -inf, 4.8045707 , ...,       -inf,
          4.781583  ,       -inf],
         [5.311903  ,       -inf, 1.917073  , ..., 3.1565285 ,
                -inf,       -inf],
         ...,
         [      -inf,       -inf, 2.6409242 , ...,       -inf,
                -inf,       -inf],
         [      -inf, 4.102675  , 4.3767385 , ...,       -inf,
          4.0182943 ,       -inf],
         [1.3919951 , 4.717129  , 1.6217064 , ..., 4.9365945 ,
          3.8423789 , 4.7973027 ]],

        [[4.2325225 ,       -inf,       -inf, ..., 4.891237  ,
          4.0078154 ,       -inf],
         [      -inf, 3.989656  ,       -inf, ..., 4.1344576 ,
          4.7637453 , 2.85326   ],
         [4.645101  ,       -inf,       -inf, ..., 2.8187664 ,
          5.3657384 , 4.7792444 ],
         ...,
         [      -inf, 3.4237165 ,       -inf, ..., 5.3162217 ,
          4.679462  ,       -inf],
         [3.5979898 , 4.18223   ,       -inf, ...,       -inf,
          4.452162  , 2.1740255 ],
         [      -inf, 4.3562417 ,       -inf, ..., 3.0304525 ,
          4.6289682 , 3.7239454 ]],

        ...,

        [[      -inf,       -inf, 5.1749024 , ..., 4.1570196 ,
          4.971554  ,       -inf],
         [4.935483  ,       -inf, 4.8045707 , ...,       -inf,
          4.781583  ,       -inf],
         [5.311903  ,       -inf, 1.917073  , ..., 3.1565285 ,
                -inf,       -inf],
         ...,
         [      -inf,       -inf, 2.6409242 , ...,       -inf,
                -inf,       -inf],
         [      -inf, 4.102675  , 4.3767385 , ...,       -inf,
          4.0182943 ,       -inf],
         [1.3919951 , 4.717129  , 1.6217064 , ..., 4.9365945 ,
          3.8423789 , 4.7973027 ]],

        [[4.2325225 ,       -inf,       -inf, ..., 4.891237  ,
          4.0078154 ,       -inf],
         [      -inf, 3.989656  ,       -inf, ..., 4.1344576 ,
          4.7637453 , 2.85326   ],
         [4.645101  ,       -inf,       -inf, ..., 2.8187664 ,
          5.3657384 , 4.7792444 ],
         ...,
         [      -inf, 3.4237165 ,       -inf, ..., 5.3162217 ,
          4.679462  ,       -inf],
         [3.5979898 , 4.18223   ,       -inf, ...,       -inf,
          4.452162  , 2.1740255 ],
         [      -inf, 4.3562417 ,       -inf, ..., 3.0304525 ,
          4.6289682 , 3.7239454 ]],

        [[3.7448053 , 4.433852  , 4.129513  , ...,       -inf,
                -inf,       -inf],
         [      -inf, 4.4126105 ,       -inf, ...,       -inf,
          4.0920615 , 4.6722665 ],
         [4.5381594 ,       -inf, 5.0541186 , ..., 3.213692  ,
          3.4086542 , 5.7117696 ],
         ...,
         [5.1187043 , 4.6920395 ,       -inf, ...,       -inf,
          2.5181692 ,       -inf],
         [      -inf,       -inf,       -inf, ..., 5.0763273 ,
          5.117506  , 4.114324  ],
         [      -inf,       -inf, 3.4820907 , ..., 4.7693477 ,
          3.818027  ,       -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [16, 20], 'to': [5]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [11], 'to': [15]}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [11], 'to': [15]}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [11], 'to': [15]}

generate models:50

analyse output arrays in iter:54

pre layer res:
5:conv2d
{'name': 'conv2d', 'output': array([[[[ 60651.508,  74759.55 ,  52272.93 , ...,  45985.14 ,
           52127.367,  36846.86 ],
         [ 79783.29 , 103120.69 ,  78050.48 , ...,  64896.25 ,
           65790.53 ,  49661.598],
         [ 61352.14 ,  81787.58 ,  76901.88 , ...,  67372.34 ,
           73330.1  ,  56605.57 ],
         ...,
         [ 37888.86 ,  47117.09 ,  36612.977, ...,  63486.04 ,
           60991.266,  44545.21 ],
         [ 37042.188,  53239.543,  42468.324, ...,  63518.742,
           63243.508,  49968.773],
         [ 34532.613,  48689.98 ,  29349.482, ...,  34720.12 ,
           36879.61 ,  26433.113]],

        [[ 60651.508,  74759.55 ,  52272.93 , ...,  45985.14 ,
           52127.367,  36846.86 ],
         [ 79783.29 , 103120.69 ,  78050.48 , ...,  64896.25 ,
           65790.53 ,  49661.598],
         [ 61352.14 ,  81787.58 ,  76901.88 , ...,  67372.34 ,
           73330.1  ,  56605.57 ],
         ...,
         [ 37888.86 ,  47117.09 ,  36612.977, ...,  63486.04 ,
           60991.266,  44545.21 ],
         [ 37042.188,  53239.543,  42468.324, ...,  63518.742,
           63243.508,  49968.773],
         [ 34532.613,  48689.98 ,  29349.482, ...,  34720.12 ,
           36879.61 ,  26433.113]],

        [[ 60651.508,  74759.55 ,  52272.93 , ...,  45985.14 ,
           52127.367,  36846.86 ],
         [ 79783.29 , 103120.69 ,  78050.48 , ...,  64896.25 ,
           65790.53 ,  49661.598],
         [ 61352.14 ,  81787.58 ,  76901.88 , ...,  67372.34 ,
           73330.1  ,  56605.57 ],
         ...,
         [ 37888.86 ,  47117.09 ,  36612.977, ...,  63486.04 ,
           60991.266,  44545.21 ],
         [ 37042.188,  53239.543,  42468.324, ...,  63518.742,
           63243.508,  49968.773],
         [ 34532.613,  48689.98 ,  29349.482, ...,  34720.12 ,
           36879.61 ,  26433.113]],

        ...,

        [[ 60651.508,  74759.55 ,  52272.93 , ...,  45985.14 ,
           52127.367,  36846.86 ],
         [ 79783.29 , 103120.69 ,  78050.48 , ...,  64896.25 ,
           65790.53 ,  49661.598],
         [ 61352.14 ,  81787.58 ,  76901.88 , ...,  67372.34 ,
           73330.1  ,  56605.57 ],
         ...,
         [ 37888.86 ,  47117.09 ,  36612.977, ...,  63486.04 ,
           60991.266,  44545.21 ],
         [ 37042.188,  53239.543,  42468.324, ...,  63518.742,
           63243.508,  49968.773],
         [ 34532.613,  48689.98 ,  29349.482, ...,  34720.12 ,
           36879.61 ,  26433.113]],

        [[ 60651.508,  74759.55 ,  52272.93 , ...,  45985.14 ,
           52127.367,  36846.86 ],
         [ 79783.29 , 103120.69 ,  78050.48 , ...,  64896.25 ,
           65790.53 ,  49661.598],
         [ 61352.14 ,  81787.58 ,  76901.88 , ...,  67372.34 ,
           73330.1  ,  56605.57 ],
         ...,
         [ 37888.86 ,  47117.09 ,  36612.977, ...,  63486.04 ,
           60991.266,  44545.21 ],
         [ 37042.188,  53239.543,  42468.324, ...,  63518.742,
           63243.508,  49968.773],
         [ 34532.613,  48689.98 ,  29349.482, ...,  34720.12 ,
           36879.61 ,  26433.113]],

        [[ 60651.508,  74759.55 ,  52272.93 , ...,  45985.14 ,
           52127.367,  36846.86 ],
         [ 79783.29 , 103120.69 ,  78050.48 , ...,  64896.25 ,
           65790.53 ,  49661.598],
         [ 61352.14 ,  81787.58 ,  76901.88 , ...,  67372.34 ,
           73330.1  ,  56605.57 ],
         ...,
         [ 37888.86 ,  47117.09 ,  36612.977, ...,  63486.04 ,
           60991.266,  44545.21 ],
         [ 37042.188,  53239.543,  42468.324, ...,  63518.742,
           63243.508,  49968.773],
         [ 34532.613,  48689.98 ,  29349.482, ...,  34720.12 ,
           36879.61 ,  26433.113]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [4], 'to': [11]}
tf node:
{'name': 'sin', 'output': array([[[[-0.07987253,  0.8037089 ,  0.03047086, ..., -0.9969472 ,
           0.88182276,  0.7712859 ],
         [-0.56296426,  0.8675419 ,  0.68066996, ..., -0.36213264,
          -0.6458236 , -0.64346147],
         [ 0.0223051 , -0.6012133 ,  0.91829604, ..., -0.77662706,
          -0.8158269 ,  0.3465401 ],
         ...,
         [ 0.9496048 , -0.49407864,  0.755081  , ...,  0.6703785 ,
           0.3763451 , -0.538539  ],
         [ 0.32544136,  0.856129  ,  0.2712847 , ...,  0.899959  ,
          -0.10590412, -0.9853323 ],
         [ 0.22489277,  0.99997735,  0.6622758 , ..., -0.6895835 ,
          -0.43785778, -0.24479286]],

        [[-0.07987253,  0.8037089 ,  0.03047086, ..., -0.9969472 ,
           0.88182276,  0.7712859 ],
         [-0.56296426,  0.8675419 ,  0.68066996, ..., -0.36213264,
          -0.6458236 , -0.64346147],
         [ 0.0223051 , -0.6012133 ,  0.91829604, ..., -0.77662706,
          -0.8158269 ,  0.3465401 ],
         ...,
         [ 0.9496048 , -0.49407864,  0.755081  , ...,  0.6703785 ,
           0.3763451 , -0.538539  ],
         [ 0.32544136,  0.856129  ,  0.2712847 , ...,  0.899959  ,
          -0.10590412, -0.9853323 ],
         [ 0.22489277,  0.99997735,  0.6622758 , ..., -0.6895835 ,
          -0.43785778, -0.24479286]],

        [[-0.07987253,  0.8037089 ,  0.03047086, ..., -0.9969472 ,
           0.88182276,  0.7712859 ],
         [-0.56296426,  0.8675419 ,  0.68066996, ..., -0.36213264,
          -0.6458236 , -0.64346147],
         [ 0.0223051 , -0.6012133 ,  0.91829604, ..., -0.77662706,
          -0.8158269 ,  0.3465401 ],
         ...,
         [ 0.9496048 , -0.49407864,  0.755081  , ...,  0.6703785 ,
           0.3763451 , -0.538539  ],
         [ 0.32544136,  0.856129  ,  0.2712847 , ...,  0.899959  ,
          -0.10590412, -0.9853323 ],
         [ 0.22489277,  0.99997735,  0.6622758 , ..., -0.6895835 ,
          -0.43785778, -0.24479286]],

        ...,

        [[-0.07987253,  0.8037089 ,  0.03047086, ..., -0.9969472 ,
           0.88182276,  0.7712859 ],
         [-0.56296426,  0.8675419 ,  0.68066996, ..., -0.36213264,
          -0.6458236 , -0.64346147],
         [ 0.0223051 , -0.6012133 ,  0.91829604, ..., -0.77662706,
          -0.8158269 ,  0.3465401 ],
         ...,
         [ 0.9496048 , -0.49407864,  0.755081  , ...,  0.6703785 ,
           0.3763451 , -0.538539  ],
         [ 0.32544136,  0.856129  ,  0.2712847 , ...,  0.899959  ,
          -0.10590412, -0.9853323 ],
         [ 0.22489277,  0.99997735,  0.6622758 , ..., -0.6895835 ,
          -0.43785778, -0.24479286]],

        [[-0.07987253,  0.8037089 ,  0.03047086, ..., -0.9969472 ,
           0.88182276,  0.7712859 ],
         [-0.56296426,  0.8675419 ,  0.68066996, ..., -0.36213264,
          -0.6458236 , -0.64346147],
         [ 0.0223051 , -0.6012133 ,  0.91829604, ..., -0.77662706,
          -0.8158269 ,  0.3465401 ],
         ...,
         [ 0.9496048 , -0.49407864,  0.755081  , ...,  0.6703785 ,
           0.3763451 , -0.538539  ],
         [ 0.32544136,  0.856129  ,  0.2712847 , ...,  0.899959  ,
          -0.10590412, -0.9853323 ],
         [ 0.22489277,  0.99997735,  0.6622758 , ..., -0.6895835 ,
          -0.43785778, -0.24479286]],

        [[-0.07987253,  0.8037089 ,  0.03047086, ..., -0.9969472 ,
           0.88182276,  0.7712859 ],
         [-0.56296426,  0.8675419 ,  0.68066996, ..., -0.36213264,
          -0.6458236 , -0.64346147],
         [ 0.0223051 , -0.6012133 ,  0.91829604, ..., -0.77662706,
          -0.8158269 ,  0.3465401 ],
         ...,
         [ 0.9496048 , -0.49407864,  0.755081  , ...,  0.6703785 ,
           0.3763451 , -0.538539  ],
         [ 0.32544136,  0.856129  ,  0.2712847 , ...,  0.899959  ,
          -0.10590412, -0.9853323 ],
         [ 0.22489277,  0.99997735,  0.6622758 , ..., -0.6895835 ,
          -0.43785778, -0.24479286]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [5], 'to': [13]}
ms node:
{'name': 'sin', 'output': array([[[[-0.16128144,  0.8754253 ,  0.01875573, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.11191575, -0.64399284,  0.93856287, ..., -0.7959309 ,
          -0.8291554 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.16128144,  0.8754253 ,  0.01875573, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.11191575, -0.64399284,  0.93856287, ..., -0.7959309 ,
          -0.8291554 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.16128144,  0.8754253 ,  0.01875573, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.11191575, -0.64399284,  0.93856287, ..., -0.7959309 ,
          -0.8291554 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        ...,

        [[-0.16128144,  0.8754253 ,  0.01875573, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.11191575, -0.64399284,  0.93856287, ..., -0.7959309 ,
          -0.8291554 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.16128144,  0.8754253 ,  0.01875573, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.11191575, -0.64399284,  0.93856287, ..., -0.7959309 ,
          -0.8291554 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.16128144,  0.8754253 ,  0.01875573, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.11191575, -0.64399284,  0.93856287, ..., -0.7959309 ,
          -0.8291554 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [5], 'to': [13]}
torch node:
{'name': 'sin', 'output': array([[[[-0.16513531,  0.8754253 ,  0.02266114, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.1080332 , -0.64399284,  0.93856287, ..., -0.8006362 ,
          -0.8247628 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.16513531,  0.8754253 ,  0.02266114, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.1080332 , -0.64399284,  0.93856287, ..., -0.8006362 ,
          -0.8247628 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.16513531,  0.8754253 ,  0.02266114, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.1080332 , -0.64399284,  0.93856287, ..., -0.8006362 ,
          -0.8247628 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        ...,

        [[-0.16513531,  0.8754253 ,  0.02266114, ..., -0.99443984,
           0.87811166,  0.7535957 ],
         [-0.6732483 ,  0.7696952 ,  0.6920331 , ..., -0.4125415 ,
          -0.6517685 , -0.62534547],
         [ 0.1080332 , -0.64399284,  0.93856287, ..., -0.8006362 ,
          -0.8247628 ,  0.30592644],
         ...,
         [ 0.9267121 , -0.54414403,  0.7395086 , ...,  0.7315934 ,
           0.3690956 , -0.5085897 ],
         [ 0.35482648,  0.8500145 ,  0.25243533, ...,  0.8947882 ,
          -0.08646373, -0.99124485],
         [ 0.20582016,  0.9998299 ,  0.6593439 , ..., -0.6839046 ,
          -0.3988347 , -0.28621554]],

        [[-0.14584194,  0.86385727,  0.00313183, ..., -0.9948436 ,
           0.87623596,  0.7510223 ],
         [-0.66161317,  0.7746592 ,  0.68637246, ..., -0.40183836,
          -0.6517685 , -0.6314228 ],
         [ 0.09248709, -0.6319611 ,  0.94384044, ..., -0.786375  ,
          -0.83778846,  0.29847926],
         ...,
         [ 0.93526393, -0.54414403,  0.74474496, ...,  0.70993525,
           0.33620033, -0.49507487],
         [ 0.33649957,  0.8621259 ,  0.24486822, ...,  0.8947882 ,
          -0.07478321, -0.9922461 ],
         [ 0.21727362,  0.9999435 ,  0.6578742 , ..., -0.6839046 ,
          -0.40955344, -0.2805964 ]],

        [[-0.14584194,  0.86385727,  0.00313183, ..., -0.9948436 ,
           0.87623596,  0.7510223 ],
         [-0.66161317,  0.7746592 ,  0.68637246, ..., -0.40183836,
          -0.6517685 , -0.6314228 ],
         [ 0.09248709, -0.6319611 ,  0.94384044, ..., -0.786375  ,
          -0.83778846,  0.29847926],
         ...,
         [ 0.93526393, -0.54414403,  0.74474496, ...,  0.70993525,
           0.33620033, -0.49507487],
         [ 0.33649957,  0.8621259 ,  0.24486822, ...,  0.8947882 ,
          -0.07478321, -0.9922461 ],
         [ 0.21727362,  0.9999435 ,  0.6578742 , ..., -0.6839046 ,
          -0.40955344, -0.2805964 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [5], 'to': [13]}

generate models:52

analyse output arrays in iter:60

pre layer res:
17:flatten
{'name': 'flatten', 'output': array([[30864.414, 39400.777, 46470.74 , ..., 44420.406, 50225.117,
        31635.557]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [6], 'to': [25]}
tf node:
{'name': 'sin', 'output': array([[ 0.98675096, -0.88087976,  0.29528072, ..., -0.98978215,
        -0.45772487, -0.2776826 ]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [17], 'to': [18]}
ms node:
{'name': 'sin', 'output': array([[ 0.9932694 , -0.8714674 ,  0.28780767, ..., -0.9908659 ,
        -0.50563866, -0.24942277]], dtype=float32), 'output_shape': (1, 32768), 'from': [17], 'to': [18]}
torch node:
{'name': 'sin', 'output': array([[ 0.9932694 , -0.8714674 ,  0.28780767, ..., -0.9880433 ,
        -0.48528105, -0.2513137 ]], dtype=float32), 'output_shape': torch.Size([1, 32768]), 'from': [17], 'to': [18]}

generate models:58

analyse output arrays in iter:73

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:71

analyse the exceptions in iter:74
torch exception:
{'id': 27, 'name': 'flatten', 'frame_work': 'torch', 'input_datas': [tensor([0.5837], grad_fn=<MeanBackward1>)]}
Dimension out of range (expected to be in range of [-1, 0], but got 1)

generate models:72

analyse output arrays in iter:77

pre layer res:
13:exp
{'name': 'exp', 'output': array([[[[1.0000000e+00, 1.0000000e+00, 8.6284634e+28, ...,
          1.0000000e+00, 1.0000000e+00,           inf],
         [1.0000000e+00, 3.6285472e+05,           inf, ...,
          1.0000000e+00,           inf, 1.0000000e+00],
         [2.7881262e+06, 1.0000000e+00, 1.0000000e+00, ...,
          1.0000000e+00, 1.0000000e+00, 4.2343859e+17],
         ...,
         [1.0000000e+00,           inf, 1.0000000e+00, ...,
                    inf, 9.5405500e+24, 1.0000000e+00],
         [2.7757375e+16, 1.0000000e+00, 5.4485727e+36, ...,
          1.0000000e+00, 1.0000000e+00, 1.0554731e+22],
         [1.0000000e+00, 6.1291089e+00, 1.6941614e+16, ...,
          1.0000000e+00,           inf,           inf]],

        [[1.0000000e+00, 1.0000000e+00, 8.6284634e+28, ...,
          1.0000000e+00, 1.0000000e+00,           inf],
         [1.0000000e+00, 3.6285472e+05,           inf, ...,
          1.0000000e+00,           inf, 1.0000000e+00],
         [2.7881262e+06, 1.0000000e+00, 1.0000000e+00, ...,
          1.0000000e+00, 1.0000000e+00, 4.2343859e+17],
         ...,
         [1.0000000e+00,           inf, 1.0000000e+00, ...,
                    inf, 9.5405500e+24, 1.0000000e+00],
         [2.7757375e+16, 1.0000000e+00, 5.4485727e+36, ...,
          1.0000000e+00, 1.0000000e+00, 1.0554731e+22],
         [1.0000000e+00, 6.1291089e+00, 1.6941614e+16, ...,
          1.0000000e+00,           inf,           inf]],

        [[1.0000000e+00, 1.0000000e+00, 8.6284634e+28, ...,
          1.0000000e+00, 1.0000000e+00,           inf],
         [1.0000000e+00, 3.6285472e+05,           inf, ...,
          1.0000000e+00,           inf, 1.0000000e+00],
         [2.7881262e+06, 1.0000000e+00, 1.0000000e+00, ...,
          1.0000000e+00, 1.0000000e+00, 4.2343859e+17],
         ...,
         [1.0000000e+00,           inf, 1.0000000e+00, ...,
                    inf, 9.5405500e+24, 1.0000000e+00],
         [2.7757375e+16, 1.0000000e+00, 5.4485727e+36, ...,
          1.0000000e+00, 1.0000000e+00, 1.0554731e+22],
         [1.0000000e+00, 6.1291089e+00, 1.6941614e+16, ...,
          1.0000000e+00,           inf,           inf]],

        ...,

        [[1.0000000e+00, 1.0000000e+00, 8.6284634e+28, ...,
          1.0000000e+00, 1.0000000e+00,           inf],
         [1.0000000e+00, 3.6285472e+05,           inf, ...,
          1.0000000e+00,           inf, 1.0000000e+00],
         [2.7881262e+06, 1.0000000e+00, 1.0000000e+00, ...,
          1.0000000e+00, 1.0000000e+00, 4.2343859e+17],
         ...,
         [1.0000000e+00,           inf, 1.0000000e+00, ...,
                    inf, 9.5405500e+24, 1.0000000e+00],
         [2.7757375e+16, 1.0000000e+00, 5.4485727e+36, ...,
          1.0000000e+00, 1.0000000e+00, 1.0554731e+22],
         [1.0000000e+00, 6.1291089e+00, 1.6941614e+16, ...,
          1.0000000e+00,           inf,           inf]],

        [[1.0000000e+00, 1.0000000e+00, 8.6284634e+28, ...,
          1.0000000e+00, 1.0000000e+00,           inf],
         [1.0000000e+00, 3.6285472e+05,           inf, ...,
          1.0000000e+00,           inf, 1.0000000e+00],
         [2.7881262e+06, 1.0000000e+00, 1.0000000e+00, ...,
          1.0000000e+00, 1.0000000e+00, 4.2343859e+17],
         ...,
         [1.0000000e+00,           inf, 1.0000000e+00, ...,
                    inf, 9.5405500e+24, 1.0000000e+00],
         [2.7757375e+16, 1.0000000e+00, 5.4485727e+36, ...,
          1.0000000e+00, 1.0000000e+00, 1.0554731e+22],
         [1.0000000e+00, 6.1291089e+00, 1.6941614e+16, ...,
          1.0000000e+00,           inf,           inf]],

        [[1.0000000e+00, 1.0000000e+00, 8.6284634e+28, ...,
          1.0000000e+00, 1.0000000e+00,           inf],
         [1.0000000e+00, 3.6285472e+05,           inf, ...,
          1.0000000e+00,           inf, 1.0000000e+00],
         [2.7881262e+06, 1.0000000e+00, 1.0000000e+00, ...,
          1.0000000e+00, 1.0000000e+00, 4.2343859e+17],
         ...,
         [1.0000000e+00,           inf, 1.0000000e+00, ...,
                    inf, 9.5405500e+24, 1.0000000e+00],
         [2.7757375e+16, 1.0000000e+00, 5.4485727e+36, ...,
          1.0000000e+00, 1.0000000e+00, 1.0554731e+22],
         [1.0000000e+00, 6.1291089e+00, 1.6941614e+16, ...,
          1.0000000e+00,           inf,           inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [3], 'to': [14]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.841471  ,  0.841471  , -0.59249586, ...,  0.841471  ,
           0.841471  ,         nan],
         [ 0.841471  ,  0.6941658 ,         nan, ...,  0.841471  ,
                  nan,  0.841471  ],
         [ 0.4520399 ,  0.841471  ,  0.841471  , ...,  0.841471  ,
           0.841471  , -0.9347979 ],
         ...,
         [ 0.841471  ,         nan,  0.841471  , ...,         nan,
          -0.27045482,  0.841471  ],
         [-0.8291293 ,  0.841471  , -0.60508513, ...,  0.841471  ,
           0.841471  ,  0.9321815 ],
         [ 0.841471  , -0.1534675 , -0.19016294, ...,  0.841471  ,
                  nan,         nan]],

        [[ 0.841471  ,  0.841471  , -0.59249586, ...,  0.841471  ,
           0.841471  ,         nan],
         [ 0.841471  ,  0.6941658 ,         nan, ...,  0.841471  ,
                  nan,  0.841471  ],
         [ 0.4520399 ,  0.841471  ,  0.841471  , ...,  0.841471  ,
           0.841471  , -0.9347979 ],
         ...,
         [ 0.841471  ,         nan,  0.841471  , ...,         nan,
          -0.27045482,  0.841471  ],
         [-0.8291293 ,  0.841471  , -0.60508513, ...,  0.841471  ,
           0.841471  ,  0.9321815 ],
         [ 0.841471  , -0.1534675 , -0.19016294, ...,  0.841471  ,
                  nan,         nan]],

        [[ 0.841471  ,  0.841471  , -0.59249586, ...,  0.841471  ,
           0.841471  ,         nan],
         [ 0.841471  ,  0.6941658 ,         nan, ...,  0.841471  ,
                  nan,  0.841471  ],
         [ 0.4520399 ,  0.841471  ,  0.841471  , ...,  0.841471  ,
           0.841471  , -0.9347979 ],
         ...,
         [ 0.841471  ,         nan,  0.841471  , ...,         nan,
          -0.27045482,  0.841471  ],
         [-0.8291293 ,  0.841471  , -0.60508513, ...,  0.841471  ,
           0.841471  ,  0.9321815 ],
         [ 0.841471  , -0.1534675 , -0.19016294, ...,  0.841471  ,
                  nan,         nan]],

        ...,

        [[ 0.841471  ,  0.841471  , -0.59249586, ...,  0.841471  ,
           0.841471  ,         nan],
         [ 0.841471  ,  0.6941658 ,         nan, ...,  0.841471  ,
                  nan,  0.841471  ],
         [ 0.4520399 ,  0.841471  ,  0.841471  , ...,  0.841471  ,
           0.841471  , -0.9347979 ],
         ...,
         [ 0.841471  ,         nan,  0.841471  , ...,         nan,
          -0.27045482,  0.841471  ],
         [-0.8291293 ,  0.841471  , -0.60508513, ...,  0.841471  ,
           0.841471  ,  0.9321815 ],
         [ 0.841471  , -0.1534675 , -0.19016294, ...,  0.841471  ,
                  nan,         nan]],

        [[ 0.841471  ,  0.841471  , -0.59249586, ...,  0.841471  ,
           0.841471  ,         nan],
         [ 0.841471  ,  0.6941658 ,         nan, ...,  0.841471  ,
                  nan,  0.841471  ],
         [ 0.4520399 ,  0.841471  ,  0.841471  , ...,  0.841471  ,
           0.841471  , -0.9347979 ],
         ...,
         [ 0.841471  ,         nan,  0.841471  , ...,         nan,
          -0.27045482,  0.841471  ],
         [-0.8291293 ,  0.841471  , -0.60508513, ...,  0.841471  ,
           0.841471  ,  0.9321815 ],
         [ 0.841471  , -0.1534675 , -0.19016294, ...,  0.841471  ,
                  nan,         nan]],

        [[ 0.841471  ,  0.841471  , -0.59249586, ...,  0.841471  ,
           0.841471  ,         nan],
         [ 0.841471  ,  0.6941658 ,         nan, ...,  0.841471  ,
                  nan,  0.841471  ],
         [ 0.4520399 ,  0.841471  ,  0.841471  , ...,  0.841471  ,
           0.841471  , -0.9347979 ],
         ...,
         [ 0.841471  ,         nan,  0.841471  , ...,         nan,
          -0.27045482,  0.841471  ],
         [-0.8291293 ,  0.841471  , -0.60508513, ...,  0.841471  ,
           0.841471  ,  0.9321815 ],
         [ 0.841471  , -0.1534675 , -0.19016294, ...,  0.841471  ,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [4]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.84147096,  0.84147096,  0.996603  , ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.93499136],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.44303182,  0.84147096],
         [ 0.34587088,  0.84147096, -0.806539  , ...,  0.84147096,
           0.84147096,  0.8875838 ],
         [ 0.84147096, -0.1534675 ,  0.9083715 , ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096,  0.996603  , ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.93499136],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.44303182,  0.84147096],
         [ 0.34587088,  0.84147096, -0.806539  , ...,  0.84147096,
           0.84147096,  0.8875838 ],
         [ 0.84147096, -0.1534675 ,  0.9083715 , ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096,  0.996603  , ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.93499136],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.44303182,  0.84147096],
         [ 0.34587088,  0.84147096, -0.806539  , ...,  0.84147096,
           0.84147096,  0.8875838 ],
         [ 0.84147096, -0.1534675 ,  0.9083715 , ...,  0.84147096,
                  nan,         nan]],

        ...,

        [[ 0.84147096,  0.84147096,  0.996603  , ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.93499136],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.44303182,  0.84147096],
         [ 0.34587088,  0.84147096, -0.806539  , ...,  0.84147096,
           0.84147096,  0.8875838 ],
         [ 0.84147096, -0.1534675 ,  0.9083715 , ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096,  0.996603  , ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [-0.97799903,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.7695478 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
           0.03979521,  0.84147096],
         [ 0.6925618 ,  0.84147096,  0.8426085 , ...,  0.84147096,
           0.84147096, -0.9699788 ],
         [ 0.84147096, -0.1534675 , -0.9536124 , ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096,  0.996603  , ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [-0.97799903,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.7695478 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
           0.03979521,  0.84147096],
         [ 0.6925618 ,  0.84147096,  0.8426085 , ...,  0.84147096,
           0.84147096, -0.9699788 ],
         [ 0.84147096, -0.1534675 , -0.9536124 , ...,  0.84147096,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [13], 'to': [4]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.84147096,  0.84147096, -0.59249586, ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.9347979 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.27045482,  0.84147096],
         [-0.8291293 ,  0.84147096, -0.60508513, ...,  0.84147096,
           0.84147096,  0.6295317 ],
         [ 0.84147096, -0.15346798,  0.45645925, ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096, -0.59249586, ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.9347979 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.27045482,  0.84147096],
         [-0.8291293 ,  0.84147096, -0.60508513, ...,  0.84147096,
           0.84147096,  0.6295317 ],
         [ 0.84147096, -0.15346798,  0.45645925, ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096, -0.59249586, ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.9347979 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.27045482,  0.84147096],
         [-0.8291293 ,  0.84147096, -0.60508513, ...,  0.84147096,
           0.84147096,  0.6295317 ],
         [ 0.84147096, -0.15346798,  0.45645925, ...,  0.84147096,
                  nan,         nan]],

        ...,

        [[ 0.84147096,  0.84147096, -0.59249586, ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.9347979 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.27045482,  0.84147096],
         [-0.8291293 ,  0.84147096, -0.60508513, ...,  0.84147096,
           0.84147096,  0.6295317 ],
         [ 0.84147096, -0.15346798,  0.45645925, ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096, -0.59249586, ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.9347979 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.27045482,  0.84147096],
         [-0.8291293 ,  0.84147096, -0.60508513, ...,  0.84147096,
           0.84147096,  0.6295317 ],
         [ 0.84147096, -0.15346798,  0.45645925, ...,  0.84147096,
                  nan,         nan]],

        [[ 0.84147096,  0.84147096, -0.59249586, ...,  0.84147096,
           0.84147096,         nan],
         [ 0.84147096,  0.6941658 ,         nan, ...,  0.84147096,
                  nan,  0.84147096],
         [ 0.65867084,  0.84147096,  0.84147096, ...,  0.84147096,
           0.84147096, -0.9347979 ],
         ...,
         [ 0.84147096,         nan,  0.84147096, ...,         nan,
          -0.27045482,  0.84147096],
         [-0.8291293 ,  0.84147096, -0.60508513, ...,  0.84147096,
           0.84147096,  0.6295317 ],
         [ 0.84147096, -0.15346798,  0.45645925, ...,  0.84147096,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [13], 'to': [4]}

generate models:75

analyse output arrays in iter:82

pre layer res:
11:add
{'name': 'add', 'output': array([[[[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [128.92107 , 127.67033 , 128.85028 , ..., 127.026436,
          127.23171 , 128.69257 ],
         ...,
         [128.71513 , 128.      , 128.87637 , ..., 128.14572 ,
          128.84177 , 127.34861 ],
         [128.81262 , 127.14528 , 128.72191 , ..., 128.27849 ,
          127.059395, 128.9483  ],
         [127.67867 , 127.31418 , 127.00249 , ..., 128.23988 ,
          127.72235 , 128.7513  ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [128.80588 , 128.81583 , 127.236694, ..., 127.41292 ,
          127.012886, 128.      ],
         ...,
         [128.94873 , 127.000916, 127.172386, ..., 128.9444  ,
          128.25185 , 128.97166 ],
         [128.81805 , 127.41572 , 127.66244 , ..., 128.69699 ,
          127.006966, 127.47342 ],
         [128.      , 127.56981 , 128.36165 , ..., 128.99414 ,
          128.32388 , 127.20537 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [128.91571 , 128.82596 , 128.98662 , ..., 128.      ,
          127.207275, 128.86365 ],
         ...,
         [128.86383 , 128.89433 , 128.98184 , ..., 127.85034 ,
          127.984146, 127.01249 ],
         [128.44472 , 128.98851 , 127.34495 , ..., 128.      ,
          128.0181  , 127.984535],
         [128.67213 , 127.870834, 128.7918  , ..., 127.51927 ,
          127.21357 , 128.5882  ]],

        ...,

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [128.80588 , 128.81583 , 127.236694, ..., 127.41292 ,
          127.012886, 128.      ],
         ...,
         [128.94873 , 127.000916, 127.172386, ..., 128.9444  ,
          128.25185 , 128.97166 ],
         [128.81805 , 127.41572 , 127.66244 , ..., 128.69699 ,
          127.006966, 127.47342 ],
         [128.      , 127.56981 , 128.36165 , ..., 128.99414 ,
          128.32388 , 127.20537 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [128.91571 , 128.82596 , 128.98662 , ..., 128.      ,
          127.207275, 128.86365 ],
         ...,
         [128.86383 , 128.89433 , 128.98184 , ..., 127.85034 ,
          127.984146, 127.01249 ],
         [128.44472 , 128.98851 , 127.34495 , ..., 128.      ,
          128.0181  , 127.984535],
         [128.67213 , 127.870834, 128.7918  , ..., 127.51927 ,
          127.21357 , 128.5882  ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [128.74783 , 128.07413 , 127.47468 , ..., 128.      ,
          127.560104, 128.      ],
         ...,
         [127.0252  , 128.19835 , 127.47147 , ..., 128.89421 ,
          127.335495, 127.00908 ],
         [128.      , 127.57791 , 127.29565 , ..., 127.31465 ,
          128.99089 , 128.43558 ],
         [128.9782  , 128.98936 , 128.62305 , ..., 127.55412 ,
          128.56892 , 128.58488 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9, 14], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         ...,
         [ 98461.82 , 147585.11 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.055],
         [ 98429.55 , 147591.33 , 147408.16 , ..., 147533.69 ,
          147522.08 ,  98292.266],
         [ 65608.836,  98370.54 ,  98207.055, ...,  98319.5  ,
           98351.22 ,  65564.125]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         ...,
         [ 98461.82 , 147585.11 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.055],
         [ 98429.55 , 147591.33 , 147408.16 , ..., 147533.69 ,
          147522.08 ,  98292.266],
         [ 65608.836,  98370.54 ,  98207.055, ...,  98319.5  ,
           98351.22 ,  65564.125]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         ...,
         [ 98461.82 , 147585.11 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.055],
         [ 98429.55 , 147591.33 , 147408.16 , ..., 147533.69 ,
          147522.08 ,  98292.266],
         [ 65608.836,  98370.54 ,  98207.055, ...,  98319.5  ,
           98351.22 ,  65564.125]],

        ...,

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         ...,
         [ 98461.82 , 147585.11 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.055],
         [ 98429.55 , 147591.33 , 147408.16 , ..., 147533.69 ,
          147522.08 ,  98292.266],
         [ 65608.836,  98370.54 ,  98207.055, ...,  98319.5  ,
           98351.22 ,  65564.125]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         ...,
         [ 98461.82 , 147585.11 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.055],
         [ 98429.55 , 147591.33 , 147408.16 , ..., 147533.69 ,
          147522.08 ,  98292.266],
         [ 65608.836,  98370.54 ,  98207.055, ...,  98319.5  ,
           98351.22 ,  65564.125]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         ...,
         [ 98461.82 , 147585.11 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.055],
         [ 98429.55 , 147591.33 , 147408.16 , ..., 147533.69 ,
          147522.08 ,  98292.266],
         [ 65608.836,  98370.54 ,  98207.055, ...,  98319.5  ,
           98351.22 ,  65564.125]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [11], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.16 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.31 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.56 ,  98207.03 , ...,  98319.55 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.16 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.31 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.56 ,  98207.03 , ...,  98319.55 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.16 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.31 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.56 ,  98207.03 , ...,  98319.55 ,
           98351.15 ,  65564.03 ]],

        ...,

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.16 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.31 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.56 ,  98207.03 , ...,  98319.55 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.86 , 147585.12 , 147467.03 , ..., 147527.75 ,
          147398.2  ,  98173.08 ],
         [ 98429.516, 147591.31 , 147408.14 , ..., 147533.78 ,
          147522.03 ,  98292.195],
         [ 65608.83 ,  98370.55 ,  98207.03 , ...,  98319.53 ,
           98351.14 ,  65564.016]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.86 , 147585.12 , 147467.03 , ..., 147527.75 ,
          147398.2  ,  98173.08 ],
         [ 98429.516, 147591.31 , 147408.14 , ..., 147533.78 ,
          147522.03 ,  98292.195],
         [ 65608.83 ,  98370.55 ,  98207.03 , ...,  98319.53 ,
           98351.14 ,  65564.016]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [11], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.17 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.33 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.555,  98207.02 , ...,  98319.54 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.17 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.33 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.555,  98207.02 , ...,  98319.54 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.17 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.33 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.555,  98207.02 , ...,  98319.54 ,
           98351.15 ,  65564.03 ]],

        ...,

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.17 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.33 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.555,  98207.02 , ...,  98319.54 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.17 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.33 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.555,  98207.02 , ...,  98319.54 ,
           98351.15 ,  65564.03 ]],

        [[       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         [       inf,        inf,        inf, ...,        inf,
                 inf,        inf],
         ...,
         [ 98461.875, 147585.17 , 147467.03 , ..., 147527.77 ,
          147398.19 ,  98173.08 ],
         [ 98429.55 , 147591.33 , 147408.19 , ..., 147533.84 ,
          147522.03 ,  98292.2  ],
         [ 65608.83 ,  98370.555,  98207.02 , ...,  98319.54 ,
           98351.15 ,  65564.03 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [11], 'to': []}

pre layer res:
13:slice
{'name': 'slice', 'output': array([[478.06195, 200.5381 , 209.44832, ..., 269.7148 , 113.70253,
        314.784  ]], dtype=float32), 'output_shape': TensorShape([1, 8192]), 'from': [12], 'to': [22]}
tf node:
{'name': 'sin', 'output': array([[ 0.51402223, -0.500199  ,  0.86158776, ..., -0.44587806,
         0.568922  ,  0.5848793 ]], dtype=float32), 'output_shape': TensorShape([1, 8192]), 'from': [13], 'to': [14]}
ms node:
{'name': 'sin', 'output': array([[ 0.51402223, -0.500199  ,  0.86158776, ..., -0.44587806,
         0.5688655 ,  0.585003  ]], dtype=float32), 'output_shape': (1, 8192), 'from': [13], 'to': [14]}
torch node:
{'name': 'sin', 'output': array([[ 0.51402223, -0.5001991 ,  0.86158776, ..., -0.44587806,
         0.5689219 ,  0.5848793 ]], dtype=float32), 'output_shape': torch.Size([1, 8192]), 'from': [13], 'to': [14]}

generate models:80

analyse output arrays in iter:83

pre layer res:
7:conv2d
{'name': 'conv2d', 'output': array([[[[12566.516  , 16311.062  ,  5786.429  , ..., 13540.202  ,
           1323.8126 ,  7342.3755 ],
         [ 6946.156  ,  9093.748  , 14502.736  , ..., 12356.483  ,
           7371.4307 ,  4898.031  ],
         [ 9343.938  ,  7828.1567 , 13607.827  , ...,  3267.1367 ,
          12049.733  , 12456.693  ],
         ...,
         [ 5353.6255 , 11581.624  ,  5652.437  , ...,  4654.563  ,
           1817.297  ,  6859.649  ],
         [ 9381.775  , 15117.438  ,  7117.3057 , ..., 10496.999  ,
           5051.5947 ,  5414.251  ],
         [  880.07336,  8907.436  , 13647.89   , ...,  2809.839  ,
          12590.942  ,  7307.873  ]],

        [[12566.516  , 16311.062  ,  5786.429  , ..., 13540.202  ,
           1323.8126 ,  7342.3755 ],
         [ 6946.156  ,  9093.748  , 14502.736  , ..., 12356.483  ,
           7371.4307 ,  4898.031  ],
         [ 9343.938  ,  7828.1567 , 13607.827  , ...,  3267.1367 ,
          12049.733  , 12456.693  ],
         ...,
         [ 5353.6255 , 11581.624  ,  5652.437  , ...,  4654.563  ,
           1817.297  ,  6859.649  ],
         [ 9381.775  , 15117.438  ,  7117.3057 , ..., 10496.999  ,
           5051.5947 ,  5414.251  ],
         [  880.07336,  8907.436  , 13647.89   , ...,  2809.839  ,
          12590.942  ,  7307.873  ]],

        [[12566.516  , 16311.062  ,  5786.429  , ..., 13540.202  ,
           1323.8126 ,  7342.3755 ],
         [ 6946.156  ,  9093.748  , 14502.736  , ..., 12356.483  ,
           7371.4307 ,  4898.031  ],
         [ 9343.938  ,  7828.1567 , 13607.827  , ...,  3267.1367 ,
          12049.733  , 12456.693  ],
         ...,
         [ 5353.6255 , 11581.624  ,  5652.437  , ...,  4654.563  ,
           1817.297  ,  6859.649  ],
         [ 9381.775  , 15117.438  ,  7117.3057 , ..., 10496.999  ,
           5051.5947 ,  5414.251  ],
         [  880.07336,  8907.436  , 13647.89   , ...,  2809.839  ,
          12590.942  ,  7307.873  ]],

        ...,

        [[12566.516  , 16311.062  ,  5786.429  , ..., 13540.202  ,
           1323.8126 ,  7342.3755 ],
         [ 6946.156  ,  9093.748  , 14502.736  , ..., 12356.483  ,
           7371.4307 ,  4898.031  ],
         [ 9343.938  ,  7828.1567 , 13607.827  , ...,  3267.1367 ,
          12049.733  , 12456.693  ],
         ...,
         [ 5353.6255 , 11581.624  ,  5652.437  , ...,  4654.563  ,
           1817.297  ,  6859.649  ],
         [ 9381.775  , 15117.438  ,  7117.3057 , ..., 10496.999  ,
           5051.5947 ,  5414.251  ],
         [  880.07336,  8907.436  , 13647.89   , ...,  2809.839  ,
          12590.942  ,  7307.873  ]],

        [[12566.516  , 16311.062  ,  5786.429  , ..., 13540.202  ,
           1323.8126 ,  7342.3755 ],
         [ 6946.156  ,  9093.748  , 14502.736  , ..., 12356.483  ,
           7371.4307 ,  4898.031  ],
         [ 9343.938  ,  7828.1567 , 13607.827  , ...,  3267.1367 ,
          12049.733  , 12456.693  ],
         ...,
         [ 5353.6255 , 11581.624  ,  5652.437  , ...,  4654.563  ,
           1817.297  ,  6859.649  ],
         [ 9381.775  , 15117.438  ,  7117.3057 , ..., 10496.999  ,
           5051.5947 ,  5414.251  ],
         [  880.07336,  8907.436  , 13647.89   , ...,  2809.839  ,
          12590.942  ,  7307.873  ]],

        [[12566.516  , 16311.062  ,  5786.429  , ..., 13540.202  ,
           1323.8126 ,  7342.3755 ],
         [ 6946.156  ,  9093.748  , 14502.736  , ..., 12356.483  ,
           7371.4307 ,  4898.031  ],
         [ 9343.938  ,  7828.1567 , 13607.827  , ...,  3267.1367 ,
          12049.733  , 12456.693  ],
         ...,
         [ 5353.6255 , 11581.624  ,  5652.437  , ...,  4654.563  ,
           1817.297  ,  6859.649  ],
         [ 9381.775  , 15117.438  ,  7117.3057 , ..., 10496.999  ,
           5051.5947 ,  5414.251  ],
         [  880.07336,  8907.436  , 13647.89   , ...,  2809.839  ,
          12590.942  ,  7307.873  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [6], 'to': [11]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.7459265 , -0.63819736, -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440655,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615347, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.7459265 , -0.63819736, -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440655,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615347, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.7459265 , -0.63819736, -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440655,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615347, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        ...,

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.7459265 , -0.63819736, -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440655,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615347, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.7459265 , -0.63819736, -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440655,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615347, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.7459265 , -0.63819736, -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440655,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615347, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [8]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2758409 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.531183  ,  0.50384676]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2758409 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.531183  ,  0.50384676]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2758409 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.531183  ,  0.50384676]],

        ...,

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.99982756, ..., -0.11935577,
          -0.98804617, -0.2758409 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.531183  ,  0.50384676]],

        [[ 0.15126371, -0.08742226, -0.3768765 , ..., -0.05434924,
          -0.93280333, -0.45596558],
         [-0.09329221,  0.91864556,  0.9064808 , ..., -0.558566  ,
           0.94880027, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.999652  , ..., -0.12105235,
          -0.9887871 , -0.2814682 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99974597],
         [ 0.83197427,  0.09448633, -0.99974406, ..., -0.80635786,
          -0.085667  , -0.9602261 ],
         [ 0.4139699 , -0.85128045,  0.7304453 , ...,  0.95033246,
          -0.52703965,  0.5017364 ]],

        [[ 0.15126371, -0.08742226, -0.3768765 , ..., -0.05434924,
          -0.93280333, -0.45596558],
         [-0.09329221,  0.91864556,  0.9064808 , ..., -0.558566  ,
           0.94880027, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.999652  , ..., -0.12105235,
          -0.9887871 , -0.2814682 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99974597],
         [ 0.83197427,  0.09448633, -0.99974406, ..., -0.80635786,
          -0.085667  , -0.9602261 ],
         [ 0.4139699 , -0.85128045,  0.7304453 , ...,  0.95033246,
          -0.52703965,  0.5017364 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [7], 'to': [8]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.9998276 , ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.9998276 , ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.9998276 , ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        ...,

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.9998276 , ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.9998276 , ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]],

        [[ 0.14450295, -0.08742226, -0.37506667, ..., -0.06214846,
          -0.93280333, -0.45596558],
         [-0.09426447,  0.91787213,  0.910561  , ..., -0.56422305,
           0.95033133, -0.28385755],
         [ 0.74592644, -0.6381973 , -0.9998276 , ..., -0.11935577,
          -0.98804617, -0.2749021 ],
         ...,
         [ 0.34440652,  0.9898348 , -0.6532189 , ..., -0.9572453 ,
           0.9934688 , -0.99982643],
         [ 0.8303453 ,  0.09448633, -0.9996217 , ..., -0.80635786,
          -0.08615348, -0.959953  ],
         [ 0.41452542, -0.8523037 ,  0.72508734, ...,  0.95063597,
          -0.53201014,  0.50426847]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [7], 'to': [8]}

generate models:81

analyse output arrays in iter:97

pre layer res:
31:reshape
{'name': 'reshape', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [30], 'to': [13]}
tf node:
{'name': 'sin', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [31], 'to': [6]}
ms node:
{'name': 'sin', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [31], 'to': [6]}
torch node:
{'name': 'sin', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [31], 'to': [6]}

generate models:95

analyse output arrays in iter:99

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [19]}
tf node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [9]}
ms node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [9]}
torch node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [9]}

generate models:96

final statics:
total operators:28
tensorflow --> nums:13,distinct_bugs:3
mindspore --> nums:10,distinct_bugs:3
torch --> nums:9,distinct_bugs:4
tensorflow --> 
conv2d:6
sin:6
softmax:1
mindspore --> 
sin:8
log:1
softmax:1
torch --> 
conv2d:1
sin:6
flatten:1
softmax:1

generate models:96

analyse output arrays in iter:105

pre layer res:
20:log
{'name': 'log', 'output': array([[[[-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         ...,
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472]],

        [[-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         ...,
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472]],

        [[-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         ...,
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472]],

        ...,

        [[-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         ...,
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472]],

        [[-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         ...,
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472]],

        [[-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         ...,
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472],
         [-0.6931472, -0.6931472, -0.6931472, ..., -0.6931472,
          -0.6931472, -0.6931472]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [12]}
tf node:
{'name': 'log', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [20], 'to': [14]}
ms node:
{'name': 'log', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [20], 'to': [14]}
torch node:
{'name': 'log', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [20], 'to': [14]}

generate models:102

analyse output arrays in iter:109

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [16], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:106

analyse output arrays in iter:110

pre layer res:
2:conv2d
{'name': 'conv2d', 'output': array([[[[  0.      ,   0.      ,  11.952591, ...,  94.36049 ,
            0.      , 119.47851 ],
         [  0.      , 148.81194 ,   0.      , ...,   0.      ,
           55.007095,   0.      ],
         [  0.      , 169.13799 ,  69.00861 , ...,   0.      ,
            0.      , 324.58673 ],
         ...,
         [  0.      ,   0.      ,  68.62762 , ...,   0.      ,
           60.268555,   0.      ],
         [  0.      ,   0.      ,   0.      , ..., 184.0319  ,
           23.13512 ,   0.      ],
         [ 21.761433,  28.528313,   0.      , ..., 103.41834 ,
           20.644176,   0.      ]],

        [[  0.      ,   0.      ,  11.952591, ...,  94.36049 ,
            0.      , 119.47851 ],
         [  0.      , 148.81194 ,   0.      , ...,   0.      ,
           55.007095,   0.      ],
         [  0.      , 169.13799 ,  69.00861 , ...,   0.      ,
            0.      , 324.58673 ],
         ...,
         [  0.      ,   0.      ,  68.62762 , ...,   0.      ,
           60.268555,   0.      ],
         [  0.      ,   0.      ,   0.      , ..., 184.0319  ,
           23.13512 ,   0.      ],
         [ 21.761433,  28.528313,   0.      , ..., 103.41834 ,
           20.644176,   0.      ]],

        [[  0.      ,   0.      ,  11.952591, ...,  94.36049 ,
            0.      , 119.47851 ],
         [  0.      , 148.81194 ,   0.      , ...,   0.      ,
           55.007095,   0.      ],
         [  0.      , 169.13799 ,  69.00861 , ...,   0.      ,
            0.      , 324.58673 ],
         ...,
         [  0.      ,   0.      ,  68.62762 , ...,   0.      ,
           60.268555,   0.      ],
         [  0.      ,   0.      ,   0.      , ..., 184.0319  ,
           23.13512 ,   0.      ],
         [ 21.761433,  28.528313,   0.      , ..., 103.41834 ,
           20.644176,   0.      ]],

        ...,

        [[  0.      ,   0.      ,  11.952591, ...,  94.36049 ,
            0.      , 119.47851 ],
         [  0.      , 148.81194 ,   0.      , ...,   0.      ,
           55.007095,   0.      ],
         [  0.      , 169.13799 ,  69.00861 , ...,   0.      ,
            0.      , 324.58673 ],
         ...,
         [  0.      ,   0.      ,  68.62762 , ...,   0.      ,
           60.268555,   0.      ],
         [  0.      ,   0.      ,   0.      , ..., 184.0319  ,
           23.13512 ,   0.      ],
         [ 21.761433,  28.528313,   0.      , ..., 103.41834 ,
           20.644176,   0.      ]],

        [[  0.      ,   0.      ,  11.952591, ...,  94.36049 ,
            0.      , 119.47851 ],
         [  0.      , 148.81194 ,   0.      , ...,   0.      ,
           55.007095,   0.      ],
         [  0.      , 169.13799 ,  69.00861 , ...,   0.      ,
            0.      , 324.58673 ],
         ...,
         [  0.      ,   0.      ,  68.62762 , ...,   0.      ,
           60.268555,   0.      ],
         [  0.      ,   0.      ,   0.      , ..., 184.0319  ,
           23.13512 ,   0.      ],
         [ 21.761433,  28.528313,   0.      , ..., 103.41834 ,
           20.644176,   0.      ]],

        [[  0.      ,   0.      ,  11.952591, ...,  94.36049 ,
            0.      , 119.47851 ],
         [  0.      , 148.81194 ,   0.      , ...,   0.      ,
           55.007095,   0.      ],
         [  0.      , 169.13799 ,  69.00861 , ...,   0.      ,
            0.      , 324.58673 ],
         ...,
         [  0.      ,   0.      ,  68.62762 , ...,   0.      ,
           60.268555,   0.      ],
         [  0.      ,   0.      ,   0.      , ..., 184.0319  ,
           23.13512 ,   0.      ],
         [ 21.761433,  28.528313,   0.      , ..., 103.41834 ,
           20.644176,   0.      ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [11]}
tf node:
{'name': 'cos', 'output': array([[[[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        ...,

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [2], 'to': [15, 19]}
ms node:
{'name': 'cos', 'output': array([[[[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        ...,

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174802 , ...,  0.9936499 ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40195835,  1.        , ...,  1.        ,
           0.02923118,  1.        ],
         [ 1.        ,  0.8737252 ,  0.99434626, ...,  1.        ,
           1.        , -0.5378844 ],
         ...,
         [ 1.        ,  1.        ,  0.88352555, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24606064,
          -0.41399097,  1.        ],
         [-0.97372806, -0.9679218 ,  1.        , ..., -0.9678457 ,
          -0.22197124,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174802 , ...,  0.9936499 ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40195835,  1.        , ...,  1.        ,
           0.02923118,  1.        ],
         [ 1.        ,  0.8737252 ,  0.99434626, ...,  1.        ,
           1.        , -0.5378844 ],
         ...,
         [ 1.        ,  1.        ,  0.88352555, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24606064,
          -0.41399097,  1.        ],
         [-0.97372806, -0.9679218 ,  1.        , ..., -0.9678457 ,
          -0.22197124,  1.        ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [2], 'to': [15, 19]}
torch node:
{'name': 'cos', 'output': array([[[[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        ...,

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]],

        [[ 1.        ,  1.        ,  0.8174769 , ...,  0.993655  ,
           1.        ,  0.9952031 ],
         [ 1.        , -0.40201426,  1.        , ...,  1.        ,
           0.02921974,  1.        ],
         [ 1.        ,  0.87371033,  0.9943422 , ...,  1.        ,
           1.        , -0.5380388 ],
         ...,
         [ 1.        ,  1.        ,  0.88354343, ...,  1.        ,
          -0.8373962 ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ..., -0.24617895,
          -0.4139823 ,  1.        ],
         [-0.9737311 , -0.96792036,  1.        , ..., -0.967861  ,
          -0.22196008,  1.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [2], 'to': [15, 19]}

pre layer res:
5:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[ 2.        ,  2.        ,  1.6349539 , ..., -0.52202886,
           2.        ,  2.        ],
         [-0.87780434,  2.        ,  1.3997641 , ...,  1.98731   ,
           2.        ,  1.9904062 ],
         [ 2.        , -0.8040285 ,  2.        , ...,  2.        ,
          -1.9138771 ,  2.        ],
         ...,
         [ 2.        ,  2.        ,  2.        , ...,  2.        ,
           2.        ,  1.0526255 ],
         [-0.6898629 ,  2.        , -0.00613511, ...,  2.        ,
           2.        ,  1.5892763 ],
         [ 2.        ,  0.7100928 ,  2.        , ..., -1.9828116 ,
          -1.5226523 , -1.863954  ]],

        [[-1.572816  , -0.41929972, -1.7900268 , ..., -1.8617344 ,
           0.48598152,  2.        ],
         [ 1.6883595 , -1.9132663 ,  2.        , ...,  2.        ,
           2.        ,  1.042972  ],
         [-0.7509612 ,  2.        , -0.2176311 , ...,  2.        ,
          -1.8022145 ,  2.        ],
         ...,
         [-0.84178233, -1.1144303 ,  2.        , ...,  1.9154611 ,
           2.        ,  1.9964185 ],
         [ 0.5589897 ,  1.0497847 ,  2.        , ...,  1.9265866 ,
           2.        ,  2.        ],
         [ 2.        ,  1.8574421 ,  1.2319992 , ...,  1.6168072 ,
           2.        , -1.8251128 ]],

        [[ 2.        , -1.6715999 ,  2.        , ...,  1.0067247 ,
           2.        ,  1.9838572 ],
         [-0.67091805,  2.        , -1.9862163 , ...,  2.        ,
           2.        ,  2.        ],
         [ 2.        ,  2.        ,  1.9564769 , ...,  2.        ,
           2.        , -0.7044625 ],
         ...,
         [ 2.        , -1.3721834 ,  1.6262482 , ...,  0.71932083,
           2.        ,  2.        ],
         [ 2.        ,  2.        ,  2.        , ...,  2.        ,
           1.7443832 ,  2.        ],
         [ 2.        ,  2.        , -0.25270367, ...,  2.        ,
           2.        , -1.470748  ]],

        ...,

        [[-1.572816  , -0.41929972, -1.7900268 , ..., -1.8617344 ,
           0.48598152,  2.        ],
         [ 1.6883595 , -1.9132663 ,  2.        , ...,  2.        ,
           2.        ,  1.042972  ],
         [-0.7509612 ,  2.        , -0.2176311 , ...,  2.        ,
          -1.8022145 ,  2.        ],
         ...,
         [-0.84178233, -1.1144303 ,  2.        , ...,  1.9154611 ,
           2.        ,  1.9964185 ],
         [ 0.5589897 ,  1.0497847 ,  2.        , ...,  1.9265866 ,
           2.        ,  2.        ],
         [ 2.        ,  1.8574421 ,  1.2319992 , ...,  1.6168072 ,
           2.        , -1.8251128 ]],

        [[ 2.        , -1.6715999 ,  2.        , ...,  1.0067247 ,
           2.        ,  1.9838572 ],
         [-0.67091805,  2.        , -1.9862163 , ...,  2.        ,
           2.        ,  2.        ],
         [ 2.        ,  2.        ,  1.9564769 , ...,  2.        ,
           2.        , -0.7044625 ],
         ...,
         [ 2.        , -1.3721834 ,  1.6262482 , ...,  0.71932083,
           2.        ,  2.        ],
         [ 2.        ,  2.        ,  2.        , ...,  2.        ,
           1.7443832 ,  2.        ],
         [ 2.        ,  2.        , -0.25270367, ...,  2.        ,
           2.        , -1.470748  ]],

        [[-1.0214244 , -0.46427384,  2.        , ...,  2.        ,
           2.        , -0.1854874 ],
         [-1.9720747 , -1.7887616 ,  0.6194253 , ..., -0.87020856,
          -1.6004862 ,  1.5933064 ],
         [ 2.        , -1.533083  ,  1.1982518 , ..., -0.32625848,
           2.        ,  2.        ],
         ...,
         [ 2.        , -1.9995538 , -0.0893444 , ..., -0.4923579 ,
          -0.8279646 ,  2.        ],
         [-1.9474622 , -1.9358407 ,  2.        , ...,  1.9389575 ,
          -0.571112  ,  2.        ],
         [ 0.30928084,  0.4355733 ,  2.        , ..., -1.935722  ,
          -0.44392017,  2.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [18], 'to': [17]}
tf node:
{'name': 'log', 'output': array([[[[ 0.6931472 ,  0.6931472 ,  0.49161458, ...,         nan,
           0.6931472 ,  0.6931472 ],
         [        nan,  0.6931472 ,  0.33630368, ...,  0.686782  ,
           0.6931472 ,  0.6883387 ],
         [ 0.6931472 ,         nan,  0.6931472 , ...,  0.6931472 ,
                  nan,  0.6931472 ],
         ...,
         [ 0.6931472 ,  0.6931472 ,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,  0.05128755],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,  0.46327877],
         [ 0.6931472 , -0.34235963,  0.6931472 , ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
          -0.7215847 ,  0.6931472 ],
         [ 0.52375734,         nan,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,  0.0420743 ],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
                  nan,  0.6931472 ],
         ...,
         [        nan,         nan,  0.6931472 , ...,  0.6499584 ,
           0.6931472 ,  0.6913548 ],
         [-0.5816242 ,  0.04858506,  0.6931472 , ...,  0.65574986,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.61920035,  0.20863818, ...,  0.48045337,
           0.6931472 ,         nan]],

        [[ 0.6931472 ,         nan,  0.6931472 , ...,  0.00670221,
           0.6931472 ,  0.68504304],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6711454 , ...,  0.6931472 ,
           0.6931472 ,         nan],
         ...,
         [ 0.6931472 ,         nan,  0.48627567, ..., -0.3294478 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6931472 , ...,  0.6931472 ,
           0.556401  ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
          -0.7215847 ,  0.6931472 ],
         [ 0.52375734,         nan,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,  0.0420743 ],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
                  nan,  0.6931472 ],
         ...,
         [        nan,         nan,  0.6931472 , ...,  0.6499584 ,
           0.6931472 ,  0.6913548 ],
         [-0.5816242 ,  0.04858506,  0.6931472 , ...,  0.65574986,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.61920035,  0.20863818, ...,  0.48045337,
           0.6931472 ,         nan]],

        [[ 0.6931472 ,         nan,  0.6931472 , ...,  0.00670221,
           0.6931472 ,  0.68504304],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6711454 , ...,  0.6931472 ,
           0.6931472 ,         nan],
         ...,
         [ 0.6931472 ,         nan,  0.48627567, ..., -0.3294478 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6931472 , ...,  0.6931472 ,
           0.556401  ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,         nan]],

        [[        nan,         nan,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,         nan],
         [        nan,         nan, -0.47896317, ...,         nan,
                  nan,  0.46581137],
         [ 0.6931472 ,         nan,  0.1808637 , ...,         nan,
           0.6931472 ,  0.6931472 ],
         ...,
         [ 0.6931472 ,         nan,         nan, ...,         nan,
                  nan,  0.6931472 ],
         [        nan,         nan,  0.6931472 , ...,  0.66215044,
                  nan,  0.6931472 ],
         [-1.1735055 , -0.8310922 ,  0.6931472 , ...,         nan,
                  nan,  0.6931472 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [5], 'to': [12]}
ms node:
{'name': 'log', 'output': array([[[[ 0.69314575,  0.69314575,  0.49161217, ...,         nan,
           0.69314575,  0.69314575],
         [        nan,  0.69314575,  0.33630654, ...,  0.6867806 ,
           0.69314575,  0.68833727],
         [ 0.69314575,         nan,  0.69314575, ...,  0.69314575,
                  nan,  0.69314575],
         ...,
         [ 0.69314575,  0.69314575,  0.69314575, ...,  0.69314575,
           0.69314575,  0.05129097],
         [        nan,  0.69314575,         nan, ...,  0.69314575,
           0.69314575,  0.46327636],
         [ 0.69314575, -0.34235677,  0.69314575, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
          -0.72158617,  0.69314575],
         [ 0.52375406,         nan,  0.69314575, ...,  0.69314575,
           0.69314575,  0.04207771],
         [        nan,  0.69314575,         nan, ...,  0.69314575,
                  nan,  0.69314575],
         ...,
         [        nan,         nan,  0.69314575, ...,  0.6499584 ,
           0.69314575,  0.6913534 ],
         [-0.5816237 ,  0.04858847,  0.69314575, ...,  0.65574986,
           0.69314575,  0.69314575],
         [ 0.69314575,  0.6192003 ,  0.20863909, ...,  0.48045087,
           0.69314575,         nan]],

        [[ 0.69314575,         nan,  0.69314575, ...,  0.00670077,
           0.69314575,  0.6850416 ],
         [        nan,  0.69314575,         nan, ...,  0.69314575,
           0.69314575,  0.69314575],
         [ 0.69314575,  0.69314575,  0.67114395, ...,  0.69314575,
           0.69314575,         nan],
         ...,
         [ 0.69314575,         nan,  0.4862732 , ..., -0.32944787,
           0.69314575,  0.69314575],
         [ 0.69314575,  0.69314575,  0.69314575, ...,  0.69314575,
           0.55640006,  0.69314575],
         [ 0.69314575,  0.69314575,         nan, ...,  0.69314575,
           0.69314575,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
          -0.72158617,  0.69314575],
         [ 0.52375406,         nan,  0.69314575, ...,  0.69314575,
           0.69314575,  0.04207771],
         [        nan,  0.69314575,         nan, ...,  0.69314575,
                  nan,  0.69314575],
         ...,
         [        nan,         nan,  0.69314575, ...,  0.6499584 ,
           0.69314575,  0.6913534 ],
         [-0.5816237 ,  0.04858847,  0.69314575, ...,  0.65574986,
           0.69314575,  0.69314575],
         [ 0.69314575,  0.6192003 ,  0.20863909, ...,  0.48045087,
           0.69314575,         nan]],

        [[ 0.69314575,         nan,  0.69314575, ...,  0.00670077,
           0.69314575,  0.6850416 ],
         [        nan,  0.69314575,         nan, ...,  0.69314575,
           0.69314575,  0.69314575],
         [ 0.69314575,  0.69314575,  0.67114395, ...,  0.69314575,
           0.69314575,         nan],
         ...,
         [ 0.69314575,         nan,  0.4862732 , ..., -0.32944787,
           0.69314575,  0.69314575],
         [ 0.69314575,  0.69314575,  0.69314575, ...,  0.69314575,
           0.55640006,  0.69314575],
         [ 0.69314575,  0.69314575,         nan, ...,  0.69314575,
           0.69314575,         nan]],

        [[        nan,         nan,  0.69314575, ...,  0.69314575,
           0.69314575,         nan],
         [        nan,         nan, -0.47896236, ...,         nan,
                  nan,  0.46580896],
         [ 0.69314575,         nan,  0.18086222, ...,         nan,
           0.69314575,  0.69314575],
         ...,
         [ 0.69314575,         nan,         nan, ...,         nan,
                  nan,  0.69314575],
         [        nan,         nan,  0.69314575, ...,  0.662149  ,
                  nan,  0.69314575],
         [-1.1735047 , -0.83109313,  0.69314575, ...,         nan,
                  nan,  0.69314575]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [5], 'to': [12]}
torch node:
{'name': 'log', 'output': array([[[[ 0.6931472 ,  0.6931472 ,  0.49161458, ...,         nan,
           0.6931472 ,  0.6931472 ],
         [        nan,  0.6931472 ,  0.3363037 , ...,  0.686782  ,
           0.6931472 ,  0.6883387 ],
         [ 0.6931472 ,         nan,  0.6931472 , ...,  0.6931472 ,
                  nan,  0.6931472 ],
         ...,
         [ 0.6931472 ,  0.6931472 ,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,  0.05128755],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,  0.46327877],
         [ 0.6931472 , -0.34235963,  0.6931472 , ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
          -0.72158474,  0.6931472 ],
         [ 0.52375734,         nan,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,  0.0420743 ],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
                  nan,  0.6931472 ],
         ...,
         [        nan,         nan,  0.6931472 , ...,  0.6499584 ,
           0.6931472 ,  0.6913548 ],
         [-0.5816242 ,  0.04858506,  0.6931472 , ...,  0.65574986,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6192003 ,  0.20863828, ...,  0.48045328,
           0.6931472 ,         nan]],

        [[ 0.6931472 ,         nan,  0.6931472 , ...,  0.00670221,
           0.6931472 ,  0.68504304],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6711454 , ...,  0.6931472 ,
           0.6931472 ,         nan],
         ...,
         [ 0.6931472 ,         nan,  0.4862756 , ..., -0.3294478 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6931472 , ...,  0.6931472 ,
           0.556401  ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
          -0.72158474,  0.6931472 ],
         [ 0.52375734,         nan,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,  0.0420743 ],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
                  nan,  0.6931472 ],
         ...,
         [        nan,         nan,  0.6931472 , ...,  0.6499584 ,
           0.6931472 ,  0.6913548 ],
         [-0.5816242 ,  0.04858506,  0.6931472 , ...,  0.65574986,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6192003 ,  0.20863828, ...,  0.48045328,
           0.6931472 ,         nan]],

        [[ 0.6931472 ,         nan,  0.6931472 , ...,  0.00670221,
           0.6931472 ,  0.68504304],
         [        nan,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6711454 , ...,  0.6931472 ,
           0.6931472 ,         nan],
         ...,
         [ 0.6931472 ,         nan,  0.4862756 , ..., -0.3294478 ,
           0.6931472 ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,  0.6931472 , ...,  0.6931472 ,
           0.556401  ,  0.6931472 ],
         [ 0.6931472 ,  0.6931472 ,         nan, ...,  0.6931472 ,
           0.6931472 ,         nan]],

        [[        nan,         nan,  0.6931472 , ...,  0.6931472 ,
           0.6931472 ,         nan],
         [        nan,         nan, -0.4789632 , ...,         nan,
                  nan,  0.46581137],
         [ 0.6931472 ,         nan,  0.1808637 , ...,         nan,
           0.6931472 ,  0.6931472 ],
         ...,
         [ 0.6931472 ,         nan,         nan, ...,         nan,
                  nan,  0.6931472 ],
         [        nan,         nan,  0.6931472 , ...,  0.66215044,
                  nan,  0.6931472 ],
         [-1.1735055 , -0.8310922 ,  0.6931472 , ...,         nan,
                  nan,  0.6931472 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [5], 'to': [12]}

generate models:107

analyse output arrays in iter:112

pre layer res:
18:reshape
{'name': 'reshape', 'output': array([[[[13730431., 13120203., 14771490., ..., 14695195., 13716438.,
          15270860.],
         [14247020., 12412909., 15143002., ..., 15248240., 14852276.,
          16344134.],
         [13481468., 12242161., 15740458., ..., 15714258., 13928536.,
          16196724.],
         ...,
         [14391943., 11973302., 14700146., ..., 15703865., 13716438.,
          17017244.],
         [13146020., 12484627., 15509719., ..., 15821778., 15247642.,
          16188004.],
         [13741741., 13013888., 16006508., ..., 15837321., 15148864.,
          17648904.]],

        [[14898950., 11858280., 15690842., ..., 14828435., 14416956.,
          16372782.],
         [13337980., 12185314., 15790544., ..., 15794408., 15691746.,
          15942540.],
         [13913952., 12949745., 14818791., ..., 15760713., 13716438.,
          17280624.],
         ...,
         [13868844., 12388185., 15036426., ..., 15240529., 14736316.,
          16726252.],
         [14268962., 12645622., 14871755., ..., 15537391., 14988870.,
          16296430.],
         [13852012., 13221414., 15868564., ..., 14600313., 14539438.,
          15782577.]],

        [[13586273., 12426461., 14700146., ..., 15906746., 14518689.,
          16003348.],
         [14554363., 12511379., 14902430., ..., 15467107., 14222417.,
          16959872.],
         [14073725., 12424393., 16267314., ..., 14649178., 13803760.,
          15623988.],
         ...,
         [15159434., 13003232., 16191010., ..., 15106282., 16491896.,
          15270860.],
         [13537367., 13148123., 16115628., ..., 16018202., 14523979.,
          15613823.],
         [12845559., 12455675., 15435754., ..., 16345166., 13815355.,
          17149468.]],

        ...,

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [14], 'to': [17]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.9751323 ,  0.52614146, -0.5860938 , ...,  0.88799   ,
           0.8420089 ,  0.609248  ],
         [-0.54992   ,  0.45678675, -0.7222655 , ...,  0.12191373,
           0.6298161 , -0.20797533],
         [-0.13987607, -0.923342  , -0.32551977, ...,  0.52368397,
          -0.61009026, -0.38850892],
         ...,
         [ 0.68062943,  0.31837124,  0.80928487, ..., -0.06029576,
           0.8420089 , -0.99999684],
         [ 0.91779226,  0.81009203, -0.9404891 , ...,  0.44161648,
          -0.8278018 ,  0.61484826],
         [ 0.999077  , -0.79382116,  0.6838138 , ...,  0.88371587,
          -0.8515653 , -0.37835068]],

        [[-0.96954614,  0.722779  ,  0.9163165 , ..., -0.13426165,
           0.3782578 ,  0.38288075],
         [-0.94681734,  0.9624158 ,  0.6766752 , ...,  0.7846935 ,
           0.9335259 ,  0.9577297 ],
         [ 0.07066858,  0.9008547 ,  0.52675474, ..., -0.7315557 ,
           0.8420089 , -0.12961805],
         ...,
         [ 0.88355863,  0.723296  , -0.98833287, ..., -0.98700553,
          -0.9767804 , -0.39599025],
         [ 0.50953037,  0.00143496, -0.42976394, ..., -0.8750885 ,
           0.01169788, -0.76750517],
         [ 0.41684297, -0.78146803, -0.81038165, ...,  0.99534583,
          -0.89796716,  0.61648303]],

        [[-0.99925447, -0.34883514,  0.80928487, ..., -0.02768793,
           0.7222069 ,  0.930284  ],
         [ 0.39716974,  0.38411176, -0.80374414, ..., -0.97675747,
           0.9801852 , -0.973107  ],
         [ 0.81439674, -0.9277589 , -0.9150588 , ...,  0.84117216,
          -0.6506218 ,  0.8793416 ],
         ...,
         [ 0.6157595 , -0.593005  , -0.15736718, ..., -0.9549394 ,
           0.12132683,  0.609248  ],
         [ 0.70487785,  0.1117965 ,  0.6239186 , ...,  0.984844  ,
           0.94867396,  0.7664449 ],
         [ 0.23876584,  0.02641054, -0.9521178 , ...,  0.9753066 ,
           0.97040135, -0.79552996]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [18], 'to': [10]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.713356  ,  0.52614146, -0.5860938 , ...,  0.88799   ,
           0.8420089 ,  0.609248  ],
         [ 0.40568808,  0.45678675, -0.7222654 , ...,  0.12191373,
           0.6298161 , -0.20797533],
         [-0.84214914, -0.923342  , -0.32551977, ...,  0.52368397,
          -0.61009026, -0.38850892],
         ...,
         [ 0.98423076,  0.31837124,  0.80928487, ..., -0.06029576,
           0.8420089 , -0.99999684],
         [ 0.16177003,  0.81009203, -0.9404891 , ...,  0.44161648,
          -0.82780176,  0.61484826],
         [ 0.5036584 , -0.79382116,  0.68381375, ...,  0.88371587,
          -0.8515653 , -0.37835068]],

        [[-0.31776446,  0.7227789 ,  0.9163165 , ..., -0.13426165,
           0.3782578 ,  0.38288075],
         [ 0.10142893,  0.9624158 ,  0.6766752 , ...,  0.7846935 ,
           0.9335259 ,  0.9577297 ],
         [-0.8011848 ,  0.9008547 ,  0.5267548 , ..., -0.73155564,
           0.8420089 , -0.12961805],
         ...,
         [ 0.08331062,  0.7232959 , -0.98833287, ..., -0.98700553,
          -0.9767804 , -0.39599025],
         [ 0.9993464 ,  0.00143496, -0.42976394, ..., -0.8750885 ,
           0.01169788, -0.76750517],
         [-0.53965783, -0.781468  , -0.81038165, ...,  0.99534583,
          -0.89796716,  0.616483  ]],

        [[-0.5074132 , -0.34883514,  0.80928487, ..., -0.02768793,
           0.7222069 ,  0.93028396],
         [ 0.98684764,  0.38411176, -0.80374414, ..., -0.97675747,
           0.9801852 , -0.9731069 ],
         [ 0.9283332 , -0.9277589 , -0.9150588 , ...,  0.84117216,
          -0.6506217 ,  0.8793416 ],
         ...,
         [ 0.99572   , -0.593005  , -0.15736718, ..., -0.9549394 ,
           0.12132683,  0.609248  ],
         [ 0.97772664,  0.11179651,  0.62391853, ...,  0.984844  ,
           0.94867396,  0.76644486],
         [-0.6881275 ,  0.02641054, -0.95211774, ...,  0.9753066 ,
           0.97040135, -0.79552996]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [18], 'to': [10]}
torch node:
{'name': 'cos', 'output': array([[[[ 9.75132287e-01,  5.26141465e-01, -5.86093783e-01, ...,
           8.66744220e-01,  8.42008889e-01,  6.09247983e-01],
         [-5.49920022e-01,  4.56786752e-01, -7.22265422e-01, ...,
           9.01064456e-01,  6.29816115e-01, -2.07975328e-01],
         [-1.39876068e-01, -9.23341990e-01, -3.25519770e-01, ...,
           5.23683965e-01, -6.10090256e-01, -3.88508916e-01],
         ...,
         [ 6.80629432e-01,  3.18371236e-01,  8.09284866e-01, ...,
           8.07362020e-01,  8.42008889e-01, -9.99996841e-01],
         [ 9.17792261e-01,  8.10092032e-01, -9.40489113e-01, ...,
          -5.16364694e-01, -8.27801764e-01,  6.14848256e-01],
         [ 9.99077022e-01, -7.93821156e-01,  6.83813751e-01, ...,
           8.71302128e-01, -8.51565301e-01, -3.78350675e-01]],

        [[-9.69546139e-01,  7.22778916e-01,  9.16316509e-01, ...,
           7.61310339e-01,  3.78257811e-01,  3.82880747e-01],
         [-9.46817338e-01,  9.62415814e-01,  6.76675200e-01, ...,
           7.84693480e-01,  9.33525920e-01,  9.57729697e-01],
         [ 7.06685781e-02,  9.00854707e-01,  5.26754797e-01, ...,
          -9.68960762e-01,  8.42008889e-01, -1.29618049e-01],
         ...,
         [ 8.83558631e-01,  7.23295927e-01, -9.88332868e-01, ...,
          -3.98068458e-01, -9.76780415e-01, -3.95990252e-01],
         [ 5.09530306e-01,  1.43495540e-03, -4.29763943e-01, ...,
          -6.55715540e-02,  1.16978763e-02, -7.67505169e-01],
         [ 4.16842937e-01, -7.81467974e-01, -8.10381651e-01, ...,
           6.18877769e-01, -8.97967160e-01,  6.16482973e-01]],

        [[-9.99254465e-01, -3.48835140e-01,  8.09284866e-01, ...,
          -8.97426546e-01,  7.22206891e-01,  9.30283964e-01],
         [ 3.97169739e-01,  3.84111762e-01, -8.03744137e-01, ...,
          -3.47377062e-01,  9.80185211e-01, -9.73106980e-01],
         [ 8.14396739e-01, -9.27758873e-01, -9.15058792e-01, ...,
          -5.52846293e-04, -6.50621712e-01,  8.79341602e-01],
         ...,
         [ 6.15759432e-01, -5.93005002e-01, -1.57367185e-01, ...,
          -7.65705287e-01,  1.21326834e-01,  6.09247983e-01],
         [ 7.04877853e-01,  1.11796506e-01,  6.23918533e-01, ...,
           3.86166960e-01,  9.48673964e-01,  7.66444862e-01],
         [ 2.38765821e-01,  2.64105387e-02, -9.52117741e-01, ...,
           7.12803662e-01,  9.70401347e-01, -7.95529962e-01]],

        ...,

        [[ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         ...,
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00]],

        [[ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         ...,
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00]],

        [[ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         ...,
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00],
         [ 1.00000000e+00,  1.00000000e+00,  1.00000000e+00, ...,
           1.00000000e+00,  1.00000000e+00,  1.00000000e+00]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [18], 'to': [10]}

generate models:109

analyse the exceptions in iter:117
torch exception:
{'id': 7, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          ...,
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],

         [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          ...,
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],

         [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          ...,
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],

         ...,

         [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          ...,
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],

         [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          ...,
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],

         [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          ...,
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
          [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]]])]}
Given groups=1, weight of size [128, 128, 1, 1], expected input[1, 64, 16, 16] to have 128 channels, but got 64 channels instead
mindspore exception:
{'id': 7, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 64, 16, 16], dtype=Float32, value=
[[[[5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   ...
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001]],
  [[5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   ...
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001]],
  [[5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   ...
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001]],
  ...
  [[5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   ...
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001]],
  [[5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   ...
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001]],
  [[5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   ...
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001],
   [5.00000000e-001, 5.00000000e-001, 5.00000000e-001 ... 5.00000000e-001, 5.00000000e-001, 5.00000000e-001]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 128, but got 'C_in' of input 'x' shape: 64, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:114

analyse output arrays in iter:132

pre layer res:
14:reshape
{'name': 'reshape', 'output': array([[[[2.9564910e+34,           inf, 5.3515839e+02, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 2.2560244e+38, 2.3748279e+19],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 3.3636804e+35,           inf],
         [          inf,           inf, 4.3011070e+32, ...,
                    inf,           inf,           inf],
         [3.9461095e+27,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[2.9564910e+34,           inf, 5.3515839e+02, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 2.2560244e+38, 2.3748279e+19],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 3.3636804e+35,           inf],
         [          inf,           inf, 4.3011070e+32, ...,
                    inf,           inf,           inf],
         [3.9461095e+27,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[2.9564910e+34,           inf, 5.3515839e+02, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 2.2560244e+38, 2.3748279e+19],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 3.3636804e+35,           inf],
         [          inf,           inf, 4.3011070e+32, ...,
                    inf,           inf,           inf],
         [3.9461095e+27,           inf,           inf, ...,
                    inf,           inf,           inf]],

        ...,

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [13], 'to': [27]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.99957395,         nan,  0.46458083, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.47579303,  0.99559265],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.47589985,         nan],
         [        nan,         nan,  0.21894176, ...,         nan,
                  nan,         nan],
         [ 0.49272728,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.99957395,         nan,  0.46458083, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.47579303,  0.99559265],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.47589985,         nan],
         [        nan,         nan,  0.21894176, ...,         nan,
                  nan,         nan],
         [ 0.49272728,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.99957395,         nan,  0.46458083, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.47579303,  0.99559265],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.47589985,         nan],
         [        nan,         nan,  0.21894176, ...,         nan,
                  nan,         nan],
         [ 0.49272728,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [14], 'to': [11]}
ms node:
{'name': 'cos', 'output': array([[[[-0.9779904 ,         nan,  0.4646349 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.9977695 , -0.44015217],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.7491291 ,         nan],
         [        nan,         nan,  0.9960683 , ...,         nan,
                  nan,         nan],
         [-0.88070655,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.9779904 ,         nan,  0.4646349 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.9977695 , -0.44015217],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.7491291 ,         nan],
         [        nan,         nan,  0.9960683 , ...,         nan,
                  nan,         nan],
         [-0.88070655,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.9779904 ,         nan,  0.4646349 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.9977695 , -0.44015217],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.7491291 ,         nan],
         [        nan,         nan,  0.9960683 , ...,         nan,
                  nan,         nan],
         [-0.88070655,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [14], 'to': [11]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.99957395,         nan,  0.46458083, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.47579303,  0.73740304],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.47589985,         nan],
         [        nan,         nan,  0.9673995 , ...,         nan,
                  nan,         nan],
         [ 0.49272728,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.99957395,         nan,  0.46458083, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.47579303,  0.73740304],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.47589985,         nan],
         [        nan,         nan,  0.9673995 , ...,         nan,
                  nan,         nan],
         [ 0.49272728,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.99957395,         nan,  0.46458083, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.47579303,  0.73740304],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
          -0.47589985,         nan],
         [        nan,         nan,  0.9673995 , ...,         nan,
                  nan,         nan],
         [ 0.49272728,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [14], 'to': [11]}

generate models:128

analyse output arrays in iter:133

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[2162673.5 ,  516763.97,  826874.4 , ..., 1286309.2 ,
          1495627.5 ,  936301.9 ],
         [1864115.6 , 1593505.4 ,  689658.44, ..., 1365290.2 ,
          1469327.6 ,  469948.06],
         [1034553.6 ,  693586.44, 1685251.8 , ...,       0.  ,
           951559.44, 1239285.1 ],
         ...,
         [ 261881.97, 1864832.2 , 2212785.  , ..., 1891263.8 ,
          1835724.5 ,       0.  ],
         [ 603551.94,  626997.25, 3201022.  , ...,  476408.06,
           222741.89, 1547086.6 ],
         [1007846.4 ,  487695.12, 3156695.2 , ..., 2628063.2 ,
          1240129.4 ,  550315.75]],

        [[2162673.5 ,  516763.97,  826874.4 , ..., 1286309.2 ,
          1495627.5 ,  936301.9 ],
         [1864115.6 , 1593505.4 ,  689658.44, ..., 1365290.2 ,
          1469327.6 ,  469948.06],
         [1034553.6 ,  693586.44, 1685251.8 , ...,       0.  ,
           951559.44, 1239285.1 ],
         ...,
         [ 261881.97, 1864832.2 , 2212785.  , ..., 1891263.8 ,
          1835724.5 ,       0.  ],
         [ 603551.94,  626997.25, 3201022.  , ...,  476408.06,
           222741.89, 1547086.6 ],
         [1007846.4 ,  487695.12, 3156695.2 , ..., 2628063.2 ,
          1240129.4 ,  550315.75]],

        [[2162673.5 ,  516763.97,  826874.4 , ..., 1286309.2 ,
          1495627.5 ,  936301.9 ],
         [1864115.6 , 1593505.4 ,  689658.44, ..., 1365290.2 ,
          1469327.6 ,  469948.06],
         [1034553.6 ,  693586.44, 1685251.8 , ...,       0.  ,
           951559.44, 1239285.1 ],
         ...,
         [ 261881.97, 1864832.2 , 2212785.  , ..., 1891263.8 ,
          1835724.5 ,       0.  ],
         [ 603551.94,  626997.25, 3201022.  , ...,  476408.06,
           222741.89, 1547086.6 ],
         [1007846.4 ,  487695.12, 3156695.2 , ..., 2628063.2 ,
          1240129.4 ,  550315.75]],

        ...,

        [[2162673.5 ,  516763.97,  826874.4 , ..., 1286309.2 ,
          1495627.5 ,  936301.9 ],
         [1864115.6 , 1593505.4 ,  689658.44, ..., 1365290.2 ,
          1469327.6 ,  469948.06],
         [1034553.6 ,  693586.44, 1685251.8 , ...,       0.  ,
           951559.44, 1239285.1 ],
         ...,
         [ 261881.97, 1864832.2 , 2212785.  , ..., 1891263.8 ,
          1835724.5 ,       0.  ],
         [ 603551.94,  626997.25, 3201022.  , ...,  476408.06,
           222741.89, 1547086.6 ],
         [1007846.4 ,  487695.12, 3156695.2 , ..., 2628063.2 ,
          1240129.4 ,  550315.75]],

        [[2162673.5 ,  516763.97,  826874.4 , ..., 1286309.2 ,
          1495627.5 ,  936301.9 ],
         [1864115.6 , 1593505.4 ,  689658.44, ..., 1365290.2 ,
          1469327.6 ,  469948.06],
         [1034553.6 ,  693586.44, 1685251.8 , ...,       0.  ,
           951559.44, 1239285.1 ],
         ...,
         [ 261881.97, 1864832.2 , 2212785.  , ..., 1891263.8 ,
          1835724.5 ,       0.  ],
         [ 603551.94,  626997.25, 3201022.  , ...,  476408.06,
           222741.89, 1547086.6 ],
         [1007846.4 ,  487695.12, 3156695.2 , ..., 2628063.2 ,
          1240129.4 ,  550315.75]],

        [[2162673.5 ,  516763.97,  826874.4 , ..., 1286309.2 ,
          1495627.5 ,  936301.9 ],
         [1864115.6 , 1593505.4 ,  689658.44, ..., 1365290.2 ,
          1469327.6 ,  469948.06],
         [1034553.6 ,  693586.44, 1685251.8 , ...,       0.  ,
           951559.44, 1239285.1 ],
         ...,
         [ 261881.97, 1864832.2 , 2212785.  , ..., 1891263.8 ,
          1835724.5 ,       0.  ],
         [ 603551.94,  626997.25, 3201022.  , ...,  476408.06,
           222741.89, 1547086.6 ],
         [1007846.4 ,  487695.12, 3156695.2 , ..., 2628063.2 ,
          1240129.4 ,  550315.75]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [23]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.35616136,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.24875303,  0.606099  , ...,  1.        ,
          -0.7629459 , -0.605653  ],
         ...,
         [ 0.36714992, -0.1292263 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.15187658, -0.23868077, -0.98693603, ..., -0.32049307,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.84478027, -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.35616136,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.24875303,  0.606099  , ...,  1.        ,
          -0.7629459 , -0.605653  ],
         ...,
         [ 0.36714992, -0.1292263 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.15187658, -0.23868077, -0.98693603, ..., -0.32049307,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.84478027, -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.35616136,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.24875303,  0.606099  , ...,  1.        ,
          -0.7629459 , -0.605653  ],
         ...,
         [ 0.36714992, -0.1292263 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.15187658, -0.23868077, -0.98693603, ..., -0.32049307,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.84478027, -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        ...,

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.35616136,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.24875303,  0.606099  , ...,  1.        ,
          -0.7629459 , -0.605653  ],
         ...,
         [ 0.36714992, -0.1292263 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.15187658, -0.23868077, -0.98693603, ..., -0.32049307,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.84478027, -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.35616136,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.24875303,  0.606099  , ...,  1.        ,
          -0.7629459 , -0.605653  ],
         ...,
         [ 0.36714992, -0.1292263 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.15187658, -0.23868077, -0.98693603, ..., -0.32049307,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.84478027, -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.35616136,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.24875303,  0.606099  , ...,  1.        ,
          -0.7629459 , -0.605653  ],
         ...,
         [ 0.36714992, -0.1292263 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.15187658, -0.23868077, -0.98693603, ..., -0.32049307,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.84478027, -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [9]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ...,  0.20459019,
          -0.186735  , -0.98442525]],

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ...,  0.20459019,
          -0.186735  , -0.98442525]],

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ...,  0.20459019,
          -0.186735  , -0.98442525]],

        ...,

        [[ 0.43813917, -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ...,  0.20459019,
          -0.186735  , -0.98442525]],

        [[-0.04645573, -0.9685232 , -0.60287005, ..., -0.9995781 ,
          -0.25362298,  0.32723534],
         [-0.6660338 , -0.98875797, -0.7742794 , ..., -0.9572776 ,
          -0.21966681, -0.912459  ],
         [-0.870372  ,  0.2460544 , -0.9404165 , ...,  1.        ,
          -0.35961744, -0.27211106],
         ...,
         [ 0.33790782, -0.37053847, -0.84035885, ...,  0.91704017,
          -0.00211686,  1.        ],
         [-0.1518766 , -0.23868077,  0.5572095 , ..., -0.26070264,
          -0.9611984 , -0.09362077],
         [-0.9992231 ,  0.98814887,  0.8241384 , ...,  0.8169169 ,
           0.8734106 , -0.9986627 ]],

        [[-0.04645573, -0.9685232 , -0.60287005, ..., -0.9995781 ,
          -0.25362298,  0.32723534],
         [-0.6660338 , -0.98875797, -0.7742794 , ..., -0.9572776 ,
          -0.21966681, -0.912459  ],
         [-0.870372  ,  0.2460544 , -0.9404165 , ...,  1.        ,
          -0.35961744, -0.27211106],
         ...,
         [ 0.33790782, -0.37053847, -0.84035885, ...,  0.91704017,
          -0.00211686,  1.        ],
         [-0.1518766 , -0.23868077,  0.5572095 , ..., -0.26070264,
          -0.9611984 , -0.09362077],
         [-0.9992231 ,  0.98814887,  0.8241384 , ...,  0.8169169 ,
           0.8734106 , -0.9986627 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [9]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.4381392 , -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.4381392 , -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.4381392 , -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        ...,

        [[ 0.4381392 , -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.4381392 , -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]],

        [[ 0.4381392 , -0.9685232 ,  0.61737895, ..., -0.98815787,
          -0.9981627 ,  0.9004123 ],
         [ 0.21069542, -0.04569272, -0.9522662 , ..., -0.3561614 ,
           0.0285232 , -0.9362338 ],
         [-0.4445173 , -0.18777132,  0.60609895, ...,  1.        ,
          -0.7629459 , -0.6056529 ],
         ...,
         [ 0.36714992, -0.2518474 , -0.47762105, ...,  0.987195  ,
          -0.69215876,  1.        ],
         [-0.1518766 , -0.23868077, -0.98693603, ..., -0.32049304,
          -0.9855666 , -0.9947986 ],
         [-0.1099935 ,  0.8447802 , -0.5730903 , ..., -0.04394082,
          -0.186735  , -0.98442525]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [9]}

generate models:129

analyse output arrays in iter:137

pre layer res:
13:add
{'name': 'add', 'output': array([[[[-5.5914134e-01,  2.1584644e+00,  1.6824402e+00, ...,
          -9.1870409e-01,  5.0758857e-01, -1.6768186e+00],
         [ 4.2260656e+00, -8.9395165e-01,  2.5436258e+00, ...,
          -2.3519972e-01,  4.1361290e-01, -2.2100313e-01],
         [-6.0928535e+00, -3.0974054e+00, -1.4751163e+00, ...,
           2.3712232e+00, -2.8422010e-01,  2.9558259e-01],
         ...,
         [-1.1559896e+00, -1.0746931e+00, -8.9910513e-01, ...,
          -4.9605227e-01, -1.6122986e+00,  1.8381538e+00],
         [ 9.7301710e-01, -4.5339453e-01, -2.0806448e+00, ...,
           4.3053827e-01, -8.1846869e-01,  5.5407530e-01],
         [ 1.2749524e+00,  1.6867707e+00, -9.7982281e-01, ...,
           1.3327634e+00,  2.6039094e-01,  2.5057435e-02]],

        [[ 9.3612891e-01,  1.2053916e+00, -2.7888313e-01, ...,
           1.7794528e+00,  8.6972749e-01, -7.7452201e-01],
         [-1.6832104e+00,  2.6392143e+00, -1.6232798e+00, ...,
           2.6275930e+00,  6.1465490e-01,  1.0327265e+00],
         [ 6.5071875e-01,  9.0325832e-02,  1.1707376e+00, ...,
           3.8488775e-01,  1.6009216e-01, -3.9714854e+00],
         ...,
         [ 1.7591965e-01, -2.8026998e-03, -3.6421528e-01, ...,
           1.1783013e-01, -3.4585569e+00,  4.7958374e-01],
         [ 2.0720603e+00, -1.5137643e+00,  1.0932956e+00, ...,
          -1.8487921e+00, -6.5596074e-01,  1.3035765e+00],
         [ 4.0503087e+00, -7.4762738e-01, -7.5459206e-01, ...,
           7.3650730e-01,  1.9147990e+00, -6.9163543e-01]],

        [[ 2.3149605e+00,  1.4565215e+00,  1.5385227e+00, ...,
          -4.1235220e-01,  1.4910207e+00, -1.1359138e+00],
         [ 1.9923242e+00, -4.0543432e+00, -6.5848863e-01, ...,
           5.0238478e-01, -3.3643870e+00,  1.1129405e+00],
         [-2.7610394e-01, -2.8859456e+00,  1.6256859e+00, ...,
           2.4661522e+00,  4.0742585e-01,  4.1185970e+00],
         ...,
         [-3.6543509e-01, -1.2835519e+00,  5.0987351e-01, ...,
          -3.7855618e+00, -1.4732740e+00, -2.0042658e-01],
         [-1.1440458e+00, -2.5935068e+00, -4.1756797e-01, ...,
          -9.9699020e-01, -3.7017250e+00, -1.9226611e+00],
         [ 2.1585853e+00, -4.6081728e-01,  5.9725934e-01, ...,
          -3.6075001e+00,  6.5071380e-01,  1.5161564e+00]],

        ...,

        [[-8.4888661e-01,  7.2322774e-01, -1.4002993e+00, ...,
          -2.7762568e-01, -1.2310176e+00,  2.1253757e+00],
         [-1.1840922e-01,  1.7197042e+00,  2.4570994e+00, ...,
          -1.5365907e+00, -2.7869239e+00, -1.5990034e+00],
         [ 9.2159426e-01,  1.0986862e+00,  2.7453589e+00, ...,
          -3.0342579e+00, -2.9078016e+00,  1.6954441e+00],
         ...,
         [ 2.6318784e+00, -5.5312097e-01,  1.6641679e+00, ...,
          -2.6120481e+00, -7.2929144e-01,  2.1296701e+00],
         [ 3.7974650e-01, -1.8559858e+00,  2.3557007e+00, ...,
           3.3577280e+00, -8.9031971e-01, -4.9978632e-01],
         [ 3.2987986e+00, -6.7206681e-02, -2.3975599e-01, ...,
          -3.2100111e-02, -6.0438138e-01, -2.5229532e-01]],

        [[-2.8983064e+00, -1.7129791e+00, -1.2304516e+00, ...,
           2.9527858e-02, -1.7190969e+00, -1.9046385e+00],
         [-3.9656672e+00,  1.0767365e+00, -2.3839755e+00, ...,
           2.3498070e+00,  3.1888204e+00, -1.0303110e+00],
         [ 3.1602314e+00,  9.2975676e-01, -3.1900802e+00, ...,
           4.2043662e-01, -3.4533545e-01,  3.6304538e+00],
         ...,
         [-6.9552481e-02, -6.3543665e-01, -4.2633936e-01, ...,
           2.3663402e+00, -9.3745744e-01,  1.7865620e+00],
         [-2.8549163e+00,  3.0728292e-01, -4.1712170e+00, ...,
          -1.7136562e-01, -2.5667787e-02,  1.8036790e+00],
         [ 1.0376804e+00, -1.4739065e+00, -8.9339173e-01, ...,
           1.2558118e+00,  8.4710968e-01, -4.8027635e-01]],

        [[-1.3727202e+00, -2.0565395e+00,  1.9490790e+00, ...,
          -1.3635592e+00,  1.5649668e+00, -1.1858845e-01],
         [-8.2382178e-01, -1.5539269e+00,  4.0175265e-01, ...,
          -7.3069859e-01, -5.8596015e+00, -3.0834079e+00],
         [ 1.3178068e+00, -4.6290091e-01,  3.3422654e+00, ...,
           1.9181055e-01,  1.8405421e+00, -4.1450107e-01],
         ...,
         [ 8.6310625e-02,  4.4977605e-01, -5.8296132e-01, ...,
          -6.0057640e-01, -1.3529354e-01,  2.3101003e+00],
         [-1.3887241e+00,  1.8108723e-01, -8.0153662e-01, ...,
          -4.4669724e+00,  3.6119556e+00, -3.8444722e-01],
         [ 1.1253464e-01,  2.9791079e+00,  3.3003026e-01, ...,
           1.4769403e+00,  8.0720633e-01,  4.0820718e-01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9, 16], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[-8.91972351e+01,  9.57858276e+00,  1.10864517e+02, ...,
          -9.08426971e+01, -2.58460876e+02, -2.02225739e+02],
         [-2.79752838e+02, -1.37703278e+02,  5.00693970e+01, ...,
          -5.99212646e-02, -2.08827515e+02, -2.33814285e+02],
         [-1.68772278e+02, -4.61249390e+01,  9.19012070e+01, ...,
           1.01466980e+01, -7.93323364e+01, -1.20776154e+02],
         ...,
         [ 3.15534210e+01,  9.26577377e+01, -2.48099060e+01, ...,
          -5.75540924e+01, -1.24250244e+02, -7.59088898e+01],
         [ 6.06265259e+01,  7.27720795e+01,  1.31263075e+01, ...,
          -5.25258331e+01,  7.27486038e+01,  1.24301712e+02],
         [ 8.25867920e+01,  9.16716690e+01, -4.07648849e+01, ...,
           5.39708405e+01,  2.41443176e+02,  2.39941559e+02]],

        [[-8.91972351e+01,  9.57858276e+00,  1.10864517e+02, ...,
          -9.08426971e+01, -2.58460876e+02, -2.02225739e+02],
         [-2.79752838e+02, -1.37703278e+02,  5.00693970e+01, ...,
          -5.99212646e-02, -2.08827515e+02, -2.33814285e+02],
         [-1.68772278e+02, -4.61249390e+01,  9.19012070e+01, ...,
           1.01466980e+01, -7.93323364e+01, -1.20776154e+02],
         ...,
         [ 3.15534210e+01,  9.26577377e+01, -2.48099060e+01, ...,
          -5.75540924e+01, -1.24250244e+02, -7.59088898e+01],
         [ 6.06265259e+01,  7.27720795e+01,  1.31263075e+01, ...,
          -5.25258331e+01,  7.27486038e+01,  1.24301712e+02],
         [ 8.25867920e+01,  9.16716690e+01, -4.07648849e+01, ...,
           5.39708405e+01,  2.41443176e+02,  2.39941559e+02]],

        [[-8.91972351e+01,  9.57858276e+00,  1.10864517e+02, ...,
          -9.08426971e+01, -2.58460876e+02, -2.02225739e+02],
         [-2.79752838e+02, -1.37703278e+02,  5.00693970e+01, ...,
          -5.99212646e-02, -2.08827515e+02, -2.33814285e+02],
         [-1.68772278e+02, -4.61249390e+01,  9.19012070e+01, ...,
           1.01466980e+01, -7.93323364e+01, -1.20776154e+02],
         ...,
         [ 3.15534210e+01,  9.26577377e+01, -2.48099060e+01, ...,
          -5.75540924e+01, -1.24250244e+02, -7.59088898e+01],
         [ 6.06265259e+01,  7.27720795e+01,  1.31263075e+01, ...,
          -5.25258331e+01,  7.27486038e+01,  1.24301712e+02],
         [ 8.25867920e+01,  9.16716690e+01, -4.07648849e+01, ...,
           5.39708405e+01,  2.41443176e+02,  2.39941559e+02]],

        ...,

        [[-8.91972351e+01,  9.57858276e+00,  1.10864517e+02, ...,
          -9.08426971e+01, -2.58460876e+02, -2.02225739e+02],
         [-2.79752838e+02, -1.37703278e+02,  5.00693970e+01, ...,
          -5.99212646e-02, -2.08827515e+02, -2.33814285e+02],
         [-1.68772278e+02, -4.61249390e+01,  9.19012070e+01, ...,
           1.01466980e+01, -7.93323364e+01, -1.20776154e+02],
         ...,
         [ 3.15534210e+01,  9.26577377e+01, -2.48099060e+01, ...,
          -5.75540924e+01, -1.24250244e+02, -7.59088898e+01],
         [ 6.06265259e+01,  7.27720795e+01,  1.31263075e+01, ...,
          -5.25258331e+01,  7.27486038e+01,  1.24301712e+02],
         [ 8.25867920e+01,  9.16716690e+01, -4.07648849e+01, ...,
           5.39708405e+01,  2.41443176e+02,  2.39941559e+02]],

        [[-8.91972351e+01,  9.57858276e+00,  1.10864517e+02, ...,
          -9.08426971e+01, -2.58460876e+02, -2.02225739e+02],
         [-2.79752838e+02, -1.37703278e+02,  5.00693970e+01, ...,
          -5.99212646e-02, -2.08827515e+02, -2.33814285e+02],
         [-1.68772278e+02, -4.61249390e+01,  9.19012070e+01, ...,
           1.01466980e+01, -7.93323364e+01, -1.20776154e+02],
         ...,
         [ 3.15534210e+01,  9.26577377e+01, -2.48099060e+01, ...,
          -5.75540924e+01, -1.24250244e+02, -7.59088898e+01],
         [ 6.06265259e+01,  7.27720795e+01,  1.31263075e+01, ...,
          -5.25258331e+01,  7.27486038e+01,  1.24301712e+02],
         [ 8.25867920e+01,  9.16716690e+01, -4.07648849e+01, ...,
           5.39708405e+01,  2.41443176e+02,  2.39941559e+02]],

        [[-8.91972351e+01,  9.57858276e+00,  1.10864517e+02, ...,
          -9.08426971e+01, -2.58460876e+02, -2.02225739e+02],
         [-2.79752838e+02, -1.37703278e+02,  5.00693970e+01, ...,
          -5.99212646e-02, -2.08827515e+02, -2.33814285e+02],
         [-1.68772278e+02, -4.61249390e+01,  9.19012070e+01, ...,
           1.01466980e+01, -7.93323364e+01, -1.20776154e+02],
         ...,
         [ 3.15534210e+01,  9.26577377e+01, -2.48099060e+01, ...,
          -5.75540924e+01, -1.24250244e+02, -7.59088898e+01],
         [ 6.06265259e+01,  7.27720795e+01,  1.31263075e+01, ...,
          -5.25258331e+01,  7.27486038e+01,  1.24301712e+02],
         [ 8.25867920e+01,  9.16716690e+01, -4.07648849e+01, ...,
           5.39708405e+01,  2.41443176e+02,  2.39941559e+02]]]],
      dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [13], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        ...,

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57850266e+00,  1.10864510e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225861e+02],
         [-2.79752869e+02, -1.37703400e+02,  5.00694695e+01, ...,
          -5.97972870e-02, -2.08827621e+02, -2.33814377e+02],
         [-1.68772095e+02, -4.61247292e+01,  9.19012375e+01, ...,
           1.01465845e+01, -7.93323441e+01, -1.20776306e+02],
         ...,
         [ 3.15534306e+01,  9.26578522e+01, -2.48099823e+01, ...,
          -5.75543594e+01, -1.24249924e+02, -7.59086151e+01],
         [ 6.06264610e+01,  7.27720947e+01,  1.31263161e+01, ...,
          -5.25259705e+01,  7.27487869e+01,  1.24301910e+02],
         [ 8.25868073e+01,  9.16718063e+01, -4.07650299e+01, ...,
           5.39706650e+01,  2.41443420e+02,  2.39941727e+02]],

        [[-8.91972198e+01,  9.57850266e+00,  1.10864510e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225861e+02],
         [-2.79752869e+02, -1.37703400e+02,  5.00694695e+01, ...,
          -5.97972870e-02, -2.08827621e+02, -2.33814377e+02],
         [-1.68772095e+02, -4.61247292e+01,  9.19012375e+01, ...,
           1.01465845e+01, -7.93323441e+01, -1.20776306e+02],
         ...,
         [ 3.15534306e+01,  9.26578522e+01, -2.48099823e+01, ...,
          -5.75543594e+01, -1.24249924e+02, -7.59086151e+01],
         [ 6.06264610e+01,  7.27720947e+01,  1.31263161e+01, ...,
          -5.25259705e+01,  7.27487869e+01,  1.24301910e+02],
         [ 8.25868073e+01,  9.16718063e+01, -4.07650299e+01, ...,
           5.39706650e+01,  2.41443420e+02,  2.39941727e+02]]]],
      dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [13], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        ...,

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]],

        [[-8.91972198e+01,  9.57852554e+00,  1.10864494e+02, ...,
          -9.08426971e+01, -2.58460968e+02, -2.02225876e+02],
         [-2.79752899e+02, -1.37703400e+02,  5.00694542e+01, ...,
          -5.97896576e-02, -2.08827621e+02, -2.33814423e+02],
         [-1.68772110e+02, -4.61247215e+01,  9.19012222e+01, ...,
           1.01465912e+01, -7.93323822e+01, -1.20776268e+02],
         ...,
         [ 3.15534248e+01,  9.26578598e+01, -2.48099689e+01, ...,
          -5.75543442e+01, -1.24249908e+02, -7.59086304e+01],
         [ 6.06264648e+01,  7.27720947e+01,  1.31263027e+01, ...,
          -5.25259590e+01,  7.27488327e+01,  1.24301880e+02],
         [ 8.25868073e+01,  9.16717987e+01, -4.07650528e+01, ...,
           5.39707031e+01,  2.41443420e+02,  2.39941711e+02]]]],
      dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [13], 'to': []}

generate models:133

analyse output arrays in iter:146

pre layer res:
2:conv2d
{'name': 'conv2d', 'output': array([[[[ -87.514656,  175.46031 , -101.584946, ...,  -88.02443 ,
           -37.56785 ,  -18.145023],
         [-143.73079 ,   14.280351,   -1.672592, ..., -131.85349 ,
           -22.156118,  -58.195797],
         [ -76.139175, -125.666595,   82.83853 , ...,   86.42623 ,
           127.19729 , -104.34225 ],
         ...,
         [ -78.69063 ,  -36.160152,  -23.920858, ...,  119.85892 ,
           139.64073 ,  112.92201 ],
         [  89.754524,  104.42446 ,  -67.87696 , ...,  202.00496 ,
           169.39223 , -186.09407 ],
         [ -64.21315 ,  -71.83155 ,  146.60977 , ...,  -78.413086,
            64.58936 ,  -63.667007]],

        [[ -87.514656,  175.46031 , -101.584946, ...,  -88.02443 ,
           -37.56785 ,  -18.145023],
         [-143.73079 ,   14.280351,   -1.672592, ..., -131.85349 ,
           -22.156118,  -58.195797],
         [ -76.139175, -125.666595,   82.83853 , ...,   86.42623 ,
           127.19729 , -104.34225 ],
         ...,
         [ -78.69063 ,  -36.160152,  -23.920858, ...,  119.85892 ,
           139.64073 ,  112.92201 ],
         [  89.754524,  104.42446 ,  -67.87696 , ...,  202.00496 ,
           169.39223 , -186.09407 ],
         [ -64.21315 ,  -71.83155 ,  146.60977 , ...,  -78.413086,
            64.58936 ,  -63.667007]],

        [[ -87.514656,  175.46031 , -101.584946, ...,  -88.02443 ,
           -37.56785 ,  -18.145023],
         [-143.73079 ,   14.280351,   -1.672592, ..., -131.85349 ,
           -22.156118,  -58.195797],
         [ -76.139175, -125.666595,   82.83853 , ...,   86.42623 ,
           127.19729 , -104.34225 ],
         ...,
         [ -78.69063 ,  -36.160152,  -23.920858, ...,  119.85892 ,
           139.64073 ,  112.92201 ],
         [  89.754524,  104.42446 ,  -67.87696 , ...,  202.00496 ,
           169.39223 , -186.09407 ],
         [ -64.21315 ,  -71.83155 ,  146.60977 , ...,  -78.413086,
            64.58936 ,  -63.667007]],

        ...,

        [[ -87.514656,  175.46031 , -101.584946, ...,  -88.02443 ,
           -37.56785 ,  -18.145023],
         [-143.73079 ,   14.280351,   -1.672592, ..., -131.85349 ,
           -22.156118,  -58.195797],
         [ -76.139175, -125.666595,   82.83853 , ...,   86.42623 ,
           127.19729 , -104.34225 ],
         ...,
         [ -78.69063 ,  -36.160152,  -23.920858, ...,  119.85892 ,
           139.64073 ,  112.92201 ],
         [  89.754524,  104.42446 ,  -67.87696 , ...,  202.00496 ,
           169.39223 , -186.09407 ],
         [ -64.21315 ,  -71.83155 ,  146.60977 , ...,  -78.413086,
            64.58936 ,  -63.667007]],

        [[ -87.514656,  175.46031 , -101.584946, ...,  -88.02443 ,
           -37.56785 ,  -18.145023],
         [-143.73079 ,   14.280351,   -1.672592, ..., -131.85349 ,
           -22.156118,  -58.195797],
         [ -76.139175, -125.666595,   82.83853 , ...,   86.42623 ,
           127.19729 , -104.34225 ],
         ...,
         [ -78.69063 ,  -36.160152,  -23.920858, ...,  119.85892 ,
           139.64073 ,  112.92201 ],
         [  89.754524,  104.42446 ,  -67.87696 , ...,  202.00496 ,
           169.39223 , -186.09407 ],
         [ -64.21315 ,  -71.83155 ,  146.60977 , ...,  -78.413086,
            64.58936 ,  -63.667007]],

        [[ -87.514656,  175.46031 , -101.584946, ...,  -88.02443 ,
           -37.56785 ,  -18.145023],
         [-143.73079 ,   14.280351,   -1.672592, ..., -131.85349 ,
           -22.156118,  -58.195797],
         [ -76.139175, -125.666595,   82.83853 , ...,   86.42623 ,
           127.19729 , -104.34225 ],
         ...,
         [ -78.69063 ,  -36.160152,  -23.920858, ...,  119.85892 ,
           139.64073 ,  112.92201 ],
         [  89.754524,  104.42446 ,  -67.87696 , ...,  202.00496 ,
           169.39223 , -186.09407 ],
         [ -64.21315 ,  -71.83155 ,  146.60977 , ...,  -78.413086,
            64.58936 ,  -63.667007]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [16]}
tf node:
{'name': 'log', 'output': array([[[[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.648464 ,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.648464 ,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.648464 ,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        ...,

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.648464 ,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.648464 ,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.648464 ,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [2], 'to': [3]}
ms node:
{'name': 'log', 'output': array([[[[      nan, 5.167411 ,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588836,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168963, ..., 4.4592896, 4.845738 ,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.93907  ,
          4.7266965],
         [4.4970813, 4.6484613,       nan, ..., 5.30829  , 5.132215 ,
                nan],
         [      nan,       nan, 4.9877715, ...,       nan, 4.1680484,
                nan]],

        [[      nan, 5.167411 ,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588836,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168963, ..., 4.4592896, 4.845738 ,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.93907  ,
          4.7266965],
         [4.4970813, 4.6484613,       nan, ..., 5.30829  , 5.132215 ,
                nan],
         [      nan,       nan, 4.9877715, ...,       nan, 4.1680484,
                nan]],

        [[      nan, 5.167411 ,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588836,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168963, ..., 4.4592896, 4.845738 ,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.93907  ,
          4.7266965],
         [4.4970813, 4.6484613,       nan, ..., 5.30829  , 5.132215 ,
                nan],
         [      nan,       nan, 4.9877715, ...,       nan, 4.1680484,
                nan]],

        ...,

        [[      nan, 5.167411 ,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588836,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168963, ..., 4.4592896, 4.845738 ,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.93907  ,
          4.7266965],
         [4.4970813, 4.6484613,       nan, ..., 5.30829  , 5.132215 ,
                nan],
         [      nan,       nan, 4.9877715, ...,       nan, 4.1680484,
                nan]],

        [[      nan, 5.167412 ,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588843,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168963, ..., 4.459289 , 4.845738 ,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.9390707,
          4.7266974],
         [4.4970818, 4.6484623,       nan, ..., 5.30829  , 5.1322145,
                nan],
         [      nan,       nan, 4.9877715, ...,       nan, 4.1680484,
                nan]],

        [[      nan, 5.167412 ,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588843,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168963, ..., 4.459289 , 4.845738 ,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.9390707,
          4.7266974],
         [4.4970818, 4.6484623,       nan, ..., 5.30829  , 5.1322145,
                nan],
         [      nan,       nan, 4.9877715, ...,       nan, 4.1680484,
                nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [2], 'to': [3]}
torch node:
{'name': 'log', 'output': array([[[[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.6484637,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.6484637,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.6484637,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        ...,

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.6484637,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.6484637,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]],

        [[      nan, 5.1674128,       nan, ...,       nan,       nan,
                nan],
         [      nan, 2.6588845,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan, 4.4168935, ..., 4.4592915, 4.8457394,
                nan],
         ...,
         [      nan,       nan,       nan, ..., 4.7863154, 4.939073 ,
          4.7266974],
         [4.4970784, 4.6484637,       nan, ..., 5.3082924, 5.132217 ,
                nan],
         [      nan,       nan, 4.9877744, ...,       nan, 4.16805  ,
                nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [2], 'to': [3]}

generate models:142

analyse output arrays in iter:147

pre layer res:
16:flatten
{'name': 'flatten', 'output': array([[0.45576587, 1.2054703 , 0.23658612, ..., 0.97887343, 2.3623178 ,
        1.5096213 ]], dtype=float32), 'output_shape': TensorShape([1, 65536]), 'from': [11], 'to': [22]}
tf node:
{'name': 'log', 'output': array([[-0.785776  ,  0.1868698 , -1.441443  , ..., -0.02135293,
         0.8596433 ,  0.4118588 ]], dtype=float32), 'output_shape': TensorShape([1, 65536]), 'from': [16], 'to': [17]}
ms node:
{'name': 'log', 'output': array([[-0.78577703,  0.18686832, -1.441443  , ..., -0.02135436,
         0.8596418 ,  0.4118566 ]], dtype=float32), 'output_shape': (1, 65536), 'from': [16], 'to': [17]}
torch node:
{'name': 'log', 'output': array([[-0.785776  ,  0.1868698 , -1.441443  , ..., -0.02135293,
         0.8596433 ,  0.4118588 ]], dtype=float32), 'output_shape': torch.Size([1, 65536]), 'from': [16], 'to': [17]}

generate models:143

analyse output arrays in iter:148

pre layer res:
17:flatten
{'name': 'flatten', 'output': array([[ 9023.258, 27530.385, 13500.441, ..., 23374.21 , 16533.691,
            0.   ]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [22], 'to': [21]}
tf node:
{'name': 'sin', 'output': array([[ 0.5677017 , -0.5715079 , -0.85094076, ...,  0.69007653,
         0.48881388,  0.        ]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [17], 'to': [18]}
ms node:
{'name': 'sin', 'output': array([[ 0.5677017 , -0.5715079 , -0.85094076, ...,  0.6985102 ,
         0.48540238,  0.        ]], dtype=float32), 'output_shape': (1, 32768), 'from': [17], 'to': [18]}
torch node:
{'name': 'sin', 'output': array([[ 0.5677017 , -0.5715079 , -0.85094076, ...,  0.69711125,
         0.48540238,  0.        ]], dtype=float32), 'output_shape': torch.Size([1, 32768]), 'from': [17], 'to': [18]}

generate models:144

analyse output arrays in iter:149

pre layer res:
13:reshape
{'name': 'reshape', 'output': array([[[[inf,  1., inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf,  1., ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf,  1., inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf,  1., ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf,  1., inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf,  1., ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf,  1., inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf,  1., ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf,  1., inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf,  1., ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf,  1., inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf,  1., ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf,  1., inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [18], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [13], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [13], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [13], 'to': []}

pre layer res:
4:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[  0.      , 207.5779  ,  59.484615, ..., 114.75673 ,
          149.43123 , 241.11128 ],
         [  0.      ,  76.90073 , 115.81302 , ..., 196.44344 ,
          141.47458 ,  28.984865],
         [ 71.77684 ,  20.788696,  39.658466, ...,  25.696907,
          218.89479 , 128.13426 ],
         ...,
         [ 56.482914, 209.48024 ,  39.754635, ...,  22.69811 ,
          139.52493 , 110.78958 ],
         [103.44726 ,  15.55286 , 320.45316 , ..., 100.159676,
          180.86842 ,  90.99772 ],
         [ 88.21773 ,  28.553196, 162.8324  , ..., 268.538   ,
           43.649395, 173.47256 ]],

        [[  0.      , 207.5779  ,  59.484615, ..., 114.75673 ,
          149.43123 , 241.11128 ],
         [  0.      ,  76.90073 , 115.81302 , ..., 196.44344 ,
          141.47458 ,  28.984865],
         [ 71.77684 ,  20.788696,  39.658466, ...,  25.696907,
          218.89479 , 128.13426 ],
         ...,
         [ 56.482914, 209.48024 ,  39.754635, ...,  22.69811 ,
          139.52493 , 110.78958 ],
         [103.44726 ,  15.55286 , 320.45316 , ..., 100.159676,
          180.86842 ,  90.99772 ],
         [ 88.21773 ,  28.553196, 162.8324  , ..., 268.538   ,
           43.649395, 173.47256 ]],

        [[  0.      , 207.5779  ,  59.484615, ..., 114.75673 ,
          149.43123 , 241.11128 ],
         [  0.      ,  76.90073 , 115.81302 , ..., 196.44344 ,
          141.47458 ,  28.984865],
         [ 71.77684 ,  20.788696,  39.658466, ...,  25.696907,
          218.89479 , 128.13426 ],
         ...,
         [ 56.482914, 209.48024 ,  39.754635, ...,  22.69811 ,
          139.52493 , 110.78958 ],
         [103.44726 ,  15.55286 , 320.45316 , ..., 100.159676,
          180.86842 ,  90.99772 ],
         [ 88.21773 ,  28.553196, 162.8324  , ..., 268.538   ,
           43.649395, 173.47256 ]],

        ...,

        [[  0.      , 207.5779  ,  59.484615, ..., 114.75673 ,
          149.43123 , 241.11128 ],
         [  0.      ,  76.90073 , 115.81302 , ..., 196.44344 ,
          141.47458 ,  28.984865],
         [ 71.77684 ,  20.788696,  39.658466, ...,  25.696907,
          218.89479 , 128.13426 ],
         ...,
         [ 56.482914, 209.48024 ,  39.754635, ...,  22.69811 ,
          139.52493 , 110.78958 ],
         [103.44726 ,  15.55286 , 320.45316 , ..., 100.159676,
          180.86842 ,  90.99772 ],
         [ 88.21773 ,  28.553196, 162.8324  , ..., 268.538   ,
           43.649395, 173.47256 ]],

        [[  0.      , 207.5779  ,  59.484615, ..., 114.75673 ,
          149.43123 , 241.11128 ],
         [  0.      ,  76.90073 , 115.81302 , ..., 196.44344 ,
          141.47458 ,  28.984865],
         [ 71.77684 ,  20.788696,  39.658466, ...,  25.696907,
          218.89479 , 128.13426 ],
         ...,
         [ 56.482914, 209.48024 ,  39.754635, ...,  22.69811 ,
          139.52493 , 110.78958 ],
         [103.44726 ,  15.55286 , 320.45316 , ..., 100.159676,
          180.86842 ,  90.99772 ],
         [ 88.21773 ,  28.553196, 162.8324  , ..., 268.538   ,
           43.649395, 173.47256 ]],

        [[  0.      , 207.5779  ,  59.484615, ..., 114.75673 ,
          149.43123 , 241.11128 ],
         [  0.      ,  76.90073 , 115.81302 , ..., 196.44344 ,
          141.47458 ,  28.984865],
         [ 71.77684 ,  20.788696,  39.658466, ...,  25.696907,
          218.89479 , 128.13426 ],
         ...,
         [ 56.482914, 209.48024 ,  39.754635, ...,  22.69811 ,
          139.52493 , 110.78958 ],
         [103.44726 ,  15.55286 , 320.45316 , ..., 100.159676,
          180.86842 ,  90.99772 ],
         [ 88.21773 ,  28.553196, 162.8324  , ..., 268.538   ,
           43.649395, 173.47256 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [3], 'to': [19]}
tf node:
{'name': 'cos', 'output': array([[[[ 1.        ,  0.97302866, -0.97892946, ..., -0.0884814 ,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.7831775 ],
         ...,
         [ 0.997839  , -0.5348485 , -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490533, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.0681247 ,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.0884814 ,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.7831775 ],
         ...,
         [ 0.997839  , -0.5348485 , -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490533, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.0681247 ,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.0884814 ,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.7831775 ],
         ...,
         [ 0.997839  , -0.5348485 , -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490533, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.0681247 ,
           0.9450979 , -0.7744388 ]],

        ...,

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.0884814 ,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.7831775 ],
         ...,
         [ 0.997839  , -0.5348485 , -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490533, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.0681247 ,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.0884814 ,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.7831775 ],
         ...,
         [ 0.997839  , -0.5348485 , -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490533, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.0681247 ,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.0884814 ,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.7831775 ],
         ...,
         [ 0.997839  , -0.5348485 , -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490533, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.0681247 ,
           0.9450979 , -0.7744388 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [4], 'to': [5]}
ms node:
{'name': 'cos', 'output': array([[[[ 1.        ,  0.9730286 , -0.97892946, ..., -0.08848141,
           0.20413262, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.9730286 , -0.97892946, ..., -0.08848141,
           0.20413262, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.9730286 , -0.97892946, ..., -0.08848141,
           0.20413262, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        ...,

        [[ 1.        ,  0.9730286 , -0.97892946, ..., -0.08848141,
           0.20413262, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.96813244, -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.9730568 , -0.9789287 , ..., -0.08840542,
           0.20407288, -0.7028517 ],
         [ 1.        ,  0.06823301, -0.910676  , ..., -0.09383287,
          -0.99471104, -0.7580142 ],
         [-0.887088  , -0.36007103, -0.3788721 , ...,  0.84503084,
           0.52633494, -0.78317744],
         ...,
         [ 0.997839  , -0.53474534, -0.46596655, ..., -0.7603436 ,
           0.27248108, -0.6720213 ],
         [-0.9747272 , -0.9879962 ,  0.9999427 , ...,  0.9318603 ,
           0.22496481, -0.9941297 ],
         [ 0.96814203, -0.96137506,  0.862633  , ..., -0.06815514,
           0.945093  , -0.7744871 ]],

        [[ 1.        ,  0.9730568 , -0.9789287 , ..., -0.08840542,
           0.20407288, -0.7028517 ],
         [ 1.        ,  0.06823301, -0.910676  , ..., -0.09383287,
          -0.99471104, -0.7580142 ],
         [-0.887088  , -0.36007103, -0.3788721 , ...,  0.84503084,
           0.52633494, -0.78317744],
         ...,
         [ 0.997839  , -0.53474534, -0.46596655, ..., -0.7603436 ,
           0.27248108, -0.6720213 ],
         [-0.9747272 , -0.9879962 ,  0.9999427 , ...,  0.9318603 ,
           0.22496481, -0.9941297 ],
         [ 0.96814203, -0.96137506,  0.862633  , ..., -0.06815514,
           0.945093  , -0.7744871 ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [4], 'to': [5]}
torch node:
{'name': 'cos', 'output': array([[[[ 1.        ,  0.97302866, -0.97892946, ..., -0.08848141,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.9681325 , -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.08848141,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.9681325 , -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.08848141,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.9681325 , -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        ...,

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.08848141,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.9681325 , -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.08848141,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.9681325 , -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]],

        [[ 1.        ,  0.97302866, -0.97892946, ..., -0.08848141,
           0.20413263, -0.7028843 ],
         [ 1.        ,  0.06824062, -0.9106634 , ..., -0.09375691,
          -0.9947095 , -0.75801545],
         [-0.8870915 , -0.36007103, -0.37885445, ...,  0.84503496,
           0.5261792 , -0.78317744],
         ...,
         [ 0.997839  , -0.53484845, -0.46596655, ..., -0.76033866,
           0.2724517 , -0.6720383 ],
         [-0.9747272 , -0.9879956 ,  0.9999427 , ...,  0.9318603 ,
           0.22490534, -0.9941231 ],
         [ 0.9681325 , -0.9613693 ,  0.8625944 , ..., -0.06812469,
           0.9450979 , -0.7744388 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [4], 'to': [5]}

generate models:145

analyse output arrays in iter:163

pre layer res:
12:add
{'name': 'add', 'output': array([[[[ 2.4036555 ,  1.3361211 ,  4.446468  , ...,  2.6065757 ,
           1.8918236 ,  1.9851353 ],
         [ 1.6498835 , -0.6161907 ,  0.61499393, ...,  2.0069747 ,
           1.2323046 , -2.1150997 ],
         [ 0.34201717,  1.9719636 ,  1.6637009 , ..., -0.6456039 ,
           0.88717175, -0.84363973],
         ...,
         [ 0.11220664,  1.0345105 ,  0.49536192, ...,  0.59424007,
           1.985755  , -0.36510932],
         [ 2.0162313 , -0.07589793,  1.3802834 , ...,  0.36959362,
          -0.5106715 , -0.25048256],
         [ 2.4841049 , -1.3501413 , -0.07057214, ...,  0.7789059 ,
           2.1025434 ,  0.62340915]],

        [[ 2.175787  , -1.5413728 , -0.85604763, ...,  1.4944401 ,
           0.06581753,  3.4036896 ],
         [ 0.16299957, -1.1150613 ,  3.3794632 , ...,  1.2392076 ,
           1.4782635 ,  0.5444209 ],
         [ 4.4513564 ,  1.2652416 ,  2.7126656 , ...,  0.50400037,
           2.1677337 ,  1.7640445 ],
         ...,
         [ 3.1959155 ,  0.22861981,  2.7764325 , ..., -5.0643244 ,
           0.09616065,  2.142037  ],
         [-0.4326197 ,  0.27753985,  1.4538441 , ...,  0.1618315 ,
          -0.07246363, -0.4609431 ],
         [ 1.1406354 ,  0.19828469,  3.58566   , ..., -1.0633678 ,
           0.9604514 ,  2.2125154 ]],

        [[ 0.7535106 ,  1.2030551 , -0.79134774, ...,  1.3249518 ,
          -0.5757657 ,  1.0646231 ],
         [-0.7357111 ,  0.5877036 ,  0.9121415 , ..., -2.7946715 ,
           2.2308831 ,  0.20701653],
         [-0.33742213,  0.6130791 ,  2.523354  , ...,  0.47879422,
           3.427346  , -0.4863925 ],
         ...,
         [ 1.6757166 ,  1.376221  ,  0.7327744 , ...,  1.9786799 ,
           1.6682831 ,  0.67774445],
         [ 1.1239349 ,  2.235745  , -1.1105344 , ...,  0.24677706,
           1.4485203 ,  0.9058033 ],
         [ 1.4219747 ,  2.120274  ,  0.43681407, ..., -0.50860476,
           1.7083672 ,  2.7025383 ]],

        ...,

        [[ 2.175787  , -1.5413728 , -0.85604763, ...,  1.4944401 ,
           0.06581753,  3.4036896 ],
         [ 0.16299957, -1.1150613 ,  3.3794632 , ...,  1.2392076 ,
           1.4782635 ,  0.5444209 ],
         [ 4.4513564 ,  1.2652416 ,  2.7126656 , ...,  0.50400037,
           2.1677337 ,  1.7640445 ],
         ...,
         [ 3.1959155 ,  0.22861981,  2.7764325 , ..., -5.0643244 ,
           0.09616065,  2.142037  ],
         [-0.4326197 ,  0.27753985,  1.4538441 , ...,  0.1618315 ,
          -0.07246363, -0.4609431 ],
         [ 1.1406354 ,  0.19828469,  3.58566   , ..., -1.0633678 ,
           0.9604514 ,  2.2125154 ]],

        [[ 0.7535106 ,  1.2030551 , -0.79134774, ...,  1.3249518 ,
          -0.5757657 ,  1.0646231 ],
         [-0.7357111 ,  0.5877036 ,  0.9121415 , ..., -2.7946715 ,
           2.2308831 ,  0.20701653],
         [-0.33742213,  0.6130791 ,  2.523354  , ...,  0.47879422,
           3.427346  , -0.4863925 ],
         ...,
         [ 1.6757166 ,  1.376221  ,  0.7327744 , ...,  1.9786799 ,
           1.6682831 ,  0.67774445],
         [ 1.1239349 ,  2.235745  , -1.1105344 , ...,  0.24677706,
           1.4485203 ,  0.9058033 ],
         [ 1.4219747 ,  2.120274  ,  0.43681407, ..., -0.50860476,
           1.7083672 ,  2.7025383 ]],

        [[-0.15678835,  0.7885202 ,  0.36215043, ...,  4.5269976 ,
           2.902585  , -0.7967056 ],
         [ 1.684818  ,  0.44450194,  1.2357626 , ..., -0.22386122,
           3.8934321 , -0.32153797],
         [-0.03844023,  3.4584205 , -0.39496326, ...,  0.36760712,
           0.38473773,  3.674506  ],
         ...,
         [-1.4738355 ,  1.400214  ,  1.6141813 , ...,  1.3587052 ,
          -1.0216641 ,  2.2353077 ],
         [ 1.475337  , -0.85312235,  1.4794933 , ...,  0.10515821,
          -4.4565725 ,  6.0987825 ],
         [-0.80813   , -0.58005667,  1.3710535 , ...,  2.3175955 ,
           2.7206361 ,  2.874548  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [15, 16], 'to': [18]}
tf node:
{'name': 'log', 'output': array([[[[ 0.87699074,  0.2897707 ,  1.49211   , ...,  0.9580374 ,
           0.63754123,  0.68568707],
         [ 0.5007047 ,         nan, -0.48614287, ...,  0.69662845,
           0.20888606,         nan],
         [-1.0728943 ,  0.6790298 ,  0.5090446 , ...,         nan,
          -0.11971669,         nan],
         ...,
         [-2.1874132 ,  0.03392836, -0.7024666 , ..., -0.5204719 ,
           0.68599916,         nan],
         [ 0.70123005,         nan,  0.3222888 , ..., -0.9953512 ,
                  nan,         nan],
         [ 0.90991235,         nan,         nan, ..., -0.249865  ,
           0.74314773, -0.47255224]],

        [[ 0.7773904 ,         nan,         nan, ...,  0.4017516 ,
          -2.720869  ,  1.2248601 ],
         [-1.8140078 ,         nan,  1.2177169 , ...,  0.21447216,
           0.3908681 , -0.60803264],
         [ 1.4932089 ,  0.23526311,  0.9979317 , ..., -0.6851783 ,
           0.77368224,  0.5676092 ],
         ...,
         [ 1.1618736 , -1.4756949 ,  1.0211668 , ...,         nan,
          -2.3417351 ,  0.7617572 ],
         [        nan, -1.2817907 ,  0.37421113, ..., -1.8211997 ,
                  nan,         nan],
         [ 0.13158545, -1.6180515 ,  1.2769426 , ...,         nan,
          -0.04035187,  0.79413   ]],

        [[-0.2830122 ,  0.18486428,         nan, ...,  0.28137606,
                  nan,  0.06262086],
         [        nan, -0.5315326 , -0.09196015, ...,         nan,
           0.80239755, -1.5749567 ],
         [        nan, -0.48926136,  0.92558897, ..., -0.7364844 ,
           1.2317863 ,         nan],
         ...,
         [ 0.51624095,  0.3193413 , -0.31091744, ...,  0.6824299 ,
           0.51179504, -0.38898498],
         [ 0.1168358 ,  0.8045745 ,         nan, ..., -1.3992699 ,
           0.37054256, -0.09893308],
         [ 0.35204652,  0.75154537, -0.82824767, ...,         nan,
           0.5355381 ,  0.9941914 ]],

        ...,

        [[ 0.7773904 ,         nan,         nan, ...,  0.4017516 ,
          -2.720869  ,  1.2248601 ],
         [-1.8140078 ,         nan,  1.2177169 , ...,  0.21447216,
           0.3908681 , -0.60803264],
         [ 1.4932089 ,  0.23526311,  0.9979317 , ..., -0.6851783 ,
           0.77368224,  0.5676092 ],
         ...,
         [ 1.1618736 , -1.4756949 ,  1.0211668 , ...,         nan,
          -2.3417351 ,  0.7617572 ],
         [        nan, -1.2817907 ,  0.37421113, ..., -1.8211997 ,
                  nan,         nan],
         [ 0.13158545, -1.6180515 ,  1.2769426 , ...,         nan,
          -0.04035187,  0.79413   ]],

        [[-0.2830122 ,  0.18486428,         nan, ...,  0.28137606,
                  nan,  0.06262086],
         [        nan, -0.5315326 , -0.09196015, ...,         nan,
           0.80239755, -1.5749567 ],
         [        nan, -0.48926136,  0.92558897, ..., -0.7364844 ,
           1.2317863 ,         nan],
         ...,
         [ 0.51624095,  0.3193413 , -0.31091744, ...,  0.6824299 ,
           0.51179504, -0.38898498],
         [ 0.1168358 ,  0.8045745 ,         nan, ..., -1.3992699 ,
           0.37054256, -0.09893308],
         [ 0.35204652,  0.75154537, -0.82824767, ...,         nan,
           0.5355381 ,  0.9941914 ]],

        [[        nan, -0.23759723, -1.0156956 , ...,  1.5100589 ,
           1.0656017 ,         nan],
         [ 0.5216576 , -0.81080085,  0.21168827, ...,         nan,
           1.3592911 ,         nan],
         [        nan,  1.240812  ,         nan, ..., -1.0007405 ,
          -0.9551934 ,  1.3014187 ],
         ...,
         [        nan,  0.33662504,  0.4788279 , ...,  0.30653217,
                  nan,  0.80437887],
         [ 0.38888645,         nan,  0.39169964, ..., -2.2522893 ,
                  nan,  1.8080891 ],
         [        nan,         nan,  0.31557938, ...,  0.8405302 ,
           1.0008657 ,  1.0558954 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [12], 'to': [17]}
ms node:
{'name': 'log', 'output': array([[[[ 0.87698925,  0.2897688 ,  1.4921106 , ...,  0.9580402 ,
           0.6375413 ,  0.68568563],
         [ 0.50070226,         nan, -0.48614207, ...,  0.696627  ,
           0.20888686,         nan],
         [-1.0728962 ,  0.6790284 ,  0.5090413 , ...,         nan,
          -0.11971768,         nan],
         ...,
         [-2.1874142 ,  0.03393177, -0.70246804, ..., -0.52047336,
           0.6859977 ,         nan],
         [ 0.7012286 ,         nan,  0.32229167, ..., -0.99535125,
                  nan,         nan],
         [ 0.9099132 ,         nan,         nan, ..., -0.24986723,
           0.7431511 , -0.47255144]],

        [[ 0.7773875 ,         nan,         nan, ...,  0.40175155,
          -2.7208655 ,  1.2248567 ],
         [-1.8140049 ,         nan,  1.2177136 , ...,  0.21447296,
           0.39086804, -0.6080355 ],
         [ 1.4932095 ,  0.23526593,  0.9979298 , ..., -0.6851797 ,
           0.7736793 ,  0.56760824],
         ...,
         [ 1.1618712 , -1.4756958 ,  1.0211697 , ...,         nan,
          -2.3417373 ,  0.7617543 ],
         [        nan, -1.2817901 ,  0.37421107, ..., -1.8211968 ,
                  nan,         nan],
         [ 0.13158229, -1.6180539 ,  1.2769415 , ...,         nan,
          -0.04035185,  0.7941306 ]],

        [[-0.28301442,  0.18486279,         nan, ...,  0.28137413,
                  nan,  0.06261795],
         [        nan, -0.5315341 , -0.09196113, ...,         nan,
           0.8023981 , -1.574959  ],
         [        nan, -0.48926055,  0.9255918 , ..., -0.73648435,
           1.2317829 ,         nan],
         ...,
         [ 0.5162376 ,  0.31934416, -0.3109175 , ...,  0.6824285 ,
           0.5117917 , -0.38898692],
         [ 0.11683638,  0.8045751 ,         nan, ..., -1.3992714 ,
           0.3705425 , -0.09893407],
         [ 0.35204935,  0.75154877, -0.8282486 , ...,         nan,
           0.5355348 ,  0.9941895 ]],

        ...,

        [[ 0.7773875 ,         nan,         nan, ...,  0.40175155,
          -2.7208655 ,  1.2248567 ],
         [-1.8140049 ,         nan,  1.2177136 , ...,  0.21447296,
           0.39086804, -0.6080355 ],
         [ 1.4932095 ,  0.23526593,  0.9979298 , ..., -0.6851797 ,
           0.7736793 ,  0.56760824],
         ...,
         [ 1.1618712 , -1.4756958 ,  1.0211697 , ...,         nan,
          -2.3417373 ,  0.7617543 ],
         [        nan, -1.2817901 ,  0.37421107, ..., -1.8211968 ,
                  nan,         nan],
         [ 0.13158229, -1.6180539 ,  1.2769415 , ...,         nan,
          -0.04035185,  0.7941306 ]],

        [[-0.28301442,  0.18486279,         nan, ...,  0.28137413,
                  nan,  0.06261795],
         [        nan, -0.5315341 , -0.09196113, ...,         nan,
           0.8023981 , -1.574959  ],
         [        nan, -0.48926055,  0.9255918 , ..., -0.73648435,
           1.2317829 ,         nan],
         ...,
         [ 0.5162376 ,  0.31934416, -0.3109175 , ...,  0.6824285 ,
           0.5117917 , -0.38898692],
         [ 0.11683638,  0.8045751 ,         nan, ..., -1.3992714 ,
           0.3705425 , -0.09893407],
         [ 0.35204935,  0.75154877, -0.8282486 , ...,         nan,
           0.5355348 ,  0.9941895 ]],

        [[        nan, -0.23759964, -1.0156957 , ...,  1.5100558 ,
           1.0656017 ,         nan],
         [ 0.5216543 , -0.81080186,  0.21168907, ...,         nan,
           1.3592896 ,         nan],
         [        nan,  1.240811  ,         nan, ..., -1.0007406 ,
          -0.9551956 ,  1.3014177 ],
         ...,
         [        nan,  0.3366279 ,  0.47882548, ...,  0.30653024,
                  nan,  0.80437946],
         [ 0.3888864 ,         nan,  0.39169958, ..., -2.2522926 ,
                  nan,  1.808087  ],
         [        nan,         nan,  0.31557748, ...,  0.8405287 ,
           1.0008638 ,  1.0558983 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [12], 'to': [17]}
torch node:
{'name': 'log', 'output': array([[[[ 0.87699074,  0.2897707 ,  1.49211   , ...,  0.9580374 ,
           0.63754123,  0.68568707],
         [ 0.5007047 ,         nan, -0.48614287, ...,  0.69662845,
           0.20888606,         nan],
         [-1.0728943 ,  0.6790298 ,  0.5090446 , ...,         nan,
          -0.11971669,         nan],
         ...,
         [-2.1874132 ,  0.03392836, -0.7024666 , ..., -0.5204719 ,
           0.68599916,         nan],
         [ 0.70123005,         nan,  0.3222888 , ..., -0.9953512 ,
                  nan,         nan],
         [ 0.90991235,         nan,         nan, ..., -0.249865  ,
           0.74314773, -0.47255224]],

        [[ 0.7773904 ,         nan,         nan, ...,  0.4017516 ,
          -2.720869  ,  1.2248601 ],
         [-1.8140078 ,         nan,  1.2177169 , ...,  0.21447216,
           0.3908681 , -0.60803264],
         [ 1.4932089 ,  0.23526311,  0.9979317 , ..., -0.6851783 ,
           0.77368224,  0.5676092 ],
         ...,
         [ 1.1618736 , -1.4756949 ,  1.0211668 , ...,         nan,
          -2.3417351 ,  0.7617572 ],
         [        nan, -1.2817907 ,  0.37421113, ..., -1.8211997 ,
                  nan,         nan],
         [ 0.13158545, -1.6180515 ,  1.2769425 , ...,         nan,
          -0.04035187,  0.79413   ]],

        [[-0.2830122 ,  0.18486427,         nan, ...,  0.28137606,
                  nan,  0.06262086],
         [        nan, -0.5315326 , -0.09196015, ...,         nan,
           0.80239755, -1.5749567 ],
         [        nan, -0.48926136,  0.92558897, ..., -0.7364844 ,
           1.2317863 ,         nan],
         ...,
         [ 0.51624095,  0.3193413 , -0.31091744, ...,  0.6824299 ,
           0.51179504, -0.38898498],
         [ 0.1168358 ,  0.8045745 ,         nan, ..., -1.3992699 ,
           0.37054256, -0.09893308],
         [ 0.35204652,  0.75154537, -0.82824767, ...,         nan,
           0.5355381 ,  0.9941914 ]],

        ...,

        [[ 0.7773904 ,         nan,         nan, ...,  0.4017516 ,
          -2.720869  ,  1.2248601 ],
         [-1.8140078 ,         nan,  1.2177169 , ...,  0.21447216,
           0.3908681 , -0.60803264],
         [ 1.4932089 ,  0.23526311,  0.9979317 , ..., -0.6851783 ,
           0.77368224,  0.5676092 ],
         ...,
         [ 1.1618736 , -1.4756949 ,  1.0211668 , ...,         nan,
          -2.3417351 ,  0.7617572 ],
         [        nan, -1.2817907 ,  0.37421113, ..., -1.8211997 ,
                  nan,         nan],
         [ 0.13158545, -1.6180515 ,  1.2769425 , ...,         nan,
          -0.04035187,  0.79413   ]],

        [[-0.2830122 ,  0.18486427,         nan, ...,  0.28137606,
                  nan,  0.06262086],
         [        nan, -0.5315326 , -0.09196015, ...,         nan,
           0.80239755, -1.5749567 ],
         [        nan, -0.48926136,  0.92558897, ..., -0.7364844 ,
           1.2317863 ,         nan],
         ...,
         [ 0.51624095,  0.3193413 , -0.31091744, ...,  0.6824299 ,
           0.51179504, -0.38898498],
         [ 0.1168358 ,  0.8045745 ,         nan, ..., -1.3992699 ,
           0.37054256, -0.09893308],
         [ 0.35204652,  0.75154537, -0.82824767, ...,         nan,
           0.5355381 ,  0.9941914 ]],

        [[        nan, -0.23759723, -1.0156956 , ...,  1.5100589 ,
           1.0656017 ,         nan],
         [ 0.5216576 , -0.81080085,  0.21168827, ...,         nan,
           1.3592911 ,         nan],
         [        nan,  1.240812  ,         nan, ..., -1.0007405 ,
          -0.9551934 ,  1.3014187 ],
         ...,
         [        nan,  0.33662504,  0.4788279 , ...,  0.30653217,
                  nan,  0.80437887],
         [ 0.38888645,         nan,  0.39169964, ..., -2.2522893 ,
                  nan,  1.8080891 ],
         [        nan,         nan,  0.31557938, ...,  0.8405302 ,
           1.0008657 ,  1.0558954 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [12], 'to': [17]}

generate models:159

analyse output arrays in iter:171

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[ 0.01913002, -0.5575913 , -0.26281726, ..., -0.08182901,
          -2.4342859 ,  0.69966936],
         [ 1.743866  , -0.08388656,  1.2672601 , ..., -0.4234705 ,
           0.6025237 , -3.7210464 ],
         [-0.46459723,  0.12510188, -1.7595632 , ...,  1.0394235 ,
          -0.85071975,  1.7411312 ],
         ...,
         [-1.8760446 ,  2.2744956 , -0.49693805, ...,  0.6977664 ,
          -0.15781493,  0.41018254],
         [ 2.8051069 , -1.0782051 , -1.4883317 , ..., -1.515624  ,
           1.4794655 , -1.8350306 ],
         [ 0.16134204, -1.7287245 ,  1.7046982 , ..., -1.4041599 ,
          -1.6748081 ,  3.102659  ]],

        [[ 0.01913002, -0.5575913 , -0.26281726, ..., -0.08182901,
          -2.4342859 ,  0.69966936],
         [ 1.743866  , -0.08388656,  1.2672601 , ..., -0.4234705 ,
           0.6025237 , -3.7210464 ],
         [-0.46459723,  0.12510188, -1.7595632 , ...,  1.0394235 ,
          -0.85071975,  1.7411312 ],
         ...,
         [-1.8760446 ,  2.2744956 , -0.49693805, ...,  0.6977664 ,
          -0.15781493,  0.41018254],
         [ 2.8051069 , -1.0782051 , -1.4883317 , ..., -1.515624  ,
           1.4794655 , -1.8350306 ],
         [ 0.16134204, -1.7287245 ,  1.7046982 , ..., -1.4041599 ,
          -1.6748081 ,  3.102659  ]],

        [[ 0.01913002, -0.5575913 , -0.26281726, ..., -0.08182901,
          -2.4342859 ,  0.69966936],
         [ 1.743866  , -0.08388656,  1.2672601 , ..., -0.4234705 ,
           0.6025237 , -3.7210464 ],
         [-0.46459723,  0.12510188, -1.7595632 , ...,  1.0394235 ,
          -0.85071975,  1.7411312 ],
         ...,
         [-1.8760446 ,  2.2744956 , -0.49693805, ...,  0.6977664 ,
          -0.15781493,  0.41018254],
         [ 2.8051069 , -1.0782051 , -1.4883317 , ..., -1.515624  ,
           1.4794655 , -1.8350306 ],
         [ 0.16134204, -1.7287245 ,  1.7046982 , ..., -1.4041599 ,
          -1.6748081 ,  3.102659  ]],

        ...,

        [[ 0.01913002, -0.5575913 , -0.26281726, ..., -0.08182901,
          -2.4342859 ,  0.69966936],
         [ 1.743866  , -0.08388656,  1.2672601 , ..., -0.4234705 ,
           0.6025237 , -3.7210464 ],
         [-0.46459723,  0.12510188, -1.7595632 , ...,  1.0394235 ,
          -0.85071975,  1.7411312 ],
         ...,
         [-1.8760446 ,  2.2744956 , -0.49693805, ...,  0.6977664 ,
          -0.15781493,  0.41018254],
         [ 2.8051069 , -1.0782051 , -1.4883317 , ..., -1.515624  ,
           1.4794655 , -1.8350306 ],
         [ 0.16134204, -1.7287245 ,  1.7046982 , ..., -1.4041599 ,
          -1.6748081 ,  3.102659  ]],

        [[ 0.01913002, -0.5575913 , -0.26281726, ..., -0.08182901,
          -2.4342859 ,  0.69966936],
         [ 1.743866  , -0.08388656,  1.2672601 , ..., -0.4234705 ,
           0.6025237 , -3.7210464 ],
         [-0.46459723,  0.12510188, -1.7595632 , ...,  1.0394235 ,
          -0.85071975,  1.7411312 ],
         ...,
         [-1.8760446 ,  2.2744956 , -0.49693805, ...,  0.6977664 ,
          -0.15781493,  0.41018254],
         [ 2.8051069 , -1.0782051 , -1.4883317 , ..., -1.515624  ,
           1.4794655 , -1.8350306 ],
         [ 0.16134204, -1.7287245 ,  1.7046982 , ..., -1.4041599 ,
          -1.6748081 ,  3.102659  ]],

        [[ 0.01913002, -0.5575913 , -0.26281726, ..., -0.08182901,
          -2.4342859 ,  0.69966936],
         [ 1.743866  , -0.08388656,  1.2672601 , ..., -0.4234705 ,
           0.6025237 , -3.7210464 ],
         [-0.46459723,  0.12510188, -1.7595632 , ...,  1.0394235 ,
          -0.85071975,  1.7411312 ],
         ...,
         [-1.8760446 ,  2.2744956 , -0.49693805, ...,  0.6977664 ,
          -0.15781493,  0.41018254],
         [ 2.8051069 , -1.0782051 , -1.4883317 , ..., -1.515624  ,
           1.4794655 , -1.8350306 ],
         [ 0.16134204, -1.7287245 ,  1.7046982 , ..., -1.4041599 ,
          -1.6748081 ,  3.102659  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [], 'to': [20]}
tf node:
{'name': 'log', 'output': array([[[[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        ...,

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[-3.9564955 ,         nan,         nan, ...,         nan,
                  nan, -0.35714453],
         [ 0.55610347,         nan,  0.23685996, ...,         nan,
          -0.50662977,         nan],
         [        nan, -2.0786283 ,         nan, ...,  0.03866961,
                  nan,  0.554534  ],
         ...,
         [        nan,  0.8217552 ,         nan, ..., -0.35986802,
                  nan, -0.8911554 ],
         [ 1.0314445 ,         nan,         nan, ...,         nan,
           0.3916808 ,         nan],
         [-1.8242259 ,         nan,  0.5333848 , ...,         nan,
                  nan,  1.1322572 ]],

        [[-3.9564955 ,         nan,         nan, ...,         nan,
                  nan, -0.35714453],
         [ 0.55610347,         nan,  0.23685996, ...,         nan,
          -0.50662977,         nan],
         [        nan, -2.0786283 ,         nan, ...,  0.03866961,
                  nan,  0.554534  ],
         ...,
         [        nan,  0.8217552 ,         nan, ..., -0.35986802,
                  nan, -0.8911554 ],
         [ 1.0314445 ,         nan,         nan, ...,         nan,
           0.3916808 ,         nan],
         [-1.8242259 ,         nan,  0.5333848 , ...,         nan,
                  nan,  1.1322572 ]],

        [[-3.9564955 ,         nan,         nan, ...,         nan,
                  nan, -0.35714453],
         [ 0.55610347,         nan,  0.23685996, ...,         nan,
          -0.50662977,         nan],
         [        nan, -2.0786283 ,         nan, ...,  0.03866961,
                  nan,  0.554534  ],
         ...,
         [        nan,  0.8217552 ,         nan, ..., -0.35986802,
                  nan, -0.8911554 ],
         [ 1.0314445 ,         nan,         nan, ...,         nan,
           0.3916808 ,         nan],
         [-1.8242259 ,         nan,  0.5333848 , ...,         nan,
                  nan,  1.1322572 ]],

        ...,

        [[-3.9564955 ,         nan,         nan, ...,         nan,
                  nan, -0.35714453],
         [ 0.55610347,         nan,  0.23685996, ...,         nan,
          -0.50662977,         nan],
         [        nan, -2.0786283 ,         nan, ...,  0.03866961,
                  nan,  0.554534  ],
         ...,
         [        nan,  0.8217552 ,         nan, ..., -0.35986802,
                  nan, -0.8911554 ],
         [ 1.0314445 ,         nan,         nan, ...,         nan,
           0.3916808 ,         nan],
         [-1.8242259 ,         nan,  0.5333848 , ...,         nan,
                  nan,  1.1322572 ]],

        [[-3.9564955 ,         nan,         nan, ...,         nan,
                  nan, -0.35714453],
         [ 0.55610347,         nan,  0.23685996, ...,         nan,
          -0.50662977,         nan],
         [        nan, -2.0786283 ,         nan, ...,  0.03866961,
                  nan,  0.554534  ],
         ...,
         [        nan,  0.8217552 ,         nan, ..., -0.35986802,
                  nan, -0.8911554 ],
         [ 1.0314445 ,         nan,         nan, ...,         nan,
           0.3916808 ,         nan],
         [-1.8242259 ,         nan,  0.5333848 , ...,         nan,
                  nan,  1.1322572 ]],

        [[-3.9564955 ,         nan,         nan, ...,         nan,
                  nan, -0.35714453],
         [ 0.55610347,         nan,  0.23685996, ...,         nan,
          -0.50662977,         nan],
         [        nan, -2.0786283 ,         nan, ...,  0.03866961,
                  nan,  0.554534  ],
         ...,
         [        nan,  0.8217552 ,         nan, ..., -0.35986802,
                  nan, -0.8911554 ],
         [ 1.0314445 ,         nan,         nan, ...,         nan,
           0.3916808 ,         nan],
         [-1.8242259 ,         nan,  0.5333848 , ...,         nan,
                  nan,  1.1322572 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [0], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        ...,

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]],

        [[-3.9564965 ,         nan,         nan, ...,         nan,
                  nan, -0.3571474 ],
         [ 0.5561045 ,         nan,  0.23685715, ...,         nan,
          -0.5066283 ,         nan],
         [        nan, -2.0786269 ,         nan, ...,  0.0386662 ,
                  nan,  0.55453503],
         ...,
         [        nan,  0.82175833,         nan, ..., -0.35987088,
                  nan, -0.891153  ],
         [ 1.0314417 ,         nan,         nan, ...,         nan,
           0.39168087,         nan],
         [-1.8242288 ,         nan,  0.5333881 , ...,         nan,
                  nan,  1.1322595 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [0], 'to': [1]}

generate models:167

analyse output arrays in iter:184

pre layer res:
2:conv2d
{'name': 'conv2d', 'output': array([[[[192.70401 , 161.67882 ,  60.28473 , ...,  65.44476 ,
            0.      ,   0.      ],
         [125.80701 , 116.259384,   0.      , ...,  83.85431 ,
            0.      , 218.01141 ],
         [ 41.81601 ,   0.      ,  95.68738 , ...,   0.      ,
            0.      ,   0.      ],
         ...,
         [  0.      ,  87.69954 , 306.95905 , ...,   0.      ,
          128.66702 ,  15.495606],
         [  0.      ,   0.      ,   0.      , ...,   0.      ,
            0.      ,  81.14311 ],
         [ 39.85368 ,   0.      , 177.44522 , ...,   0.      ,
          171.84474 ,   0.      ]],

        [[192.70401 , 161.67882 ,  60.28473 , ...,  65.44476 ,
            0.      ,   0.      ],
         [125.80701 , 116.259384,   0.      , ...,  83.85431 ,
            0.      , 218.01141 ],
         [ 41.81601 ,   0.      ,  95.68738 , ...,   0.      ,
            0.      ,   0.      ],
         ...,
         [  0.      ,  87.69954 , 306.95905 , ...,   0.      ,
          128.66702 ,  15.495606],
         [  0.      ,   0.      ,   0.      , ...,   0.      ,
            0.      ,  81.14311 ],
         [ 39.85368 ,   0.      , 177.44522 , ...,   0.      ,
          171.84474 ,   0.      ]],

        [[192.70401 , 161.67882 ,  60.28473 , ...,  65.44476 ,
            0.      ,   0.      ],
         [125.80701 , 116.259384,   0.      , ...,  83.85431 ,
            0.      , 218.01141 ],
         [ 41.81601 ,   0.      ,  95.68738 , ...,   0.      ,
            0.      ,   0.      ],
         ...,
         [  0.      ,  87.69954 , 306.95905 , ...,   0.      ,
          128.66702 ,  15.495606],
         [  0.      ,   0.      ,   0.      , ...,   0.      ,
            0.      ,  81.14311 ],
         [ 39.85368 ,   0.      , 177.44522 , ...,   0.      ,
          171.84474 ,   0.      ]],

        ...,

        [[192.70401 , 161.67882 ,  60.28473 , ...,  65.44476 ,
            0.      ,   0.      ],
         [125.80701 , 116.259384,   0.      , ...,  83.85431 ,
            0.      , 218.01141 ],
         [ 41.81601 ,   0.      ,  95.68738 , ...,   0.      ,
            0.      ,   0.      ],
         ...,
         [  0.      ,  87.69954 , 306.95905 , ...,   0.      ,
          128.66702 ,  15.495606],
         [  0.      ,   0.      ,   0.      , ...,   0.      ,
            0.      ,  81.14311 ],
         [ 39.85368 ,   0.      , 177.44522 , ...,   0.      ,
          171.84474 ,   0.      ]],

        [[192.70401 , 161.67882 ,  60.28473 , ...,  65.44476 ,
            0.      ,   0.      ],
         [125.80701 , 116.259384,   0.      , ...,  83.85431 ,
            0.      , 218.01141 ],
         [ 41.81601 ,   0.      ,  95.68738 , ...,   0.      ,
            0.      ,   0.      ],
         ...,
         [  0.      ,  87.69954 , 306.95905 , ...,   0.      ,
          128.66702 ,  15.495606],
         [  0.      ,   0.      ,   0.      , ...,   0.      ,
            0.      ,  81.14311 ],
         [ 39.85368 ,   0.      , 177.44522 , ...,   0.      ,
          171.84474 ,   0.      ]],

        [[192.70401 , 161.67882 ,  60.28473 , ...,  65.44476 ,
            0.      ,   0.      ],
         [125.80701 , 116.259384,   0.      , ...,  83.85431 ,
            0.      , 218.01141 ],
         [ 41.81601 ,   0.      ,  95.68738 , ...,   0.      ,
            0.      ,   0.      ],
         ...,
         [  0.      ,  87.69954 , 306.95905 , ...,   0.      ,
          128.66702 ,  15.495606],
         [  0.      ,   0.      ,   0.      , ...,   0.      ,
            0.      ,  81.14311 ],
         [ 39.85368 ,   0.      , 177.44522 , ...,   0.      ,
          171.84474 ,   0.      ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [11]}
tf node:
{'name': 'sin', 'output': array([[[[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.82787305,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.82787305,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.82787305,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        ...,

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.82787305,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.82787305,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.82787305,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [2], 'to': [3]}
ms node:
{'name': 'sin', 'output': array([[[[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462767 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462767 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462767 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        ...,

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462767 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756435 , -0.99361134, -0.56011283, ...,  0.5044423 ,
           0.        ,  0.        ],
         [ 0.14269748, -0.02053082,  0.        , ...,  0.8241762 ,
           0.        , -0.94621754],
         [-0.827888  ,  0.        ,  0.9913999 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.262014  , -0.79378307, ...,  0.        ,
           0.13782075,  0.21076345],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126351 ],
         [ 0.83439195,  0.        ,  0.99849665, ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756435 , -0.99361134, -0.56011283, ...,  0.5044423 ,
           0.        ,  0.        ],
         [ 0.14269748, -0.02053082,  0.        , ...,  0.8241762 ,
           0.        , -0.94621754],
         [-0.827888  ,  0.        ,  0.9913999 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.262014  , -0.79378307, ...,  0.        ,
           0.13782075,  0.21076345],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126351 ],
         [ 0.83439195,  0.        ,  0.99849665, ...,  0.        ,
           0.80923814,  0.        ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [2], 'to': [3]}
torch node:
{'name': 'sin', 'output': array([[[[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        ...,

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]],

        [[-0.8756877 , -0.9935993 , -0.5600686 , ...,  0.5043962 ,
           0.        ,  0.        ],
         [ 0.14281075, -0.02045455,  0.        , ...,  0.8241459 ,
           0.        , -0.9462768 ],
         [-0.827873  ,  0.        ,  0.9914059 , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        , -0.26196247, -0.79380167, ...,  0.        ,
           0.13783586,  0.2107644 ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        , -0.5126744 ],
         [ 0.83438987,  0.        ,  0.9985008 , ...,  0.        ,
           0.80923814,  0.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [2], 'to': [3]}

pre layer res:
13:relu
{'name': 'relu', 'output': array([[[[8121.6094, 8191.8135, 8190.327 , ..., 7553.9995, 6927.9526,
          8179.7344],
         [8191.813 , 5923.209 , 8191.9854, ..., 8072.749 , 7085.063 ,
          7792.484 ],
         [8161.2354, 8159.0146, 7748.2656, ..., 8184.827 , 7779.828 ,
          5564.245 ],
         ...,
         [6967.5034, 8164.7646, 8053.7656, ..., 8135.673 , 8029.876 ,
          8191.8755],
         [8175.047 , 6938.3784, 8144.7354, ..., 7879.7026, 8191.922 ,
          8173.9854],
         [7419.249 , 7235.186 , 7126.42  , ..., 6773.064 , 7496.626 ,
          6629.269 ]],

        [[8121.6094, 8191.8135, 8190.327 , ..., 7553.9995, 6927.9526,
          8179.7344],
         [8191.813 , 5923.209 , 8191.9854, ..., 8072.749 , 7085.063 ,
          7792.484 ],
         [8161.2354, 8159.0146, 7748.2656, ..., 8184.827 , 7779.828 ,
          5564.245 ],
         ...,
         [6967.5034, 8164.7646, 8053.7656, ..., 8135.673 , 8029.876 ,
          8191.8755],
         [8175.047 , 6938.3784, 8144.7354, ..., 7879.7026, 8191.922 ,
          8173.9854],
         [7419.249 , 7235.186 , 7126.42  , ..., 6773.064 , 7496.626 ,
          6629.269 ]],

        [[8121.6094, 8191.8135, 8190.327 , ..., 7553.9995, 6927.9526,
          8179.7344],
         [8191.813 , 5923.209 , 8191.9854, ..., 8072.749 , 7085.063 ,
          7792.484 ],
         [8161.2354, 8159.0146, 7748.2656, ..., 8184.827 , 7779.828 ,
          5564.245 ],
         ...,
         [6967.5034, 8164.7646, 8053.7656, ..., 8135.673 , 8029.876 ,
          8191.8755],
         [8175.047 , 6938.3784, 8144.7354, ..., 7879.7026, 8191.922 ,
          8173.9854],
         [7419.249 , 7235.186 , 7126.42  , ..., 6773.064 , 7496.626 ,
          6629.269 ]],

        ...,

        [[8121.6094, 8191.8135, 8190.327 , ..., 7553.9995, 6927.9526,
          8179.7344],
         [8191.813 , 5923.209 , 8191.9854, ..., 8072.749 , 7085.063 ,
          7792.484 ],
         [8161.2354, 8159.0146, 7748.2656, ..., 8184.827 , 7779.828 ,
          5564.245 ],
         ...,
         [6967.5034, 8164.7646, 8053.7656, ..., 8135.673 , 8029.876 ,
          8191.8755],
         [8175.047 , 6938.3784, 8144.7354, ..., 7879.7026, 8191.922 ,
          8173.9854],
         [7419.249 , 7235.186 , 7126.42  , ..., 6773.064 , 7496.626 ,
          6629.269 ]],

        [[8121.6094, 8191.8135, 8190.327 , ..., 7553.9995, 6927.9526,
          8179.7344],
         [8191.813 , 5923.209 , 8191.9854, ..., 8072.749 , 7085.063 ,
          7792.484 ],
         [8161.2354, 8159.0146, 7748.2656, ..., 8184.827 , 7779.828 ,
          5564.245 ],
         ...,
         [6967.5034, 8164.7646, 8053.7656, ..., 8135.673 , 8029.876 ,
          8191.8755],
         [8175.047 , 6938.3784, 8144.7354, ..., 7879.7026, 8191.922 ,
          8173.9854],
         [7419.249 , 7235.186 , 7126.42  , ..., 6773.064 , 7496.626 ,
          6629.269 ]],

        [[8121.6094, 8191.8135, 8190.327 , ..., 7553.9995, 6927.9526,
          8179.7344],
         [8191.813 , 5923.209 , 8191.9854, ..., 8072.749 , 7085.063 ,
          7792.484 ],
         [8161.2354, 8159.0146, 7748.2656, ..., 8184.827 , 7779.828 ,
          5564.245 ],
         ...,
         [6967.5034, 8164.7646, 8053.7656, ..., 8135.673 , 8029.876 ,
          8191.8755],
         [8175.047 , 6938.3784, 8144.7354, ..., 7879.7026, 8191.922 ,
          8173.9854],
         [7419.249 , 7235.186 , 7126.42  , ..., 6773.064 , 7496.626 ,
          6629.269 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [18]}
tf node:
{'name': 'softmax', 'output': array([[[[2.6435171e-31, 8.1552267e-01, 1.8447264e-01, ...,
          0.0000000e+00, 0.0000000e+00, 4.6296582e-06],
         [4.5701551e-01, 0.0000000e+00, 5.4298443e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.6782277e-11, 6.1627379e-12, 0.0000000e+00, ...,
          1.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 1.6823133e-12, 0.0000000e+00, ...,
          3.9039124e-25, 0.0000000e+00, 9.9998856e-01],
         [4.0244899e-08, 0.0000000e+00, 2.7579312e-21, ...,
          0.0000000e+00, 8.5788721e-01, 1.3921853e-08],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.6435171e-31, 8.1552267e-01, 1.8447264e-01, ...,
          0.0000000e+00, 0.0000000e+00, 4.6296582e-06],
         [4.5701551e-01, 0.0000000e+00, 5.4298443e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.6782277e-11, 6.1627379e-12, 0.0000000e+00, ...,
          1.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 1.6823133e-12, 0.0000000e+00, ...,
          3.9039124e-25, 0.0000000e+00, 9.9998856e-01],
         [4.0244899e-08, 0.0000000e+00, 2.7579312e-21, ...,
          0.0000000e+00, 8.5788721e-01, 1.3921853e-08],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.6435171e-31, 8.1552267e-01, 1.8447264e-01, ...,
          0.0000000e+00, 0.0000000e+00, 4.6296582e-06],
         [4.5701551e-01, 0.0000000e+00, 5.4298443e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.6782277e-11, 6.1627379e-12, 0.0000000e+00, ...,
          1.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 1.6823133e-12, 0.0000000e+00, ...,
          3.9039124e-25, 0.0000000e+00, 9.9998856e-01],
         [4.0244899e-08, 0.0000000e+00, 2.7579312e-21, ...,
          0.0000000e+00, 8.5788721e-01, 1.3921853e-08],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[2.6435171e-31, 8.1552267e-01, 1.8447264e-01, ...,
          0.0000000e+00, 0.0000000e+00, 4.6296582e-06],
         [4.5701551e-01, 0.0000000e+00, 5.4298443e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.6782277e-11, 6.1627379e-12, 0.0000000e+00, ...,
          1.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 1.6823133e-12, 0.0000000e+00, ...,
          3.9039124e-25, 0.0000000e+00, 9.9998856e-01],
         [4.0244899e-08, 0.0000000e+00, 2.7579312e-21, ...,
          0.0000000e+00, 8.5788721e-01, 1.3921853e-08],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.6435171e-31, 8.1552267e-01, 1.8447264e-01, ...,
          0.0000000e+00, 0.0000000e+00, 4.6296582e-06],
         [4.5701551e-01, 0.0000000e+00, 5.4298443e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.6782277e-11, 6.1627379e-12, 0.0000000e+00, ...,
          1.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 1.6823133e-12, 0.0000000e+00, ...,
          3.9039124e-25, 0.0000000e+00, 9.9998856e-01],
         [4.0244899e-08, 0.0000000e+00, 2.7579312e-21, ...,
          0.0000000e+00, 8.5788721e-01, 1.3921853e-08],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.6435171e-31, 8.1552267e-01, 1.8447264e-01, ...,
          0.0000000e+00, 0.0000000e+00, 4.6296582e-06],
         [4.5701551e-01, 0.0000000e+00, 5.4298443e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.6782277e-11, 6.1627379e-12, 0.0000000e+00, ...,
          1.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 1.6823133e-12, 0.0000000e+00, ...,
          3.9039124e-25, 0.0000000e+00, 9.9998856e-01],
         [4.0244899e-08, 0.0000000e+00, 2.7579312e-21, ...,
          0.0000000e+00, 8.5788721e-01, 1.3921853e-08],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [13], 'to': [10]}
ms node:
{'name': 'softmax', 'output': array([[[[2.56116568e-31, 8.15596342e-01, 1.84399217e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.48543324e-06],
         [4.57015514e-01, 0.00000000e+00, 5.42984486e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822803e-11, 6.14771038e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231336e-12, 0.00000000e+00, ...,
          3.90391288e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02673450e-08, 0.00000000e+00, 2.76621516e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.56116568e-31, 8.15596342e-01, 1.84399217e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.48543324e-06],
         [4.57015514e-01, 0.00000000e+00, 5.42984486e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822803e-11, 6.14771038e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231336e-12, 0.00000000e+00, ...,
          3.90391288e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02673450e-08, 0.00000000e+00, 2.76621516e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.56116568e-31, 8.15596342e-01, 1.84399217e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.48543324e-06],
         [4.57015514e-01, 0.00000000e+00, 5.42984486e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822803e-11, 6.14771038e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231336e-12, 0.00000000e+00, ...,
          3.90391288e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02673450e-08, 0.00000000e+00, 2.76621516e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        ...,

        [[2.56116568e-31, 8.15596342e-01, 1.84399217e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.48543324e-06],
         [4.57015514e-01, 0.00000000e+00, 5.42984486e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822803e-11, 6.14771038e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231336e-12, 0.00000000e+00, ...,
          3.90391288e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02673450e-08, 0.00000000e+00, 2.76621516e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.59134838e-31, 8.13605189e-01, 1.86390206e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.53829261e-06],
         [4.60531473e-01, 0.00000000e+00, 5.39468527e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.52237041e-11, 6.13271933e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.70630469e-12, 0.00000000e+00, ...,
          3.84902221e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02055633e-08, 0.00000000e+00, 2.77142744e-21, ...,
          0.00000000e+00, 8.56212199e-01, 1.39082452e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.59134838e-31, 8.13605189e-01, 1.86390206e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.53829261e-06],
         [4.60531473e-01, 0.00000000e+00, 5.39468527e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.52237041e-11, 6.13271933e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.70630469e-12, 0.00000000e+00, ...,
          3.84902221e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02055633e-08, 0.00000000e+00, 2.77142744e-21, ...,
          0.00000000e+00, 8.56212199e-01, 1.39082452e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]]],
      dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [13], 'to': [10]}
torch node:
{'name': 'softmax', 'output': array([[[[2.64246475e-31, 8.15596163e-01, 1.84399188e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.62781463e-06],
         [4.57015544e-01, 0.00000000e+00, 5.42984426e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822768e-11, 6.16273785e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231325e-12, 0.00000000e+00, ...,
          3.90391214e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02476878e-08, 0.00000000e+00, 2.75812268e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.64246475e-31, 8.15596163e-01, 1.84399188e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.62781463e-06],
         [4.57015544e-01, 0.00000000e+00, 5.42984426e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822768e-11, 6.16273785e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231325e-12, 0.00000000e+00, ...,
          3.90391214e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02476878e-08, 0.00000000e+00, 2.75812268e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.64246475e-31, 8.15596163e-01, 1.84399188e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.62781463e-06],
         [4.57015544e-01, 0.00000000e+00, 5.42984426e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822768e-11, 6.16273785e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231325e-12, 0.00000000e+00, ...,
          3.90391214e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02476878e-08, 0.00000000e+00, 2.75812268e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        ...,

        [[2.64246475e-31, 8.15596163e-01, 1.84399188e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.62781463e-06],
         [4.57015544e-01, 0.00000000e+00, 5.42984426e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822768e-11, 6.16273785e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231325e-12, 0.00000000e+00, ...,
          3.90391214e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02476878e-08, 0.00000000e+00, 2.75812268e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.64246475e-31, 8.15596163e-01, 1.84399188e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.62781463e-06],
         [4.57015544e-01, 0.00000000e+00, 5.42984426e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822768e-11, 6.16273785e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231325e-12, 0.00000000e+00, ...,
          3.90391214e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02476878e-08, 0.00000000e+00, 2.75812268e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.64246475e-31, 8.15596163e-01, 1.84399188e-01, ...,
          0.00000000e+00, 0.00000000e+00, 4.62781463e-06],
         [4.57015544e-01, 0.00000000e+00, 5.42984426e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.67822768e-11, 6.16273785e-12, 0.00000000e+00, ...,
          1.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.68231325e-12, 0.00000000e+00, ...,
          3.90391214e-25, 0.00000000e+00, 9.99988556e-01],
         [4.02476878e-08, 0.00000000e+00, 2.75812268e-21, ...,
          0.00000000e+00, 8.57946694e-01, 1.39228185e-08],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [13], 'to': [10]}

generate models:180

analyse the exceptions in iter:186
torch exception:
{'id': 2, 'name': 'conv2d', 'frame_work': 'torch', 'input_datas': [tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])]}
Given groups=1, weight of size [64, 64, 1, 1], expected input[1, 3, 32, 32] to have 64 channels, but got 3 channels instead
mindspore exception:
{'id': 2, 'name': 'conv2d', 'framework': 'mindspore', 'input_datas': [Tensor(shape=[1, 3, 32, 32], dtype=Float32, value=
[[[[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]],
  [[0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   ...
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000],
   [0.00000000e+000, 0.00000000e+000, 0.00000000e+000 ... 0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]]])]}
For 'Conv2D', 'C_in' of input 'x' shape divide by parameter 'group' must be equal to 'C_in' of input 'weight' shape: 64, but got 'C_in' of input 'x' shape: 3, and 'group': 1.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore\core\ops\conv2d.cc:214 Conv2dInferShape


generate models:182

analyse output arrays in iter:206

pre layer res:
15:reshape
{'name': 'reshape', 'output': array([[[[ 9.619364 ,  8.116915 ,  9.548085 , ...,  8.079963 ,
          10.451796 , 11.459955 ],
         [ 7.3358893,  9.9157715,  9.438161 , ...,  8.189636 ,
           9.338725 ,  9.092474 ],
         [ 5.9908133,  7.075526 ,  7.9143486, ...,  7.8465233,
           9.016565 ,  8.791303 ],
         ...,
         [ 6.7348456,       -inf,  8.579083 , ...,  3.5174646,
           9.110722 ,  6.0987225],
         [ 8.869741 ,  3.708644 ,  8.954067 , ...,       -inf,
           8.317898 ,  7.5483494],
         [10.52356  , 11.430574 ,  5.973406 , ..., 10.559841 ,
           6.152782 ,  8.01848  ]],

        [[ 9.168153 ,  7.4782453,       -inf, ...,       -inf,
           8.621255 ,  7.8381767],
         [ 9.936894 ,  7.013567 ,  9.210415 , ...,  8.930513 ,
           7.1349263, 10.458626 ],
         [ 7.2892847,  9.699366 ,  6.819502 , ..., 11.073771 ,
           9.777428 , 10.489004 ],
         ...,
         [ 7.194564 ,  7.3570843, 10.378492 , ..., 10.728834 ,
           8.40693  ,       -inf],
         [ 8.896449 ,  6.951565 , 11.052696 , ...,  9.319069 ,
           8.065517 ,  7.247785 ],
         [ 8.082613 ,  9.733618 ,  7.677479 , ...,  8.443341 ,
           9.296898 ,  9.836517 ]],

        [[      -inf,  6.574332 ,  9.223537 , ..., 10.283585 ,
                -inf,  6.8176656],
         [ 9.05045  ,  8.056187 , 10.357754 , ...,       -inf,
          12.242772 ,  7.684017 ],
         [10.164381 ,  9.189942 , 10.436657 , ..., 11.378521 ,
           9.480291 , 11.322762 ],
         ...,
         [ 7.0311375,  9.094663 ,  8.789567 , ...,  9.601834 ,
           7.6529055,  7.7118707],
         [      -inf,  7.7767477, 11.475686 , ...,  9.717461 ,
           9.668853 , 12.296656 ],
         [ 8.813188 ,  6.788239 ,  9.287106 , ..., 13.204054 ,
          11.163855 ,  6.8187795]],

        ...,

        [[ 8.314229 ,  8.871397 ,       -inf, ...,       -inf,
          10.976548 , 10.065422 ],
         [ 9.049355 ,  8.559438 ,  8.981697 , ...,  7.719454 ,
           8.664714 ,  8.515554 ],
         [ 7.2113395,  6.6961384, 11.942485 , ...,  7.4316134,
           9.608452 , 11.928376 ],
         ...,
         [ 8.065128 ,  7.8449864,  7.5270677, ..., 11.841314 ,
           8.53895  ,       -inf],
         [ 6.279806 ,  6.9528074,  9.284152 , ..., 10.5197115,
           5.527073 , 10.107382 ],
         [ 9.651737 ,  8.7562065, 12.301655 , ...,  6.3671103,
          10.2798195,  8.459666 ]],

        [[      -inf,  8.2438965,  9.830112 , ...,  8.992539 ,
                -inf,  8.673845 ],
         [ 9.452427 ,  7.206009 ,  8.438774 , ...,       -inf,
          10.157164 , 12.09408  ],
         [ 9.018265 ,  8.405184 ,  4.858219 , ...,  7.5686846,
           6.400031 ,  9.520766 ],
         ...,
         [ 9.812796 ,  8.438168 ,  5.417032 , ...,  7.0221643,
           7.5381927,  6.4614615],
         [      -inf,  7.5811987, 11.648114 , ...,  9.491    ,
           7.1902742,  7.8937654],
         [11.848717 ,  9.643974 , 10.97025  , ...,  8.666373 ,
          10.037504 , 10.642864 ]],

        [[ 9.372692 , 10.216059 ,       -inf, ...,  7.9784837,
           8.3249035,  7.11998  ],
         [ 7.807165 ,  9.893639 ,  9.060656 , ...,  7.0090904,
           9.184528 ,  9.230116 ],
         [ 9.816412 ,  7.6530085,  9.205796 , ..., 11.37373  ,
           8.456402 , 10.16766  ],
         ...,
         [ 8.199701 ,  5.6833687,  9.080828 , ...,  4.749942 ,
                -inf,  8.117464 ],
         [10.155309 ,  8.132008 ,  8.728908 , ...,  6.5641437,
           9.330271 ,  7.1450005],
         [ 8.825391 ,  4.832333 , 13.55901  , ...,  9.105506 ,
           7.4567657,  5.2814074]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [14], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         ...,
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,     -inf, ...,      nan,      nan,
               nan],
         [     nan,      nan, 7026.658, ...,      nan,      nan,
          4372.582]],

        [[     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         ...,
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,     -inf, ...,      nan,      nan,
               nan],
         [     nan,      nan, 7026.658, ...,      nan,      nan,
          4372.582]],

        [[     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         ...,
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,     -inf, ...,      nan,      nan,
               nan],
         [     nan,      nan, 7026.658, ...,      nan,      nan,
          4372.582]],

        ...,

        [[     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         ...,
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,     -inf, ...,      nan,      nan,
               nan],
         [     nan,      nan, 7026.658, ...,      nan,      nan,
          4372.582]],

        [[     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         ...,
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,     -inf, ...,      nan,      nan,
               nan],
         [     nan,      nan, 7026.658, ...,      nan,      nan,
          4372.582]],

        [[     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         ...,
         [     nan,      nan,      nan, ...,      nan,      nan,
               nan],
         [     nan,      nan,     -inf, ...,      nan,      nan,
               nan],
         [     nan,      nan, 7026.658, ...,      nan,      nan,
          4372.582]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [15], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf, 7026.6567, ...,      -inf,      -inf,
          4372.58  ]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf, 7026.6567, ...,      -inf,      -inf,
          4372.58  ]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf, 7026.6567, ...,      -inf,      -inf,
          4372.58  ]],

        ...,

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf, 7026.6567, ...,      -inf,      -inf,
          4372.58  ]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf, 7026.6562, ...,      -inf,      -inf,
          4372.5806]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf, 7026.6562, ...,      -inf,      -inf,
          4372.5806]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [15], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf, 7026.658, ...,     -inf,     -inf,
          4372.58 ]],

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf, 7026.658, ...,     -inf,     -inf,
          4372.58 ]],

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf, 7026.658, ...,     -inf,     -inf,
          4372.58 ]],

        ...,

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf, 7026.658, ...,     -inf,     -inf,
          4372.58 ]],

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf, 7026.658, ...,     -inf,     -inf,
          4372.58 ]],

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf, 7026.658, ...,     -inf,     -inf,
          4372.58 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [15], 'to': []}

generate models:202

analyse output arrays in iter:207

pre layer res:
13:transpose
{'name': 'transpose', 'output': array([[[[-1.764951  , -5.1076097 ,  3.2410207 , ...,  1.8114419 ,
          -1.8413377 , -0.6243625 ],
         [ 2.7053127 ,  5.519225  ,  0.92949116, ...,  1.3046138 ,
           1.1156952 , -1.0207249 ],
         [ 0.31639427, -1.0798392 ,  2.3303673 , ...,  1.1948714 ,
           0.7350591 ,  3.0112615 ],
         ...,
         [ 0.25824898, -1.1374313 , -1.8898381 , ...,  1.0799059 ,
          -0.29980135, -3.257052  ],
         [-0.44781086, -0.8548385 ,  0.99834627, ..., -1.032932  ,
          -2.7552161 ,  2.96797   ],
         [ 0.6795705 ,  0.5142774 , -0.07603127, ...,  1.8269327 ,
          -0.94055784, -1.4011853 ]],

        [[-1.764951  , -5.1076097 ,  3.2410207 , ...,  1.8114419 ,
          -1.8413377 , -0.6243625 ],
         [ 2.7053127 ,  5.519225  ,  0.92949116, ...,  1.3046138 ,
           1.1156952 , -1.0207249 ],
         [ 0.31639427, -1.0798392 ,  2.3303673 , ...,  1.1948714 ,
           0.7350591 ,  3.0112615 ],
         ...,
         [ 0.25824898, -1.1374313 , -1.8898381 , ...,  1.0799059 ,
          -0.29980135, -3.257052  ],
         [-0.44781086, -0.8548385 ,  0.99834627, ..., -1.032932  ,
          -2.7552161 ,  2.96797   ],
         [ 0.6795705 ,  0.5142774 , -0.07603127, ...,  1.8269327 ,
          -0.94055784, -1.4011853 ]],

        [[-1.764951  , -5.1076097 ,  3.2410207 , ...,  1.8114419 ,
          -1.8413377 , -0.6243625 ],
         [ 2.7053127 ,  5.519225  ,  0.92949116, ...,  1.3046138 ,
           1.1156952 , -1.0207249 ],
         [ 0.31639427, -1.0798392 ,  2.3303673 , ...,  1.1948714 ,
           0.7350591 ,  3.0112615 ],
         ...,
         [ 0.25824898, -1.1374313 , -1.8898381 , ...,  1.0799059 ,
          -0.29980135, -3.257052  ],
         [-0.44781086, -0.8548385 ,  0.99834627, ..., -1.032932  ,
          -2.7552161 ,  2.96797   ],
         [ 0.6795705 ,  0.5142774 , -0.07603127, ...,  1.8269327 ,
          -0.94055784, -1.4011853 ]],

        ...,

        [[-1.764951  , -5.1076097 ,  3.2410207 , ...,  1.8114419 ,
          -1.8413377 , -0.6243625 ],
         [ 2.7053127 ,  5.519225  ,  0.92949116, ...,  1.3046138 ,
           1.1156952 , -1.0207249 ],
         [ 0.31639427, -1.0798392 ,  2.3303673 , ...,  1.1948714 ,
           0.7350591 ,  3.0112615 ],
         ...,
         [ 0.25824898, -1.1374313 , -1.8898381 , ...,  1.0799059 ,
          -0.29980135, -3.257052  ],
         [-0.44781086, -0.8548385 ,  0.99834627, ..., -1.032932  ,
          -2.7552161 ,  2.96797   ],
         [ 0.6795705 ,  0.5142774 , -0.07603127, ...,  1.8269327 ,
          -0.94055784, -1.4011853 ]],

        [[-1.764951  , -5.1076097 ,  3.2410207 , ...,  1.8114419 ,
          -1.8413377 , -0.6243625 ],
         [ 2.7053127 ,  5.519225  ,  0.92949116, ...,  1.3046138 ,
           1.1156952 , -1.0207249 ],
         [ 0.31639427, -1.0798392 ,  2.3303673 , ...,  1.1948714 ,
           0.7350591 ,  3.0112615 ],
         ...,
         [ 0.25824898, -1.1374313 , -1.8898381 , ...,  1.0799059 ,
          -0.29980135, -3.257052  ],
         [-0.44781086, -0.8548385 ,  0.99834627, ..., -1.032932  ,
          -2.7552161 ,  2.96797   ],
         [ 0.6795705 ,  0.5142774 , -0.07603127, ...,  1.8269327 ,
          -0.94055784, -1.4011853 ]],

        [[-1.764951  , -5.1076097 ,  3.2410207 , ...,  1.8114419 ,
          -1.8413377 , -0.6243625 ],
         [ 2.7053127 ,  5.519225  ,  0.92949116, ...,  1.3046138 ,
           1.1156952 , -1.0207249 ],
         [ 0.31639427, -1.0798392 ,  2.3303673 , ...,  1.1948714 ,
           0.7350591 ,  3.0112615 ],
         ...,
         [ 0.25824898, -1.1374313 , -1.8898381 , ...,  1.0799059 ,
          -0.29980135, -3.257052  ],
         [-0.44781086, -0.8548385 ,  0.99834627, ..., -1.032932  ,
          -2.7552161 ,  2.96797   ],
         [ 0.6795705 ,  0.5142774 , -0.07603127, ...,  1.8269327 ,
          -0.94055784, -1.4011853 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12], 'to': [11, 19]}
tf node:
{'name': 'log', 'output': array([[[[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521750e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521750e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521750e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        ...,

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521750e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521750e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521750e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[           nan,            nan,  1.1758859e+00, ...,
           5.9412217e-01,            nan,            nan],
         [ 9.9521559e-01,  1.7082404e+00, -7.3117957e-02, ...,
           2.6590988e-01,  1.0947832e-01,            nan],
         [-1.1507634e+00,            nan,  8.4602445e-01, ...,
           1.7803711e-01, -3.0780447e-01,  1.1023569e+00],
         ...,
         [-1.3538277e+00,            nan,            nan, ...,
           7.6870978e-02,            nan,            nan],
         [           nan,            nan, -1.6565303e-03, ...,
                     nan,            nan,  1.0878781e+00],
         [-3.8629624e-01, -6.6499388e-01,            nan, ...,
           6.0263741e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758859e+00, ...,
           5.9412217e-01,            nan,            nan],
         [ 9.9521559e-01,  1.7082404e+00, -7.3117957e-02, ...,
           2.6590988e-01,  1.0947832e-01,            nan],
         [-1.1507634e+00,            nan,  8.4602445e-01, ...,
           1.7803711e-01, -3.0780447e-01,  1.1023569e+00],
         ...,
         [-1.3538277e+00,            nan,            nan, ...,
           7.6870978e-02,            nan,            nan],
         [           nan,            nan, -1.6565303e-03, ...,
                     nan,            nan,  1.0878781e+00],
         [-3.8629624e-01, -6.6499388e-01,            nan, ...,
           6.0263741e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758859e+00, ...,
           5.9412217e-01,            nan,            nan],
         [ 9.9521559e-01,  1.7082404e+00, -7.3117957e-02, ...,
           2.6590988e-01,  1.0947832e-01,            nan],
         [-1.1507634e+00,            nan,  8.4602445e-01, ...,
           1.7803711e-01, -3.0780447e-01,  1.1023569e+00],
         ...,
         [-1.3538277e+00,            nan,            nan, ...,
           7.6870978e-02,            nan,            nan],
         [           nan,            nan, -1.6565303e-03, ...,
                     nan,            nan,  1.0878781e+00],
         [-3.8629624e-01, -6.6499388e-01,            nan, ...,
           6.0263741e-01,            nan,            nan]],

        ...,

        [[           nan,            nan,  1.1758859e+00, ...,
           5.9412217e-01,            nan,            nan],
         [ 9.9521559e-01,  1.7082404e+00, -7.3117957e-02, ...,
           2.6590988e-01,  1.0947832e-01,            nan],
         [-1.1507634e+00,            nan,  8.4602445e-01, ...,
           1.7803711e-01, -3.0780447e-01,  1.1023569e+00],
         ...,
         [-1.3538277e+00,            nan,            nan, ...,
           7.6870978e-02,            nan,            nan],
         [           nan,            nan, -1.6565303e-03, ...,
                     nan,            nan,  1.0878781e+00],
         [-3.8629624e-01, -6.6499388e-01,            nan, ...,
           6.0263741e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758859e+00, ...,
           5.9412217e-01,            nan,            nan],
         [ 9.9521559e-01,  1.7082404e+00, -7.3117957e-02, ...,
           2.6590988e-01,  1.0947832e-01,            nan],
         [-1.1507634e+00,            nan,  8.4602445e-01, ...,
           1.7803711e-01, -3.0780447e-01,  1.1023569e+00],
         ...,
         [-1.3538277e+00,            nan,            nan, ...,
           7.6870978e-02,            nan,            nan],
         [           nan,            nan, -1.6565303e-03, ...,
                     nan,            nan,  1.0878781e+00],
         [-3.8629624e-01, -6.6499388e-01,            nan, ...,
           6.0263741e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758859e+00, ...,
           5.9412217e-01,            nan,            nan],
         [ 9.9521559e-01,  1.7082404e+00, -7.3117957e-02, ...,
           2.6590988e-01,  1.0947832e-01,            nan],
         [-1.1507634e+00,            nan,  8.4602445e-01, ...,
           1.7803711e-01, -3.0780447e-01,  1.1023569e+00],
         ...,
         [-1.3538277e+00,            nan,            nan, ...,
           7.6870978e-02,            nan,            nan],
         [           nan,            nan, -1.6565303e-03, ...,
                     nan,            nan,  1.0878781e+00],
         [-3.8629624e-01, -6.6499388e-01,            nan, ...,
           6.0263741e-01,            nan,            nan]]]],
      dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [13], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521756e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521756e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521756e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        ...,

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521756e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521756e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]],

        [[           nan,            nan,  1.1758883e+00, ...,
           5.9412318e-01,            nan,            nan],
         [ 9.9521756e-01,  1.7082374e+00, -7.3117979e-02, ...,
           2.6590708e-01,  1.0947774e-01,            nan],
         [-1.1507661e+00,            nan,  8.4602594e-01, ...,
           1.7803858e-01, -3.0780441e-01,  1.1023591e+00],
         ...,
         [-1.3538311e+00,            nan,            nan, ...,
           7.6873876e-02,            nan,            nan],
         [           nan,            nan, -1.6550998e-03, ...,
                     nan,            nan,  1.0878782e+00],
         [-3.8629431e-01, -6.6499245e-01,            nan, ...,
           6.0263842e-01,            nan,            nan]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [13], 'to': [1]}

generate models:203

analyse output arrays in iter:212

pre layer res:
17:log
{'name': 'log', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [3], 'to': [16]}
tf node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [17], 'to': [18]}
ms node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [17], 'to': [18]}
torch node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [17], 'to': [18]}

generate models:208

analyse output arrays in iter:223

pre layer res:
11:add
{'name': 'add', 'output': array([[[[         -inf, 1.9778395e+04,          -inf, ...,
                   -inf, 1.3407948e+01, 4.6591934e+03],
         [         -inf, 3.3111895e+03,          -inf, ...,
                   -inf, 6.1516582e+03, 8.5100049e+03],
         [         -inf, 9.2483096e+03,          -inf, ...,
                   -inf, 1.4519547e+04, 4.6383481e+03],
         ...,
         [         -inf, 1.3574499e+04,          -inf, ...,
                   -inf, 2.1793357e+03, 8.6752568e+03],
         [         -inf, 1.4320187e+04,          -inf, ...,
                   -inf, 6.6757129e+03, 1.0002561e+04],
         [         -inf, 1.1725622e+04,          -inf, ...,
                   -inf, 9.2543682e+03, 5.4799019e+03]],

        [[         -inf, 1.9778395e+04,          -inf, ...,
                   -inf, 1.3407948e+01, 4.6591934e+03],
         [         -inf, 3.3111895e+03,          -inf, ...,
                   -inf, 6.1516582e+03, 8.5100049e+03],
         [         -inf, 9.2483096e+03,          -inf, ...,
                   -inf, 1.4519547e+04, 4.6383481e+03],
         ...,
         [         -inf, 1.3574499e+04,          -inf, ...,
                   -inf, 2.1793357e+03, 8.6752568e+03],
         [         -inf, 1.4320187e+04,          -inf, ...,
                   -inf, 6.6757129e+03, 1.0002561e+04],
         [         -inf, 1.1725622e+04,          -inf, ...,
                   -inf, 9.2543682e+03, 5.4799019e+03]],

        [[         -inf, 1.9778395e+04,          -inf, ...,
                   -inf, 1.3407948e+01, 4.6591934e+03],
         [         -inf, 3.3111895e+03,          -inf, ...,
                   -inf, 6.1516582e+03, 8.5100049e+03],
         [         -inf, 9.2483096e+03,          -inf, ...,
                   -inf, 1.4519547e+04, 4.6383481e+03],
         ...,
         [         -inf, 1.3574499e+04,          -inf, ...,
                   -inf, 2.1793357e+03, 8.6752568e+03],
         [         -inf, 1.4320187e+04,          -inf, ...,
                   -inf, 6.6757129e+03, 1.0002561e+04],
         [         -inf, 1.1725622e+04,          -inf, ...,
                   -inf, 9.2543682e+03, 5.4799019e+03]],

        ...,

        [[1.8896918e+04, 1.9765459e+04, 9.7729580e+03, ...,
          1.3499376e+04, 0.0000000e+00, 4.6459072e+03],
         [5.2473530e+03, 3.2982537e+03, 1.8804125e+03, ...,
          7.2106006e+03, 6.1382505e+03, 8.4967188e+03],
         [6.6907212e+03, 9.2353740e+03, 0.0000000e+00, ...,
          9.6423105e+03, 1.4506139e+04, 4.6250620e+03],
         ...,
         [5.8283447e+03, 1.3561563e+04, 0.0000000e+00, ...,
          4.0071084e+03, 2.1659277e+03, 8.6619707e+03],
         [7.3378369e+03, 1.4307251e+04, 6.9940317e+03, ...,
          9.5375615e+03, 6.6623052e+03, 9.9892744e+03],
         [7.5631255e+03, 1.1712687e+04, 4.6723926e+03, ...,
          4.7485308e+03, 9.2409600e+03, 5.4666157e+03]],

        [[1.8896918e+04, 1.9765459e+04, 9.7729580e+03, ...,
          1.3499376e+04, 0.0000000e+00, 4.6459072e+03],
         [5.2473530e+03, 3.2982537e+03, 1.8804125e+03, ...,
          7.2106006e+03, 6.1382505e+03, 8.4967188e+03],
         [6.6907212e+03, 9.2353740e+03, 0.0000000e+00, ...,
          9.6423105e+03, 1.4506139e+04, 4.6250620e+03],
         ...,
         [5.8283447e+03, 1.3561563e+04, 0.0000000e+00, ...,
          4.0071084e+03, 2.1659277e+03, 8.6619707e+03],
         [7.3378369e+03, 1.4307251e+04, 6.9940317e+03, ...,
          9.5375615e+03, 6.6623052e+03, 9.9892744e+03],
         [7.5631255e+03, 1.1712687e+04, 4.6723926e+03, ...,
          4.7485308e+03, 9.2409600e+03, 5.4666157e+03]],

        [[1.8896918e+04, 1.9765459e+04, 9.7729580e+03, ...,
          1.3499376e+04, 0.0000000e+00, 4.6459072e+03],
         [5.2473530e+03, 3.2982537e+03, 1.8804125e+03, ...,
          7.2106006e+03, 6.1382505e+03, 8.4967188e+03],
         [6.6907212e+03, 9.2353740e+03, 0.0000000e+00, ...,
          9.6423105e+03, 1.4506139e+04, 4.6250620e+03],
         ...,
         [5.8283447e+03, 1.3561563e+04, 0.0000000e+00, ...,
          4.0071084e+03, 2.1659277e+03, 8.6619707e+03],
         [7.3378369e+03, 1.4307251e+04, 6.9940317e+03, ...,
          9.5375615e+03, 6.6623052e+03, 9.9892744e+03],
         [7.5631255e+03, 1.1712687e+04, 4.6723926e+03, ...,
          4.7485308e+03, 9.2409600e+03, 5.4666157e+03]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [14, 18], 'to': [9]}
tf node:
{'name': 'maxpool2d', 'output': array([[[[ 1.9778395e+04, -3.4028235e+38,  9.3893662e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  8.5100049e+03],
         [ 9.2483096e+03, -3.4028235e+38,  1.1234508e+04, ...,
          -3.4028235e+38, -3.4028235e+38,  1.4519547e+04],
         [ 1.0196809e+04, -3.4028235e+38,  5.1436777e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  7.4148555e+03],
         ...,
         [ 1.2935896e+01, -3.4028235e+38,  7.5815898e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  1.2629802e+04],
         [ 1.3574499e+04, -3.4028235e+38,  3.4266736e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  9.6333438e+03],
         [ 1.4320187e+04, -3.4028235e+38,  3.9430051e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  1.0002561e+04]],

        [[ 1.9778395e+04, -3.4028235e+38,  9.3893662e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  8.5100049e+03],
         [ 9.2483096e+03, -3.4028235e+38,  1.1234508e+04, ...,
          -3.4028235e+38, -3.4028235e+38,  1.4519547e+04],
         [ 1.0196809e+04, -3.4028235e+38,  5.1436777e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  7.4148555e+03],
         ...,
         [ 1.2935896e+01, -3.4028235e+38,  7.5815898e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  1.2629802e+04],
         [ 1.3574499e+04, -3.4028235e+38,  3.4266736e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  9.6333438e+03],
         [ 1.4320187e+04, -3.4028235e+38,  3.9430051e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  1.0002561e+04]],

        [[ 1.9778395e+04, -3.4028235e+38,  9.3893662e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  8.5100049e+03],
         [ 9.2483096e+03, -3.4028235e+38,  1.1234508e+04, ...,
          -3.4028235e+38, -3.4028235e+38,  1.4519547e+04],
         [ 1.0196809e+04, -3.4028235e+38,  5.1436777e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  7.4148555e+03],
         ...,
         [ 1.2935896e+01, -3.4028235e+38,  7.5815898e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  1.2629802e+04],
         [ 1.3574499e+04, -3.4028235e+38,  3.4266736e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  9.6333438e+03],
         [ 1.4320187e+04, -3.4028235e+38,  3.9430051e+03, ...,
          -3.4028235e+38, -3.4028235e+38,  1.0002561e+04]],

        ...,

        [[ 1.9765459e+04,  9.7729580e+03,  1.0864040e+04, ...,
           1.2609808e+04,  1.3499376e+04,  8.4967188e+03],
         [ 1.5765249e+04,  1.1685017e+04,  1.7500443e+04, ...,
           1.2588813e+04,  1.1060107e+04,  1.4506139e+04],
         [ 1.7302445e+04,  1.6311062e+04,  1.7007066e+04, ...,
           1.4592313e+04,  1.5098499e+04,  7.4015693e+03],
         ...,
         [ 1.4490889e+04,  1.4180424e+04,  9.2781475e+03, ...,
           1.0657814e+04,  1.2393437e+04,  1.2616516e+04],
         [ 1.3561563e+04,  1.1650563e+04,  1.4817736e+04, ...,
           1.3635251e+04,  1.4531799e+04,  9.6199355e+03],
         [ 1.4307251e+04,  6.9940317e+03,  8.8053740e+03, ...,
           6.7724761e+03,  1.4740937e+04,  9.9892744e+03]],

        [[ 1.9765459e+04,  9.7729580e+03,  1.0864040e+04, ...,
           1.2609808e+04,  1.3499376e+04,  8.4967188e+03],
         [ 1.5765249e+04,  1.1685017e+04,  1.7500443e+04, ...,
           1.2588813e+04,  1.1060107e+04,  1.4506139e+04],
         [ 1.7302445e+04,  1.6311062e+04,  1.7007066e+04, ...,
           1.4592313e+04,  1.5098499e+04,  7.4015693e+03],
         ...,
         [ 1.4490889e+04,  1.4180424e+04,  9.2781475e+03, ...,
           1.0657814e+04,  1.2393437e+04,  1.2616516e+04],
         [ 1.3561563e+04,  1.1650563e+04,  1.4817736e+04, ...,
           1.3635251e+04,  1.4531799e+04,  9.6199355e+03],
         [ 1.4307251e+04,  6.9940317e+03,  8.8053740e+03, ...,
           6.7724761e+03,  1.4740937e+04,  9.9892744e+03]],

        [[ 1.9765459e+04,  9.7729580e+03,  1.0864040e+04, ...,
           1.2609808e+04,  1.3499376e+04,  8.4967188e+03],
         [ 1.5765249e+04,  1.1685017e+04,  1.7500443e+04, ...,
           1.2588813e+04,  1.1060107e+04,  1.4506139e+04],
         [ 1.7302445e+04,  1.6311062e+04,  1.7007066e+04, ...,
           1.4592313e+04,  1.5098499e+04,  7.4015693e+03],
         ...,
         [ 1.4490889e+04,  1.4180424e+04,  9.2781475e+03, ...,
           1.0657814e+04,  1.2393437e+04,  1.2616516e+04],
         [ 1.3561563e+04,  1.1650563e+04,  1.4817736e+04, ...,
           1.3635251e+04,  1.4531799e+04,  9.6199355e+03],
         [ 1.4307251e+04,  6.9940317e+03,  8.8053740e+03, ...,
           6.7724761e+03,  1.4740937e+04,  9.9892744e+03]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [11], 'to': [10]}
ms node:
{'name': 'maxpool2d', 'output': array([[[[ 1.97783945e+04, -3.40282347e+38,  9.38936621e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  8.51000488e+03],
         [ 9.24830957e+03, -3.40282347e+38,  1.12345078e+04, ...,
          -3.40282347e+38, -3.40282347e+38,  1.45195469e+04],
         [ 1.01968086e+04, -3.40282347e+38,  5.14367773e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  7.41485547e+03],
         ...,
         [ 1.29358950e+01, -3.40282347e+38,  7.58158984e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  1.26298018e+04],
         [ 1.35744990e+04, -3.40282347e+38,  3.42667358e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  9.63334375e+03],
         [ 1.43201865e+04, -3.40282347e+38,  3.94300513e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  1.00025605e+04]],

        [[ 1.97783945e+04, -3.40282347e+38,  9.38936621e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  8.51000488e+03],
         [ 9.24830957e+03, -3.40282347e+38,  1.12345078e+04, ...,
          -3.40282347e+38, -3.40282347e+38,  1.45195469e+04],
         [ 1.01968086e+04, -3.40282347e+38,  5.14367773e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  7.41485547e+03],
         ...,
         [ 1.29358950e+01, -3.40282347e+38,  7.58158984e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  1.26298018e+04],
         [ 1.35744990e+04, -3.40282347e+38,  3.42667358e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  9.63334375e+03],
         [ 1.43201865e+04, -3.40282347e+38,  3.94300513e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  1.00025605e+04]],

        [[ 1.97783945e+04, -3.40282347e+38,  9.38936621e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  8.51000488e+03],
         [ 9.24830957e+03, -3.40282347e+38,  1.12345078e+04, ...,
          -3.40282347e+38, -3.40282347e+38,  1.45195469e+04],
         [ 1.01968086e+04, -3.40282347e+38,  5.14367773e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  7.41485547e+03],
         ...,
         [ 1.29358950e+01, -3.40282347e+38,  7.58158984e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  1.26298018e+04],
         [ 1.35744990e+04, -3.40282347e+38,  3.42667358e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  9.63334375e+03],
         [ 1.43201865e+04, -3.40282347e+38,  3.94300513e+03, ...,
          -3.40282347e+38, -3.40282347e+38,  1.00025605e+04]],

        ...,

        [[ 1.97654590e+04,  9.77295801e+03,  1.08640400e+04, ...,
           1.26098066e+04,  1.34993760e+04,  8.49671875e+03],
         [ 1.57652490e+04,  1.16850166e+04,  1.75004434e+04, ...,
           1.25888135e+04,  1.10601074e+04,  1.45061387e+04],
         [ 1.73024453e+04,  1.63110615e+04,  1.70070664e+04, ...,
           1.45923135e+04,  1.50984990e+04,  7.40156934e+03],
         ...,
         [ 1.44908887e+04,  1.41804238e+04,  9.27814746e+03, ...,
           1.06578145e+04,  1.23934365e+04,  1.26165156e+04],
         [ 1.35615635e+04,  1.16505635e+04,  1.48177363e+04, ...,
           1.36352510e+04,  1.45317988e+04,  9.61993555e+03],
         [ 1.43072510e+04,  6.99403174e+03,  8.80537402e+03, ...,
           6.77247607e+03,  1.47409365e+04,  9.98927441e+03]],

        [[ 1.97654590e+04,  9.77295703e+03,  1.08640342e+04, ...,
           1.26098018e+04,  1.34993760e+04,  8.49671875e+03],
         [ 1.57652490e+04,  1.16850205e+04,  1.75004395e+04, ...,
           1.25888135e+04,  1.10601045e+04,  1.45061484e+04],
         [ 1.73024453e+04,  1.63110615e+04,  1.70070645e+04, ...,
           1.45923135e+04,  1.50984990e+04,  7.40157422e+03],
         ...,
         [ 1.44908984e+04,  1.41804141e+04,  9.27814551e+03, ...,
           1.06578164e+04,  1.23934365e+04,  1.26165225e+04],
         [ 1.35615635e+04,  1.16505635e+04,  1.48177266e+04, ...,
           1.36352510e+04,  1.45317891e+04,  9.61993359e+03],
         [ 1.43072529e+04,  6.99403174e+03,  8.80537402e+03, ...,
           6.77247998e+03,  1.47409365e+04,  9.98927832e+03]],

        [[ 1.97654590e+04,  9.77295703e+03,  1.08640342e+04, ...,
           1.26098018e+04,  1.34993760e+04,  8.49671875e+03],
         [ 1.57652490e+04,  1.16850205e+04,  1.75004395e+04, ...,
           1.25888135e+04,  1.10601045e+04,  1.45061484e+04],
         [ 1.73024453e+04,  1.63110615e+04,  1.70070645e+04, ...,
           1.45923135e+04,  1.50984990e+04,  7.40157422e+03],
         ...,
         [ 1.44908984e+04,  1.41804141e+04,  9.27814551e+03, ...,
           1.06578164e+04,  1.23934365e+04,  1.26165225e+04],
         [ 1.35615635e+04,  1.16505635e+04,  1.48177266e+04, ...,
           1.36352510e+04,  1.45317891e+04,  9.61993359e+03],
         [ 1.43072529e+04,  6.99403174e+03,  8.80537402e+03, ...,
           6.77247998e+03,  1.47409365e+04,  9.98927832e+03]]]],
      dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [11], 'to': [10]}
torch node:
{'name': 'maxpool2d', 'output': array([[[[1.97783945e+04,           -inf, 9.38936621e+03, ...,
                    -inf,           -inf, 8.51000488e+03],
         [9.24830957e+03,           -inf, 1.12345078e+04, ...,
                    -inf,           -inf, 1.45195469e+04],
         [1.01968086e+04,           -inf, 5.14367773e+03, ...,
                    -inf,           -inf, 7.41485547e+03],
         ...,
         [1.29358950e+01,           -inf, 7.58158984e+03, ...,
                    -inf,           -inf, 1.26298018e+04],
         [1.35744990e+04,           -inf, 3.42667358e+03, ...,
                    -inf,           -inf, 9.63334375e+03],
         [1.43201865e+04,           -inf, 3.94300513e+03, ...,
                    -inf,           -inf, 1.00025605e+04]],

        [[1.97783945e+04,           -inf, 9.38936621e+03, ...,
                    -inf,           -inf, 8.51000488e+03],
         [9.24830957e+03,           -inf, 1.12345078e+04, ...,
                    -inf,           -inf, 1.45195469e+04],
         [1.01968086e+04,           -inf, 5.14367773e+03, ...,
                    -inf,           -inf, 7.41485547e+03],
         ...,
         [1.29358950e+01,           -inf, 7.58158984e+03, ...,
                    -inf,           -inf, 1.26298018e+04],
         [1.35744990e+04,           -inf, 3.42667358e+03, ...,
                    -inf,           -inf, 9.63334375e+03],
         [1.43201865e+04,           -inf, 3.94300513e+03, ...,
                    -inf,           -inf, 1.00025605e+04]],

        [[1.97783945e+04,           -inf, 9.38936621e+03, ...,
                    -inf,           -inf, 8.51000488e+03],
         [9.24830957e+03,           -inf, 1.12345078e+04, ...,
                    -inf,           -inf, 1.45195469e+04],
         [1.01968086e+04,           -inf, 5.14367773e+03, ...,
                    -inf,           -inf, 7.41485547e+03],
         ...,
         [1.29358950e+01,           -inf, 7.58158984e+03, ...,
                    -inf,           -inf, 1.26298018e+04],
         [1.35744990e+04,           -inf, 3.42667358e+03, ...,
                    -inf,           -inf, 9.63334375e+03],
         [1.43201865e+04,           -inf, 3.94300513e+03, ...,
                    -inf,           -inf, 1.00025605e+04]],

        ...,

        [[1.97654590e+04, 9.77295801e+03, 1.08640400e+04, ...,
          1.26098076e+04, 1.34993760e+04, 8.49671875e+03],
         [1.57652490e+04, 1.16850166e+04, 1.75004434e+04, ...,
          1.25888135e+04, 1.10601074e+04, 1.45061387e+04],
         [1.73024453e+04, 1.63110615e+04, 1.70070664e+04, ...,
          1.45923135e+04, 1.50984990e+04, 7.40156934e+03],
         ...,
         [1.44908887e+04, 1.41804238e+04, 9.27814746e+03, ...,
          1.06578145e+04, 1.23934365e+04, 1.26165156e+04],
         [1.35615635e+04, 1.16505635e+04, 1.48177363e+04, ...,
          1.36352510e+04, 1.45317988e+04, 9.61993555e+03],
         [1.43072510e+04, 6.99403174e+03, 8.80537402e+03, ...,
          6.77247607e+03, 1.47409365e+04, 9.98927441e+03]],

        [[1.97654590e+04, 9.77295703e+03, 1.08640342e+04, ...,
          1.26098027e+04, 1.34993760e+04, 8.49671875e+03],
         [1.57652490e+04, 1.16850205e+04, 1.75004395e+04, ...,
          1.25888135e+04, 1.10601045e+04, 1.45061475e+04],
         [1.73024453e+04, 1.63110615e+04, 1.70070645e+04, ...,
          1.45923135e+04, 1.50984990e+04, 7.40157422e+03],
         ...,
         [1.44908975e+04, 1.41804150e+04, 9.27814551e+03, ...,
          1.06578154e+04, 1.23934365e+04, 1.26165215e+04],
         [1.35615635e+04, 1.16505635e+04, 1.48177266e+04, ...,
          1.36352510e+04, 1.45317900e+04, 9.61993457e+03],
         [1.43072520e+04, 6.99403174e+03, 8.80537402e+03, ...,
          6.77247998e+03, 1.47409365e+04, 9.98927832e+03]],

        [[1.97654590e+04, 9.77295703e+03, 1.08640342e+04, ...,
          1.26098027e+04, 1.34993760e+04, 8.49671875e+03],
         [1.57652490e+04, 1.16850205e+04, 1.75004395e+04, ...,
          1.25888135e+04, 1.10601045e+04, 1.45061475e+04],
         [1.73024453e+04, 1.63110615e+04, 1.70070645e+04, ...,
          1.45923135e+04, 1.50984990e+04, 7.40157422e+03],
         ...,
         [1.44908975e+04, 1.41804150e+04, 9.27814551e+03, ...,
          1.06578154e+04, 1.23934365e+04, 1.26165215e+04],
         [1.35615635e+04, 1.16505635e+04, 1.48177266e+04, ...,
          1.36352510e+04, 1.45317900e+04, 9.61993457e+03],
         [1.43072520e+04, 6.99403174e+03, 8.80537402e+03, ...,
          6.77247998e+03, 1.47409365e+04, 9.98927832e+03]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [11], 'to': [10]}

generate models:219

analyse output arrays in iter:226

pre layer res:
16:add
{'name': 'add', 'output': array([[[[ 7.3722534e+03,  6.5117812e+03,  5.7211621e+03, ...,
           6.5617856e+03,  7.1578228e+03,  7.7768677e+03],
         [ 7.3714429e+03,  6.5107690e+03,  5.7175513e+03, ...,
           6.5617856e+03,  7.1578228e+03,  7.7775903e+03],
         [ 7.3714341e+03,  6.5107690e+03,  5.7185215e+03, ...,
           6.5617856e+03,  7.1588306e+03,  7.7807705e+03],
         ...,
         [ 7.3712388e+03,  6.5107690e+03,  5.7175513e+03, ...,
           6.5633145e+03,  7.1590850e+03,  7.7757349e+03],
         [ 7.3737988e+03,  6.5126050e+03,  5.7179058e+03, ...,
           6.5624565e+03,  7.1609937e+03,  7.7757349e+03],
         [ 7.3712388e+03,  6.5121987e+03,  5.7182964e+03, ...,
           6.5617856e+03,  7.1583545e+03,  7.7775806e+03]],

        [[ 7.3712388e+03,  6.5127451e+03,  5.7207168e+03, ...,
           6.5653135e+03,  7.1578228e+03,  7.7773472e+03],
         [ 7.3712388e+03,  6.5107690e+03,  5.7200952e+03, ...,
           6.5625557e+03,  7.1599209e+03,  7.7764976e+03],
         [ 7.3712388e+03,  6.5107690e+03,  5.7175513e+03, ...,
           6.5630376e+03,  7.1578228e+03,  7.7757349e+03],
         ...,
         [ 7.3720000e+03,  6.5107690e+03,  5.7188296e+03, ...,
           6.5643145e+03,  7.1578228e+03,  7.7757349e+03],
         [ 7.3719653e+03,  6.5107690e+03,  5.7189458e+03, ...,
           6.5617856e+03,  7.1578228e+03,  7.7757349e+03],
         [ 7.3720498e+03,  6.5126909e+03,  5.7175513e+03, ...,
           6.5633984e+03,  7.1592778e+03,  7.7757925e+03]],

        [[ 7.3722485e+03,  6.5126338e+03,  5.7175513e+03, ...,
           6.5617856e+03,  7.1587192e+03,  7.7757349e+03],
         [ 7.3737080e+03,  6.5107690e+03,  5.7175513e+03, ...,
           6.5637681e+03,  7.1590376e+03,  7.7757349e+03],
         [ 7.3712388e+03,  6.5107690e+03,  5.7175513e+03, ...,
           6.5632681e+03,  7.1608223e+03,  7.7757349e+03],
         ...,
         [ 7.3712388e+03,  6.5115220e+03,  5.7184556e+03, ...,
           6.5617856e+03,  7.1586929e+03,  7.7759829e+03],
         [ 7.3712388e+03,  6.5116978e+03,  5.7193521e+03, ...,
           6.5617856e+03,  7.1578228e+03,  7.7757349e+03],
         [ 7.3712388e+03,  6.5111025e+03,  5.7215635e+03, ...,
           6.5617856e+03,  7.1601479e+03,  7.7757349e+03]],

        ...,

        [[          -inf,  2.6564455e+00,  4.3171978e+00, ...,
           4.7878704e+00,           -inf,  2.0888901e+00],
         [          -inf,           -inf,  3.4768686e+00, ...,
           5.0918138e-01,  2.8381720e+00,  4.9176091e-01],
         [          -inf,           -inf,           -inf, ...,
           1.4754673e+00,           -inf,           -inf],
         ...,
         [ 4.8829469e-01,           -inf,  1.5237722e+00, ...,
           3.4557190e+00,           -inf,           -inf],
         [ 4.0759403e-01,           -inf,  1.7267654e+00, ...,
                    -inf,           -inf,           -inf],
         [ 6.0176694e-01,  2.5744252e+00,           -inf, ...,
           2.0897985e+00,  1.8289752e+00, -2.7970641e+00]],

        [[ 1.0199320e+00,  2.4873106e+00,           -inf, ...,
                    -inf,  7.8642899e-01,           -inf],
         [ 3.3729420e+00,           -inf,           -inf, ...,
           2.6660452e+00,  1.4089156e+00,           -inf],
         [          -inf,           -inf,           -inf, ...,
           1.8749160e+00,  4.0974941e+00,           -inf],
         ...,
         [          -inf,  4.6943820e-01,  8.0327141e-01, ...,
                    -inf,  7.2965467e-01, -1.1464933e+00],
         [          -inf,  8.5516614e-01,  2.3893712e+00, ...,
                    -inf,           -inf,           -inf],
         [          -inf, -7.6555616e-01,  5.4010987e+00, ...,
                    -inf,  3.1682539e+00,           -inf]],

        [[          -inf,  1.8159831e+00,  3.7950456e+00, ...,
                    -inf,           -inf,  7.1436107e-02],
         [          -inf,           -inf,           -inf, ...,
                    -inf,           -inf,  2.4751375e+00],
         [          -inf,           -inf,  2.9837942e+00, ...,
                    -inf,           -inf,  3.2667527e+00],
         ...,
         [-1.4491024e+00,           -inf, -2.5592201e+00, ...,
           1.5996561e+00,           -inf,           -inf],
         [ 1.3722858e+00,           -inf,           -inf, ...,
                    -inf,           -inf,  1.7056267e+00],
         [ 2.7820053e+00,           -inf,           -inf, ...,
           2.5981276e+00, -3.7538698e+00,  1.1782128e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7, 21], 'to': [9]}
tf node:
{'name': 'maxpool2d', 'output': array([[[[ 7.3722534e+03,  9.2029014e+03,  1.0062913e+04, ...,
           9.0547500e+03,  7.7098872e+03,  7.7775903e+03],
         [ 7.3714341e+03,  9.2027705e+03,  1.0063701e+04, ...,
           9.0532480e+03,  7.7098872e+03,  7.7807705e+03],
         [ 7.3725068e+03,  9.2047334e+03,  1.0065027e+04, ...,
           9.0546279e+03,  7.7098872e+03,  7.7760874e+03],
         ...,
         [ 7.3712388e+03,  9.2027402e+03,  1.0062913e+04, ...,
           9.0524785e+03,  7.7114858e+03,  7.7757349e+03],
         [ 7.3712388e+03,  9.2031680e+03,  1.0062913e+04, ...,
           9.0524785e+03,  7.7098872e+03,  7.7787393e+03],
         [ 7.3737988e+03,  9.2036182e+03,  1.0063844e+04, ...,
           9.0556953e+03,  7.7127568e+03,  7.7775806e+03]],

        [[ 7.3712388e+03,  9.2041270e+03,  1.0063327e+04, ...,
           9.0550010e+03,  7.7116890e+03,  7.7773472e+03],
         [ 7.3732202e+03,  9.2027402e+03,  1.0066260e+04, ...,
           9.0536943e+03,  7.7099038e+03,  7.7799243e+03],
         [ 7.3729980e+03,  9.2041475e+03,  1.0063999e+04, ...,
           9.0524785e+03,  7.7105586e+03,  7.7775303e+03],
         ...,
         [ 7.3712388e+03,  9.2030615e+03,  1.0064949e+04, ...,
           9.0524785e+03,  7.7124673e+03,  7.7795269e+03],
         [ 7.3723657e+03,  9.2027402e+03,  1.0063445e+04, ...,
           9.0546836e+03,  7.7098872e+03,  7.7776973e+03],
         [ 7.3720498e+03,  9.2027422e+03,  1.0063063e+04, ...,
           9.0524785e+03,  7.7131763e+03,  7.7757925e+03]],

        [[ 7.3737080e+03,  9.2027402e+03,  1.0062913e+04, ...,
           9.0548125e+03,  7.7108145e+03,  7.7757349e+03],
         [ 7.3732803e+03,  9.2050254e+03,  1.0063887e+04, ...,
           9.0531768e+03,  7.7104663e+03,  7.7757349e+03],
         [ 7.3740571e+03,  9.2035439e+03,  1.0063695e+04, ...,
           9.0547910e+03,  7.7110698e+03,  7.7757349e+03],
         ...,
         [ 7.3712388e+03,  9.2032656e+03,  1.0065589e+04, ...,
           9.0524785e+03,  7.7134683e+03,  7.7782847e+03],
         [ 7.3722573e+03,  9.2049355e+03,  1.0063671e+04, ...,
           9.0538809e+03,  7.7120166e+03,  7.7759829e+03],
         [ 7.3712388e+03,  9.2028252e+03,  1.0062913e+04, ...,
           9.0531201e+03,  7.7099907e+03,  7.7757349e+03]],

        ...,

        [[ 2.6564455e+00,  4.3171978e+00,  2.9652541e+00, ...,
           3.4464180e+00,  4.7878704e+00,  2.8381720e+00],
         [ 2.6651649e+00, -3.4028235e+38,  4.5548244e+00, ...,
           1.4096895e+00,  1.4754673e+00,  5.6216030e+00],
         [ 2.8001990e+00,  1.7485545e+00,  5.0346837e+00, ...,
          -3.4028235e+38,  2.7256066e-01,  2.3798463e+00],
         ...,
         [-3.4028235e+38, -8.1468785e-01,  2.7470601e+00, ...,
           4.1275549e+00,  3.5280106e+00,  5.1241355e+00],
         [ 1.3621672e+00,  1.5237722e+00, -9.7880900e-02, ...,
           2.9951062e+00,  3.9577055e+00,  2.6357584e+00],
         [ 2.5744252e+00,  1.7267654e+00, -1.7468898e+00, ...,
           4.5790772e+00,  4.4788775e+00,  1.8289752e+00]],

        [[ 3.3729420e+00, -3.4028235e+38,  2.3402560e+00, ...,
           3.1803594e+00,  2.6660452e+00,  1.4089156e+00],
         [ 2.7554674e+00,  3.1105351e+00,  2.6048656e+00, ...,
           2.2181072e+00,  1.8749160e+00,  5.1085391e+00],
         [ 3.8547320e+00,  1.4470741e+00,  5.3829713e+00, ...,
           3.1487505e+00,  1.3505986e+00, -3.4028235e+38],
         ...,
         [ 1.0614285e+00,  4.7895056e-01,  3.6604033e+00, ...,
          -3.4028235e+38,  4.8563790e+00,  3.5428462e+00],
         [ 1.0367465e+00,  2.9808655e+00,  5.4353580e+00, ...,
           1.7383587e+00,  2.8848753e+00,  1.1830027e+00],
         [ 8.5516614e-01,  5.4010987e+00,  1.0261728e+00, ...,
           2.6807897e+00, -2.1645732e+00,  3.1682539e+00]],

        [[ 1.8159831e+00,  3.7950456e+00,  6.0962367e-01, ...,
           9.5831555e-01, -3.4028235e+38,  2.4751375e+00],
         [-1.0726819e+00,  4.6690335e+00, -1.2182611e-01, ...,
          -3.4028235e+38,  4.8180780e+00,  3.2667527e+00],
         [-6.0850579e-01,  1.9147148e+00,  4.5023513e+00, ...,
           2.9264491e+00,  1.5908242e+00,  2.3118391e+00],
         ...,
         [ 3.3676124e+00,  4.1201005e+00,  1.8874173e+00, ...,
           6.9583864e+00,  3.1671143e+00,  2.1167257e+00],
         [ 4.3446824e-01,  5.2598829e+00,  2.9826515e+00, ...,
           2.1401479e+00,  1.5996561e+00, -3.4028235e+38],
         [ 2.7820053e+00, -3.4028235e+38,  4.8085694e+00, ...,
           4.9150829e+00,  2.5981276e+00,  1.7056267e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [16], 'to': [22]}
ms node:
{'name': 'maxpool2d', 'output': array([[[[ 7.37225342e+03,  9.20290137e+03,  1.00629131e+04, ...,
           9.05474902e+03,  7.70988770e+03,  7.77759033e+03],
         [ 7.37143408e+03,  9.20277051e+03,  1.00637012e+04, ...,
           9.05324707e+03,  7.70988770e+03,  7.78077051e+03],
         [ 7.37250684e+03,  9.20473340e+03,  1.00650273e+04, ...,
           9.05462695e+03,  7.70988770e+03,  7.77608740e+03],
         ...,
         [ 7.37123877e+03,  9.20274023e+03,  1.00629131e+04, ...,
           9.05247754e+03,  7.71148633e+03,  7.77573486e+03],
         [ 7.37123877e+03,  9.20316797e+03,  1.00629131e+04, ...,
           9.05247754e+03,  7.70988770e+03,  7.77873926e+03],
         [ 7.37379883e+03,  9.20361816e+03,  1.00638438e+04, ...,
           9.05569434e+03,  7.71275732e+03,  7.77758057e+03]],

        [[ 7.37123877e+03,  9.20412695e+03,  1.00633271e+04, ...,
           9.05500000e+03,  7.71168945e+03,  7.77734717e+03],
         [ 7.37322021e+03,  9.20274023e+03,  1.00662598e+04, ...,
           9.05369336e+03,  7.70990430e+03,  7.77992432e+03],
         [ 7.37299805e+03,  9.20414746e+03,  1.00639990e+04, ...,
           9.05247754e+03,  7.71055908e+03,  7.77753027e+03],
         ...,
         [ 7.37123877e+03,  9.20306152e+03,  1.00649492e+04, ...,
           9.05247754e+03,  7.71246777e+03,  7.77952686e+03],
         [ 7.37236572e+03,  9.20274023e+03,  1.00634453e+04, ...,
           9.05468262e+03,  7.70988770e+03,  7.77769727e+03],
         [ 7.37204980e+03,  9.20274219e+03,  1.00630625e+04, ...,
           9.05247754e+03,  7.71317676e+03,  7.77579248e+03]],

        [[ 7.37370801e+03,  9.20274023e+03,  1.00629131e+04, ...,
           9.05481152e+03,  7.71081494e+03,  7.77573486e+03],
         [ 7.37328027e+03,  9.20502539e+03,  1.00638867e+04, ...,
           9.05317578e+03,  7.71046680e+03,  7.77573486e+03],
         [ 7.37405713e+03,  9.20354395e+03,  1.00636953e+04, ...,
           9.05479004e+03,  7.71107031e+03,  7.77573486e+03],
         ...,
         [ 7.37123877e+03,  9.20326562e+03,  1.00655889e+04, ...,
           9.05247754e+03,  7.71346875e+03,  7.77828467e+03],
         [ 7.37225732e+03,  9.20493555e+03,  1.00636709e+04, ...,
           9.05387988e+03,  7.71201709e+03,  7.77598291e+03],
         [ 7.37123877e+03,  9.20282520e+03,  1.00629131e+04, ...,
           9.05311914e+03,  7.70999121e+03,  7.77573486e+03]],

        ...,

        [[ 2.65644407e+00,  4.31719494e+00,  2.96525097e+00, ...,
           3.44642091e+00,  4.78786945e+00,  2.83817530e+00],
         [ 2.66516352e+00, -3.40282347e+38,  4.55482101e+00, ...,
           1.40968812e+00,  1.47547007e+00,  5.62160635e+00],
         [ 2.80020237e+00,  1.74855733e+00,  5.03468370e+00, ...,
          -3.40282347e+38,  2.72558719e-01,  2.37984514e+00],
         ...,
         [-3.40282347e+38, -8.14685106e-01,  2.74705863e+00, ...,
           4.12755299e+00,  3.52801347e+00,  5.12413549e+00],
         [ 1.36216581e+00,  1.52377510e+00, -9.78838205e-02, ...,
           2.99510694e+00,  3.95770526e+00,  2.63575697e+00],
         [ 2.57442522e+00,  1.72676826e+00, -1.74689138e+00, ...,
           4.57907391e+00,  4.47887516e+00,  1.82897520e+00]],

        [[ 3.37294292e+00, -3.40282347e+38,  2.34025502e+00, ...,
           3.18035793e+00,  2.66604376e+00,  1.40891409e+00],
         [ 2.75546598e+00,  3.11053205e+00,  2.60486412e+00, ...,
           2.21810389e+00,  1.87491584e+00,  5.10853910e+00],
         [ 3.85473490e+00,  1.44707489e+00,  5.38296986e+00, ...,
           3.14874744e+00,  1.35059714e+00, -3.40282347e+38],
         ...,
         [ 1.06142712e+00,  4.78948325e-01,  3.66040134e+00, ...,
          -3.40282347e+38,  4.85637808e+00,  3.54284883e+00],
         [ 1.03674507e+00,  2.98086596e+00,  5.43535709e+00, ...,
           1.73836160e+00,  2.88487220e+00,  1.18299985e+00],
         [ 8.55166137e-01,  5.40109730e+00,  1.02617133e+00, ...,
           2.68078828e+00, -2.16457558e+00,  3.16825247e+00]],

        [[ 1.81598306e+00,  3.79504848e+00,  6.09621286e-01, ...,
           9.58314121e-01, -3.40282347e+38,  2.47513747e+00],
         [-1.07267845e+00,  4.66903019e+00, -1.21822715e-01, ...,
          -3.40282347e+38,  4.81807709e+00,  3.26675129e+00],
         [-6.08505845e-01,  1.91471267e+00,  4.50234890e+00, ...,
           2.92644620e+00,  1.59082222e+00,  2.31183815e+00],
         ...,
         [ 3.36761308e+00,  4.12009811e+00,  1.88741732e+00, ...,
           6.95838451e+00,  3.16711283e+00,  2.11672330e+00],
         [ 4.34468180e-01,  5.25988102e+00,  2.98265219e+00, ...,
           2.14014554e+00,  1.59965408e+00, -3.40282347e+38],
         [ 2.78200388e+00, -3.40282347e+38,  4.80856848e+00, ...,
           4.91508150e+00,  2.59812760e+00,  1.70562959e+00]]]],
      dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [16], 'to': [22]}
torch node:
{'name': 'maxpool2d', 'output': array([[[[ 7.37225391e+03,  9.20290137e+03,  1.00629141e+04, ...,
           9.05475000e+03,  7.70988770e+03,  7.77759033e+03],
         [ 7.37143457e+03,  9.20277051e+03,  1.00637021e+04, ...,
           9.05324805e+03,  7.70988770e+03,  7.78077051e+03],
         [ 7.37250732e+03,  9.20473340e+03,  1.00650283e+04, ...,
           9.05462793e+03,  7.70988770e+03,  7.77608740e+03],
         ...,
         [ 7.37123926e+03,  9.20274023e+03,  1.00629141e+04, ...,
           9.05247852e+03,  7.71148633e+03,  7.77573486e+03],
         [ 7.37123926e+03,  9.20316797e+03,  1.00629141e+04, ...,
           9.05247852e+03,  7.70988770e+03,  7.77873926e+03],
         [ 7.37379932e+03,  9.20361816e+03,  1.00638447e+04, ...,
           9.05569531e+03,  7.71275732e+03,  7.77758057e+03]],

        [[ 7.37123926e+03,  9.20412695e+03,  1.00633281e+04, ...,
           9.05500098e+03,  7.71168945e+03,  7.77734717e+03],
         [ 7.37322070e+03,  9.20274023e+03,  1.00662607e+04, ...,
           9.05369434e+03,  7.70990430e+03,  7.77992432e+03],
         [ 7.37299854e+03,  9.20414746e+03,  1.00640000e+04, ...,
           9.05247852e+03,  7.71055908e+03,  7.77753027e+03],
         ...,
         [ 7.37123926e+03,  9.20306152e+03,  1.00649502e+04, ...,
           9.05247852e+03,  7.71246777e+03,  7.77952686e+03],
         [ 7.37236621e+03,  9.20274023e+03,  1.00634463e+04, ...,
           9.05468359e+03,  7.70988770e+03,  7.77769727e+03],
         [ 7.37204980e+03,  9.20274316e+03,  1.00630625e+04, ...,
           9.05247852e+03,  7.71317627e+03,  7.77579199e+03]],

        [[ 7.37370850e+03,  9.20274023e+03,  1.00629141e+04, ...,
           9.05481250e+03,  7.71081494e+03,  7.77573486e+03],
         [ 7.37328076e+03,  9.20502539e+03,  1.00638877e+04, ...,
           9.05317676e+03,  7.71046680e+03,  7.77573486e+03],
         [ 7.37405762e+03,  9.20354395e+03,  1.00636963e+04, ...,
           9.05479102e+03,  7.71107031e+03,  7.77573486e+03],
         ...,
         [ 7.37123926e+03,  9.20326562e+03,  1.00655898e+04, ...,
           9.05247852e+03,  7.71346875e+03,  7.77828467e+03],
         [ 7.37225781e+03,  9.20493555e+03,  1.00636719e+04, ...,
           9.05388086e+03,  7.71201709e+03,  7.77598291e+03],
         [ 7.37123926e+03,  9.20282520e+03,  1.00629141e+04, ...,
           9.05312012e+03,  7.70999121e+03,  7.77573486e+03]],

        ...,

        [[ 2.65644550e+00,  4.31719780e+00,  2.96525407e+00, ...,
           3.44641805e+00,  4.78787041e+00,  2.83817196e+00],
         [ 2.66516495e+00,            -inf,  4.55482435e+00, ...,
           1.40968955e+00,  1.47546732e+00,  5.62160301e+00],
         [ 2.80019903e+00,  1.74855447e+00,  5.03468370e+00, ...,
                     -inf,  2.72560656e-01,  2.37984633e+00],
         ...,
         [           -inf, -8.14687848e-01,  2.74706006e+00, ...,
           4.12755489e+00,  3.52801061e+00,  5.12413549e+00],
         [ 1.36216724e+00,  1.52377224e+00, -9.78808999e-02, ...,
           2.99510622e+00,  3.95770550e+00,  2.63575840e+00],
         [ 2.57442522e+00,  1.72676539e+00, -1.74688983e+00, ...,
           4.57907724e+00,  4.47887754e+00,  1.82897520e+00]],

        [[ 3.37294197e+00,            -inf,  2.34025598e+00, ...,
           3.18035936e+00,  2.66604519e+00,  1.40891564e+00],
         [ 2.75546741e+00,  3.11053514e+00,  2.60486555e+00, ...,
           2.21810722e+00,  1.87491596e+00,  5.10853910e+00],
         [ 3.85473204e+00,  1.44707406e+00,  5.38297129e+00, ...,
           3.14875054e+00,  1.35059857e+00,            -inf],
         ...,
         [ 1.06142855e+00,  4.78950560e-01,  3.66040325e+00, ...,
                     -inf,  4.85637903e+00,  3.54284620e+00],
         [ 1.03674650e+00,  2.98086548e+00,  5.43535805e+00, ...,
           1.73835874e+00,  2.88487530e+00,  1.18300271e+00],
         [ 8.55166137e-01,  5.40109873e+00,  1.02617276e+00, ...,
           2.68078971e+00, -2.16457319e+00,  3.16825390e+00]],

        [[ 1.81598306e+00,  3.79504561e+00,  6.09623671e-01, ...,
           9.58315551e-01,            -inf,  2.47513747e+00],
         [-1.07268190e+00,  4.66903353e+00, -1.21826112e-01, ...,
                     -inf,  4.81807804e+00,  3.26675272e+00],
         [-6.08505726e-01,  1.91471481e+00,  4.50235128e+00, ...,
           2.92644906e+00,  1.59082425e+00,  2.31183910e+00],
         ...,
         [ 3.36761236e+00,  4.12010050e+00,  1.88741732e+00, ...,
           6.95838642e+00,  3.16711426e+00,  2.11672568e+00],
         [ 4.34468240e-01,  5.25988293e+00,  2.98265147e+00, ...,
           2.14014792e+00,  1.59965611e+00,            -inf],
         [ 2.78200531e+00,            -inf,  4.80856943e+00, ...,
           4.91508293e+00,  2.59812760e+00,  1.70562685e+00]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [16], 'to': [22]}

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[7.3633491e+03, 6.5030015e+03, 5.7125117e+03, ...,
          6.5529980e+03, 7.1489482e+03, 7.7679102e+03],
         [7.3625386e+03, 6.5019893e+03, 5.7089014e+03, ...,
          6.5529980e+03, 7.1489482e+03, 7.7686323e+03],
         [7.3625298e+03, 6.5019893e+03, 5.7098716e+03, ...,
          6.5529980e+03, 7.1499556e+03, 7.7718120e+03],
         ...,
         [7.3623345e+03, 6.5019893e+03, 5.7089014e+03, ...,
          6.5545264e+03, 7.1502100e+03, 7.7667773e+03],
         [7.3648945e+03, 6.5038247e+03, 5.7092559e+03, ...,
          6.5536689e+03, 7.1521187e+03, 7.7667773e+03],
         [7.3623345e+03, 6.5034185e+03, 5.7096465e+03, ...,
          6.5529980e+03, 7.1494795e+03, 7.7686226e+03]],

        [[7.3623345e+03, 6.5039648e+03, 5.7120664e+03, ...,
          6.5565254e+03, 7.1489482e+03, 7.7683892e+03],
         [7.3623345e+03, 6.5019893e+03, 5.7114448e+03, ...,
          6.5537681e+03, 7.1510459e+03, 7.7675400e+03],
         [7.3623345e+03, 6.5019893e+03, 5.7089014e+03, ...,
          6.5542495e+03, 7.1489482e+03, 7.7667773e+03],
         ...,
         [7.3630957e+03, 6.5019893e+03, 5.7101797e+03, ...,
          6.5555264e+03, 7.1489482e+03, 7.7667773e+03],
         [7.3630610e+03, 6.5019893e+03, 5.7102959e+03, ...,
          6.5529980e+03, 7.1489482e+03, 7.7667773e+03],
         [7.3631455e+03, 6.5039106e+03, 5.7089014e+03, ...,
          6.5546104e+03, 7.1504028e+03, 7.7668350e+03]],

        [[7.3633442e+03, 6.5038535e+03, 5.7089014e+03, ...,
          6.5529980e+03, 7.1498442e+03, 7.7667773e+03],
         [7.3648037e+03, 6.5019893e+03, 5.7089014e+03, ...,
          6.5549800e+03, 7.1501626e+03, 7.7667773e+03],
         [7.3623345e+03, 6.5019893e+03, 5.7089014e+03, ...,
          6.5544800e+03, 7.1519473e+03, 7.7667773e+03],
         ...,
         [7.3623345e+03, 6.5027422e+03, 5.7098057e+03, ...,
          6.5529980e+03, 7.1498179e+03, 7.7670254e+03],
         [7.3623345e+03, 6.5029180e+03, 5.7107021e+03, ...,
          6.5529980e+03, 7.1489482e+03, 7.7667773e+03],
         [7.3623345e+03, 6.5023228e+03, 5.7129131e+03, ...,
          6.5529980e+03, 7.1512729e+03, 7.7667773e+03]],

        ...,

        [[0.0000000e+00, 1.9755824e+00, 3.1650338e+00, ...,
          3.5273294e+00, 0.0000000e+00, 1.6116387e+00],
         [0.0000000e+00, 0.0000000e+00, 2.5433762e+00, ...,
          7.7023762e-01, 2.0974498e+00, 7.6267898e-01],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          1.2512913e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [7.6118004e-01, 0.0000000e+00, 1.2782670e+00, ...,
          2.5282083e+00, 0.0000000e+00, 0.0000000e+00],
         [7.2675705e-01, 0.0000000e+00, 1.3943424e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [8.1111383e-01, 1.9213810e+00, 0.0000000e+00, ...,
          1.6121993e+00, 1.4543892e+00, 5.7576519e-02]],

        [[1.0099908e+00, 1.8643813e+00, 0.0000000e+00, ...,
          0.0000000e+00, 8.9611524e-01, 0.0000000e+00],
         [2.4690917e+00, 0.0000000e+00, 0.0000000e+00, ...,
          1.9819593e+00, 1.2145456e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          1.4817154e+00, 2.9991612e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 7.5305510e-01, 9.0409368e-01, ...,
          0.0000000e+00, 8.6949611e-01, 2.4796686e-01],
         [0.0000000e+00, 9.2890978e-01, 1.8010187e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 3.3326405e-01, 4.0118470e+00, ...,
          0.0000000e+00, 2.3246741e+00, 0.0000000e+00]],

        [[0.0000000e+00, 1.4466988e+00, 2.7745552e+00, ...,
          0.0000000e+00, 0.0000000e+00, 5.9337121e-01],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 1.8564639e+00],
         [0.0000000e+00, 0.0000000e+00, 2.1967947e+00, ...,
          0.0000000e+00, 0.0000000e+00, 2.3938498e+00],
         ...,
         [1.9347981e-01, 0.0000000e+00, 7.1991205e-02, ...,
          1.3211520e+00, 0.0000000e+00, 0.0000000e+00],
         [1.1945317e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 1.3820552e+00],
         [2.0595284e+00, 0.0000000e+00, 0.0000000e+00, ...,
          1.9369916e+00, 2.2896610e-02, 1.0910616e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [21]}
tf node:
{'name': 'log', 'output': array([[[[ 8.90427   ,  8.780019  ,  8.650414  , ...,  8.787678  ,
           8.874721  ,  8.957756  ],
         [ 8.9041605 ,  8.779863  ,  8.649782  , ...,  8.787678  ,
           8.874721  ,  8.9578495 ],
         [ 8.904159  ,  8.779863  ,  8.649952  , ...,  8.787678  ,
           8.874862  ,  8.958259  ],
         ...,
         [ 8.904133  ,  8.779863  ,  8.649782  , ...,  8.787911  ,
           8.874897  ,  8.957611  ],
         [ 8.90448   ,  8.780146  ,  8.649844  , ...,  8.787781  ,
           8.875164  ,  8.957611  ],
         [ 8.904133  ,  8.780084  ,  8.649913  , ...,  8.787678  ,
           8.874795  ,  8.957849  ]],

        [[ 8.904133  ,  8.780168  ,  8.650336  , ...,  8.788216  ,
           8.874721  ,  8.957818  ],
         [ 8.904133  ,  8.779863  ,  8.650228  , ...,  8.787795  ,
           8.875014  ,  8.957708  ],
         [ 8.904133  ,  8.779863  ,  8.649782  , ...,  8.7878685 ,
           8.874721  ,  8.957611  ],
         ...,
         [ 8.904236  ,  8.779863  ,  8.650005  , ...,  8.788064  ,
           8.874721  ,  8.957611  ],
         [ 8.904231  ,  8.779863  ,  8.650026  , ...,  8.787678  ,
           8.874721  ,  8.957611  ],
         [ 8.9042425 ,  8.780159  ,  8.649782  , ...,  8.787924  ,
           8.874924  ,  8.957618  ]],

        [[ 8.904269  ,  8.78015   ,  8.649782  , ...,  8.787678  ,
           8.8748455 ,  8.957611  ],
         [ 8.904468  ,  8.779863  ,  8.649782  , ...,  8.78798   ,
           8.87489   ,  8.957611  ],
         [ 8.904133  ,  8.779863  ,  8.649782  , ...,  8.787904  ,
           8.87514   ,  8.957611  ],
         ...,
         [ 8.904133  ,  8.77998   ,  8.6499405 , ...,  8.787678  ,
           8.874843  ,  8.957643  ],
         [ 8.904133  ,  8.780006  ,  8.650097  , ...,  8.787678  ,
           8.874721  ,  8.957611  ],
         [ 8.904133  ,  8.779915  ,  8.650484  , ...,  8.787678  ,
           8.875046  ,  8.957611  ]],

        ...,

        [[       -inf,  0.6808632 ,  1.1521637 , ...,  1.2605411 ,
                 -inf,  0.47725147],
         [       -inf,        -inf,  0.9334924 , ..., -0.2610562 ,
           0.74072224, -0.27091807],
         [       -inf,        -inf,        -inf, ...,  0.22417603,
                 -inf,        -inf],
         ...,
         [-0.27288535,        -inf,  0.24550527, ...,  0.92751086,
                 -inf,        -inf],
         [-0.31916302,        -inf,  0.3324229 , ...,        -inf,
                 -inf,        -inf],
         [-0.20934688,  0.6530442 ,        -inf, ...,  0.47759926,
           0.37458602, -2.8546405 ]],

        [[ 0.00994123,  0.6229293 ,        -inf, ...,        -inf,
          -0.10968626,        -inf],
         [ 0.9038503 ,        -inf,        -inf, ...,  0.6840859 ,
           0.19437002,        -inf],
         [       -inf,        -inf,        -inf, ...,  0.3932005 ,
           1.0983326 ,        -inf],
         ...,
         [       -inf, -0.2836169 , -0.10082229, ...,        -inf,
          -0.13984142, -1.3944602 ],
         [       -inf, -0.07374366,  0.58835244, ...,        -inf,
                 -inf,        -inf],
         [       -inf, -1.0988202 ,  1.3892517 , ...,        -inf,
           0.8435799 ,        -inf]],

        [[       -inf,  0.36928427,  1.0204904 , ...,        -inf,
                 -inf, -0.5219351 ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,  0.61867356],
         [       -inf,        -inf,  0.78699934, ...,        -inf,
                 -inf,  0.87290287],
         ...,
         [-1.6425822 ,        -inf, -2.6312113 , ...,  0.27850407,
                 -inf,        -inf],
         [ 0.17775421,        -inf,        -inf, ...,        -inf,
                 -inf,  0.32357162],
         [ 0.722477  ,        -inf,        -inf, ...,  0.66113603,
          -3.7767663 ,  0.08715116]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [16]}
ms node:
{'name': 'log', 'output': array([[[[ 8.904269  ,  8.780017  ,  8.650416  , ...,  8.787676  ,
           8.87472   ,  8.957756  ],
         [ 8.90416   ,  8.779861  ,  8.649784  , ...,  8.787676  ,
           8.87472   ,  8.9578495 ],
         [ 8.904158  ,  8.779861  ,  8.649954  , ...,  8.787676  ,
           8.874861  ,  8.958259  ],
         ...,
         [ 8.904131  ,  8.779861  ,  8.649784  , ...,  8.787909  ,
           8.874896  ,  8.957611  ],
         [ 8.904479  ,  8.780144  ,  8.649846  , ...,  8.787778  ,
           8.875163  ,  8.957611  ],
         [ 8.904131  ,  8.780081  ,  8.649915  , ...,  8.787676  ,
           8.874794  ,  8.957849  ]],

        [[ 8.904131  ,  8.780165  ,  8.650338  , ...,  8.788214  ,
           8.87472   ,  8.957818  ],
         [ 8.904131  ,  8.779861  ,  8.650229  , ...,  8.787793  ,
           8.875013  ,  8.957709  ],
         [ 8.904131  ,  8.779861  ,  8.649784  , ...,  8.787867  ,
           8.87472   ,  8.957611  ],
         ...,
         [ 8.904235  ,  8.779861  ,  8.650008  , ...,  8.788061  ,
           8.87472   ,  8.957611  ],
         [ 8.90423   ,  8.779861  ,  8.650028  , ...,  8.787676  ,
           8.87472   ,  8.957611  ],
         [ 8.904242  ,  8.780157  ,  8.649784  , ...,  8.787922  ,
           8.874923  ,  8.957618  ]],

        [[ 8.904268  ,  8.780148  ,  8.649784  , ...,  8.787676  ,
           8.874845  ,  8.957611  ],
         [ 8.904467  ,  8.779861  ,  8.649784  , ...,  8.787978  ,
           8.874889  ,  8.957611  ],
         [ 8.904131  ,  8.779861  ,  8.649784  , ...,  8.787902  ,
           8.875139  ,  8.957611  ],
         ...,
         [ 8.904131  ,  8.779977  ,  8.649942  , ...,  8.787676  ,
           8.874841  ,  8.957643  ],
         [ 8.904131  ,  8.780004  ,  8.6501    , ...,  8.787676  ,
           8.87472   ,  8.957611  ],
         [ 8.904131  ,  8.779912  ,  8.650487  , ...,  8.787676  ,
           8.875045  ,  8.957611  ]],

        ...,

        [[       -inf,  0.6808618 ,  1.1521614 , ...,  1.2605401 ,
                 -inf,  0.47724906],
         [       -inf,        -inf,  0.9334952 , ..., -0.26105842,
           0.74072564, -0.2709203 ],
         [       -inf,        -inf,        -inf, ...,  0.22417885,
                 -inf,        -inf],
         ...,
         [-0.2728876 ,        -inf,  0.24550809, ...,  0.92751366,
                 -inf,        -inf],
         [-0.31916308,        -inf,  0.33242577, ...,        -inf,
                 -inf,        -inf],
         [-0.20934927,  0.6530442 ,        -inf, ...,  0.47759688,
           0.374586  , -2.8546414 ]],

        [[ 0.0099398 ,  0.6229293 ,        -inf, ...,        -inf,
          -0.10968724,        -inf],
         [ 0.90385115,        -inf,        -inf, ...,  0.6840845 ,
           0.19436854,        -inf],
         [       -inf,        -inf,        -inf, ...,  0.39320046,
           1.0983326 ,        -inf],
         ...,
         [       -inf, -0.2836191 , -0.10082328, ...,        -inf,
          -0.1398424 , -1.3944616 ],
         [       -inf, -0.07374364,  0.5883515 , ...,        -inf,
                 -inf,        -inf],
         [       -inf, -1.0988221 ,  1.3892503 , ...,        -inf,
           0.8435784 ,        -inf]],

        [[       -inf,  0.3692842 ,  1.0204933 , ...,        -inf,
                 -inf, -0.5219366 ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,  0.61867356],
         [       -inf,        -inf,  0.78699994, ...,        -inf,
                 -inf,  0.8729014 ],
         ...,
         [-1.6425843 ,        -inf, -2.6312144 , ...,  0.27850214,
                 -inf,        -inf],
         [ 0.17775273,        -inf,        -inf, ...,        -inf,
                 -inf,  0.32357448],
         [ 0.7224756 ,        -inf,        -inf, ...,  0.66113603,
          -3.7767665 ,  0.08714826]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [16]}
torch node:
{'name': 'log', 'output': array([[[[ 8.90427   ,  8.780019  ,  8.650414  , ...,  8.787678  ,
           8.874721  ,  8.957756  ],
         [ 8.9041605 ,  8.779863  ,  8.649782  , ...,  8.787678  ,
           8.874721  ,  8.9578495 ],
         [ 8.904159  ,  8.779863  ,  8.649952  , ...,  8.787678  ,
           8.874862  ,  8.958259  ],
         ...,
         [ 8.904133  ,  8.779863  ,  8.649782  , ...,  8.787911  ,
           8.874897  ,  8.95761   ],
         [ 8.90448   ,  8.780146  ,  8.649844  , ...,  8.78778   ,
           8.875164  ,  8.95761   ],
         [ 8.904133  ,  8.780084  ,  8.649913  , ...,  8.787678  ,
           8.874795  ,  8.957849  ]],

        [[ 8.904133  ,  8.780168  ,  8.650336  , ...,  8.788216  ,
           8.874721  ,  8.957818  ],
         [ 8.904133  ,  8.779863  ,  8.650228  , ...,  8.787795  ,
           8.875013  ,  8.957708  ],
         [ 8.904133  ,  8.779863  ,  8.649782  , ...,  8.7878685 ,
           8.874721  ,  8.95761   ],
         ...,
         [ 8.904236  ,  8.779863  ,  8.650005  , ...,  8.788064  ,
           8.874721  ,  8.95761   ],
         [ 8.904231  ,  8.779863  ,  8.650026  , ...,  8.787678  ,
           8.874721  ,  8.95761   ],
         [ 8.9042425 ,  8.780159  ,  8.649782  , ...,  8.787924  ,
           8.874924  ,  8.957618  ]],

        [[ 8.904269  ,  8.78015   ,  8.649782  , ...,  8.787678  ,
           8.8748455 ,  8.95761   ],
         [ 8.904468  ,  8.779863  ,  8.649782  , ...,  8.78798   ,
           8.87489   ,  8.95761   ],
         [ 8.904133  ,  8.779863  ,  8.649782  , ...,  8.787904  ,
           8.87514   ,  8.95761   ],
         ...,
         [ 8.904133  ,  8.77998   ,  8.6499405 , ...,  8.787678  ,
           8.874842  ,  8.957643  ],
         [ 8.904133  ,  8.780006  ,  8.650097  , ...,  8.787678  ,
           8.874721  ,  8.95761   ],
         [ 8.904133  ,  8.779915  ,  8.650484  , ...,  8.787678  ,
           8.875046  ,  8.95761   ]],

        ...,

        [[       -inf,  0.6808632 ,  1.1521637 , ...,  1.2605411 ,
                 -inf,  0.47725147],
         [       -inf,        -inf,  0.9334924 , ..., -0.2610562 ,
           0.74072224, -0.27091807],
         [       -inf,        -inf,        -inf, ...,  0.22417603,
                 -inf,        -inf],
         ...,
         [-0.27288535,        -inf,  0.24550527, ...,  0.92751086,
                 -inf,        -inf],
         [-0.31916302,        -inf,  0.3324229 , ...,        -inf,
                 -inf,        -inf],
         [-0.20934688,  0.6530442 ,        -inf, ...,  0.47759926,
           0.37458602, -2.8546405 ]],

        [[ 0.00994123,  0.6229293 ,        -inf, ...,        -inf,
          -0.10968626,        -inf],
         [ 0.9038503 ,        -inf,        -inf, ...,  0.6840859 ,
           0.19437002,        -inf],
         [       -inf,        -inf,        -inf, ...,  0.39320052,
           1.0983326 ,        -inf],
         ...,
         [       -inf, -0.28361687, -0.10082229, ...,        -inf,
          -0.13984142, -1.3944602 ],
         [       -inf, -0.07374366,  0.58835244, ...,        -inf,
                 -inf,        -inf],
         [       -inf, -1.0988202 ,  1.3892517 , ...,        -inf,
           0.8435799 ,        -inf]],

        [[       -inf,  0.36928427,  1.0204904 , ...,        -inf,
                 -inf, -0.5219351 ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,  0.61867356],
         [       -inf,        -inf,  0.78699934, ...,        -inf,
                 -inf,  0.87290287],
         ...,
         [-1.6425822 ,        -inf, -2.6312113 , ...,  0.27850407,
                 -inf,        -inf],
         [ 0.17775421,        -inf,        -inf, ...,        -inf,
                 -inf,  0.32357165],
         [ 0.722477  ,        -inf,        -inf, ...,  0.66113603,
          -3.7767663 ,  0.08715116]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [16]}

generate models:222

analyse output arrays in iter:227

pre layer res:
11:log
{'name': 'log', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [11], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [11], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [11], 'to': []}

generate models:223

analyse output arrays in iter:236

pre layer res:
1:relu
{'name': 'relu', 'output': array([[[[0.        , 0.        , 0.        , ..., 0.        ,
          2.706616  , 0.        ],
         [0.        , 0.5857849 , 0.        , ..., 1.6163826 ,
          0.7731002 , 1.3145288 ],
         [0.        , 0.        , 2.5513628 , ..., 2.7842605 ,
          0.17524278, 2.9515529 ],
         ...,
         [0.07800651, 0.        , 0.        , ..., 0.        ,
          0.59196395, 2.218246  ],
         [0.        , 0.        , 0.        , ..., 2.0068836 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.11461125, ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          2.706616  , 0.        ],
         [0.        , 0.5857849 , 0.        , ..., 1.6163826 ,
          0.7731002 , 1.3145288 ],
         [0.        , 0.        , 2.5513628 , ..., 2.7842605 ,
          0.17524278, 2.9515529 ],
         ...,
         [0.07800651, 0.        , 0.        , ..., 0.        ,
          0.59196395, 2.218246  ],
         [0.        , 0.        , 0.        , ..., 2.0068836 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.11461125, ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          2.706616  , 0.        ],
         [0.        , 0.5857849 , 0.        , ..., 1.6163826 ,
          0.7731002 , 1.3145288 ],
         [0.        , 0.        , 2.5513628 , ..., 2.7842605 ,
          0.17524278, 2.9515529 ],
         ...,
         [0.07800651, 0.        , 0.        , ..., 0.        ,
          0.59196395, 2.218246  ],
         [0.        , 0.        , 0.        , ..., 2.0068836 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.11461125, ..., 0.        ,
          0.        , 0.        ]],

        ...,

        [[0.        , 0.        , 0.        , ..., 0.        ,
          2.706616  , 0.        ],
         [0.        , 0.5857849 , 0.        , ..., 1.6163826 ,
          0.7731002 , 1.3145288 ],
         [0.        , 0.        , 2.5513628 , ..., 2.7842605 ,
          0.17524278, 2.9515529 ],
         ...,
         [0.07800651, 0.        , 0.        , ..., 0.        ,
          0.59196395, 2.218246  ],
         [0.        , 0.        , 0.        , ..., 2.0068836 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.11461125, ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          2.706616  , 0.        ],
         [0.        , 0.5857849 , 0.        , ..., 1.6163826 ,
          0.7731002 , 1.3145288 ],
         [0.        , 0.        , 2.5513628 , ..., 2.7842605 ,
          0.17524278, 2.9515529 ],
         ...,
         [0.07800651, 0.        , 0.        , ..., 0.        ,
          0.59196395, 2.218246  ],
         [0.        , 0.        , 0.        , ..., 2.0068836 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.11461125, ..., 0.        ,
          0.        , 0.        ]],

        [[0.        , 0.        , 0.        , ..., 0.        ,
          2.706616  , 0.        ],
         [0.        , 0.5857849 , 0.        , ..., 1.6163826 ,
          0.7731002 , 1.3145288 ],
         [0.        , 0.        , 2.5513628 , ..., 2.7842605 ,
          0.17524278, 2.9515529 ],
         ...,
         [0.07800651, 0.        , 0.        , ..., 0.        ,
          0.59196395, 2.218246  ],
         [0.        , 0.        , 0.        , ..., 2.0068836 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.11461125, ..., 0.        ,
          0.        , 0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [11, 13]}
tf node:
{'name': 'log', 'output': array([[[[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.5509632 ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.5509632 ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.5509632 ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.5509632 ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.5509632 ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.5509632 ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [29]}
ms node:
{'name': 'log', 'output': array([[[[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956972 ,        -inf],
         [       -inf, -0.5348041 ,        -inf, ...,  0.48018828,
          -0.25734884,  0.27347636],
         [       -inf,        -inf,  0.9366304 , ...,  1.0239851 ,
          -1.7415801 ,  1.0823314 ],
         ...,
         [-2.5509622 ,        -inf,        -inf, ...,        -inf,
          -0.524311  ,  0.79671735],
         [       -inf,        -inf,        -inf, ...,  0.69658166,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662102 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956972 ,        -inf],
         [       -inf, -0.5348041 ,        -inf, ...,  0.48018828,
          -0.25734884,  0.27347636],
         [       -inf,        -inf,  0.9366304 , ...,  1.0239851 ,
          -1.7415801 ,  1.0823314 ],
         ...,
         [-2.5509622 ,        -inf,        -inf, ...,        -inf,
          -0.524311  ,  0.79671735],
         [       -inf,        -inf,        -inf, ...,  0.69658166,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662102 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956972 ,        -inf],
         [       -inf, -0.5348041 ,        -inf, ...,  0.48018828,
          -0.25734884,  0.27347636],
         [       -inf,        -inf,  0.9366304 , ...,  1.0239851 ,
          -1.7415801 ,  1.0823314 ],
         ...,
         [-2.5509622 ,        -inf,        -inf, ...,        -inf,
          -0.524311  ,  0.79671735],
         [       -inf,        -inf,        -inf, ...,  0.69658166,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662102 , ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956972 ,        -inf],
         [       -inf, -0.5348041 ,        -inf, ...,  0.48018828,
          -0.25734884,  0.27347636],
         [       -inf,        -inf,  0.9366304 , ...,  1.0239851 ,
          -1.7415801 ,  1.0823314 ],
         ...,
         [-2.5509622 ,        -inf,        -inf, ...,        -inf,
          -0.524311  ,  0.79671735],
         [       -inf,        -inf,        -inf, ...,  0.69658166,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662102 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956972 ,        -inf],
         [       -inf, -0.5348041 ,        -inf, ...,  0.48018828,
          -0.25734884,  0.27347636],
         [       -inf,        -inf,  0.9366304 , ...,  1.0239851 ,
          -1.7415801 ,  1.0823314 ],
         ...,
         [-2.5509622 ,        -inf,        -inf, ...,        -inf,
          -0.524311  ,  0.79671735],
         [       -inf,        -inf,        -inf, ...,  0.69658166,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662102 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956972 ,        -inf],
         [       -inf, -0.5348041 ,        -inf, ...,  0.48018828,
          -0.25734884,  0.27347636],
         [       -inf,        -inf,  0.9366304 , ...,  1.0239851 ,
          -1.7415801 ,  1.0823314 ],
         ...,
         [-2.5509622 ,        -inf,        -inf, ...,        -inf,
          -0.524311  ,  0.79671735],
         [       -inf,        -inf,        -inf, ...,  0.69658166,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662102 , ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [1], 'to': [29]}
torch node:
{'name': 'log', 'output': array([[[[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.550963  ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.550963  ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.550963  ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.550963  ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.550963  ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
           0.9956991 ,        -inf],
         [       -inf, -0.5348026 ,        -inf, ...,  0.4801907 ,
          -0.25734663,  0.2734783 ],
         [       -inf,        -inf,  0.9366276 , ...,  1.0239823 ,
          -1.741583  ,  1.0823314 ],
         ...,
         [-2.550963  ,        -inf,        -inf, ...,        -inf,
          -0.5243095 ,  0.7967168 ],
         [       -inf,        -inf,        -inf, ...,  0.6965831 ,
                 -inf,        -inf],
         [       -inf,        -inf, -2.1662092 , ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [1], 'to': [29]}

pre layer res:
23:reshape
{'name': 'reshape', 'output': array([[[[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [287.3574   ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [127.37149  , 223.00496  ,   0.       , ...,   0.       ,
          236.94823  ,   0.       ],
         [  0.       ,   3.2628644,   0.       , ...,   0.       ,
            0.       , 267.18057  ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]],

        [[109.80665  ,   0.       ,   0.       , ..., 104.76762  ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ..., 247.8855   ,
            0.       ,   0.       ],
         [  0.       ,  87.37108  ,   0.       , ...,  42.87107  ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       , 289.33313  , ..., 102.710304 ,
            0.       , 173.86461  ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       , 188.4909   ,   0.       , ...,  93.44105  ,
          148.73232  , 210.51826  ]],

        [[  0.       ,   0.       ,  59.590317 , ...,   0.       ,
            0.       , 121.2372   ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
          141.58987  , 315.91214  ],
         [  0.       , 177.01074  ,  29.532867 , ...,   0.       ,
            6.526907 , 131.87062  ],
         ...,
         [  0.       ,   0.       ,  50.888245 , ...,   0.       ,
            0.       , 119.6704   ],
         [ 47.936016 ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       , 161.60313  , ...,   0.       ,
            0.       ,   0.       ]],

        ...,

        [[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]],

        [[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]],

        [[  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         ...,
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ],
         [  0.       ,   0.       ,   0.       , ...,   0.       ,
            0.       ,   0.       ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 112, 112]), 'from': [22], 'to': [20]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 3.5786432e+02,  1.9836426e-04,  2.3291386e+02, ...,
           4.8999146e+02,  1.2879163e+02,  2.3053485e+02],
         [ 5.7471478e+02,  6.1035156e-05,  5.6090164e+01, ...,
           6.6879272e+02,  1.4158994e+02,  3.1591214e+02],
         [ 6.1035156e-05,  3.5175293e+02,  2.9532928e+01, ...,
           8.5742188e+01,  1.3448770e+02,  1.3187057e+02],
         ...,
         [ 2.5474298e+02,  4.4600983e+02,  3.4022137e+02, ...,
           1.8122729e+02,  4.7389639e+02,  4.5065338e+02],
         [ 4.7936050e+01,  6.5258026e+00, -2.8562768e-05, ...,
           8.0891332e-05,  3.0180257e-05,  5.3436108e+02],
         [ 3.0517578e-05,  4.2147815e+02,  1.6160313e+02, ...,
           9.3441040e+01,  1.4873227e+02,  2.1051819e+02]],

        [[ 3.5786432e+02,  1.9836426e-04,  2.3291386e+02, ...,
           4.8999146e+02,  1.2879163e+02,  2.3053485e+02],
         [ 5.7471478e+02,  6.1035156e-05,  5.6090164e+01, ...,
           6.6879272e+02,  1.4158994e+02,  3.1591214e+02],
         [ 6.1035156e-05,  3.5175293e+02,  2.9532928e+01, ...,
           8.5742188e+01,  1.3448770e+02,  1.3187057e+02],
         ...,
         [ 2.5474298e+02,  4.4600983e+02,  3.4022137e+02, ...,
           1.8122729e+02,  4.7389639e+02,  4.5065338e+02],
         [ 4.7936050e+01,  6.5258026e+00, -2.8562768e-05, ...,
           8.0891332e-05,  3.0180257e-05,  5.3436108e+02],
         [ 3.0517578e-05,  4.2147815e+02,  1.6160313e+02, ...,
           9.3441040e+01,  1.4873227e+02,  2.1051819e+02]],

        [[ 3.5786432e+02,  1.9836426e-04,  2.3291386e+02, ...,
           4.8999146e+02,  1.2879163e+02,  2.3053485e+02],
         [ 5.7471478e+02,  6.1035156e-05,  5.6090164e+01, ...,
           6.6879272e+02,  1.4158994e+02,  3.1591214e+02],
         [ 6.1035156e-05,  3.5175293e+02,  2.9532928e+01, ...,
           8.5742188e+01,  1.3448770e+02,  1.3187057e+02],
         ...,
         [ 2.5474298e+02,  4.4600983e+02,  3.4022137e+02, ...,
           1.8122729e+02,  4.7389639e+02,  4.5065338e+02],
         [ 4.7936050e+01,  6.5258026e+00, -2.8562768e-05, ...,
           8.0891332e-05,  3.0180257e-05,  5.3436108e+02],
         [ 3.0517578e-05,  4.2147815e+02,  1.6160313e+02, ...,
           9.3441040e+01,  1.4873227e+02,  2.1051819e+02]],

        ...,

        [[ 3.5786432e+02,  1.9836426e-04,  2.3291386e+02, ...,
           4.8999146e+02,  1.2879163e+02,  2.3053485e+02],
         [ 5.7471478e+02,  6.1035156e-05,  5.6090164e+01, ...,
           6.6879272e+02,  1.4158994e+02,  3.1591214e+02],
         [ 6.1035156e-05,  3.5175293e+02,  2.9532928e+01, ...,
           8.5742188e+01,  1.3448770e+02,  1.3187057e+02],
         ...,
         [ 2.5474298e+02,  4.4600983e+02,  3.4022137e+02, ...,
           1.8122729e+02,  4.7389639e+02,  4.5065338e+02],
         [ 4.7936050e+01,  6.5258026e+00, -2.8562768e-05, ...,
           8.0891332e-05,  3.0180257e-05,  5.3436108e+02],
         [ 3.0517578e-05,  4.2147815e+02,  1.6160313e+02, ...,
           9.3441040e+01,  1.4873227e+02,  2.1051819e+02]],

        [[ 3.5786432e+02,  1.9836426e-04,  2.3291386e+02, ...,
           4.8999146e+02,  1.2879163e+02,  2.3053485e+02],
         [ 5.7471478e+02,  6.1035156e-05,  5.6090164e+01, ...,
           6.6879272e+02,  1.4158994e+02,  3.1591214e+02],
         [ 6.1035156e-05,  3.5175293e+02,  2.9532928e+01, ...,
           8.5742188e+01,  1.3448770e+02,  1.3187057e+02],
         ...,
         [ 2.5474298e+02,  4.4600983e+02,  3.4022137e+02, ...,
           1.8122729e+02,  4.7389639e+02,  4.5065338e+02],
         [ 4.7936050e+01,  6.5258026e+00, -2.8562768e-05, ...,
           8.0891332e-05,  3.0180257e-05,  5.3436108e+02],
         [ 3.0517578e-05,  4.2147815e+02,  1.6160313e+02, ...,
           9.3441040e+01,  1.4873227e+02,  2.1051819e+02]],

        [[ 3.5786432e+02,  1.9836426e-04,  2.3291386e+02, ...,
           4.8999146e+02,  1.2879163e+02,  2.3053485e+02],
         [ 5.7471478e+02,  6.1035156e-05,  5.6090164e+01, ...,
           6.6879272e+02,  1.4158994e+02,  3.1591214e+02],
         [ 6.1035156e-05,  3.5175293e+02,  2.9532928e+01, ...,
           8.5742188e+01,  1.3448770e+02,  1.3187057e+02],
         ...,
         [ 2.5474298e+02,  4.4600983e+02,  3.4022137e+02, ...,
           1.8122729e+02,  4.7389639e+02,  4.5065338e+02],
         [ 4.7936050e+01,  6.5258026e+00, -2.8562768e-05, ...,
           8.0891332e-05,  3.0180257e-05,  5.3436108e+02],
         [ 3.0517578e-05,  4.2147815e+02,  1.6160313e+02, ...,
           9.3441040e+01,  1.4873227e+02,  2.1051819e+02]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 112, 112]), 'from': [23], 'to': [24]}
ms node:
{'name': 'conv2d', 'output': array([[[[357.86456 ,   0.      , 232.91383 , ..., 489.99146 ,
          128.79152 , 230.53503 ],
         [574.7145  ,   0.      ,  56.09009 , ..., 668.79285 ,
          141.58981 , 315.91214 ],
         [  0.      , 351.75262 ,  29.532867, ...,  85.74169 ,
          134.48729 , 131.8705  ],
         ...,
         [254.74243 , 446.01028 , 340.221   , ..., 181.22708 ,
          473.89636 , 450.6534  ],
         [ 47.935955,   6.525543,   0.      , ...,   0.      ,
            0.      , 534.36084 ],
         [  0.      , 421.47787 , 161.60313 , ...,  93.44108 ,
          148.7321  , 210.51787 ]],

        [[357.86456 ,   0.      , 232.91383 , ..., 489.99146 ,
          128.79152 , 230.53503 ],
         [574.7145  ,   0.      ,  56.09009 , ..., 668.79285 ,
          141.58981 , 315.91214 ],
         [  0.      , 351.75262 ,  29.532867, ...,  85.74169 ,
          134.48729 , 131.8705  ],
         ...,
         [254.74243 , 446.01028 , 340.221   , ..., 181.22708 ,
          473.89636 , 450.6534  ],
         [ 47.935955,   6.525543,   0.      , ...,   0.      ,
            0.      , 534.36084 ],
         [  0.      , 421.47787 , 161.60313 , ...,  93.44108 ,
          148.7321  , 210.51787 ]],

        [[357.86456 ,   0.      , 232.91383 , ..., 489.99146 ,
          128.79152 , 230.53503 ],
         [574.7145  ,   0.      ,  56.09009 , ..., 668.79285 ,
          141.58981 , 315.91214 ],
         [  0.      , 351.75262 ,  29.532867, ...,  85.74169 ,
          134.48729 , 131.8705  ],
         ...,
         [254.74243 , 446.01028 , 340.221   , ..., 181.22708 ,
          473.89636 , 450.6534  ],
         [ 47.935955,   6.525543,   0.      , ...,   0.      ,
            0.      , 534.36084 ],
         [  0.      , 421.47787 , 161.60313 , ...,  93.44108 ,
          148.7321  , 210.51787 ]],

        ...,

        [[357.86456 ,   0.      , 232.91383 , ..., 489.99146 ,
          128.79152 , 230.53503 ],
         [574.7145  ,   0.      ,  56.09009 , ..., 668.79285 ,
          141.58981 , 315.91214 ],
         [  0.      , 351.75262 ,  29.532867, ...,  85.74169 ,
          134.48729 , 131.8705  ],
         ...,
         [254.74243 , 446.01028 , 340.221   , ..., 181.22708 ,
          473.89636 , 450.6534  ],
         [ 47.935955,   6.525543,   0.      , ...,   0.      ,
            0.      , 534.36084 ],
         [  0.      , 421.47787 , 161.60313 , ...,  93.44108 ,
          148.7321  , 210.51787 ]],

        [[357.86456 ,   0.      , 232.91383 , ..., 489.99146 ,
          128.79152 , 230.53503 ],
         [574.7145  ,   0.      ,  56.09009 , ..., 668.79285 ,
          141.58981 , 315.91214 ],
         [  0.      , 351.75262 ,  29.532867, ...,  85.74169 ,
          134.48729 , 131.8705  ],
         ...,
         [254.74243 , 446.01028 , 340.221   , ..., 181.22708 ,
          473.89636 , 450.65344 ],
         [ 47.935955,   6.525543,   0.      , ...,   0.      ,
            0.      , 534.36084 ],
         [  0.      , 421.47787 , 161.60313 , ...,  93.44108 ,
          148.7321  , 210.51787 ]],

        [[357.86456 ,   0.      , 232.91383 , ..., 489.99146 ,
          128.79152 , 230.53503 ],
         [574.7145  ,   0.      ,  56.09009 , ..., 668.79285 ,
          141.58981 , 315.91214 ],
         [  0.      , 351.75262 ,  29.532867, ...,  85.74169 ,
          134.48729 , 131.8705  ],
         ...,
         [254.74243 , 446.01028 , 340.221   , ..., 181.22708 ,
          473.89636 , 450.65344 ],
         [ 47.935955,   6.525543,   0.      , ...,   0.      ,
            0.      , 534.36084 ],
         [  0.      , 421.47787 , 161.60313 , ...,  93.44108 ,
          148.7321  , 210.51787 ]]]], dtype=float32), 'output_shape': (1, 128, 112, 112), 'from': [23], 'to': [24]}
torch node:
{'name': 'conv2d', 'output': array([[[[357.86438  ,   0.       , 232.9139   , ..., 489.99158  ,
          128.79163  , 230.53491  ],
         [574.7148   ,   0.       ,  56.09009  , ..., 668.79285  ,
          141.58987  , 315.91214  ],
         [  0.       , 351.75293  ,  29.532867 , ...,  85.74214  ,
          134.48772  , 131.87062  ],
         ...,
         [254.74298  , 446.00992  , 340.22137  , ..., 181.22736  ,
          473.89645  , 450.6535   ],
         [ 47.936016 ,   6.5257287,   0.       , ...,   0.       ,
            0.       , 534.36115  ],
         [  0.       , 421.47827  , 161.60313  , ...,  93.44105  ,
          148.73232  , 210.51826  ]],

        [[357.86438  ,   0.       , 232.9139   , ..., 489.99158  ,
          128.79163  , 230.53491  ],
         [574.7148   ,   0.       ,  56.09009  , ..., 668.79285  ,
          141.58987  , 315.91214  ],
         [  0.       , 351.75293  ,  29.532867 , ...,  85.74214  ,
          134.48772  , 131.87062  ],
         ...,
         [254.74298  , 446.00992  , 340.22137  , ..., 181.22736  ,
          473.89645  , 450.6535   ],
         [ 47.936016 ,   6.5257287,   0.       , ...,   0.       ,
            0.       , 534.36115  ],
         [  0.       , 421.47827  , 161.60313  , ...,  93.44105  ,
          148.73232  , 210.51826  ]],

        [[357.86438  ,   0.       , 232.9139   , ..., 489.99158  ,
          128.79163  , 230.53491  ],
         [574.7148   ,   0.       ,  56.09009  , ..., 668.79285  ,
          141.58987  , 315.91214  ],
         [  0.       , 351.75293  ,  29.532867 , ...,  85.74214  ,
          134.48772  , 131.87062  ],
         ...,
         [254.74298  , 446.00992  , 340.22137  , ..., 181.22736  ,
          473.89645  , 450.6535   ],
         [ 47.936016 ,   6.5257287,   0.       , ...,   0.       ,
            0.       , 534.36115  ],
         [  0.       , 421.47827  , 161.60313  , ...,  93.44105  ,
          148.73232  , 210.51826  ]],

        ...,

        [[357.86438  ,   0.       , 232.9139   , ..., 489.99158  ,
          128.79163  , 230.53491  ],
         [574.7148   ,   0.       ,  56.09009  , ..., 668.79285  ,
          141.58987  , 315.91214  ],
         [  0.       , 351.75293  ,  29.532867 , ...,  85.74214  ,
          134.48772  , 131.87062  ],
         ...,
         [254.74298  , 446.00992  , 340.22137  , ..., 181.22736  ,
          473.89645  , 450.6535   ],
         [ 47.936016 ,   6.5257287,   0.       , ...,   0.       ,
            0.       , 534.36115  ],
         [  0.       , 421.47827  , 161.60313  , ...,  93.44105  ,
          148.73232  , 210.51826  ]],

        [[357.86438  ,   0.       , 232.9139   , ..., 489.99158  ,
          128.79163  , 230.53491  ],
         [574.7148   ,   0.       ,  56.09009  , ..., 668.79285  ,
          141.58987  , 315.91214  ],
         [  0.       , 351.75293  ,  29.532867 , ...,  85.74214  ,
          134.48772  , 131.87062  ],
         ...,
         [254.74298  , 446.00992  , 340.22137  , ..., 181.22736  ,
          473.89645  , 450.6535   ],
         [ 47.936016 ,   6.5257287,   0.       , ...,   0.       ,
            0.       , 534.36115  ],
         [  0.       , 421.47827  , 161.60313  , ...,  93.44105  ,
          148.73232  , 210.51826  ]],

        [[357.86438  ,   0.       , 232.9139   , ..., 489.99158  ,
          128.79163  , 230.53491  ],
         [574.7148   ,   0.       ,  56.09009  , ..., 668.79285  ,
          141.58987  , 315.91214  ],
         [  0.       , 351.75293  ,  29.532867 , ...,  85.74214  ,
          134.48772  , 131.87062  ],
         ...,
         [254.74298  , 446.00992  , 340.22137  , ..., 181.22736  ,
          473.89645  , 450.6535   ],
         [ 47.936016 ,   6.5257287,   0.       , ...,   0.       ,
            0.       , 534.36115  ],
         [  0.       , 421.47827  , 161.60313  , ...,  93.44105  ,
          148.73232  , 210.51826  ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 112, 112]), 'from': [23], 'to': [24]}

pre layer res:
7:conv2d
{'name': 'conv2d', 'output': array([[[[2585919.8, 6411964. , 2902717.5, ...,  154740.8, 7079021.5,
          4985722.5],
         [3823432.8, 3441021.5, 3531744.2, ..., 3661383.2, 4042041.8,
          8235841. ],
         [2500917.8, 1633548. , 4982827.5, ..., 1313611.1, 5420948. ,
          5068697. ],
         ...,
         [4372904.5, 3190750. , 3608489.2, ..., 3497922. , 3803801.2,
          8038080.5],
         [2518099. , 1670257.2, 4418936.5, ..., 1394010.2, 4715498.5,
          4375713.5],
         [2741405. , 3926912.2, 3522910. , ..., 4477694. , 4588416.5,
          3477282. ]],

        [[2585919.8, 6411964. , 2902717.5, ...,  154740.8, 7079021.5,
          4985722.5],
         [3823432.8, 3441021.5, 3531744.2, ..., 3661383.2, 4042041.8,
          8235841. ],
         [2500917.8, 1633548. , 4982827.5, ..., 1313611.1, 5420948. ,
          5068697. ],
         ...,
         [4372904.5, 3190750. , 3608489.2, ..., 3497922. , 3803801.2,
          8038080.5],
         [2518099. , 1670257.2, 4418936.5, ..., 1394010.2, 4715498.5,
          4375713.5],
         [2741405. , 3926912.2, 3522910. , ..., 4477694. , 4588416.5,
          3477282. ]],

        [[2585919.8, 6411964. , 2902717.5, ...,  154740.8, 7079021.5,
          4985722.5],
         [3823432.8, 3441021.5, 3531744.2, ..., 3661383.2, 4042041.8,
          8235841. ],
         [2500917.8, 1633548. , 4982827.5, ..., 1313611.1, 5420948. ,
          5068697. ],
         ...,
         [4372904.5, 3190750. , 3608489.2, ..., 3497922. , 3803801.2,
          8038080.5],
         [2518099. , 1670257.2, 4418936.5, ..., 1394010.2, 4715498.5,
          4375713.5],
         [2741405. , 3926912.2, 3522910. , ..., 4477694. , 4588416.5,
          3477282. ]],

        ...,

        [[2585919.8, 6411964. , 2902717.5, ...,  154740.8, 7079021.5,
          4985722.5],
         [3823432.8, 3441021.5, 3531744.2, ..., 3661383.2, 4042041.8,
          8235841. ],
         [2500917.8, 1633548. , 4982827.5, ..., 1313611.1, 5420948. ,
          5068697. ],
         ...,
         [4372904.5, 3190750. , 3608489.2, ..., 3497922. , 3803801.2,
          8038080.5],
         [2518099. , 1670257.2, 4418936.5, ..., 1394010.2, 4715498.5,
          4375713.5],
         [2741405. , 3926912.2, 3522910. , ..., 4477694. , 4588416.5,
          3477282. ]],

        [[2585919.8, 6411964. , 2902717.5, ...,  154740.8, 7079021.5,
          4985722.5],
         [3823432.8, 3441021.5, 3531744.2, ..., 3661383.2, 4042041.8,
          8235841. ],
         [2500917.8, 1633548. , 4982827.5, ..., 1313611.1, 5420948. ,
          5068697. ],
         ...,
         [4372904.5, 3190750. , 3608489.2, ..., 3497922. , 3803801.2,
          8038080.5],
         [2518099. , 1670257.2, 4418936.5, ..., 1394010.2, 4715498.5,
          4375713.5],
         [2741405. , 3926912.2, 3522910. , ..., 4477694. , 4588416.5,
          3477282. ]],

        [[2585919.8, 6411964. , 2902717.5, ...,  154740.8, 7079021.5,
          4985722.5],
         [3823432.8, 3441021.5, 3531744.2, ..., 3661383.2, 4042041.8,
          8235841. ],
         [2500917.8, 1633548. , 4982827.5, ..., 1313611.1, 5420948. ,
          5068697. ],
         ...,
         [4372904.5, 3190750. , 3608489.2, ..., 3497922. , 3803801.2,
          8038080.5],
         [2518099. , 1670257.2, 4418936.5, ..., 1394010.2, 4715498.5,
          4375713.5],
         [2741405. , 3926912.2, 3522910. , ..., 4477694. , 4588416.5,
          3477282. ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [6], 'to': [28]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.8465141 ,  0.0974061 ,  0.52797544, ...,  0.07984104,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.87323034, -0.94061685, ...,  0.04527768,
           0.8901386 ,  0.34268925],
         [-0.88281935,  0.06919868, -0.69726866, ..., -0.2859571 ,
          -0.47930646,  0.4110272 ],
         ...,
         [-0.6699572 , -0.6628636 ,  0.81354076, ..., -0.88566965,
           0.1345325 ,  0.03426446],
         [ 0.82011306, -0.32348594, -0.85367525, ..., -0.720273  ,
           0.7917598 , -0.9128942 ],
         [ 0.55286723, -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.0974061 ,  0.52797544, ...,  0.07984104,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.87323034, -0.94061685, ...,  0.04527768,
           0.8901386 ,  0.34268925],
         [-0.88281935,  0.06919868, -0.69726866, ..., -0.2859571 ,
          -0.47930646,  0.4110272 ],
         ...,
         [-0.6699572 , -0.6628636 ,  0.81354076, ..., -0.88566965,
           0.1345325 ,  0.03426446],
         [ 0.82011306, -0.32348594, -0.85367525, ..., -0.720273  ,
           0.7917598 , -0.9128942 ],
         [ 0.55286723, -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.0974061 ,  0.52797544, ...,  0.07984104,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.87323034, -0.94061685, ...,  0.04527768,
           0.8901386 ,  0.34268925],
         [-0.88281935,  0.06919868, -0.69726866, ..., -0.2859571 ,
          -0.47930646,  0.4110272 ],
         ...,
         [-0.6699572 , -0.6628636 ,  0.81354076, ..., -0.88566965,
           0.1345325 ,  0.03426446],
         [ 0.82011306, -0.32348594, -0.85367525, ..., -0.720273  ,
           0.7917598 , -0.9128942 ],
         [ 0.55286723, -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        ...,

        [[ 0.8465141 ,  0.0974061 ,  0.52797544, ...,  0.07984104,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.87323034, -0.94061685, ...,  0.04527768,
           0.8901386 ,  0.34268925],
         [-0.88281935,  0.06919868, -0.69726866, ..., -0.2859571 ,
          -0.47930646,  0.4110272 ],
         ...,
         [-0.6699572 , -0.6628636 ,  0.81354076, ..., -0.88566965,
           0.1345325 ,  0.03426446],
         [ 0.82011306, -0.32348594, -0.85367525, ..., -0.720273  ,
           0.7917598 , -0.9128942 ],
         [ 0.55286723, -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.0974061 ,  0.52797544, ...,  0.07984104,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.87323034, -0.94061685, ...,  0.04527768,
           0.8901386 ,  0.34268925],
         [-0.88281935,  0.06919868, -0.69726866, ..., -0.2859571 ,
          -0.47930646,  0.4110272 ],
         ...,
         [-0.6699572 , -0.6628636 ,  0.81354076, ..., -0.88566965,
           0.1345325 ,  0.03426446],
         [ 0.82011306, -0.32348594, -0.85367525, ..., -0.720273  ,
           0.7917598 , -0.9128942 ],
         [ 0.55286723, -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.0974061 ,  0.52797544, ...,  0.07984104,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.87323034, -0.94061685, ...,  0.04527768,
           0.8901386 ,  0.34268925],
         [-0.88281935,  0.06919868, -0.69726866, ..., -0.2859571 ,
          -0.47930646,  0.4110272 ],
         ...,
         [-0.6699572 , -0.6628636 ,  0.81354076, ..., -0.88566965,
           0.1345325 ,  0.03426446],
         [ 0.82011306, -0.32348594, -0.85367525, ..., -0.720273  ,
           0.7917598 , -0.9128942 ],
         [ 0.55286723, -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [8]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.8465141 ,  0.51759   ,  0.7216722 , ...,  0.9383814 ,
          -0.08771853,  0.17746891],
         [ 0.17661925,  0.21958873, -0.66271824, ...,  0.04527768,
          -0.99086624,  0.75113386],
         [-0.9741544 ,  0.06919868, -0.69726866, ...,  0.94681215,
          -0.47930646, -0.5450254 ],
         ...,
         [-0.6699573 , -0.827498  ,  0.9513992 , ..., -0.88566965,
          -0.9970025 ,  0.03426446],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.26770514,
           0.7917598 , -0.4717494 ],
         [ 0.5249156 , -0.99963087,  0.18306094, ...,  0.6671691 ,
           0.49851513, -0.8759456 ]],

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ...,  0.9383814 ,
          -0.08771853,  0.17746891],
         [ 0.17661925,  0.21958873, -0.66271824, ...,  0.04527768,
          -0.99086624,  0.75113386],
         [-0.9741544 ,  0.06919868, -0.69726866, ...,  0.94681215,
          -0.47930646, -0.5450254 ],
         ...,
         [-0.6699573 , -0.827498  ,  0.9513992 , ..., -0.88566965,
          -0.9970025 ,  0.03426446],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.26770514,
           0.7917598 , -0.4717494 ],
         [ 0.5249156 , -0.99963087,  0.18306094, ...,  0.6671691 ,
           0.49851513, -0.8759456 ]],

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ...,  0.9383814 ,
          -0.08771853,  0.17746891],
         [ 0.17661925,  0.21958873, -0.66271824, ...,  0.04527768,
          -0.99086624,  0.75113386],
         [-0.9741544 ,  0.06919868, -0.69726866, ...,  0.94681215,
          -0.47930646, -0.5450254 ],
         ...,
         [-0.6699573 , -0.827498  ,  0.9513992 , ..., -0.88566965,
          -0.9970025 ,  0.03426446],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.26770514,
           0.7917598 , -0.4717494 ],
         [ 0.5249156 , -0.99963087,  0.18306094, ...,  0.6671691 ,
           0.49851513, -0.8759456 ]],

        ...,

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ...,  0.9383814 ,
          -0.08771853,  0.17746891],
         [ 0.17661925,  0.21958873, -0.66271824, ...,  0.04527768,
          -0.99086624,  0.75113386],
         [-0.9741544 ,  0.06919868, -0.69726866, ...,  0.94681215,
          -0.47930646, -0.5450254 ],
         ...,
         [-0.6699573 , -0.827498  ,  0.9513992 , ..., -0.88566965,
          -0.9970025 ,  0.03426446],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.26770514,
           0.7917598 , -0.4717494 ],
         [ 0.5249156 , -0.99963087,  0.18306094, ...,  0.6671691 ,
           0.49851513, -0.8759456 ]],

        [[ 0.6884885 ,  0.8900983 , -0.9919449 , ...,  0.9581352 ,
           0.33894753, -0.10457979],
         [-0.5135046 ,  0.37742537,  0.02555444, ...,  0.9707844 ,
           0.8643937 ,  0.9613364 ],
         [ 0.9928753 ,  0.9923888 ,  0.66569144, ...,  0.3879556 ,
           0.90924096,  0.6493777 ],
         ...,
         [-0.43583506, -0.16618127,  0.99537313, ...,  0.61474746,
           0.6864901 ,  0.03426446],
         [-0.999475  ,  0.408298  , -0.7844297 , ...,  0.22699356,
          -0.9557186 ,  0.00872613],
         [ 0.9642546 , -0.99963087, -0.3106729 , ...,  0.79023397,
           0.02188331, -0.9999942 ]],

        [[ 0.6884885 ,  0.8900983 , -0.9919449 , ...,  0.9581352 ,
           0.33894753, -0.10457979],
         [-0.5135046 ,  0.37742537,  0.02555444, ...,  0.9707844 ,
           0.8643937 ,  0.9613364 ],
         [ 0.9928753 ,  0.9923888 ,  0.66569144, ...,  0.3879556 ,
           0.90924096,  0.6493777 ],
         ...,
         [-0.43583506, -0.16618127,  0.99537313, ...,  0.61474746,
           0.6864901 ,  0.03426446],
         [-0.999475  ,  0.408298  , -0.7844297 , ...,  0.22699356,
          -0.9557186 ,  0.00872613],
         [ 0.9642546 , -0.99963087, -0.3106729 , ...,  0.79023397,
           0.02188331, -0.9999942 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [7], 'to': [8]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.8465141 ,  0.51759   ,  0.7216722 , ..., -0.51848125,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.9666456 , -0.94061685, ..., -0.20328012,
           0.74972695,  0.71162933],
         [-0.99993914,  0.19303465, -0.69726866, ..., -0.2859571 ,
           0.14098568, -0.5450254 ],
         ...,
         [-0.6699573 , -0.66286355,  0.64438236, ..., -0.88566965,
          -0.11480466, -0.44907412],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.72027296,
           0.7917598 , -0.4717494 ],
         [ 0.085696  , -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ..., -0.51848125,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.9666456 , -0.94061685, ..., -0.20328012,
           0.74972695,  0.71162933],
         [-0.99993914,  0.19303465, -0.69726866, ..., -0.2859571 ,
           0.14098568, -0.5450254 ],
         ...,
         [-0.6699573 , -0.66286355,  0.64438236, ..., -0.88566965,
          -0.11480466, -0.44907412],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.72027296,
           0.7917598 , -0.4717494 ],
         [ 0.085696  , -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ..., -0.51848125,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.9666456 , -0.94061685, ..., -0.20328012,
           0.74972695,  0.71162933],
         [-0.99993914,  0.19303465, -0.69726866, ..., -0.2859571 ,
           0.14098568, -0.5450254 ],
         ...,
         [-0.6699573 , -0.66286355,  0.64438236, ..., -0.88566965,
          -0.11480466, -0.44907412],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.72027296,
           0.7917598 , -0.4717494 ],
         [ 0.085696  , -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        ...,

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ..., -0.51848125,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.9666456 , -0.94061685, ..., -0.20328012,
           0.74972695,  0.71162933],
         [-0.99993914,  0.19303465, -0.69726866, ..., -0.2859571 ,
           0.14098568, -0.5450254 ],
         ...,
         [-0.6699573 , -0.66286355,  0.64438236, ..., -0.88566965,
          -0.11480466, -0.44907412],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.72027296,
           0.7917598 , -0.4717494 ],
         [ 0.085696  , -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ..., -0.51848125,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.9666456 , -0.94061685, ..., -0.20328012,
           0.74972695,  0.71162933],
         [-0.99993914,  0.19303465, -0.69726866, ..., -0.2859571 ,
           0.14098568, -0.5450254 ],
         ...,
         [-0.6699573 , -0.66286355,  0.64438236, ..., -0.88566965,
          -0.11480466, -0.44907412],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.72027296,
           0.7917598 , -0.4717494 ],
         [ 0.085696  , -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]],

        [[ 0.8465141 ,  0.51759   ,  0.7216722 , ..., -0.51848125,
          -0.08771853, -0.73222697],
         [ 0.17661925, -0.9666456 , -0.94061685, ..., -0.20328012,
           0.74972695,  0.71162933],
         [-0.99993914,  0.19303465, -0.69726866, ..., -0.2859571 ,
           0.14098568, -0.5450254 ],
         ...,
         [-0.6699573 , -0.66286355,  0.64438236, ..., -0.88566965,
          -0.11480466, -0.44907412],
         [ 0.82011306, -0.54753137, -0.85367525, ..., -0.72027296,
           0.7917598 , -0.4717494 ],
         [ 0.085696  , -0.99963087, -0.9676897 , ...,  0.6671691 ,
           0.49851513, -0.7340048 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [7], 'to': [8]}

generate models:232

analyse output arrays in iter:242

pre layer res:
12:add
{'name': 'add', 'output': array([[[[2.9475148e+06, 3.4384872e+06, 3.0894705e+06, ...,
          1.4289461e+06, 6.0217210e+06, 5.3371190e+06],
         [3.0136822e+06, 6.8046831e+05, 2.7137125e+06, ...,
          2.7651732e+06, 6.9609080e+06, 1.4386962e+06],
         [5.4397925e+06, 3.4477548e+06, 4.5727260e+06, ...,
          4.5363085e+06, 0.0000000e+00, 2.8062295e+06],
         ...,
         [2.6972490e+06, 6.7458319e+05, 8.0888262e+05, ...,
          2.3764102e+06, 1.8893915e+01, 5.1648438e+05],
         [3.2554960e+06, 3.4545444e+05, 4.6177965e+06, ...,
          2.8623732e+06, 2.0793949e+06, 3.7058260e+06],
         [2.8623632e+06, 4.1186550e+06, 4.5874990e+06, ...,
          0.0000000e+00, 7.3107181e+05, 5.4707795e+06]],

        [[2.9475150e+06, 3.4384855e+06, 3.0894705e+06, ...,
          1.4289441e+06, 6.0217210e+06, 5.3371190e+06],
         [3.0136845e+06, 6.8046756e+05, 2.7137125e+06, ...,
          2.7651720e+06, 6.9609075e+06, 1.4386962e+06],
         [5.4397925e+06, 3.4477540e+06, 4.5727240e+06, ...,
          4.5363075e+06, 0.0000000e+00, 2.8062295e+06],
         ...,
         [2.6972492e+06, 6.7458150e+05, 8.0888281e+05, ...,
          2.3764100e+06, 1.8240095e+01, 5.1648609e+05],
         [3.2554925e+06, 3.4545444e+05, 4.6177960e+06, ...,
          2.8623740e+06, 2.0793945e+06, 3.7058260e+06],
         [2.8623632e+06, 4.1186565e+06, 4.5874990e+06, ...,
          0.0000000e+00, 7.3107050e+05, 5.4707795e+06]],

        [[2.9475145e+06, 3.4384855e+06, 3.0894710e+06, ...,
          1.4289441e+06, 6.0217230e+06, 5.3371205e+06],
         [3.0136832e+06, 6.8046712e+05, 2.7137128e+06, ...,
          2.7651712e+06, 6.9609075e+06, 1.4386962e+06],
         [5.4397935e+06, 3.4477540e+06, 4.5727275e+06, ...,
          4.5363075e+06, 8.9090335e-01, 2.8062295e+06],
         ...,
         [2.6972470e+06, 6.7458150e+05, 8.0888262e+05, ...,
          2.3764100e+06, 2.0149439e+01, 5.1648381e+05],
         [3.2554925e+06, 3.4545444e+05, 4.6177960e+06, ...,
          2.8623732e+06, 2.0793955e+06, 3.7058260e+06],
         [2.8623635e+06, 4.1186542e+06, 4.5874990e+06, ...,
          0.0000000e+00, 7.3107050e+05, 5.4707805e+06]],

        ...,

        [[2.9475150e+06, 3.4384855e+06, 3.0894705e+06, ...,
          1.4289441e+06, 6.0217210e+06, 5.3371190e+06],
         [3.0136845e+06, 6.8046756e+05, 2.7137125e+06, ...,
          2.7651720e+06, 6.9609075e+06, 1.4386962e+06],
         [5.4397925e+06, 3.4477540e+06, 4.5727240e+06, ...,
          4.5363075e+06, 0.0000000e+00, 2.8062295e+06],
         ...,
         [2.6972492e+06, 6.7458150e+05, 8.0888281e+05, ...,
          2.3764100e+06, 1.8240095e+01, 5.1648609e+05],
         [3.2554925e+06, 3.4545444e+05, 4.6177960e+06, ...,
          2.8623740e+06, 2.0793945e+06, 3.7058260e+06],
         [2.8623632e+06, 4.1186565e+06, 4.5874990e+06, ...,
          0.0000000e+00, 7.3107050e+05, 5.4707795e+06]],

        [[2.9475145e+06, 3.4384855e+06, 3.0894710e+06, ...,
          1.4289441e+06, 6.0217230e+06, 5.3371205e+06],
         [3.0136832e+06, 6.8046712e+05, 2.7137128e+06, ...,
          2.7651712e+06, 6.9609075e+06, 1.4386962e+06],
         [5.4397935e+06, 3.4477540e+06, 4.5727275e+06, ...,
          4.5363075e+06, 8.9090335e-01, 2.8062295e+06],
         ...,
         [2.6972470e+06, 6.7458150e+05, 8.0888262e+05, ...,
          2.3764100e+06, 2.0149439e+01, 5.1648381e+05],
         [3.2554925e+06, 3.4545444e+05, 4.6177960e+06, ...,
          2.8623732e+06, 2.0793955e+06, 3.7058260e+06],
         [2.8623635e+06, 4.1186542e+06, 4.5874990e+06, ...,
          0.0000000e+00, 7.3107050e+05, 5.4707805e+06]],

        [[2.9475132e+06, 3.4384858e+06, 3.0894705e+06, ...,
          1.4289472e+06, 6.0217215e+06, 5.3371190e+06],
         [3.0136822e+06, 6.8046675e+05, 2.7137125e+06, ...,
          2.7651715e+06, 6.9609075e+06, 1.4386962e+06],
         [5.4397930e+06, 3.4477540e+06, 4.5727240e+06, ...,
          4.5363080e+06, 2.1925688e-02, 2.8062295e+06],
         ...,
         [2.6972485e+06, 6.7458150e+05, 8.0888350e+05, ...,
          2.3764100e+06, 1.7684052e+01, 5.1648728e+05],
         [3.2554935e+06, 3.4545784e+05, 4.6177960e+06, ...,
          2.8623732e+06, 2.0793945e+06, 3.7058265e+06],
         [2.8623632e+06, 4.1186542e+06, 4.5875010e+06, ...,
          1.5858390e+00, 7.3107050e+05, 5.4707795e+06]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [15, 26], 'to': [11]}
tf node:
{'name': 'sin', 'output': array([[[[-0.26265332,  0.9989181 , -0.01012574, ..., -0.84699136,
          -0.8545069 , -0.7258658 ],
         [ 0.44278187, -0.610164  , -0.9985724 , ..., -0.05499421,
          -0.50031966, -0.6836089 ],
         [-0.7469061 ,  0.97017395, -0.33101285, ..., -0.47532755,
           0.        ,  0.95784706],
         ...,
         [-0.06968477,  0.9999724 , -0.87064743, ...,  0.3791876 ,
           0.04434471,  0.2566597 ],
         [ 0.98155475, -0.9806734 ,  0.76716834, ..., -0.80264944,
          -0.16885695, -0.16349553],
         [ 0.99796224,  0.9468153 ,  0.77956194, ...,  0.        ,
          -0.93591964, -0.5877386 ]],

        [[-0.49320573, -0.22381267, -0.01012574, ..., -0.13091576,
          -0.8545069 , -0.7258658 ],
         [-0.97578716, -0.9864957 , -0.9985724 , ..., -0.9648894 ,
          -0.85417795, -0.6836089 ],
         [-0.7469061 ,  0.5446295 , -0.72028697, ..., -0.99715424,
           0.        ,  0.95784706],
         ...,
         [-0.31432095, -0.12381615, -0.9470811 , ...,  0.5963274 ,
          -0.5724254 ,  0.9181073 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ..., -0.1807255 ,
          -0.5181358 , -0.16349553],
         [ 0.99796224, -0.25399637,  0.77956194, ...,  0.        ,
           0.10146402, -0.5877386 ]],

        [[-0.01577037, -0.22381267, -0.48828715, ..., -0.13091576,
          -0.11672522,  0.6347676 ],
         [-0.5152516 , -0.96297413, -0.95431423, ..., -0.8850357 ,
          -0.85417795, -0.6836089 ],
         [ 0.15596381,  0.5446295 ,  0.9178476 , ..., -0.99715424,
           0.77764004,  0.95784706],
         ...,
         [ 0.93608606, -0.12381615, -0.87064743, ...,  0.5963274 ,
           0.96352684, -0.2983233 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ..., -0.80264944,
           0.43975884, -0.16349553],
         [ 0.95115197,  0.91211027,  0.77956194, ...,  0.        ,
           0.10146402, -0.99834937]],

        ...,

        [[-0.49320573, -0.22381267, -0.01012574, ..., -0.13091576,
          -0.8545069 , -0.7258658 ],
         [-0.97578716, -0.9864957 , -0.9985724 , ..., -0.9648894 ,
          -0.85417795, -0.6836089 ],
         [-0.7469061 ,  0.5446295 , -0.72028697, ..., -0.99715424,
           0.        ,  0.95784706],
         ...,
         [-0.31432095, -0.12381615, -0.9470811 , ...,  0.5963274 ,
          -0.5724254 ,  0.9181073 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ..., -0.1807255 ,
          -0.5181358 , -0.16349553],
         [ 0.99796224, -0.25399637,  0.77956194, ...,  0.        ,
           0.10146402, -0.5877386 ]],

        [[-0.01577037, -0.22381267, -0.48828715, ..., -0.13091576,
          -0.11672522,  0.6347676 ],
         [-0.5152516 , -0.96297413, -0.95431423, ..., -0.8850357 ,
          -0.85417795, -0.6836089 ],
         [ 0.15596381,  0.5446295 ,  0.9178476 , ..., -0.99715424,
           0.77764004,  0.95784706],
         ...,
         [ 0.93608606, -0.12381615, -0.87064743, ...,  0.5963274 ,
           0.96352684, -0.2983233 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ..., -0.80264944,
           0.43975884, -0.16349553],
         [ 0.95115197,  0.91211027,  0.77956194, ...,  0.        ,
           0.10146402, -0.99834937]],

        [[ 0.94389385,  0.02427297, -0.01012574, ...,  0.11444865,
          -0.9989332 , -0.7258658 ],
         [ 0.44278187, -0.79731   , -0.9985724 , ..., -0.97269434,
          -0.85417795, -0.6836089 ],
         [-0.33668756,  0.5446295 , -0.72028697, ..., -0.83894205,
           0.02192393,  0.95784706],
         ...,
         [ 0.41710594, -0.12381615, -0.9356427 , ...,  0.5963274 ,
          -0.91898733, -0.02421951],
         [-0.6719498 ,  0.8953501 ,  0.36572802, ..., -0.80264944,
          -0.5181358 , -0.61645526],
         [ 0.99796224,  0.91211027,  0.24510358, ...,  0.9998869 ,
           0.10146402, -0.5877386 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [12], 'to': [9]}
ms node:
{'name': 'sin', 'output': array([[[[-0.2626533 ,  0.9989181 , -0.01012574, ..., -0.84699136,
          -0.9989332 , -0.9709813 ],
         [ 0.44278187, -0.610164  , -0.9985724 , ..., -0.05499421,
          -0.50031966, -0.68360883],
         [-0.7469061 ,  0.97017395, -0.33101282, ..., -0.47532755,
           0.        ,  0.95784706],
         ...,
         [-0.06968477,  0.9999724 , -0.87064743, ...,  0.3791876 ,
           0.04434471,  0.2566597 ],
         [ 0.98155475, -0.9806734 ,  0.76716834, ...,  0.06822293,
          -0.16885695, -0.61645526],
         [ 0.99796224,  0.9468153 ,  0.77956194, ...,  0.        ,
          -0.93591964, -0.5877385 ]],

        [[-0.49320573, -0.22381268, -0.01012574, ..., -0.13091578,
          -0.9989332 , -0.9709813 ],
         [-0.97578716, -0.9864957 , -0.9985724 , ..., -0.9648894 ,
          -0.85417795, -0.68360883],
         [-0.7469061 ,  0.5446295 , -0.72028697, ..., -0.99715424,
           0.        ,  0.95784706],
         ...,
         [-0.31432098, -0.12381616, -0.9470811 , ...,  0.59632736,
          -0.5724254 ,  0.9181073 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ...,  0.72996855,
          -0.5181357 , -0.61645526],
         [ 0.99796224, -0.25399637,  0.77956194, ...,  0.        ,
           0.10146401, -0.5877385 ]],

        [[-0.01577037, -0.22381268, -0.48828712, ..., -0.13091578,
           0.37371227, -0.3072408 ],
         [-0.5152515 , -0.96297413, -0.95431423, ..., -0.8850357 ,
          -0.85417795, -0.68360883],
         [ 0.15596381,  0.5446295 ,  0.9178475 , ..., -0.99715424,
           0.77764   ,  0.95784706],
         ...,
         [ 0.93608606, -0.12381616, -0.87064743, ...,  0.59632736,
           0.96352684, -0.2983233 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ...,  0.06822293,
           0.43975884, -0.61645526],
         [ 0.95115197,  0.9121102 ,  0.77956194, ...,  0.        ,
           0.10146401, -0.99834937]],

        ...,

        [[-0.49320573, -0.22381268, -0.01012574, ..., -0.13091578,
          -0.9989332 , -0.9709813 ],
         [-0.97578716, -0.9864957 , -0.9985724 , ..., -0.9648894 ,
          -0.85417795, -0.68360883],
         [-0.7469061 ,  0.5446295 , -0.72028697, ..., -0.99715424,
           0.        ,  0.95784706],
         ...,
         [-0.31432098, -0.12381616, -0.9470811 , ...,  0.59632736,
          -0.5724254 ,  0.9181073 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ...,  0.72996855,
          -0.5181357 , -0.61645526],
         [ 0.99796224, -0.25399637,  0.77956194, ...,  0.        ,
           0.10146401, -0.5877385 ]],

        [[-0.01577037, -0.22381268, -0.48828712, ..., -0.13091578,
           0.37371227, -0.3072408 ],
         [-0.5152515 , -0.96297413, -0.95431423, ..., -0.8850357 ,
          -0.85417795, -0.68360883],
         [ 0.15596381,  0.5446295 ,  0.9178475 , ..., -0.99715424,
           0.77764   ,  0.95784706],
         ...,
         [ 0.93608606, -0.12381616, -0.87064743, ...,  0.59632736,
           0.96352684, -0.2983233 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ...,  0.06822293,
           0.43975884, -0.61645526],
         [ 0.95115197,  0.9121102 ,  0.77956194, ...,  0.        ,
           0.10146401, -0.99834937]],

        [[ 0.94389385,  0.02427297, -0.01012574, ...,  0.11444865,
          -0.8987858 , -0.9709813 ],
         [ 0.44278187, -0.79730994, -0.9985724 , ..., -0.97269434,
          -0.85417795, -0.68360883],
         [-0.33668756,  0.5446295 , -0.72028697, ..., -0.83894205,
           0.02192393,  0.95784706],
         ...,
         [ 0.41710594, -0.12381616, -0.9356427 , ...,  0.59632736,
          -0.91898733, -0.02421951],
         [-0.67194974,  0.8953501 ,  0.36572802, ...,  0.06822293,
          -0.5181357 , -0.9184852 ],
         [ 0.99796224,  0.9121102 ,  0.24510358, ...,  0.9998869 ,
           0.10146401, -0.5877385 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [12], 'to': [9]}
torch node:
{'name': 'sin', 'output': array([[[[-0.2626533 ,  0.9989181 , -0.01012574, ..., -0.84699136,
          -0.85450685, -0.9709813 ],
         [ 0.44278187, -0.610164  , -0.9985724 , ..., -0.05499421,
          -0.50031966, -0.68360883],
         [-0.7469061 ,  0.97017395, -0.33101282, ..., -0.47532755,
           0.        ,  0.95784706],
         ...,
         [-0.06968477,  0.9999724 , -0.87064743, ...,  0.3791876 ,
           0.04434471,  0.2566597 ],
         [ 0.98155475, -0.9806734 ,  0.76716834, ..., -0.6301327 ,
          -0.16885695, -0.16349553],
         [ 0.9979623 ,  0.9468153 ,  0.77956194, ...,  0.        ,
          -0.93591964, -0.5877385 ]],

        [[-0.49320573, -0.22381268, -0.01012574, ..., -0.13091578,
          -0.85450685, -0.9709813 ],
         [-0.97578716, -0.9864957 , -0.9985724 , ..., -0.9648894 ,
          -0.85417795, -0.68360883],
         [-0.7469061 ,  0.5446295 , -0.72028697, ..., -0.99715424,
           0.        ,  0.95784706],
         ...,
         [-0.31432098, -0.12381616, -0.9470811 , ...,  0.59632736,
          -0.5724254 ,  0.9181073 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ...,  0.06822293,
          -0.5181357 , -0.16349553],
         [ 0.9979623 , -0.25399637,  0.77956194, ...,  0.        ,
           0.10146401, -0.5877385 ]],

        [[-0.01577037, -0.22381268, -0.48828712, ..., -0.13091578,
          -0.11672522, -0.3072408 ],
         [-0.5152515 , -0.96297413, -0.95431423, ..., -0.8850357 ,
          -0.85417795, -0.68360883],
         [ 0.15596381,  0.5446295 ,  0.9178475 , ..., -0.99715424,
           0.77764   ,  0.95784706],
         ...,
         [ 0.93608606, -0.12381616, -0.87064743, ...,  0.59632736,
           0.96352684, -0.2983233 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ..., -0.6301327 ,
           0.43975884, -0.16349553],
         [ 0.95115197,  0.9121102 ,  0.77956194, ...,  0.        ,
           0.10146401, -0.99834937]],

        ...,

        [[-0.49320573, -0.22381268, -0.01012574, ..., -0.13091578,
          -0.85450685, -0.9709813 ],
         [-0.97578716, -0.9864957 , -0.9985724 , ..., -0.9648894 ,
          -0.85417795, -0.68360883],
         [-0.7469061 ,  0.5446295 , -0.72028697, ..., -0.99715424,
           0.        ,  0.95784706],
         ...,
         [-0.31432098, -0.12381616, -0.9470811 , ...,  0.59632736,
          -0.5724254 ,  0.9181073 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ...,  0.06822293,
          -0.5181357 , -0.16349553],
         [ 0.9979623 , -0.25399637,  0.77956194, ...,  0.        ,
           0.10146401, -0.5877385 ]],

        [[-0.01577037, -0.22381268, -0.48828712, ..., -0.13091578,
          -0.11672522, -0.3072408 ],
         [-0.5152515 , -0.96297413, -0.95431423, ..., -0.8850357 ,
          -0.85417795, -0.68360883],
         [ 0.15596381,  0.5446295 ,  0.9178475 , ..., -0.99715424,
           0.77764   ,  0.95784706],
         ...,
         [ 0.93608606, -0.12381616, -0.87064743, ...,  0.59632736,
           0.96352684, -0.2983233 ],
         [-0.98624665, -0.9806734 ,  0.36572802, ..., -0.6301327 ,
           0.43975884, -0.16349553],
         [ 0.95115197,  0.9121102 ,  0.77956194, ...,  0.        ,
           0.10146401, -0.99834937]],

        [[ 0.94389385,  0.02427297, -0.01012574, ...,  0.11444865,
          -0.9989332 , -0.9709813 ],
         [ 0.44278187, -0.79730994, -0.9985724 , ..., -0.97269434,
          -0.85417795, -0.68360883],
         [-0.33668756,  0.5446295 , -0.72028697, ..., -0.83894205,
           0.02192393,  0.95784706],
         ...,
         [ 0.41710594, -0.12381616, -0.9356427 , ...,  0.59632736,
          -0.91898733, -0.02421951],
         [-0.67194974,  0.8953501 ,  0.36572802, ..., -0.6301327 ,
          -0.5181357 , -0.61645526],
         [ 0.9979623 ,  0.9121102 ,  0.24510358, ...,  0.9998869 ,
           0.10146401, -0.5877385 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [12], 'to': [9]}

generate models:238

analyse output arrays in iter:247

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:242

analyse output arrays in iter:254

pre layer res:
20:add
{'name': 'add', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [11, 23], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [20], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [20], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [20], 'to': []}

generate models:249

analyse output arrays in iter:257

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         ...,
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.]],

        [[1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         ...,
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.]],

        [[1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         ...,
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.]],

        ...,

        [[1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         ...,
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.]],

        [[1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         ...,
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.]],

        [[1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         ...,
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.],
         [1., 1., 1., ..., 1., 1., 1.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [13], 'to': [14]}
tf node:
{'name': 'log', 'output': array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        ...,

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [10]}
ms node:
{'name': 'log', 'output': array([[[[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        ...,

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]]]],
      dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [9], 'to': [10]}
torch node:
{'name': 'log', 'output': array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        ...,

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [9], 'to': [10]}

generate models:252

analyse output arrays in iter:259

pre layer res:
11:add
{'name': 'add', 'output': array([[[[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [3.0210066e+36,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          5.0850704e+37,           inf,           inf],
         [3.0540372e+23,           inf, 4.5489165e+30, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [3.0210066e+36,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          5.0850704e+37,           inf,           inf],
         [3.0540372e+23,           inf, 4.5489165e+30, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [3.0210066e+36,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          5.0850704e+37,           inf,           inf],
         [3.0540372e+23,           inf, 4.5489165e+30, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        ...,

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [3.0210066e+36,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          5.0850704e+37,           inf,           inf],
         [3.0540372e+23,           inf, 4.5489165e+30, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [3.0210066e+36,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          5.0850704e+37,           inf,           inf],
         [3.0540372e+23,           inf, 4.5489165e+30, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [3.0210066e+36,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          5.0850704e+37,           inf,           inf],
         [3.0540372e+23,           inf, 4.5489165e+30, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9, 14], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [11], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [11], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [11], 'to': []}

generate models:254

analyse output arrays in iter:260

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[-0.27764788, -0.24187636, -2.8769975 , ..., -0.4589873 ,
          -1.5781155 , -2.294364  ],
         [-2.7052023 , -0.8152654 ,  2.0639064 , ...,  1.4049765 ,
          -1.6323619 , -0.8969634 ],
         [ 0.70827734, -0.60573703,  1.1769942 , ..., -0.47429276,
          -0.5595254 ,  1.199543  ],
         ...,
         [ 0.20451331, -0.6140198 ,  1.113398  , ...,  0.5390509 ,
          -2.1697211 ,  0.57868737],
         [-0.42207393, -1.9791634 ,  1.092949  , ..., -0.6267115 ,
           1.4141893 , -1.6618109 ],
         [-0.00766349, -3.05293   ,  1.0428661 , ...,  1.9932879 ,
           0.14868557, -0.18261684]],

        [[-0.27764788, -0.24187636, -2.8769975 , ..., -0.4589873 ,
          -1.5781155 , -2.294364  ],
         [-2.7052023 , -0.8152654 ,  2.0639064 , ...,  1.4049765 ,
          -1.6323619 , -0.8969634 ],
         [ 0.70827734, -0.60573703,  1.1769942 , ..., -0.47429276,
          -0.5595254 ,  1.199543  ],
         ...,
         [ 0.20451331, -0.6140198 ,  1.113398  , ...,  0.5390509 ,
          -2.1697211 ,  0.57868737],
         [-0.42207393, -1.9791634 ,  1.092949  , ..., -0.6267115 ,
           1.4141893 , -1.6618109 ],
         [-0.00766349, -3.05293   ,  1.0428661 , ...,  1.9932879 ,
           0.14868557, -0.18261684]],

        [[-0.27764788, -0.24187636, -2.8769975 , ..., -0.4589873 ,
          -1.5781155 , -2.294364  ],
         [-2.7052023 , -0.8152654 ,  2.0639064 , ...,  1.4049765 ,
          -1.6323619 , -0.8969634 ],
         [ 0.70827734, -0.60573703,  1.1769942 , ..., -0.47429276,
          -0.5595254 ,  1.199543  ],
         ...,
         [ 0.20451331, -0.6140198 ,  1.113398  , ...,  0.5390509 ,
          -2.1697211 ,  0.57868737],
         [-0.42207393, -1.9791634 ,  1.092949  , ..., -0.6267115 ,
           1.4141893 , -1.6618109 ],
         [-0.00766349, -3.05293   ,  1.0428661 , ...,  1.9932879 ,
           0.14868557, -0.18261684]],

        ...,

        [[-0.27764788, -0.24187636, -2.8769975 , ..., -0.4589873 ,
          -1.5781155 , -2.294364  ],
         [-2.7052023 , -0.8152654 ,  2.0639064 , ...,  1.4049765 ,
          -1.6323619 , -0.8969634 ],
         [ 0.70827734, -0.60573703,  1.1769942 , ..., -0.47429276,
          -0.5595254 ,  1.199543  ],
         ...,
         [ 0.20451331, -0.6140198 ,  1.113398  , ...,  0.5390509 ,
          -2.1697211 ,  0.57868737],
         [-0.42207393, -1.9791634 ,  1.092949  , ..., -0.6267115 ,
           1.4141893 , -1.6618109 ],
         [-0.00766349, -3.05293   ,  1.0428661 , ...,  1.9932879 ,
           0.14868557, -0.18261684]],

        [[-0.27764788, -0.24187636, -2.8769975 , ..., -0.4589873 ,
          -1.5781155 , -2.294364  ],
         [-2.7052023 , -0.8152654 ,  2.0639064 , ...,  1.4049765 ,
          -1.6323619 , -0.8969634 ],
         [ 0.70827734, -0.60573703,  1.1769942 , ..., -0.47429276,
          -0.5595254 ,  1.199543  ],
         ...,
         [ 0.20451331, -0.6140198 ,  1.113398  , ...,  0.5390509 ,
          -2.1697211 ,  0.57868737],
         [-0.42207393, -1.9791634 ,  1.092949  , ..., -0.6267115 ,
           1.4141893 , -1.6618109 ],
         [-0.00766349, -3.05293   ,  1.0428661 , ...,  1.9932879 ,
           0.14868557, -0.18261684]],

        [[-0.27764788, -0.24187636, -2.8769975 , ..., -0.4589873 ,
          -1.5781155 , -2.294364  ],
         [-2.7052023 , -0.8152654 ,  2.0639064 , ...,  1.4049765 ,
          -1.6323619 , -0.8969634 ],
         [ 0.70827734, -0.60573703,  1.1769942 , ..., -0.47429276,
          -0.5595254 ,  1.199543  ],
         ...,
         [ 0.20451331, -0.6140198 ,  1.113398  , ...,  0.5390509 ,
          -2.1697211 ,  0.57868737],
         [-0.42207393, -1.9791634 ,  1.092949  , ..., -0.6267115 ,
           1.4141893 , -1.6618109 ],
         [-0.00766349, -3.05293   ,  1.0428661 , ...,  1.9932879 ,
           0.14868557, -0.18261684]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [], 'to': [12]}
tf node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.72460395, ...,  0.34002343,
                  nan,         nan],
         [-0.34491667,         nan,  0.16296242, ...,         nan,
                  nan,  0.18193917],
         ...,
         [-1.5871246 ,         nan,  0.10741714, ..., -0.61794823,
                  nan, -0.5469944 ],
         [        nan,         nan,  0.08887667, ...,         nan,
           0.34655932,         nan],
         [        nan,         nan,  0.04197621, ...,  0.68978405,
          -1.9059229 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.72460395, ...,  0.34002343,
                  nan,         nan],
         [-0.34491667,         nan,  0.16296242, ...,         nan,
                  nan,  0.18193917],
         ...,
         [-1.5871246 ,         nan,  0.10741714, ..., -0.61794823,
                  nan, -0.5469944 ],
         [        nan,         nan,  0.08887667, ...,         nan,
           0.34655932,         nan],
         [        nan,         nan,  0.04197621, ...,  0.68978405,
          -1.9059229 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.72460395, ...,  0.34002343,
                  nan,         nan],
         [-0.34491667,         nan,  0.16296242, ...,         nan,
                  nan,  0.18193917],
         ...,
         [-1.5871246 ,         nan,  0.10741714, ..., -0.61794823,
                  nan, -0.5469944 ],
         [        nan,         nan,  0.08887667, ...,         nan,
           0.34655932,         nan],
         [        nan,         nan,  0.04197621, ...,  0.68978405,
          -1.9059229 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.72460395, ...,  0.34002343,
                  nan,         nan],
         [-0.34491667,         nan,  0.16296242, ...,         nan,
                  nan,  0.18193917],
         ...,
         [-1.5871246 ,         nan,  0.10741714, ..., -0.61794823,
                  nan, -0.5469944 ],
         [        nan,         nan,  0.08887667, ...,         nan,
           0.34655932,         nan],
         [        nan,         nan,  0.04197621, ...,  0.68978405,
          -1.9059229 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.72460395, ...,  0.34002343,
                  nan,         nan],
         [-0.34491667,         nan,  0.16296242, ...,         nan,
                  nan,  0.18193917],
         ...,
         [-1.5871246 ,         nan,  0.10741714, ..., -0.61794823,
                  nan, -0.5469944 ],
         [        nan,         nan,  0.08887667, ...,         nan,
           0.34655932,         nan],
         [        nan,         nan,  0.04197621, ...,  0.68978405,
          -1.9059229 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.72460395, ...,  0.34002343,
                  nan,         nan],
         [-0.34491667,         nan,  0.16296242, ...,         nan,
                  nan,  0.18193917],
         ...,
         [-1.5871246 ,         nan,  0.10741714, ..., -0.61794823,
                  nan, -0.5469944 ],
         [        nan,         nan,  0.08887667, ...,         nan,
           0.34655932,         nan],
         [        nan,         nan,  0.04197621, ...,  0.68978405,
          -1.9059229 ,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [0], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,  0.7246005 , ...,  0.34002057,
                  nan,         nan],
         [-0.34491953,         nan,  0.16296391, ...,         nan,
                  nan,  0.18194064],
         ...,
         [-1.5871222 ,         nan,  0.10741656, ..., -0.6179453 ,
                  nan, -0.5469929 ],
         [        nan,         nan,  0.08887958, ...,         nan,
           0.34655645,         nan],
         [        nan,         nan,  0.0419728 , ...,  0.6897855 ,
          -1.9059215 ,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [0], 'to': [1]}

generate models:255

analyse output arrays in iter:261

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:256

analyse output arrays in iter:262

pre layer res:
12:add
{'name': 'add', 'output': array([[[[1629447.2 , 1721235.8 , 1988809.2 , ...,  838467.8 ,
           838322.7 , 1892897.9 ],
         [1099295.5 ,  153729.72, 1055649.4 , ..., 1440343.8 ,
           918046.75,  868839.25],
         [ 303494.97, 1773948.2 ,  912688.8 , ..., 1071998.2 ,
           935929.5 ,  478219.1 ],
         ...,
         [1724584.8 ,  814360.94, 1405158.8 , ...,  439555.44,
           658690.2 , 1857652.9 ],
         [ 797386.7 , 1060353.8 ,  683224.25, ..., 1788686.5 ,
          1165611.9 , 1520334.  ],
         [ 950506.44,  877645.8 ,  673868.7 , ..., 1279019.  ,
           953033.7 , 1496217.  ]],

        [[1629447.2 , 1721235.8 , 1988809.2 , ...,  838467.8 ,
           838322.7 , 1892897.9 ],
         [1099295.5 ,  153729.72, 1055649.4 , ..., 1440343.8 ,
           918046.75,  868839.25],
         [ 303494.97, 1773948.2 ,  912688.8 , ..., 1071998.2 ,
           935929.5 ,  478219.1 ],
         ...,
         [1724584.8 ,  814360.94, 1405158.8 , ...,  439555.44,
           658690.2 , 1857652.9 ],
         [ 797386.7 , 1060353.8 ,  683224.25, ..., 1788686.5 ,
          1165611.9 , 1520334.  ],
         [ 950506.44,  877645.8 ,  673868.7 , ..., 1279019.  ,
           953033.7 , 1496217.  ]],

        [[1629447.2 , 1721235.8 , 1988809.2 , ...,  838467.8 ,
           838322.7 , 1892897.9 ],
         [1099295.5 ,  153729.72, 1055649.4 , ..., 1440343.8 ,
           918046.75,  868839.25],
         [ 303494.97, 1773948.2 ,  912688.8 , ..., 1071998.2 ,
           935929.5 ,  478219.1 ],
         ...,
         [1724584.8 ,  814360.94, 1405158.8 , ...,  439555.44,
           658690.2 , 1857652.9 ],
         [ 797386.7 , 1060353.8 ,  683224.25, ..., 1788686.5 ,
          1165611.9 , 1520334.  ],
         [ 950506.44,  877645.8 ,  673868.7 , ..., 1279019.  ,
           953033.7 , 1496217.  ]],

        ...,

        [[1629447.2 , 1721235.8 , 1988809.2 , ...,  838467.8 ,
           838322.7 , 1892897.9 ],
         [1099295.5 ,  153729.72, 1055649.4 , ..., 1440343.8 ,
           918046.75,  868839.25],
         [ 303494.97, 1773948.2 ,  912688.8 , ..., 1071998.2 ,
           935929.5 ,  478219.1 ],
         ...,
         [1724584.8 ,  814360.94, 1405158.8 , ...,  439555.44,
           658690.2 , 1857652.9 ],
         [ 797386.7 , 1060353.8 ,  683224.25, ..., 1788686.5 ,
          1165611.9 , 1520334.  ],
         [ 950506.44,  877645.8 ,  673868.7 , ..., 1279019.  ,
           953033.7 , 1496217.  ]],

        [[1629447.2 , 1721235.8 , 1988809.2 , ...,  838467.8 ,
           838322.7 , 1892897.9 ],
         [1099295.5 ,  153729.72, 1055649.4 , ..., 1440343.8 ,
           918046.75,  868839.25],
         [ 303494.97, 1773948.2 ,  912688.8 , ..., 1071998.2 ,
           935929.5 ,  478219.1 ],
         ...,
         [1724584.8 ,  814360.94, 1405158.8 , ...,  439555.44,
           658690.2 , 1857652.9 ],
         [ 797386.7 , 1060353.8 ,  683224.25, ..., 1788686.5 ,
          1165611.9 , 1520334.  ],
         [ 950506.44,  877645.8 ,  673868.7 , ..., 1279019.  ,
           953033.7 , 1496217.  ]],

        [[1629447.2 , 1721235.8 , 1988809.2 , ...,  838467.8 ,
           838322.7 , 1892897.9 ],
         [1099295.5 ,  153729.72, 1055649.4 , ..., 1440343.8 ,
           918046.75,  868839.25],
         [ 303494.97, 1773948.2 ,  912688.8 , ..., 1071998.2 ,
           935929.5 ,  478219.1 ],
         ...,
         [1724584.8 ,  814360.94, 1405158.8 , ...,  439555.44,
           658690.2 , 1857652.9 ],
         [ 797386.7 , 1060353.8 ,  683224.25, ..., 1788686.5 ,
          1165611.9 , 1520334.  ],
         [ 950506.44,  877645.8 ,  673868.7 , ..., 1279019.  ,
           953033.7 , 1496217.  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7, 5], 'to': [13]}
tf node:
{'name': 'sin', 'output': array([[[[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.33029667],
         [ 0.9232925 , -0.82835275, -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.4181694 , -0.24326158, ...,  0.47822016,
          -0.95239353, -0.7608348 ],
         [ 0.20507121, -0.2531817 , -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964908,  0.871764  ]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.33029667],
         [ 0.9232925 , -0.82835275, -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.4181694 , -0.24326158, ...,  0.47822016,
          -0.95239353, -0.7608348 ],
         [ 0.20507121, -0.2531817 , -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964908,  0.871764  ]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.33029667],
         [ 0.9232925 , -0.82835275, -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.4181694 , -0.24326158, ...,  0.47822016,
          -0.95239353, -0.7608348 ],
         [ 0.20507121, -0.2531817 , -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964908,  0.871764  ]],

        ...,

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.33029667],
         [ 0.9232925 , -0.82835275, -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.4181694 , -0.24326158, ...,  0.47822016,
          -0.95239353, -0.7608348 ],
         [ 0.20507121, -0.2531817 , -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964908,  0.871764  ]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.33029667],
         [ 0.9232925 , -0.82835275, -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.4181694 , -0.24326158, ...,  0.47822016,
          -0.95239353, -0.7608348 ],
         [ 0.20507121, -0.2531817 , -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964908,  0.871764  ]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.33029667],
         [ 0.9232925 , -0.82835275, -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.4181694 , -0.24326158, ...,  0.47822016,
          -0.95239353, -0.7608348 ],
         [ 0.20507121, -0.2531817 , -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964908,  0.871764  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [12], 'to': [8]}
ms node:
{'name': 'sin', 'output': array([[[[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        ...,

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.3939776 , -0.7518099 , -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.65305984],
         [ 0.33351204, -0.8283527 ,  0.6595126 , ...,  0.06680479,
          -0.44314384,  0.43336493],
         [-0.9169827 ,  0.63859266, -0.923481  , ..., -0.9035567 ,
           0.45334372, -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.85256076, ...,  0.45054618,
          -0.95239353,  0.89030105],
         [-0.8938965 ,  0.9988369 , -0.1042853 , ..., -0.9168281 ,
          -0.6294854 , -0.63699436],
         [ 0.4623117 , -0.49260226,  0.5709006 , ...,  0.9433214 ,
          -0.9992358 , -0.16642074]],

        [[-0.3939776 , -0.7518099 , -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.65305984],
         [ 0.33351204, -0.8283527 ,  0.6595126 , ...,  0.06680479,
          -0.44314384,  0.43336493],
         [-0.9169827 ,  0.63859266, -0.923481  , ..., -0.9035567 ,
           0.45334372, -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.85256076, ...,  0.45054618,
          -0.95239353,  0.89030105],
         [-0.8938965 ,  0.9988369 , -0.1042853 , ..., -0.9168281 ,
          -0.6294854 , -0.63699436],
         [ 0.4623117 , -0.49260226,  0.5709006 , ...,  0.9433214 ,
          -0.9992358 , -0.16642074]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [12], 'to': [8]}
torch node:
{'name': 'sin', 'output': array([[[[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        ...,

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]],

        [[-0.5054947 ,  0.89896256, -0.89662886, ...,  0.9567435 ,
           0.95031935,  0.4453972 ],
         [ 0.9232925 , -0.8283527 , -0.9147262 , ..., -0.88357735,
          -0.9000961 ,  0.37622932],
         [-0.98717207, -0.74080014, -0.39129245, ..., -0.9035567 ,
          -0.9380596 , -0.4106481 ],
         ...,
         [ 0.9244637 , -0.41816938, -0.24326158, ...,  0.4782202 ,
          -0.95239353, -0.76083475],
         [ 0.2050712 , -0.25318173, -0.1042853 , ...,  0.9546464 ,
          -0.6294854 , -0.8800653 ],
         [-0.9549228 , -0.8743114 , -0.20346695, ...,  0.9433214 ,
           0.13964906,  0.87176394]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [12], 'to': [8]}

generate models:257

analyse output arrays in iter:268

pre layer res:
15:tanh
{'name': 'tanh', 'output': array([[[[ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [-1.,  1.,  1., ...,  1.,  1.,  1.],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1., -1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ..., -1.,  1.,  1.]],

        [[ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [-1.,  1.,  1., ...,  1.,  1.,  1.],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1., -1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ..., -1.,  1.,  1.]],

        [[ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [-1.,  1.,  1., ...,  1.,  1.,  1.],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1., -1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ..., -1.,  1.,  1.]],

        ...,

        [[ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [-1.,  1.,  1., ...,  1.,  1.,  1.],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1., -1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ..., -1.,  1.,  1.]],

        [[ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [-1.,  1.,  1., ...,  1.,  1.,  1.],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1., -1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ..., -1.,  1.,  1.]],

        [[ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [-1.,  1.,  1., ...,  1.,  1.,  1.],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1., -1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ..., -1.,  1.,  1.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [14], 'to': [12]}
tf node:
{'name': 'log', 'output': array([[[[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [15], 'to': [8]}
ms node:
{'name': 'log', 'output': array([[[[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [           nan, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06,            nan, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
                     nan, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [           nan, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06,            nan, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
                     nan, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [           nan, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06,            nan, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
                     nan, -1.4305115e-06, -1.4305115e-06]],

        ...,

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [           nan, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06,            nan, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
                     nan, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [           nan, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06,            nan, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
                     nan, -1.4305115e-06, -1.4305115e-06]],

        [[-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [           nan, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06,            nan, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
                     nan, -1.4305115e-06, -1.4305115e-06]]]],
      dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [15], 'to': [8]}
torch node:
{'name': 'log', 'output': array([[[[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [nan,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0., nan, ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ..., nan,  0.,  0.]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [15], 'to': [8]}

generate models:263

analyse output arrays in iter:283

pre layer res:
22:add
{'name': 'add', 'output': array([[[[8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ],
         [8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         ...,
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ],
         [8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ]],

        [[8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ],
         [8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         ...,
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ],
         [8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ]],

        [[8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ],
         [8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         ...,
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ],
         [8105.462 , 8465.282 , 8017.5786, ..., 8052.04  , 8258.811 ,
          8096.5938],
         [7820.5493, 8072.1875, 7840.7017, ..., 8554.869 , 7780.4277,
          7947.302 ]],

        ...,

        [[8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747],
         [8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         ...,
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747],
         [8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747]],

        [[8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747],
         [8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         ...,
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747],
         [8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747]],

        [[8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747],
         [8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         ...,
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747],
         [8105.5503, 8465.046 , 8017.765 , ..., 8052.187 , 8258.747 ,
          8096.6914],
         [7820.999 , 8072.312 , 7841.121 , ..., 8554.566 , 7780.941 ,
          7947.5747]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7, 25], 'to': [11]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154]],

        [[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154]],

        [[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.27012974,  0.59971154]],

        ...,

        [[ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666]],

        [[ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666]],

        [[ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.6915686 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [22], 'to': [8]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154]],

        [[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154]],

        [[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7590176 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.26777828,  0.59971154]],

        ...,

        [[ 0.97104084, -0.02449089,  0.9128095 , ..., -0.9596502 ,
          -0.8775749 , -0.6919212 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70630854,  0.79322666],
         [ 0.97104084, -0.02449089,  0.9128095 , ..., -0.9596502 ,
          -0.8775749 , -0.6919212 ],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70630854,  0.79322666],
         [ 0.97104084, -0.02449089,  0.9128095 , ..., -0.9596502 ,
          -0.8775749 , -0.6919212 ],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70630854,  0.79322666]],

        [[ 0.9737739 , -0.01277424,  0.9069354 , ..., -0.9596502 ,
          -0.8761665 , -0.68980306],
         [ 0.00313576, -0.0103115 ,  0.95590335, ..., -0.9999707 ,
          -0.70699954,  0.80001503],
         [ 0.9737739 , -0.01277424,  0.9069354 , ..., -0.9596502 ,
          -0.8761665 , -0.68980306],
         ...,
         [ 0.00313576, -0.0103115 ,  0.95590335, ..., -0.9999707 ,
          -0.70699954,  0.80001503],
         [ 0.9737739 , -0.01277424,  0.9069354 , ..., -0.9596502 ,
          -0.8761665 , -0.68980306],
         [ 0.00313576, -0.0103115 ,  0.95590335, ..., -0.9999707 ,
          -0.70699954,  0.80001503]],

        [[ 0.9737739 , -0.01277424,  0.9069354 , ..., -0.9596502 ,
          -0.8761665 , -0.68980306],
         [ 0.00313576, -0.0103115 ,  0.95590335, ..., -0.9999707 ,
          -0.70699954,  0.80001503],
         [ 0.9737739 , -0.01277424,  0.9069354 , ..., -0.9596502 ,
          -0.8761665 , -0.68980306],
         ...,
         [ 0.00313576, -0.0103115 ,  0.95590335, ..., -0.9999707 ,
          -0.70699954,  0.80001503],
         [ 0.9737739 , -0.01277424,  0.9069354 , ..., -0.9596502 ,
          -0.8761665 , -0.68980306],
         [ 0.00313576, -0.0103115 ,  0.95590335, ..., -0.9999707 ,
          -0.70699954,  0.80001503]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [22], 'to': [8]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154]],

        [[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154]],

        [[ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         ...,
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154],
         [ 0.9883385 , -0.2578743 ,  0.9727093 , ..., -0.99048376,
          -0.90622026, -0.7586996 ],
         [-0.4309946 , -0.13441531,  0.75600827, ..., -0.95161563,
          -0.2701297 ,  0.59971154]],

        ...,

        [[ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666]],

        [[ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666]],

        [[ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         ...,
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666],
         [ 0.9710409 , -0.02449089,  0.9128095 , ..., -0.9596503 ,
          -0.8775749 , -0.69156855],
         [ 0.00411231, -0.0103115 ,  0.95704323, ..., -0.9999538 ,
          -0.70803475,  0.79322666]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [22], 'to': [8]}

generate models:278

analyse output arrays in iter:287

pre layer res:
12:log
{'name': 'log', 'output': array([[[[6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         ...,
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403]],

        [[6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         ...,
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403]],

        [[6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         ...,
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403],
         [6.7162495, 6.7944827, 6.7238326, ..., 6.643062 , 6.64379  ,
          6.7979403]],

        ...,

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [12], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [12], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [12], 'to': []}

generate models:282

analyse output arrays in iter:294

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[1529338.6, 1605733.1, 1051144.1, ..., 1929291.8, 1377504.1,
          2073844. ],
         [1181497. , 1378991.9, 1344521.9, ..., 1306336.1, 1107879.5,
          2267022.8],
         [1739972.8, 1131870.1, 2113660. , ..., 1474686.9, 1336953.8,
          1826772.5],
         ...,
         [1734027.2, 1218697.1, 1995972.1, ..., 3028159.8, 1369284.9,
          1687648.1],
         [2017524.1, 1480751.9, 1040054. , ..., 1411313.1, 1478592.1,
          1651568.1],
         [1630271.9, 1232799.9, 1456123.4, ..., 1120423.4, 1257209.4,
          1476174.9]],

        [[1529338.6, 1605733.1, 1051144.1, ..., 1929291.8, 1377504.1,
          2073844. ],
         [1181497. , 1378991.9, 1344521.9, ..., 1306336.1, 1107879.5,
          2267022.8],
         [1739972.8, 1131870.1, 2113660. , ..., 1474686.9, 1336953.8,
          1826772.5],
         ...,
         [1734027.2, 1218697.1, 1995972.1, ..., 3028159.8, 1369284.9,
          1687648.1],
         [2017524.1, 1480751.9, 1040054. , ..., 1411313.1, 1478592.1,
          1651568.1],
         [1630271.9, 1232799.9, 1456123.4, ..., 1120423.4, 1257209.4,
          1476174.9]],

        [[1529338.6, 1605733.1, 1051144.1, ..., 1929291.8, 1377504.1,
          2073844. ],
         [1181497. , 1378991.9, 1344521.9, ..., 1306336.1, 1107879.5,
          2267022.8],
         [1739972.8, 1131870.1, 2113660. , ..., 1474686.9, 1336953.8,
          1826772.5],
         ...,
         [1734027.2, 1218697.1, 1995972.1, ..., 3028159.8, 1369284.9,
          1687648.1],
         [2017524.1, 1480751.9, 1040054. , ..., 1411313.1, 1478592.1,
          1651568.1],
         [1630271.9, 1232799.9, 1456123.4, ..., 1120423.4, 1257209.4,
          1476174.9]],

        ...,

        [[1529338.6, 1605733.1, 1051144.1, ..., 1929291.8, 1377504.1,
          2073844. ],
         [1181497. , 1378991.9, 1344521.9, ..., 1306336.1, 1107879.5,
          2267022.8],
         [1739972.8, 1131870.1, 2113660. , ..., 1474686.9, 1336953.8,
          1826772.5],
         ...,
         [1734027.2, 1218697.1, 1995972.1, ..., 3028159.8, 1369284.9,
          1687648.1],
         [2017524.1, 1480751.9, 1040054. , ..., 1411313.1, 1478592.1,
          1651568.1],
         [1630271.9, 1232799.9, 1456123.4, ..., 1120423.4, 1257209.4,
          1476174.9]],

        [[1529338.6, 1605733.1, 1051144.1, ..., 1929291.8, 1377504.1,
          2073844. ],
         [1181497. , 1378991.9, 1344521.9, ..., 1306336.1, 1107879.5,
          2267022.8],
         [1739972.8, 1131870.1, 2113660. , ..., 1474686.9, 1336953.8,
          1826772.5],
         ...,
         [1734027.2, 1218697.1, 1995972.1, ..., 3028159.8, 1369284.9,
          1687648.1],
         [2017524.1, 1480751.9, 1040054. , ..., 1411313.1, 1478592.1,
          1651568.1],
         [1630271.9, 1232799.9, 1456123.4, ..., 1120423.4, 1257209.4,
          1476174.9]],

        [[1529338.6, 1605733.1, 1051144.1, ..., 1929291.8, 1377504.1,
          2073844. ],
         [1181497. , 1378991.9, 1344521.9, ..., 1306336.1, 1107879.5,
          2267022.8],
         [1739972.8, 1131870.1, 2113660. , ..., 1474686.9, 1336953.8,
          1826772.5],
         ...,
         [1734027.2, 1218697.1, 1995972.1, ..., 3028159.8, 1369284.9,
          1687648.1],
         [2017524.1, 1480751.9, 1040054. , ..., 1411313.1, 1478592.1,
          1651568.1],
         [1630271.9, 1232799.9, 1456123.4, ..., 1120423.4, 1257209.4,
          1476174.9]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [20], 'to': [11]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422233 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.5960564 ,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437508, -0.9227106 , ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.48157406, ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942928],
         [ 0.46787396,  0.34494182,  0.10734268, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422233 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.5960564 ,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437508, -0.9227106 , ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.48157406, ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942928],
         [ 0.46787396,  0.34494182,  0.10734268, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422233 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.5960564 ,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437508, -0.9227106 , ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.48157406, ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942928],
         [ 0.46787396,  0.34494182,  0.10734268, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        ...,

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422233 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.5960564 ,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437508, -0.9227106 , ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.48157406, ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942928],
         [ 0.46787396,  0.34494182,  0.10734268, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422233 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.5960564 ,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437508, -0.9227106 , ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.48157406, ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942928],
         [ 0.46787396,  0.34494182,  0.10734268, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422233 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.5960564 ,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437508, -0.9227106 , ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.48157406, ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942928],
         [ 0.46787396,  0.34494182,  0.10734268, ...,  0.87168723,
           0.8557999 , -0.9843167 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [18]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        ...,

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[-0.8233285 ,  0.31979033,  0.20829532, ..., -0.05186173,
          -0.8422232 ,  0.63486975],
         [ 0.94817716, -0.69991684,  0.98867035, ...,  0.59605634,
          -0.93329877,  0.97464055],
         [ 0.07135961, -0.9446735 ,  0.5368056 , ..., -0.98604524,
          -0.9695585 , -0.7726432 ],
         ...,
         [-0.9976409 , -0.9969563 , -0.89607954, ..., -0.8351706 ,
          -0.9391035 , -0.96652997],
         [-0.977092  ,  0.9924257 , -0.89613914, ..., -0.64156115,
           0.02820462, -0.00528496],
         [ 0.46787396,  0.34494182,  0.943338  , ...,  0.99992603,
           0.7607692 , -0.6802729 ]],

        [[-0.8233285 ,  0.31979033,  0.20829532, ..., -0.05186173,
          -0.8422232 ,  0.63486975],
         [ 0.94817716, -0.69991684,  0.98867035, ...,  0.59605634,
          -0.93329877,  0.97464055],
         [ 0.07135961, -0.9446735 ,  0.5368056 , ..., -0.98604524,
          -0.9695585 , -0.7726432 ],
         ...,
         [-0.9976409 , -0.9969563 , -0.89607954, ..., -0.8351706 ,
          -0.9391035 , -0.96652997],
         [-0.977092  ,  0.9924257 , -0.89613914, ..., -0.64156115,
           0.02820462, -0.00528496],
         [ 0.46787396,  0.34494182,  0.943338  , ...,  0.99992603,
           0.7607692 , -0.6802729 ]]]], dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [9], 'to': [18]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        ...,

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]],

        [[ 0.31993246, -0.6572023 ,  0.20829532, ..., -0.41825408,
          -0.8422232 , -0.9888384 ],
         [ 0.85165954, -0.69991684, -0.32392594, ...,  0.59605634,
          -0.9999704 ,  0.7149017 ],
         [-0.08789938, -0.15437509, -0.92271054, ..., -0.27495217,
           0.29702806,  0.6994209 ],
         ...,
         [ 0.99864256, -0.4730548 ,  0.4815741 , ..., -0.8351706 ,
          -0.9626379 , -0.96652997],
         [ 0.9234001 ,  0.9924257 , -0.09296667, ..., -0.9687302 ,
           0.02820462,  0.11942927],
         [ 0.46787396,  0.34494182,  0.10734267, ...,  0.87168723,
           0.8557999 , -0.9843167 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [9], 'to': [18]}

generate models:289

analyse output arrays in iter:301

pre layer res:
13:flatten
{'name': 'flatten', 'output': array([[ 0.17753199, -0.39676952, -0.26180497, ...,  0.11141215,
        -0.292666  , -0.00737379]], dtype=float32), 'output_shape': TensorShape([1, 2048]), 'from': [17], 'to': [16]}
tf node:
{'name': 'log', 'output': array([[-1.7286044,        nan,        nan, ..., -2.194519 ,        nan,
               nan]], dtype=float32), 'output_shape': TensorShape([1, 2048]), 'from': [13], 'to': [14]}
ms node:
{'name': 'log', 'output': array([[-1.7286017,        nan,        nan, ..., -2.19452  ,        nan,
               nan]], dtype=float32), 'output_shape': (1, 2048), 'from': [13], 'to': [14]}
torch node:
{'name': 'log', 'output': array([[-1.7286044,        nan,        nan, ..., -2.1945193,        nan,
               nan]], dtype=float32), 'output_shape': torch.Size([1, 2048]), 'from': [13], 'to': [14]}

generate models:295

analyse output arrays in iter:307

pre layer res:
17:flatten
{'name': 'flatten', 'output': array([[inf, inf, inf, ...,  0.,  0.,  0.]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [6], 'to': [30]}
tf node:
{'name': 'log', 'output': array([[ inf,  inf,  inf, ..., -inf, -inf, -inf]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [17], 'to': [18]}
ms node:
{'name': 'log', 'output': array([[88.72284, 88.72284, 88.72284, ...,     -inf,     -inf,     -inf]],
      dtype=float32), 'output_shape': (1, 32768), 'from': [17], 'to': [18]}
torch node:
{'name': 'log', 'output': array([[ inf,  inf,  inf, ..., -inf, -inf, -inf]], dtype=float32), 'output_shape': torch.Size([1, 32768]), 'from': [17], 'to': [18]}

generate models:300

analyse output arrays in iter:323

pre layer res:
7:conv2d
{'name': 'conv2d', 'output': array([[[[31562036., 46893060., 30904374., ..., 32135474., 30195442.,
          30014138.],
         [31588916., 46993592., 30836990., ..., 32300542., 30295094.,
          30068156.],
         [31737348., 47057872., 30858698., ..., 32379138., 30386190.,
          30042422.],
         ...,
         [31619056., 46894924., 30919166., ..., 32102594., 30147836.,
          29870862.],
         [31645386., 46955180., 30906622., ..., 32065730., 30094150.,
          29909764.],
         [31584784., 46821748., 30918722., ..., 32057602., 30106300.,
          29951302.]],

        [[31562036., 46893060., 30904374., ..., 32135474., 30195442.,
          30014138.],
         [31588916., 46993592., 30836990., ..., 32300542., 30295094.,
          30068156.],
         [31737348., 47057872., 30858698., ..., 32379138., 30386190.,
          30042422.],
         ...,
         [31619056., 46894924., 30919166., ..., 32102594., 30147836.,
          29870862.],
         [31645386., 46955180., 30906622., ..., 32065730., 30094150.,
          29909764.],
         [31584784., 46821748., 30918722., ..., 32057602., 30106300.,
          29951302.]],

        [[31562036., 46893060., 30904374., ..., 32135474., 30195442.,
          30014138.],
         [31588916., 46993592., 30836990., ..., 32300542., 30295094.,
          30068156.],
         [31737348., 47057872., 30858698., ..., 32379138., 30386190.,
          30042422.],
         ...,
         [31619056., 46894924., 30919166., ..., 32102594., 30147836.,
          29870862.],
         [31645386., 46955180., 30906622., ..., 32065730., 30094150.,
          29909764.],
         [31584784., 46821748., 30918722., ..., 32057602., 30106300.,
          29951302.]],

        ...,

        [[31562036., 46893060., 30904374., ..., 32135474., 30195442.,
          30014138.],
         [31588916., 46993592., 30836990., ..., 32300542., 30295094.,
          30068156.],
         [31737348., 47057872., 30858698., ..., 32379138., 30386190.,
          30042422.],
         ...,
         [31619056., 46894924., 30919166., ..., 32102594., 30147836.,
          29870862.],
         [31645386., 46955180., 30906622., ..., 32065730., 30094150.,
          29909764.],
         [31584784., 46821748., 30918722., ..., 32057602., 30106300.,
          29951302.]],

        [[31562036., 46893060., 30904374., ..., 32135474., 30195442.,
          30014138.],
         [31588916., 46993592., 30836990., ..., 32300542., 30295094.,
          30068156.],
         [31737348., 47057872., 30858698., ..., 32379138., 30386190.,
          30042422.],
         ...,
         [31619056., 46894924., 30919166., ..., 32102594., 30147836.,
          29870862.],
         [31645386., 46955180., 30906622., ..., 32065730., 30094150.,
          29909764.],
         [31584784., 46821748., 30918722., ..., 32057602., 30106300.,
          29951302.]],

        [[31562036., 46893060., 30904374., ..., 32135474., 30195442.,
          30014138.],
         [31588916., 46993592., 30836990., ..., 32300542., 30295094.,
          30068156.],
         [31737348., 47057872., 30858698., ..., 32379138., 30386190.,
          30042422.],
         ...,
         [31619056., 46894924., 30919166., ..., 32102594., 30147836.,
          29870862.],
         [31645386., 46955180., 30906622., ..., 32065730., 30094150.,
          29909764.],
         [31584784., 46821748., 30918722., ..., 32057602., 30106300.,
          29951302.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [6], 'to': [28]}
tf node:
{'name': 'sin', 'output': array([[[[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724628e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [-9.1818410e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578470e-01],
         ...,
         [ 3.5816920e-01, -2.4553151e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782257e-01,  8.3850223e-01],
         [-6.2745202e-01,  4.8361621e-03, -8.6256826e-01, ...,
           4.0664053e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407880e-01,  3.6587942e-01, ...,
          -8.9948040e-01,  2.2912037e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724628e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [-9.1818410e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578470e-01],
         ...,
         [ 3.5816920e-01, -2.4553151e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782257e-01,  8.3850223e-01],
         [-6.2745202e-01,  4.8361621e-03, -8.6256826e-01, ...,
           4.0664053e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407880e-01,  3.6587942e-01, ...,
          -8.9948040e-01,  2.2912037e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724628e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [-9.1818410e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578470e-01],
         ...,
         [ 3.5816920e-01, -2.4553151e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782257e-01,  8.3850223e-01],
         [-6.2745202e-01,  4.8361621e-03, -8.6256826e-01, ...,
           4.0664053e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407880e-01,  3.6587942e-01, ...,
          -8.9948040e-01,  2.2912037e-01, -9.9535978e-01]],

        ...,

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724628e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [-9.1818410e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578470e-01],
         ...,
         [ 3.5816920e-01, -2.4553151e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782257e-01,  8.3850223e-01],
         [-6.2745202e-01,  4.8361621e-03, -8.6256826e-01, ...,
           4.0664053e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407880e-01,  3.6587942e-01, ...,
          -8.9948040e-01,  2.2912037e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724628e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [-9.1818410e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578470e-01],
         ...,
         [ 3.5816920e-01, -2.4553151e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782257e-01,  8.3850223e-01],
         [-6.2745202e-01,  4.8361621e-03, -8.6256826e-01, ...,
           4.0664053e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407880e-01,  3.6587942e-01, ...,
          -8.9948040e-01,  2.2912037e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724628e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [-9.1818410e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578470e-01],
         ...,
         [ 3.5816920e-01, -2.4553151e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782257e-01,  8.3850223e-01],
         [-6.2745202e-01,  4.8361621e-03, -8.6256826e-01, ...,
           4.0664053e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407880e-01,  3.6587942e-01, ...,
          -8.9948040e-01,  2.2912037e-01, -9.9535978e-01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [8]}
ms node:
{'name': 'sin', 'output': array([[[[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -1.5414958e-01],
         [ 7.4232119e-01,  9.4389474e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -1.5414958e-01],
         [ 7.4232119e-01,  9.4389474e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -1.5414958e-01],
         [ 7.4232119e-01,  9.4389474e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        ...,

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -1.5414958e-01],
         [ 7.4232119e-01,  9.4389474e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.8659588e-01,  9.5904875e-01, -4.2446136e-01, ...,
           8.9140081e-01, -3.4885484e-01, -8.7333786e-01],
         [ 3.1234923e-01, -4.8395646e-01,  6.4429551e-01, ...,
          -4.6043134e-01,  8.8308454e-01, -9.4971001e-01],
         [-9.9230462e-01,  6.3310963e-01, -7.6879781e-01, ...,
          -7.4696708e-01, -4.1665432e-01,  8.7645668e-01],
         ...,
         [-7.4201271e-02,  7.6237190e-01,  6.1379468e-01, ...,
           9.6829259e-01,  8.5948199e-02, -4.2512575e-01],
         [-1.9654572e-01, -8.9578855e-01, -8.6256826e-01, ...,
           9.5554024e-01, -7.8366399e-01,  4.5996043e-01],
         [ 2.8844365e-01, -2.8167433e-01,  5.9724355e-01, ...,
          -8.9948040e-01,  9.2303693e-01, -8.9944643e-01]],

        [[ 2.8659588e-01,  9.5904875e-01, -4.2446136e-01, ...,
           8.9140081e-01, -3.4885484e-01, -8.7333786e-01],
         [ 3.1234923e-01, -4.8395646e-01,  6.4429551e-01, ...,
          -4.6043134e-01,  8.8308454e-01, -9.4971001e-01],
         [-9.9230462e-01,  6.3310963e-01, -7.6879781e-01, ...,
          -7.4696708e-01, -4.1665432e-01,  8.7645668e-01],
         ...,
         [-7.4201271e-02,  7.6237190e-01,  6.1379468e-01, ...,
           9.6829259e-01,  8.5948199e-02, -4.2512575e-01],
         [-1.9654572e-01, -8.9578855e-01, -8.6256826e-01, ...,
           9.5554024e-01, -7.8366399e-01,  4.5996043e-01],
         [ 2.8844365e-01, -2.8167433e-01,  5.9724355e-01, ...,
          -8.9948040e-01,  9.2303693e-01, -8.9944643e-01]]]],
      dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [7], 'to': [8]}
torch node:
{'name': 'sin', 'output': array([[[[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [ 7.4232119e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [ 7.4232119e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [ 7.4232119e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        ...,

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [ 7.4232119e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [ 7.4232119e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]],

        [[ 2.6959160e-01,  9.5904875e-01, -6.6008252e-01, ...,
          -2.2244005e-01, -7.9724622e-01,  4.5207316e-01],
         [ 7.2167903e-01,  2.4598837e-01,  6.4429551e-01, ...,
          -4.6043134e-01, -2.3934521e-01, -8.3428019e-01],
         [ 7.4232119e-01, -3.6703947e-01,  8.9361596e-01, ...,
          -7.4696708e-01,  8.4355432e-01, -2.2578472e-01],
         ...,
         [ 3.5816920e-01, -2.4553153e-01,  6.1379468e-01, ...,
          -1.3263696e-01,  6.9782251e-01,  8.3850217e-01],
         [-6.2745196e-01,  4.8361616e-03, -8.6256826e-01, ...,
           4.0664050e-01, -9.9261749e-01, -9.7264498e-01],
         [-5.6426978e-04, -7.6407874e-01,  6.9398928e-01, ...,
          -8.9948040e-01, -9.8045611e-01, -9.9535978e-01]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [7], 'to': [8]}

generate models:315

analyse output arrays in iter:330

pre layer res:
4:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         ...,
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02]],

        [[2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         ...,
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02]],

        [[2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         ...,
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02]],

        ...,

        [[2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         ...,
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02]],

        [[2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         ...,
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02]],

        [[2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         ...,
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02],
         [2.39827245e-01, 1.17528164e+05, 1.81850891e+03, ...,
          1.04043111e-02, 4.63630720e+08, 2.24643158e+02]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [3], 'to': [28]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         ...,
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ]],

        [[ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         ...,
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ]],

        [[ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         ...,
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ]],

        ...,

        [[ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         ...,
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ]],

        [[ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         ...,
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ]],

        [[ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         ...,
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ],
         [ 0.23753482,  0.9257037 ,  0.4557684 , ...,  0.01040412,
          -0.7813941 , -0.9998141 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [4], 'to': [5]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         ...,
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ]],

        [[ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         ...,
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ]],

        [[ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         ...,
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ]],

        ...,

        [[ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         ...,
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ]],

        [[ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         ...,
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ]],

        [[ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         ...,
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ],
         [ 0.23753476,  0.9570476 ,  0.456746  , ...,  0.01040412,
          -0.88032603, -0.9998126 ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [4], 'to': [5]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         ...,
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ]],

        [[ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         ...,
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ]],

        [[ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         ...,
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ]],

        ...,

        [[ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         ...,
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ]],

        [[ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         ...,
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ]],

        [[ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         ...,
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ],
         [ 0.2375346 ,  0.96146077,  0.45739746, ...,  0.01040412,
          -0.78139406, -0.9998144 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [4], 'to': [5]}

generate models:322

analyse output arrays in iter:351

pre layer res:
15:square
{'name': 'square', 'output': array([[[[88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         ...,
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.]],

        [[88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         ...,
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.]],

        [[88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         ...,
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.]],

        ...,

        [[88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         ...,
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.]],

        [[88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         ...,
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.]],

        [[88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         ...,
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.],
         [88698688., 32682838., 41292420., ..., 40890680., 66803052.,
          48856380.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [5], 'to': [16]}
tf node:
{'name': 'sin', 'output': array([[[[-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         ...,
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ]],

        [[-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         ...,
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ]],

        [[-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         ...,
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ]],

        ...,

        [[-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         ...,
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ]],

        [[-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         ...,
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ]],

        [[-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         ...,
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ],
         [-0.7743671 ,  0.98453313, -0.9994608 , ..., -0.8149255 ,
          -0.37148172,  0.6910418 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [15], 'to': [11]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         ...,
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936]],

        [[ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         ...,
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936]],

        [[ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         ...,
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936]],

        ...,

        [[ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         ...,
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.08845194, -0.81566936]],

        [[ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         ...,
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.89636624, -0.9994608 , ..., -0.45482647,
           0.08845194, -0.81566936],
         [ 0.92374694,  0.89636624, -0.9994608 , ..., -0.45482647,
           0.08845194, -0.81566936]],

        [[ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         ...,
         [ 0.92374694,  0.98453313, -0.9994608 , ..., -0.8149255 ,
           0.97261065,  0.6910418 ],
         [ 0.92374694,  0.89636624, -0.9994608 , ..., -0.45482647,
           0.08845194, -0.81566936],
         [ 0.92374694,  0.89636624, -0.9994608 , ..., -0.45482647,
           0.08845194, -0.81566936]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [15], 'to': [11]}
torch node:
{'name': 'sin', 'output': array([[[[0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         ...,
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ]],

        [[0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         ...,
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ]],

        [[0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         ...,
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ]],

        ...,

        [[0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         ...,
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ]],

        [[0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         ...,
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ]],

        [[0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         ...,
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ],
         [0.92374694, 0.98453313, 0.17790622, ..., 0.09405405,
          0.97261065, 0.6910418 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [15], 'to': [11]}

generate models:342

analyse output arrays in iter:353

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[5177428.5, 6466875. , 4701801. , ..., 6386517. , 4910721.5,
          6274923. ],
         [3778441. , 4386176.5, 3784840.8, ..., 4080825.8, 4078658. ,
          4010873.8],
         [4119832. , 4576413. , 4003682. , ..., 4886526.5, 4313113. ,
          4831297.5],
         ...,
         [6974528.5, 3995526.5, 7270513.5, ..., 4284001. , 6782400.5,
          4397248.5],
         [4834026.5, 5348153.5, 4274593. , ..., 5548375. , 4323200.5,
          5498561.5],
         [4014334.2, 5712063.5, 4101247.8, ..., 6115071. , 4031335.8,
          6205268.5]],

        [[5177428.5, 6466875. , 4701801. , ..., 6386517. , 4910721.5,
          6274923. ],
         [3778441. , 4386176.5, 3784840.8, ..., 4080825.8, 4078658. ,
          4010873.8],
         [4119832. , 4576413. , 4003682. , ..., 4886526.5, 4313113. ,
          4831297.5],
         ...,
         [6974528.5, 3995526.5, 7270513.5, ..., 4284001. , 6782400.5,
          4397248.5],
         [4834026.5, 5348153.5, 4274593. , ..., 5548375. , 4323200.5,
          5498561.5],
         [4014334.2, 5712063.5, 4101247.8, ..., 6115071. , 4031335.8,
          6205268.5]],

        [[5177428.5, 6466875. , 4701801. , ..., 6386517. , 4910721.5,
          6274923. ],
         [3778441. , 4386176.5, 3784840.8, ..., 4080825.8, 4078658. ,
          4010873.8],
         [4119832. , 4576413. , 4003682. , ..., 4886526.5, 4313113. ,
          4831297.5],
         ...,
         [6974528.5, 3995526.5, 7270513.5, ..., 4284001. , 6782400.5,
          4397248.5],
         [4834026.5, 5348153.5, 4274593. , ..., 5548375. , 4323200.5,
          5498561.5],
         [4014334.2, 5712063.5, 4101247.8, ..., 6115071. , 4031335.8,
          6205268.5]],

        ...,

        [[5177428.5, 6466875. , 4701801. , ..., 6386517. , 4910721.5,
          6274923. ],
         [3778441. , 4386176.5, 3784840.8, ..., 4080825.8, 4078658. ,
          4010873.8],
         [4119832. , 4576413. , 4003682. , ..., 4886526.5, 4313113. ,
          4831297.5],
         ...,
         [6974528.5, 3995526.5, 7270513.5, ..., 4284001. , 6782400.5,
          4397248.5],
         [4834026.5, 5348153.5, 4274593. , ..., 5548375. , 4323200.5,
          5498561.5],
         [4014334.2, 5712063.5, 4101247.8, ..., 6115071. , 4031335.8,
          6205268.5]],

        [[5177428.5, 6466875. , 4701801. , ..., 6386517. , 4910721.5,
          6274923. ],
         [3778441. , 4386176.5, 3784840.8, ..., 4080825.8, 4078658. ,
          4010873.8],
         [4119832. , 4576413. , 4003682. , ..., 4886526.5, 4313113. ,
          4831297.5],
         ...,
         [6974528.5, 3995526.5, 7270513.5, ..., 4284001. , 6782400.5,
          4397248.5],
         [4834026.5, 5348153.5, 4274593. , ..., 5548375. , 4323200.5,
          5498561.5],
         [4014334.2, 5712063.5, 4101247.8, ..., 6115071. , 4031335.8,
          6205268.5]],

        [[5177428.5, 6466875. , 4701801. , ..., 6386517. , 4910721.5,
          6274923. ],
         [3778441. , 4386176.5, 3784840.8, ..., 4080825.8, 4078658. ,
          4010873.8],
         [4119832. , 4576413. , 4003682. , ..., 4886526.5, 4313113. ,
          4831297.5],
         ...,
         [6974528.5, 3995526.5, 7270513.5, ..., 4284001. , 6782400.5,
          4397248.5],
         [4834026.5, 5348153.5, 4274593. , ..., 5548375. , 4323200.5,
          5498561.5],
         [4014334.2, 5712063.5, 4101247.8, ..., 6115071. , 4031335.8,
          6205268.5]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [20], 'to': [11]}
tf node:
{'name': 'cos', 'output': array([[[[-0.52667016,  0.71765655,  0.68721926, ..., -0.00194513,
          -0.805782  ,  0.99668074],
         [-0.9242852 , -0.47486466,  0.753516  , ..., -0.844297  ,
          -0.870551  , -0.74355125],
         [-0.69587594,  0.0036443 ,  0.19273598, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.35275468,
          -0.1281232 ,  0.04635463],
         [ 0.6417199 ,  0.63120764,  0.59919864, ...,  0.16888236,
           0.9972175 ,  0.5621487 ]],

        [[-0.52667016,  0.71765655,  0.68721926, ..., -0.00194513,
          -0.805782  ,  0.99668074],
         [-0.9242852 , -0.47486466,  0.753516  , ..., -0.844297  ,
          -0.870551  , -0.74355125],
         [-0.69587594,  0.0036443 ,  0.19273598, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.35275468,
          -0.1281232 ,  0.04635463],
         [ 0.6417199 ,  0.63120764,  0.59919864, ...,  0.16888236,
           0.9972175 ,  0.5621487 ]],

        [[-0.52667016,  0.71765655,  0.68721926, ..., -0.00194513,
          -0.805782  ,  0.99668074],
         [-0.9242852 , -0.47486466,  0.753516  , ..., -0.844297  ,
          -0.870551  , -0.74355125],
         [-0.69587594,  0.0036443 ,  0.19273598, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.35275468,
          -0.1281232 ,  0.04635463],
         [ 0.6417199 ,  0.63120764,  0.59919864, ...,  0.16888236,
           0.9972175 ,  0.5621487 ]],

        ...,

        [[-0.52667016,  0.71765655,  0.68721926, ..., -0.00194513,
          -0.805782  ,  0.99668074],
         [-0.9242852 , -0.47486466,  0.753516  , ..., -0.844297  ,
          -0.870551  , -0.74355125],
         [-0.69587594,  0.0036443 ,  0.19273598, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.35275468,
          -0.1281232 ,  0.04635463],
         [ 0.6417199 ,  0.63120764,  0.59919864, ...,  0.16888236,
           0.9972175 ,  0.5621487 ]],

        [[-0.52667016,  0.71765655,  0.68721926, ..., -0.00194513,
          -0.805782  ,  0.99668074],
         [-0.9242852 , -0.47486466,  0.753516  , ..., -0.844297  ,
          -0.870551  , -0.74355125],
         [-0.69587594,  0.0036443 ,  0.19273598, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.35275468,
          -0.1281232 ,  0.04635463],
         [ 0.6417199 ,  0.63120764,  0.59919864, ...,  0.16888236,
           0.9972175 ,  0.5621487 ]],

        [[-0.52667016,  0.71765655,  0.68721926, ..., -0.00194513,
          -0.805782  ,  0.99668074],
         [-0.9242852 , -0.47486466,  0.753516  , ..., -0.844297  ,
          -0.870551  , -0.74355125],
         [-0.69587594,  0.0036443 ,  0.19273598, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.35275468,
          -0.1281232 ,  0.04635463],
         [ 0.6417199 ,  0.63120764,  0.59919864, ...,  0.16888236,
           0.9972175 ,  0.5621487 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [19]}
ms node:
{'name': 'cos', 'output': array([[[[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.9440337 , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.9440337 , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.9440337 , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        ...,

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.9440337 , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.9998701 ,  0.49448827, -0.57782525, ..., -0.8787691 ,
           0.53373   , -0.54557383],
         [-0.44604713,  0.00518976,  0.13615502, ..., -0.66093695,
           0.6393703 , -0.9802162 ],
         [-0.9148511 ,  0.9077748 ,  0.432842  , ..., -0.38053694,
          -0.72340375,  0.740033  ],
         ...,
         [-0.3884211 , -0.49227977, -0.90269727, ...,  0.9186522 ,
          -0.916241  ,  0.8586749 ],
         [-0.7689105 ,  0.7664544 , -0.9440337 , ..., -0.54578704,
           0.36303556, -0.99314374],
         [ 0.9301621 ,  0.9257859 ,  0.59919864, ..., -0.73813677,
           0.5049855 , -0.8530276 ]],

        [[-0.9998701 ,  0.49448827, -0.57782525, ..., -0.8787691 ,
           0.53373   , -0.54557383],
         [-0.44604713,  0.00518976,  0.13615502, ..., -0.66093695,
           0.6393703 , -0.9802162 ],
         [-0.9148511 ,  0.9077748 ,  0.432842  , ..., -0.38053694,
          -0.72340375,  0.740033  ],
         ...,
         [-0.3884211 , -0.49227977, -0.90269727, ...,  0.9186522 ,
          -0.916241  ,  0.8586749 ],
         [-0.7689105 ,  0.7664544 , -0.9440337 , ..., -0.54578704,
           0.36303556, -0.99314374],
         [ 0.9301621 ,  0.9257859 ,  0.59919864, ..., -0.73813677,
           0.5049855 , -0.8530276 ]]]], dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [9], 'to': [19]}
torch node:
{'name': 'cos', 'output': array([[[[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        ...,

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]],

        [[-0.5266702 ,  0.9636735 ,  0.68721926, ...,  0.91010517,
          -0.805782  , -0.3407404 ],
         [-0.17820168, -0.47486463, -0.14608145, ..., -0.844297  ,
          -0.870551  , -0.7435512 ],
         [-0.69587594,  0.0036443 ,  0.42950958, ...,  0.5725585 ,
          -0.02553155,  0.72323364],
         ...,
         [-0.3884211 ,  0.26526463,  0.5233482 , ...,  0.9186522 ,
          -0.916241  ,  0.5078426 ],
         [ 0.23337074,  0.91539496, -0.787622  , ..., -0.3527547 ,
          -0.12812321,  0.04635463],
         [ 0.43202657,  0.63120764,  0.59919864, ...,  0.16888237,
           0.9972175 ,  0.5621487 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [9], 'to': [19]}

generate models:344

analyse output arrays in iter:357

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[-0.3627417 , -3.1488154 , -1.1381582 , ..., -0.5277798 ,
          -0.72284603,  0.42522046],
         [-0.6444266 ,  3.0720844 , -2.79783   , ...,  2.917348  ,
           1.3973153 ,  1.2672052 ],
         [ 1.084039  ,  0.3474377 ,  1.6103215 , ...,  3.629705  ,
           2.0513813 ,  0.05051905],
         ...,
         [ 1.8859503 ,  1.2084638 ,  2.021556  , ..., -0.68036866,
           2.0108502 , -1.3248227 ],
         [-1.0104074 ,  1.8446403 , -0.29815874, ..., -0.5066904 ,
           1.6468464 , -0.93971735],
         [-1.2328156 ,  3.768159  ,  0.941827  , ..., -1.3262007 ,
           1.5522676 , -0.5930779 ]],

        [[-0.3627417 , -3.1488154 , -1.1381582 , ..., -0.5277798 ,
          -0.72284603,  0.42522046],
         [-0.6444266 ,  3.0720844 , -2.79783   , ...,  2.917348  ,
           1.3973153 ,  1.2672052 ],
         [ 1.084039  ,  0.3474377 ,  1.6103215 , ...,  3.629705  ,
           2.0513813 ,  0.05051905],
         ...,
         [ 1.8859503 ,  1.2084638 ,  2.021556  , ..., -0.68036866,
           2.0108502 , -1.3248227 ],
         [-1.0104074 ,  1.8446403 , -0.29815874, ..., -0.5066904 ,
           1.6468464 , -0.93971735],
         [-1.2328156 ,  3.768159  ,  0.941827  , ..., -1.3262007 ,
           1.5522676 , -0.5930779 ]],

        [[-0.3627417 , -3.1488154 , -1.1381582 , ..., -0.5277798 ,
          -0.72284603,  0.42522046],
         [-0.6444266 ,  3.0720844 , -2.79783   , ...,  2.917348  ,
           1.3973153 ,  1.2672052 ],
         [ 1.084039  ,  0.3474377 ,  1.6103215 , ...,  3.629705  ,
           2.0513813 ,  0.05051905],
         ...,
         [ 1.8859503 ,  1.2084638 ,  2.021556  , ..., -0.68036866,
           2.0108502 , -1.3248227 ],
         [-1.0104074 ,  1.8446403 , -0.29815874, ..., -0.5066904 ,
           1.6468464 , -0.93971735],
         [-1.2328156 ,  3.768159  ,  0.941827  , ..., -1.3262007 ,
           1.5522676 , -0.5930779 ]],

        ...,

        [[-0.3627417 , -3.1488154 , -1.1381582 , ..., -0.5277798 ,
          -0.72284603,  0.42522046],
         [-0.6444266 ,  3.0720844 , -2.79783   , ...,  2.917348  ,
           1.3973153 ,  1.2672052 ],
         [ 1.084039  ,  0.3474377 ,  1.6103215 , ...,  3.629705  ,
           2.0513813 ,  0.05051905],
         ...,
         [ 1.8859503 ,  1.2084638 ,  2.021556  , ..., -0.68036866,
           2.0108502 , -1.3248227 ],
         [-1.0104074 ,  1.8446403 , -0.29815874, ..., -0.5066904 ,
           1.6468464 , -0.93971735],
         [-1.2328156 ,  3.768159  ,  0.941827  , ..., -1.3262007 ,
           1.5522676 , -0.5930779 ]],

        [[-0.3627417 , -3.1488154 , -1.1381582 , ..., -0.5277798 ,
          -0.72284603,  0.42522046],
         [-0.6444266 ,  3.0720844 , -2.79783   , ...,  2.917348  ,
           1.3973153 ,  1.2672052 ],
         [ 1.084039  ,  0.3474377 ,  1.6103215 , ...,  3.629705  ,
           2.0513813 ,  0.05051905],
         ...,
         [ 1.8859503 ,  1.2084638 ,  2.021556  , ..., -0.68036866,
           2.0108502 , -1.3248227 ],
         [-1.0104074 ,  1.8446403 , -0.29815874, ..., -0.5066904 ,
           1.6468464 , -0.93971735],
         [-1.2328156 ,  3.768159  ,  0.941827  , ..., -1.3262007 ,
           1.5522676 , -0.5930779 ]],

        [[-0.3627417 , -3.1488154 , -1.1381582 , ..., -0.5277798 ,
          -0.72284603,  0.42522046],
         [-0.6444266 ,  3.0720844 , -2.79783   , ...,  2.917348  ,
           1.3973153 ,  1.2672052 ],
         [ 1.084039  ,  0.3474377 ,  1.6103215 , ...,  3.629705  ,
           2.0513813 ,  0.05051905],
         ...,
         [ 1.8859503 ,  1.2084638 ,  2.021556  , ..., -0.68036866,
           2.0108502 , -1.3248227 ],
         [-1.0104074 ,  1.8446403 , -0.29815874, ..., -0.5066904 ,
           1.6468464 , -0.93971735],
         [-1.2328156 ,  3.768159  ,  0.941827  , ..., -1.3262007 ,
           1.5522676 , -0.5930779 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [], 'to': [16, 18]}
tf node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891514 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891514 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891514 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891514 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891514 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891514 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551508 ],
         [        nan,  1.122354  ,         nan, ...,  1.0706749 ,
           0.33455557,  0.23681669],
         [ 0.08069095, -1.057167  ,  0.47643146, ...,  1.2891504 ,
           0.71851194, -2.985407  ],
         ...,
         [ 0.6344319 ,  0.18934847,  0.703866  , ...,         nan,
           0.6985562 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988598 ,         nan],
         [        nan,  1.3265866 , -0.05993365, ...,         nan,
           0.43971458,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551508 ],
         [        nan,  1.122354  ,         nan, ...,  1.0706749 ,
           0.33455557,  0.23681669],
         [ 0.08069095, -1.057167  ,  0.47643146, ...,  1.2891504 ,
           0.71851194, -2.985407  ],
         ...,
         [ 0.6344319 ,  0.18934847,  0.703866  , ...,         nan,
           0.6985562 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988598 ,         nan],
         [        nan,  1.3265866 , -0.05993365, ...,         nan,
           0.43971458,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551508 ],
         [        nan,  1.122354  ,         nan, ...,  1.0706749 ,
           0.33455557,  0.23681669],
         [ 0.08069095, -1.057167  ,  0.47643146, ...,  1.2891504 ,
           0.71851194, -2.985407  ],
         ...,
         [ 0.6344319 ,  0.18934847,  0.703866  , ...,         nan,
           0.6985562 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988598 ,         nan],
         [        nan,  1.3265866 , -0.05993365, ...,         nan,
           0.43971458,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551508 ],
         [        nan,  1.122354  ,         nan, ...,  1.0706749 ,
           0.33455557,  0.23681669],
         [ 0.08069095, -1.057167  ,  0.47643146, ...,  1.2891504 ,
           0.71851194, -2.985407  ],
         ...,
         [ 0.6344319 ,  0.18934847,  0.703866  , ...,         nan,
           0.6985562 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988598 ,         nan],
         [        nan,  1.3265866 , -0.05993365, ...,         nan,
           0.43971458,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551508 ],
         [        nan,  1.122354  ,         nan, ...,  1.0706749 ,
           0.33455557,  0.23681669],
         [ 0.08069095, -1.057167  ,  0.47643146, ...,  1.2891504 ,
           0.71851194, -2.985407  ],
         ...,
         [ 0.6344319 ,  0.18934847,  0.703866  , ...,         nan,
           0.6985562 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988598 ,         nan],
         [        nan,  1.3265866 , -0.05993365, ...,         nan,
           0.43971458,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551508 ],
         [        nan,  1.122354  ,         nan, ...,  1.0706749 ,
           0.33455557,  0.23681669],
         [ 0.08069095, -1.057167  ,  0.47643146, ...,  1.2891504 ,
           0.71851194, -2.985407  ],
         ...,
         [ 0.6344319 ,  0.18934847,  0.703866  , ...,         nan,
           0.6985562 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988598 ,         nan],
         [        nan,  1.3265866 , -0.05993365, ...,         nan,
           0.43971458,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [0], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891513 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891513 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891513 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891513 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891513 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan, -0.8551475 ],
         [        nan,  1.1223563 ,         nan, ...,  1.0706749 ,
           0.33455274,  0.23681387],
         [ 0.08069386, -1.0571699 ,  0.47643387, ...,  1.2891513 ,
           0.71851337, -2.9854047 ],
         ...,
         [ 0.63443184,  0.18934996,  0.70386744, ...,         nan,
           0.6985576 ,         nan],
         [        nan,  0.6122843 ,         nan, ...,         nan,
           0.4988622 ,         nan],
         [        nan,  1.3265865 , -0.05993367, ...,         nan,
           0.4397168 ,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [0], 'to': [1]}

generate models:348

analyse output arrays in iter:370

pre layer res:
22:exp
{'name': 'exp', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [15], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [22], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [22], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [22], 'to': []}

generate models:361

analyse output arrays in iter:372

pre layer res:
14:reshape
{'name': 'reshape', 'output': array([[[[          inf,           inf, 4.0893686e+31, ...,
                    inf, 1.7716226e+38, 1.0000000e+00],
         [          inf,           inf, 3.6675671e+12, ...,
          2.9531041e+18,           inf,           inf],
         [          inf, 2.1965409e+14, 1.0668493e+04, ...,
          1.2077061e+34, 1.2859568e+30, 1.6876985e+24],
         ...,
         [1.0000000e+00,           inf,           inf, ...,
          5.9860072e+22,           inf,           inf],
         [          inf,           inf,           inf, ...,
          1.0000000e+00, 3.7472997e+19, 6.6042544e+03],
         [4.1728215e+22, 1.2185084e+29, 1.0000000e+00, ...,
                    inf,           inf, 1.9793566e+34]],

        [[          inf,           inf, 4.0893686e+31, ...,
                    inf, 1.7716226e+38, 1.0000000e+00],
         [          inf,           inf, 3.6675671e+12, ...,
          2.9531041e+18,           inf,           inf],
         [          inf, 2.1965409e+14, 1.0668493e+04, ...,
          1.2077061e+34, 1.2859568e+30, 1.6876985e+24],
         ...,
         [1.0000000e+00,           inf,           inf, ...,
          5.9860072e+22,           inf,           inf],
         [          inf,           inf,           inf, ...,
          1.0000000e+00, 3.7472997e+19, 6.6042544e+03],
         [4.1728215e+22, 1.2185084e+29, 1.0000000e+00, ...,
                    inf,           inf, 1.9793566e+34]],

        [[          inf,           inf, 4.0893686e+31, ...,
                    inf, 1.7716226e+38, 1.0000000e+00],
         [          inf,           inf, 3.6675671e+12, ...,
          2.9531041e+18,           inf,           inf],
         [          inf, 2.1965409e+14, 1.0668493e+04, ...,
          1.2077061e+34, 1.2859568e+30, 1.6876985e+24],
         ...,
         [1.0000000e+00,           inf,           inf, ...,
          5.9860072e+22,           inf,           inf],
         [          inf,           inf,           inf, ...,
          1.0000000e+00, 3.7472997e+19, 6.6042544e+03],
         [4.1728215e+22, 1.2185084e+29, 1.0000000e+00, ...,
                    inf,           inf, 1.9793566e+34]],

        ...,

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [13], 'to': [22]}
tf node:
{'name': 'softmax', 'output': array([[[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         ...,
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         ...,
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         ...,
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]],

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]],

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [14], 'to': [11]}
ms node:
{'name': 'softmax', 'output': array([[[[   nan,    nan, 0.    , ...,    nan, 0.    , 0.    ],
         [   nan,    nan, 0.    , ..., 0.    ,    nan,    nan],
         [   nan, 0.    , 0.    , ..., 0.    , 0.    , 0.    ],
         ...,
         [0.    ,    nan,    nan, ..., 0.    ,    nan,    nan],
         [   nan,    nan,    nan, ..., 0.    , 0.    , 0.    ],
         [0.    , 0.    , 0.    , ...,    nan,    nan, 0.    ]],

        [[   nan,    nan, 0.    , ...,    nan, 0.    , 0.    ],
         [   nan,    nan, 0.    , ..., 0.    ,    nan,    nan],
         [   nan, 0.    , 0.    , ..., 0.    , 0.    , 0.    ],
         ...,
         [0.    ,    nan,    nan, ..., 0.    ,    nan,    nan],
         [   nan,    nan,    nan, ..., 0.    , 0.    , 0.    ],
         [0.    , 0.    , 0.    , ...,    nan,    nan, 0.    ]],

        [[   nan,    nan, 0.    , ...,    nan, 0.    , 0.    ],
         [   nan,    nan, 0.    , ..., 0.    ,    nan,    nan],
         [   nan, 0.    , 0.    , ..., 0.    , 0.    , 0.    ],
         ...,
         [0.    ,    nan,    nan, ..., 0.    ,    nan,    nan],
         [   nan,    nan,    nan, ..., 0.    , 0.    , 0.    ],
         [0.    , 0.    , 0.    , ...,    nan,    nan, 0.    ]],

        ...,

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]],

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]],

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]]]],
      dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [14], 'to': [11]}
torch node:
{'name': 'softmax', 'output': array([[[[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         ...,
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         ...,
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        [[   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         ...,
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan],
         [   nan,    nan,    nan, ...,    nan,    nan,    nan]],

        ...,

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]],

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]],

        [[0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         ...,
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625],
         [0.0625, 0.0625, 0.0625, ..., 0.0625, 0.0625, 0.0625]]]],
      dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [14], 'to': [11]}

generate models:363

analyse output arrays in iter:381

pre layer res:
6:relu
{'name': 'relu', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [13], 'to': [12]}
tf node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [6], 'to': [7]}
ms node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [6], 'to': [7]}
torch node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [6], 'to': [7]}

generate models:372

analyse output arrays in iter:388

pre layer res:
11:transpose
{'name': 'transpose', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [11], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [11], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [11], 'to': []}

generate models:379

analyse output arrays in iter:397

pre layer res:
18:exp
{'name': 'exp', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [18], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [18], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [18], 'to': []}

generate models:387

analyse output arrays in iter:418

pre layer res:
23:square
{'name': 'square', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [13], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [23], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [23], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [23], 'to': []}

generate models:408

analyse output arrays in iter:434

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [21], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:423

analyse output arrays in iter:438

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         ...,
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.]],

        [[8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         ...,
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.]],

        [[8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         ...,
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.]],

        ...,

        [[      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         ...,
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.]],

        [[      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         ...,
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.]],

        [[      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         ...,
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [16], 'to': [11, 25]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [17]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.65775585, ..., -0.35269696,
           0.2007848 , -0.60765195],
         [ 0.4322482 ,  0.4322482 ,  0.65775585, ..., -0.35269696,
           0.2007848 , -0.60765195]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [17]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [17]}

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         ...,
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.]],

        [[8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         ...,
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.]],

        [[8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         ...,
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.],
         [8388608., 8388608., 8012777., ..., 8100996., 8353724.,
          8201937.]],

        ...,

        [[      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         ...,
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.]],

        [[      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         ...,
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.]],

        [[      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         ...,
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.],
         [      0.,       0.,       0., ...,       0.,       0.,
                0.]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [16], 'to': [11, 25]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.4111882 , ..., -0.35269693,
           0.2007848 , -0.9140262 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [17]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.65775585, ..., -0.35269696,
           0.2007848 , -0.60765195],
         [ 0.4322482 ,  0.4322482 ,  0.65775585, ..., -0.35269696,
           0.2007848 , -0.60765195]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [17]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        [[ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         ...,
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ],
         [ 0.4322482 ,  0.4322482 ,  0.7978722 , ..., -0.35269696,
           0.2007848 , -0.9140262 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [17]}

generate models:427

analyse output arrays in iter:440

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:429

analyse output arrays in iter:441

pre layer res:
18:flatten
{'name': 'flatten', 'output': array([[0., 0., 0., ..., 0., 0., 0.]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [16], 'to': [21]}
tf node:
{'name': 'log', 'output': array([[-inf, -inf, -inf, ..., -inf, -inf, -inf]], dtype=float32), 'output_shape': TensorShape([1, 32768]), 'from': [18], 'to': [19]}
ms node:
{'name': 'log', 'output': array([[-inf, -inf, -inf, ..., -inf, -inf, -inf]], dtype=float32), 'output_shape': (1, 32768), 'from': [18], 'to': [19]}
torch node:
{'name': 'log', 'output': array([[-inf, -inf, -inf, ..., -inf, -inf, -inf]], dtype=float32), 'output_shape': torch.Size([1, 32768]), 'from': [18], 'to': [19]}

generate models:430

analyse output arrays in iter:446

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[2668915.5  ,  796215.94 ,       0.   , ...,  299064.38 ,
                0.   , 1054302.   ],
         [ 677245.5  ,  527979.94 , 1518529.1  , ..., 1014455.94 ,
           795394.6  ,       0.   ],
         [1039775.94 , 1598820.9  ,  107030.695, ...,  488501.   ,
          1783684.6  , 1493472.   ],
         ...,
         [1361797.   ,  830152.2  , 1575461.2  , ..., 1229567.9  ,
           337422.47 ,  933245.8  ],
         [2305614.5  , 2134148.   ,  892458.3  , ..., 1608139.1  ,
           447910.84 ,  443224.03 ],
         [ 512188.03 ,       0.   , 1356928.1  , ...,  676583.94 ,
          1073170.   , 2321003.5  ]],

        [[2668915.5  ,  796215.94 ,       0.   , ...,  299064.38 ,
                0.   , 1054302.   ],
         [ 677245.5  ,  527979.94 , 1518529.1  , ..., 1014455.94 ,
           795394.6  ,       0.   ],
         [1039775.94 , 1598820.9  ,  107030.695, ...,  488501.   ,
          1783684.6  , 1493472.   ],
         ...,
         [1361797.   ,  830152.2  , 1575461.2  , ..., 1229567.9  ,
           337422.47 ,  933245.8  ],
         [2305614.5  , 2134148.   ,  892458.3  , ..., 1608139.1  ,
           447910.84 ,  443224.03 ],
         [ 512188.03 ,       0.   , 1356928.1  , ...,  676583.94 ,
          1073170.   , 2321003.5  ]],

        [[2668915.5  ,  796215.94 ,       0.   , ...,  299064.38 ,
                0.   , 1054302.   ],
         [ 677245.5  ,  527979.94 , 1518529.1  , ..., 1014455.94 ,
           795394.6  ,       0.   ],
         [1039775.94 , 1598820.9  ,  107030.695, ...,  488501.   ,
          1783684.6  , 1493472.   ],
         ...,
         [1361797.   ,  830152.2  , 1575461.2  , ..., 1229567.9  ,
           337422.47 ,  933245.8  ],
         [2305614.5  , 2134148.   ,  892458.3  , ..., 1608139.1  ,
           447910.84 ,  443224.03 ],
         [ 512188.03 ,       0.   , 1356928.1  , ...,  676583.94 ,
          1073170.   , 2321003.5  ]],

        ...,

        [[2668915.5  ,  796215.94 ,       0.   , ...,  299064.38 ,
                0.   , 1054302.   ],
         [ 677245.5  ,  527979.94 , 1518529.1  , ..., 1014455.94 ,
           795394.6  ,       0.   ],
         [1039775.94 , 1598820.9  ,  107030.695, ...,  488501.   ,
          1783684.6  , 1493472.   ],
         ...,
         [1361797.   ,  830152.2  , 1575461.2  , ..., 1229567.9  ,
           337422.47 ,  933245.8  ],
         [2305614.5  , 2134148.   ,  892458.3  , ..., 1608139.1  ,
           447910.84 ,  443224.03 ],
         [ 512188.03 ,       0.   , 1356928.1  , ...,  676583.94 ,
          1073170.   , 2321003.5  ]],

        [[2668915.5  ,  796215.94 ,       0.   , ...,  299064.38 ,
                0.   , 1054302.   ],
         [ 677245.5  ,  527979.94 , 1518529.1  , ..., 1014455.94 ,
           795394.6  ,       0.   ],
         [1039775.94 , 1598820.9  ,  107030.695, ...,  488501.   ,
          1783684.6  , 1493472.   ],
         ...,
         [1361797.   ,  830152.2  , 1575461.2  , ..., 1229567.9  ,
           337422.47 ,  933245.8  ],
         [2305614.5  , 2134148.   ,  892458.3  , ..., 1608139.1  ,
           447910.84 ,  443224.03 ],
         [ 512188.03 ,       0.   , 1356928.1  , ...,  676583.94 ,
          1073170.   , 2321003.5  ]],

        [[2668915.5  ,  796215.94 ,       0.   , ...,  299064.38 ,
                0.   , 1054302.   ],
         [ 677245.5  ,  527979.94 , 1518529.1  , ..., 1014455.94 ,
           795394.6  ,       0.   ],
         [1039775.94 , 1598820.9  ,  107030.695, ...,  488501.   ,
          1783684.6  , 1493472.   ],
         ...,
         [1361797.   ,  830152.2  , 1575461.2  , ..., 1229567.9  ,
           337422.47 ,  933245.8  ],
         [2305614.5  , 2134148.   ,  892458.3  , ..., 1608139.1  ,
           447910.84 ,  443224.03 ],
         [ 512188.03 ,       0.   , 1356928.1  , ...,  676583.94 ,
          1073170.   , 2321003.5  ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [16]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.86541563, ..., -0.44274667,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.5819515 ,
           0.15652283, -0.95330125],
         ...,
         [-0.16240336,  0.44927692, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.86541563, ..., -0.44274667,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.5819515 ,
           0.15652283, -0.95330125],
         ...,
         [-0.16240336,  0.44927692, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.86541563, ..., -0.44274667,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.5819515 ,
           0.15652283, -0.95330125],
         ...,
         [-0.16240336,  0.44927692, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        ...,

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.86541563, ..., -0.44274667,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.5819515 ,
           0.15652283, -0.95330125],
         ...,
         [-0.16240336,  0.44927692, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.86541563, ..., -0.44274667,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.5819515 ,
           0.15652283, -0.95330125],
         ...,
         [-0.16240336,  0.44927692, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.86541563, ..., -0.44274667,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.5819515 ,
           0.15652283, -0.95330125],
         ...,
         [-0.16240336,  0.44927692, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [12]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        ...,

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[-0.88445264, -0.29571134,  1.        , ..., -0.69232404,
           1.        ,  0.8869898 ],
         [ 0.9027376 , -0.74213576, -0.8892091 , ..., -0.4427467 ,
           0.33774257,  1.        ],
         [-0.9922411 , -0.7143214 , -0.9193032 , ..., -0.99439573,
          -0.17288865, -0.95330125],
         ...,
         [ 0.44562665,  0.60793394,  0.65359   , ...,  0.3397619 ,
          -0.74670035, -0.82939744],
         [ 0.6204104 ,  0.31093287, -0.8462235 , ...,  0.8540495 ,
           0.8071387 , -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.77572006,  0.99289376]],

        [[-0.88445264, -0.29571134,  1.        , ..., -0.69232404,
           1.        ,  0.8869898 ],
         [ 0.9027376 , -0.74213576, -0.8892091 , ..., -0.4427467 ,
           0.33774257,  1.        ],
         [-0.9922411 , -0.7143214 , -0.9193032 , ..., -0.99439573,
          -0.17288865, -0.95330125],
         ...,
         [ 0.44562665,  0.60793394,  0.65359   , ...,  0.3397619 ,
          -0.74670035, -0.82939744],
         [ 0.6204104 ,  0.31093287, -0.8462235 , ...,  0.8540495 ,
           0.8071387 , -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.77572006,  0.99289376]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [12]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        ...,

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]],

        [[ 0.8287735 , -0.29571134,  1.        , ..., -0.89501053,
           1.        , -0.70626956],
         [ 0.9811048 , -0.74213576, -0.8654156 , ..., -0.4427467 ,
           0.99628526,  1.        ],
         [-0.9922411 ,  0.02905715, -0.97483814, ..., -0.58195156,
           0.15652281, -0.95330125],
         ...,
         [-0.16240336,  0.44927695, -0.9421242 , ...,  0.3397619 ,
          -0.9581841 , -0.40187573],
         [ 0.9398964 ,  0.2880912 ,  0.5778916 , ..., -0.25430423,
           0.15738219, -0.28182906],
         [-0.04375434,  1.        ,  0.4173136 , ..., -0.43672183,
          -0.36974764,  0.4260147 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [12]}

generate models:435

analyse output arrays in iter:461

pre layer res:
20:cos
{'name': 'cos', 'output': array([[[[-0.86066115,  0.91365236, -0.8001085 , ...,  0.7501355 ,
          -0.71091956,  0.09934731],
         [ 0.02487911,  0.8850208 , -0.9632669 , ...,  0.35816252,
          -0.71415156,  0.6931682 ],
         [ 0.976697  ,  0.6213775 , -0.5100279 , ...,  0.8257882 ,
           0.9735596 ,  0.9992653 ],
         ...,
         [-0.99888045,  0.99989617, -0.95435333, ...,  0.06532789,
           0.83506453,  0.66009563],
         [ 0.9994654 ,  0.29084438,  0.18896544, ...,  0.16063702,
          -0.16956137, -0.08094973],
         [-0.69860554, -0.60671437, -0.83770657, ..., -0.18610585,
          -0.9423153 ,  0.9993898 ]],

        [[-0.86066115,  0.91365236, -0.8001085 , ...,  0.7501355 ,
          -0.71091956,  0.09934731],
         [ 0.02487911,  0.8850208 , -0.9632669 , ...,  0.35816252,
          -0.71415156,  0.6931682 ],
         [ 0.976697  ,  0.6213775 , -0.5100279 , ...,  0.8257882 ,
           0.9735596 ,  0.9992653 ],
         ...,
         [-0.99888045,  0.99989617, -0.95435333, ...,  0.06532789,
           0.83506453,  0.66009563],
         [ 0.9994654 ,  0.29084438,  0.18896544, ...,  0.16063702,
          -0.16956137, -0.08094973],
         [-0.69860554, -0.60671437, -0.83770657, ..., -0.18610585,
          -0.9423153 ,  0.9993898 ]],

        [[-0.86066115,  0.91365236, -0.8001085 , ...,  0.7501355 ,
          -0.71091956,  0.09934731],
         [ 0.02487911,  0.8850208 , -0.9632669 , ...,  0.35816252,
          -0.71415156,  0.6931682 ],
         [ 0.976697  ,  0.6213775 , -0.5100279 , ...,  0.8257882 ,
           0.9735596 ,  0.9992653 ],
         ...,
         [-0.99888045,  0.99989617, -0.95435333, ...,  0.06532789,
           0.83506453,  0.66009563],
         [ 0.9994654 ,  0.29084438,  0.18896544, ...,  0.16063702,
          -0.16956137, -0.08094973],
         [-0.69860554, -0.60671437, -0.83770657, ..., -0.18610585,
          -0.9423153 ,  0.9993898 ]],

        ...,

        [[-0.86066115,  0.91365236, -0.8001085 , ...,  0.7501355 ,
          -0.71091956,  0.09934731],
         [ 0.02487911,  0.8850208 , -0.9632669 , ...,  0.35816252,
          -0.71415156,  0.6931682 ],
         [ 0.976697  ,  0.6213775 , -0.5100279 , ...,  0.8257882 ,
           0.9735596 ,  0.9992653 ],
         ...,
         [-0.99888045,  0.99989617, -0.95435333, ...,  0.06532789,
           0.83506453,  0.66009563],
         [ 0.9994654 ,  0.29084438,  0.18896544, ...,  0.16063702,
          -0.16956137, -0.08094973],
         [-0.69860554, -0.60671437, -0.83770657, ..., -0.18610585,
          -0.9423153 ,  0.9993898 ]],

        [[-0.86066115,  0.91365236, -0.8001085 , ...,  0.7501355 ,
          -0.71091956,  0.09934731],
         [ 0.02487911,  0.8850208 , -0.9632669 , ...,  0.35816252,
          -0.71415156,  0.6931682 ],
         [ 0.976697  ,  0.6213775 , -0.5100279 , ...,  0.8257882 ,
           0.9735596 ,  0.9992653 ],
         ...,
         [-0.99888045,  0.99989617, -0.95435333, ...,  0.06532789,
           0.83506453,  0.66009563],
         [ 0.9994654 ,  0.29084438,  0.18896544, ...,  0.16063702,
          -0.16956137, -0.08094973],
         [-0.69860554, -0.60671437, -0.83770657, ..., -0.18610585,
          -0.9423153 ,  0.9993898 ]],

        [[-0.86066115,  0.91365236, -0.8001085 , ...,  0.7501355 ,
          -0.71091956,  0.09934731],
         [ 0.02487911,  0.8850208 , -0.9632669 , ...,  0.35816252,
          -0.71415156,  0.6931682 ],
         [ 0.976697  ,  0.6213775 , -0.5100279 , ...,  0.8257882 ,
           0.9735596 ,  0.9992653 ],
         ...,
         [-0.99888045,  0.99989617, -0.95435333, ...,  0.06532789,
           0.83506453,  0.66009563],
         [ 0.9994654 ,  0.29084438,  0.18896544, ...,  0.16063702,
          -0.16956137, -0.08094973],
         [-0.69860554, -0.60671437, -0.83770657, ..., -0.18610585,
          -0.9423153 ,  0.9993898 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [17]}
tf node:
{'name': 'log', 'output': array([[[[           nan, -9.0305127e-02,            nan, ...,
          -2.8750145e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750145e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750145e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        ...,

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750145e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750145e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750145e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [20], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[           nan, -9.0306118e-02,            nan, ...,
          -2.8750375e-01,            nan, -2.3091359e+00],
         [-3.6937292e+00, -1.2214513e-01,            nan, ...,
          -1.0267656e+00,            nan, -3.6647972e-01],
         [-2.3580210e-02, -4.7581565e-01,            nan, ...,
          -1.9141936e-01, -2.6797645e-02, -7.3638739e-04],
         ...,
         [           nan, -1.0526720e-04,            nan, ...,
          -2.7283328e+00, -1.8024956e-01, -4.1537249e-01],
         [-5.3616753e-04, -1.2349685e+00, -1.6661934e+00, ...,
          -1.8286052e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1178947e-04]],

        [[           nan, -9.0306118e-02,            nan, ...,
          -2.8750375e-01,            nan, -2.3091359e+00],
         [-3.6937292e+00, -1.2214513e-01,            nan, ...,
          -1.0267656e+00,            nan, -3.6647972e-01],
         [-2.3580210e-02, -4.7581565e-01,            nan, ...,
          -1.9141936e-01, -2.6797645e-02, -7.3638739e-04],
         ...,
         [           nan, -1.0526720e-04,            nan, ...,
          -2.7283328e+00, -1.8024956e-01, -4.1537249e-01],
         [-5.3616753e-04, -1.2349685e+00, -1.6661934e+00, ...,
          -1.8286052e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1178947e-04]],

        [[           nan, -9.0306118e-02,            nan, ...,
          -2.8750375e-01,            nan, -2.3091359e+00],
         [-3.6937292e+00, -1.2214513e-01,            nan, ...,
          -1.0267656e+00,            nan, -3.6647972e-01],
         [-2.3580210e-02, -4.7581565e-01,            nan, ...,
          -1.9141936e-01, -2.6797645e-02, -7.3638739e-04],
         ...,
         [           nan, -1.0526720e-04,            nan, ...,
          -2.7283328e+00, -1.8024956e-01, -4.1537249e-01],
         [-5.3616753e-04, -1.2349685e+00, -1.6661934e+00, ...,
          -1.8286052e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1178947e-04]],

        ...,

        [[           nan, -9.0306118e-02,            nan, ...,
          -2.8750375e-01,            nan, -2.3091359e+00],
         [-3.6937292e+00, -1.2214513e-01,            nan, ...,
          -1.0267656e+00,            nan, -3.6647972e-01],
         [-2.3580210e-02, -4.7581565e-01,            nan, ...,
          -1.9141936e-01, -2.6797645e-02, -7.3638739e-04],
         ...,
         [           nan, -1.0526720e-04,            nan, ...,
          -2.7283328e+00, -1.8024956e-01, -4.1537249e-01],
         [-5.3616753e-04, -1.2349685e+00, -1.6661934e+00, ...,
          -1.8286052e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1178947e-04]],

        [[           nan, -9.0306118e-02,            nan, ...,
          -2.8750375e-01,            nan, -2.3091359e+00],
         [-3.6937292e+00, -1.2214513e-01,            nan, ...,
          -1.0267656e+00,            nan, -3.6647972e-01],
         [-2.3580210e-02, -4.7581565e-01,            nan, ...,
          -1.9141936e-01, -2.6797645e-02, -7.3638739e-04],
         ...,
         [           nan, -1.0526720e-04,            nan, ...,
          -2.7283328e+00, -1.8024956e-01, -4.1537249e-01],
         [-5.3616753e-04, -1.2349685e+00, -1.6661934e+00, ...,
          -1.8286052e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1178947e-04]],

        [[           nan, -9.0306118e-02,            nan, ...,
          -2.8750375e-01,            nan, -2.3091359e+00],
         [-3.6937292e+00, -1.2214513e-01,            nan, ...,
          -1.0267656e+00,            nan, -3.6647972e-01],
         [-2.3580210e-02, -4.7581565e-01,            nan, ...,
          -1.9141936e-01, -2.6797645e-02, -7.3638739e-04],
         ...,
         [           nan, -1.0526720e-04,            nan, ...,
          -2.7283328e+00, -1.8024956e-01, -4.1537249e-01],
         [-5.3616753e-04, -1.2349685e+00, -1.6661934e+00, ...,
          -1.8286052e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1178947e-04]]]],
      dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [20], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[           nan, -9.0305127e-02,            nan, ...,
          -2.8750151e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750151e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750151e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        ...,

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750151e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750151e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]],

        [[           nan, -9.0305127e-02,            nan, ...,
          -2.8750151e-01,            nan, -2.3091335e+00],
         [-3.6937268e+00, -1.2214414e-01,            nan, ...,
          -1.0267684e+00,            nan, -3.6648256e-01],
         [-2.3578780e-02, -4.7581643e-01,            nan, ...,
          -1.9141695e-01, -2.6796214e-02, -7.3495688e-04],
         ...,
         [           nan, -1.0383668e-04,            nan, ...,
          -2.7283363e+00, -1.8024628e-01, -4.1537055e-01],
         [-5.3473702e-04, -1.2349670e+00, -1.6661911e+00, ...,
          -1.8286080e+00,            nan,            nan],
         [           nan,            nan,            nan, ...,
                     nan,            nan, -6.1035895e-04]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [20], 'to': [1]}

generate models:449

analyse output arrays in iter:465

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [20]}
23:reshape
{'name': 'reshape', 'output': array([[[[5.053456 , 5.055611 , 5.0436954, ..., 5.052592 , 5.054638 ,
          5.0549674],
         [5.0547795, 5.0541096, 5.051495 , ..., 5.0527444, 5.0340767,
          5.0482955],
         [2.0710247, 5.049633 , 4.977961 , ..., 5.058122 , 5.052628 ,
          5.057402 ],
         ...,
         [     -inf, 5.0481367, 5.033217 , ..., 5.0549765, 5.038564 ,
          5.0567875],
         [5.0413313, 5.05004  , 5.0463576, ..., 5.0534945, 5.05348  ,
          5.04216  ],
         [5.039771 , 5.0519047, 5.0522532, ..., 5.0552874, 5.0303044,
          5.0492992]],

        [[5.032391 , 5.0209527,      -inf, ..., 5.0497475, 5.0563397,
          5.0510564],
         [5.0250196, 5.0465426, 5.054263 , ..., 5.0494366, 5.051344 ,
          5.0499253],
         [4.944411 , 5.050288 , 5.046413 , ..., 5.030806 , 5.036191 ,
          5.0546207],
         ...,
         [5.0521283, 5.056486 , 5.046767 , ..., 5.0576606, 5.0243793,
          5.050088 ],
         [5.036969 , 5.055837 , 5.0542903, ..., 5.050636 , 5.0522285,
          5.0485253],
         [5.0496864, 5.0553727, 5.047236 , ..., 5.047677 , 5.0538044,
               -inf]],

        [[5.047252 , 5.0468316, 5.0529   , ..., 5.0301056, 5.0474625,
          5.053395 ],
         [5.0519705, 4.9763565, 5.033677 , ..., 5.056163 , 5.0419836,
          5.0480347],
         [5.0547204, 5.051903 , 5.050423 , ..., 5.0434437, 5.056817 ,
          5.055003 ],
         ...,
         [     -inf, 5.055109 , 5.04733  , ..., 5.0520153, 4.9969773,
          5.0575514],
         [5.053362 , 5.050957 , 5.0573936, ..., 5.045349 , 5.04871  ,
          5.0447407],
         [5.0565324, 5.0407   , 5.0159016, ..., 5.048604 , 5.0171833,
          5.0553503]],

        ...,

        [[5.032391 , 5.0209527,      -inf, ..., 5.0497475, 5.0563397,
          5.0510564],
         [5.0250196, 5.0465426, 5.054263 , ..., 5.0494366, 5.051344 ,
          5.0499253],
         [4.944411 , 5.050288 , 5.046413 , ..., 5.030806 , 5.036191 ,
          5.0546207],
         ...,
         [5.0521283, 5.056486 , 5.046767 , ..., 5.0576606, 5.0243793,
          5.050088 ],
         [5.036969 , 5.055837 , 5.0542903, ..., 5.050636 , 5.0522285,
          5.0485253],
         [5.0496864, 5.0553727, 5.047236 , ..., 5.047677 , 5.0538044,
               -inf]],

        [[5.047252 , 5.0468316, 5.0529   , ..., 5.0301056, 5.0474625,
          5.053395 ],
         [5.0519705, 4.9763565, 5.033677 , ..., 5.056163 , 5.0419836,
          5.0480347],
         [5.0547204, 5.051903 , 5.050423 , ..., 5.0434437, 5.056817 ,
          5.055003 ],
         ...,
         [     -inf, 5.055109 , 5.04733  , ..., 5.0520153, 4.9969773,
          5.0575514],
         [5.053362 , 5.050957 , 5.0573936, ..., 5.045349 , 5.04871  ,
          5.0447407],
         [5.0565324, 5.0407   , 5.0159016, ..., 5.048604 , 5.0171833,
          5.0553503]],

        [[5.0525126, 5.0495996, 5.057502 , ..., 5.0349975, 5.0391335,
          5.055935 ],
         [5.055516 , 5.055198 , 5.0250998, ..., 5.03814  , 5.0450745,
          5.057375 ],
         [5.052167 , 5.040882 , 5.050767 , ..., 5.0459304, 5.0287733,
          5.0569634],
         ...,
         [     -inf, 5.055114 , 5.0421963, ..., 5.0035276, 5.054592 ,
          5.041297 ],
         [5.0392203, 5.0506034, 5.0552626, ..., 5.04216  , 5.0071583,
          5.0542035],
         [5.0574293, 5.0180564, 5.0527687, ..., 5.0551066, 5.050817 ,
          5.048066 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [22], 'to': [20]}
tf node:
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, nan, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, nan]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, nan, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, nan]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [9, 23], 'to': [17]}
ms node:
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, nan, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, nan]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, nan, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, nan]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 128, 8, 8), 'from': [9, 23], 'to': [17]}
torch node:
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, nan, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, nan]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, nan, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, nan]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [nan, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 8, 8]), 'from': [9, 23], 'to': [17]}

generate models:453

analyse output arrays in iter:472

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         ...,
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306]],

        [[7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         ...,
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306]],

        [[7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         ...,
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306]],

        ...,

        [[7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         ...,
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306]],

        [[7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         ...,
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306]],

        [[7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         ...,
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306],
         [7610.047 , 7221.562 , 7764.438 , ..., 7326.639 , 7219.83  ,
          7084.8306]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [20]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        ...,

        [[ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89546204,  0.8189041 , -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [9]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        ...,

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         ...,
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467]],

        [[ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         ...,
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467],
         [ 0.8897388 ,  0.81890404, -0.9999659 , ...,  0.439773  ,
           0.44650495, -0.52424467]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [9]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        ...,

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]],

        [[ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         ...,
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ],
         [ 0.89567924,  0.81890404, -0.9999659 , ...,  0.43054092,
           0.43510976, -0.5133918 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [9]}

generate models:460

analyse output arrays in iter:475

pre layer res:
9:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 8, 8]), 'from': [8], 'to': [10]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 8, 8]), 'from': [9], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 256, 8, 8), 'from': [9], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 8, 8]), 'from': [9], 'to': []}

generate models:463

analyse output arrays in iter:483

pre layer res:
7:conv2d
{'name': 'conv2d', 'output': array([[[[0.00000000e+00, 0.00000000e+00, 3.20000000e+01, ...,
          1.07327564e-32, 3.20000000e+01, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          3.19999847e+01, 0.00000000e+00, 2.89737345e-05],
         [2.32358047e-07, 5.66183757e-30, 2.45770537e-32, ...,
          3.84066735e-36, 1.10956731e-20, 1.14902613e-16],
         ...,
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          0.00000000e+00, 3.20000000e+01, 3.20000000e+01],
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          2.96599645e-19, 0.00000000e+00, 0.00000000e+00],
         [2.38934904e-03, 6.40000000e+01, 0.00000000e+00, ...,
          3.20000000e+01, 6.02472878e-13, 3.19976177e+01]],

        [[0.00000000e+00, 0.00000000e+00, 3.20000000e+01, ...,
          1.07327564e-32, 3.20000000e+01, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          3.19999847e+01, 0.00000000e+00, 2.89737345e-05],
         [2.32358047e-07, 5.66183757e-30, 2.45770537e-32, ...,
          3.84066735e-36, 1.10956731e-20, 1.14902613e-16],
         ...,
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          0.00000000e+00, 3.20000000e+01, 3.20000000e+01],
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          2.96599645e-19, 0.00000000e+00, 0.00000000e+00],
         [2.38934904e-03, 6.40000000e+01, 0.00000000e+00, ...,
          3.20000000e+01, 6.02472878e-13, 3.19976177e+01]],

        [[0.00000000e+00, 0.00000000e+00, 3.20000000e+01, ...,
          1.07327564e-32, 3.20000000e+01, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          3.19999847e+01, 0.00000000e+00, 2.89737345e-05],
         [2.32358047e-07, 5.66183757e-30, 2.45770537e-32, ...,
          3.84066735e-36, 1.10956731e-20, 1.14902613e-16],
         ...,
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          0.00000000e+00, 3.20000000e+01, 3.20000000e+01],
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          2.96599645e-19, 0.00000000e+00, 0.00000000e+00],
         [2.38934904e-03, 6.40000000e+01, 0.00000000e+00, ...,
          3.20000000e+01, 6.02472878e-13, 3.19976177e+01]],

        ...,

        [[0.00000000e+00, 0.00000000e+00, 3.20000000e+01, ...,
          1.07327564e-32, 3.20000000e+01, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          3.19999847e+01, 0.00000000e+00, 2.89737345e-05],
         [2.32358047e-07, 5.66183757e-30, 2.45770537e-32, ...,
          3.84066735e-36, 1.10956731e-20, 1.14902613e-16],
         ...,
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          0.00000000e+00, 3.20000000e+01, 3.20000000e+01],
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          2.96599645e-19, 0.00000000e+00, 0.00000000e+00],
         [2.38934904e-03, 6.40000000e+01, 0.00000000e+00, ...,
          3.20000000e+01, 6.02472878e-13, 3.19976177e+01]],

        [[0.00000000e+00, 0.00000000e+00, 3.20000000e+01, ...,
          1.07327564e-32, 3.20000000e+01, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          3.19999847e+01, 0.00000000e+00, 2.89737345e-05],
         [2.32358047e-07, 5.66183757e-30, 2.45770537e-32, ...,
          3.84066735e-36, 1.10956731e-20, 1.14902613e-16],
         ...,
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          0.00000000e+00, 3.20000000e+01, 3.20000000e+01],
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          2.96599645e-19, 0.00000000e+00, 0.00000000e+00],
         [2.38934904e-03, 6.40000000e+01, 0.00000000e+00, ...,
          3.20000000e+01, 6.02472878e-13, 3.19976177e+01]],

        [[0.00000000e+00, 0.00000000e+00, 3.20000000e+01, ...,
          1.07327564e-32, 3.20000000e+01, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          3.19999847e+01, 0.00000000e+00, 2.89737345e-05],
         [2.32358047e-07, 5.66183757e-30, 2.45770537e-32, ...,
          3.84066735e-36, 1.10956731e-20, 1.14902613e-16],
         ...,
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          0.00000000e+00, 3.20000000e+01, 3.20000000e+01],
         [0.00000000e+00, 3.20000000e+01, 0.00000000e+00, ...,
          2.96599645e-19, 0.00000000e+00, 0.00000000e+00],
         [2.38934904e-03, 6.40000000e+01, 0.00000000e+00, ...,
          3.20000000e+01, 6.02472878e-13, 3.19976177e+01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [6], 'to': [23]}
tf node:
{'name': 'log', 'output': array([[[[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 ,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [       -inf,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.036734 ,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 ,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [       -inf,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.036734 ,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 ,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [       -inf,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.036734 ,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        ...,

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 ,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [       -inf,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.036734 ,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 ,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [       -inf,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.036734 ,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 ,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [       -inf,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.036734 ,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [18]}
ms node:
{'name': 'log', 'output': array([[[[       -inf,        -inf,   3.4657345, ..., -73.612015 ,
            3.4657345,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.465734 ,
                 -inf, -10.449117 ],
         [-15.274986 , -67.3438   , -72.7835   , ..., -81.54742  ,
          -45.947746 , -36.702446 ],
         ...,
         [       -inf,   3.4657345,        -inf, ...,        -inf,
            3.4657345,   3.4657345],
         [       -inf,   3.4657345,        -inf, ..., -42.661896 ,
                 -inf,        -inf],
         [ -6.036745 ,   4.1588817,        -inf, ...,   3.4657345,
          -28.137735 ,   3.46566  ]],

        [[       -inf,        -inf,   3.4657345, ..., -73.612015 ,
            3.4657345,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.465734 ,
                 -inf, -10.449117 ],
         [-15.274986 , -67.3438   , -72.7835   , ..., -81.54742  ,
          -45.947746 , -36.702446 ],
         ...,
         [       -inf,   3.4657345,        -inf, ...,        -inf,
            3.4657345,   3.4657345],
         [       -inf,   3.4657345,        -inf, ..., -42.661896 ,
                 -inf,        -inf],
         [ -6.036745 ,   4.1588817,        -inf, ...,   3.4657345,
          -28.137735 ,   3.46566  ]],

        [[       -inf,        -inf,   3.4657345, ..., -73.612015 ,
            3.4657345,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.465734 ,
                 -inf, -10.449117 ],
         [-15.274986 , -67.3438   , -72.7835   , ..., -81.54742  ,
          -45.947746 , -36.702446 ],
         ...,
         [       -inf,   3.4657345,        -inf, ...,        -inf,
            3.4657345,   3.4657345],
         [       -inf,   3.4657345,        -inf, ..., -42.661896 ,
                 -inf,        -inf],
         [ -6.036745 ,   4.1588817,        -inf, ...,   3.4657345,
          -28.137735 ,   3.46566  ]],

        ...,

        [[       -inf,        -inf,   3.4657345, ..., -73.612015 ,
            3.4657345,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.465734 ,
                 -inf, -10.449117 ],
         [-15.274986 , -67.3438   , -72.7835   , ..., -81.54742  ,
          -45.947746 , -36.702446 ],
         ...,
         [       -inf,   3.4657345,        -inf, ...,        -inf,
            3.4657345,   3.4657345],
         [       -inf,   3.4657345,        -inf, ..., -42.661896 ,
                 -inf,        -inf],
         [ -6.036745 ,   4.1588817,        -inf, ...,   3.4657345,
          -28.137735 ,   3.46566  ]],

        [[       -inf,        -inf,   3.4657345, ..., -73.612015 ,
            3.4657345,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.465734 ,
                 -inf, -10.449117 ],
         [-15.274986 , -67.3438   , -72.7835   , ..., -81.54742  ,
          -45.947746 , -36.702446 ],
         ...,
         [       -inf,   3.4657345,        -inf, ...,        -inf,
            3.4657345,   3.4657345],
         [       -inf,   3.4657345,        -inf, ..., -42.661896 ,
                 -inf,        -inf],
         [ -6.036745 ,   4.1588817,        -inf, ...,   3.4657345,
          -28.137735 ,   3.46566  ]],

        [[       -inf,        -inf,   3.4657345, ..., -73.612015 ,
            3.4657345,        -inf],
         [       -inf,        -inf,        -inf, ...,   3.465734 ,
                 -inf, -10.449117 ],
         [-15.274986 , -67.3438   , -72.7835   , ..., -81.54742  ,
          -45.947746 , -36.702446 ],
         ...,
         [       -inf,   3.4657345,        -inf, ...,        -inf,
            3.4657345,   3.4657345],
         [       -inf,   3.4657345,        -inf, ..., -42.661896 ,
                 -inf,        -inf],
         [ -6.036745 ,   4.1588817,        -inf, ...,   3.4657345,
          -28.137735 ,   3.46566  ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [7], 'to': [18]}
torch node:
{'name': 'log', 'output': array([[[[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 , -88.8346   ],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [-85.78621  ,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.0367346,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 , -88.8346   ],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [-85.78621  ,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.0367346,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 , -88.8346   ],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [-85.78621  ,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.0367346,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        ...,

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 , -88.8346   ],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [-85.78621  ,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.0367346,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 , -88.8346   ],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [-85.78621  ,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.0367346,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]],

        [[       -inf,        -inf,   3.465736 , ..., -73.61201  ,
            3.465736 , -88.8346   ],
         [       -inf,        -inf,        -inf, ...,   3.4657354,
                 -inf, -10.4491205],
         [-15.274986 , -67.3438   , -72.78349  , ..., -81.54742  ,
          -45.94773  , -36.702446 ],
         ...,
         [       -inf,   3.465736 ,        -inf, ...,        -inf,
            3.465736 ,   3.465736 ],
         [-85.78621  ,   3.465736 ,        -inf, ..., -42.661903 ,
                 -inf,        -inf],
         [ -6.0367346,   4.158883 ,        -inf, ...,   3.465736 ,
          -28.137733 ,   3.4656615]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [7], 'to': [18]}

generate models:471

analyse output arrays in iter:491

pre layer res:
0:conv2d
{'name': 'conv2d', 'output': array([[[[ 1.974709  ,  1.1667103 , -0.27931398, ..., -1.51807   ,
           0.20481756,  3.6717947 ],
         [ 0.39027637, -1.6368277 , -1.4054447 , ...,  2.3861256 ,
           2.8929746 , -1.1788177 ],
         [ 0.587484  , -0.37144828, -3.0403118 , ..., -1.5657402 ,
           0.07188094, -0.74254286],
         ...,
         [-0.0176806 , -2.8772392 , -1.4508564 , ..., -1.940268  ,
           1.531968  ,  2.039711  ],
         [ 0.50479376, -1.9302534 , -0.64353675, ...,  1.5889533 ,
           2.6284351 ,  2.4424205 ],
         [ 0.2375964 ,  0.37076294,  1.6364379 , ..., -1.1383039 ,
           2.4128346 ,  1.1045046 ]],

        [[ 1.974709  ,  1.1667103 , -0.27931398, ..., -1.51807   ,
           0.20481756,  3.6717947 ],
         [ 0.39027637, -1.6368277 , -1.4054447 , ...,  2.3861256 ,
           2.8929746 , -1.1788177 ],
         [ 0.587484  , -0.37144828, -3.0403118 , ..., -1.5657402 ,
           0.07188094, -0.74254286],
         ...,
         [-0.0176806 , -2.8772392 , -1.4508564 , ..., -1.940268  ,
           1.531968  ,  2.039711  ],
         [ 0.50479376, -1.9302534 , -0.64353675, ...,  1.5889533 ,
           2.6284351 ,  2.4424205 ],
         [ 0.2375964 ,  0.37076294,  1.6364379 , ..., -1.1383039 ,
           2.4128346 ,  1.1045046 ]],

        [[ 1.974709  ,  1.1667103 , -0.27931398, ..., -1.51807   ,
           0.20481756,  3.6717947 ],
         [ 0.39027637, -1.6368277 , -1.4054447 , ...,  2.3861256 ,
           2.8929746 , -1.1788177 ],
         [ 0.587484  , -0.37144828, -3.0403118 , ..., -1.5657402 ,
           0.07188094, -0.74254286],
         ...,
         [-0.0176806 , -2.8772392 , -1.4508564 , ..., -1.940268  ,
           1.531968  ,  2.039711  ],
         [ 0.50479376, -1.9302534 , -0.64353675, ...,  1.5889533 ,
           2.6284351 ,  2.4424205 ],
         [ 0.2375964 ,  0.37076294,  1.6364379 , ..., -1.1383039 ,
           2.4128346 ,  1.1045046 ]],

        ...,

        [[ 1.974709  ,  1.1667103 , -0.27931398, ..., -1.51807   ,
           0.20481756,  3.6717947 ],
         [ 0.39027637, -1.6368277 , -1.4054447 , ...,  2.3861256 ,
           2.8929746 , -1.1788177 ],
         [ 0.587484  , -0.37144828, -3.0403118 , ..., -1.5657402 ,
           0.07188094, -0.74254286],
         ...,
         [-0.0176806 , -2.8772392 , -1.4508564 , ..., -1.940268  ,
           1.531968  ,  2.039711  ],
         [ 0.50479376, -1.9302534 , -0.64353675, ...,  1.5889533 ,
           2.6284351 ,  2.4424205 ],
         [ 0.2375964 ,  0.37076294,  1.6364379 , ..., -1.1383039 ,
           2.4128346 ,  1.1045046 ]],

        [[ 1.974709  ,  1.1667103 , -0.27931398, ..., -1.51807   ,
           0.20481756,  3.6717947 ],
         [ 0.39027637, -1.6368277 , -1.4054447 , ...,  2.3861256 ,
           2.8929746 , -1.1788177 ],
         [ 0.587484  , -0.37144828, -3.0403118 , ..., -1.5657402 ,
           0.07188094, -0.74254286],
         ...,
         [-0.0176806 , -2.8772392 , -1.4508564 , ..., -1.940268  ,
           1.531968  ,  2.039711  ],
         [ 0.50479376, -1.9302534 , -0.64353675, ...,  1.5889533 ,
           2.6284351 ,  2.4424205 ],
         [ 0.2375964 ,  0.37076294,  1.6364379 , ..., -1.1383039 ,
           2.4128346 ,  1.1045046 ]],

        [[ 1.974709  ,  1.1667103 , -0.27931398, ..., -1.51807   ,
           0.20481756,  3.6717947 ],
         [ 0.39027637, -1.6368277 , -1.4054447 , ...,  2.3861256 ,
           2.8929746 , -1.1788177 ],
         [ 0.587484  , -0.37144828, -3.0403118 , ..., -1.5657402 ,
           0.07188094, -0.74254286],
         ...,
         [-0.0176806 , -2.8772392 , -1.4508564 , ..., -1.940268  ,
           1.531968  ,  2.039711  ],
         [ 0.50479376, -1.9302534 , -0.64353675, ...,  1.5889533 ,
           2.6284351 ,  2.4424205 ],
         [ 0.2375964 ,  0.37076294,  1.6364379 , ..., -1.1383039 ,
           2.4128346 ,  1.1045046 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [], 'to': [29]}
tf node:
{'name': 'log', 'output': array([[[[ 0.68042105,  0.15418805,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.6327443 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418805,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.6327443 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418805,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.6327443 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        ...,

        [[ 0.68042105,  0.15418805,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.6327443 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418805,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.6327443 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418805,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.6327443 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[ 0.6804196 ,  0.15418656,         nan, ...,         nan,
          -1.585638  ,  1.3006796 ],
         [-0.94090235,         nan,         nan, ...,  0.8696695 ,
           1.0622852 ,         nan],
         [-0.53190774,         nan,         nan, ...,         nan,
          -2.6327474 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.42655095,  0.7128067 ],
         [-0.68360674,         nan,         nan, ...,  0.46307307,
           0.96638674,  0.89299035],
         [-1.4371818 , -0.99219245,  0.49251947, ...,         nan,
           0.8808008 ,  0.09939747]],

        [[ 0.6804196 ,  0.15418656,         nan, ...,         nan,
          -1.585638  ,  1.3006796 ],
         [-0.94090235,         nan,         nan, ...,  0.8696695 ,
           1.0622852 ,         nan],
         [-0.53190774,         nan,         nan, ...,         nan,
          -2.6327474 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.42655095,  0.7128067 ],
         [-0.68360674,         nan,         nan, ...,  0.46307307,
           0.96638674,  0.89299035],
         [-1.4371818 , -0.99219245,  0.49251947, ...,         nan,
           0.8808008 ,  0.09939747]],

        [[ 0.6804196 ,  0.15418656,         nan, ...,         nan,
          -1.585638  ,  1.3006796 ],
         [-0.94090235,         nan,         nan, ...,  0.8696695 ,
           1.0622852 ,         nan],
         [-0.53190774,         nan,         nan, ...,         nan,
          -2.6327474 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.42655095,  0.7128067 ],
         [-0.68360674,         nan,         nan, ...,  0.46307307,
           0.96638674,  0.89299035],
         [-1.4371818 , -0.99219245,  0.49251947, ...,         nan,
           0.8808008 ,  0.09939747]],

        ...,

        [[ 0.6804196 ,  0.15418656,         nan, ...,         nan,
          -1.585638  ,  1.3006796 ],
         [-0.94090235,         nan,         nan, ...,  0.8696695 ,
           1.0622852 ,         nan],
         [-0.53190774,         nan,         nan, ...,         nan,
          -2.6327474 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.42655095,  0.7128067 ],
         [-0.68360674,         nan,         nan, ...,  0.46307307,
           0.96638674,  0.89299035],
         [-1.4371818 , -0.99219245,  0.49251947, ...,         nan,
           0.8808008 ,  0.09939747]],

        [[ 0.6804196 ,  0.15418656,         nan, ...,         nan,
          -1.585638  ,  1.3006796 ],
         [-0.94090235,         nan,         nan, ...,  0.8696695 ,
           1.0622852 ,         nan],
         [-0.53190774,         nan,         nan, ...,         nan,
          -2.6327474 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.42655095,  0.7128067 ],
         [-0.68360674,         nan,         nan, ...,  0.46307307,
           0.96638674,  0.89299035],
         [-1.4371818 , -0.99219245,  0.49251947, ...,         nan,
           0.8808008 ,  0.09939747]],

        [[ 0.6804196 ,  0.15418656,         nan, ...,         nan,
          -1.585638  ,  1.3006796 ],
         [-0.94090235,         nan,         nan, ...,  0.8696695 ,
           1.0622852 ,         nan],
         [-0.53190774,         nan,         nan, ...,         nan,
          -2.6327474 ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.42655095,  0.7128067 ],
         [-0.68360674,         nan,         nan, ...,  0.46307307,
           0.96638674,  0.89299035],
         [-1.4371818 , -0.99219245,  0.49251947, ...,         nan,
           0.8808008 ,  0.09939747]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [0], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[ 0.68042105,  0.15418804,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.632744  ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418804,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.632744  ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418804,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.632744  ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        ...,

        [[ 0.68042105,  0.15418804,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.632744  ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418804,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.632744  ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]],

        [[ 0.68042105,  0.15418804,         nan, ...,         nan,
          -1.5856357 ,  1.3006805 ],
         [-0.94090015,         nan,         nan, ...,  0.869671  ,
           1.0622852 ,         nan],
         [-0.53190625,         nan,         nan, ...,         nan,
          -2.632744  ,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.4265532 ,  0.71280813],
         [-0.6836053 ,         nan,         nan, ...,  0.46307546,
           0.9663887 ,  0.8929895 ],
         [-1.4371818 , -0.9921924 ,  0.49252188, ...,         nan,
           0.8808023 ,  0.09939689]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [0], 'to': [1]}

generate models:479

analyse output arrays in iter:499

pre layer res:
8:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[1.16221766e+05, 5.88540250e+05, 4.99497781e+05, ...,
          7.77825859e+04, 1.72556712e+06, 8.40972800e+07],
         [3.40873164e+04, 2.23897594e+05, 3.01547488e+08, ...,
          3.43256328e+04, 7.57655850e+06, 1.57107188e+04],
         [3.16435020e+07, 1.46721533e+04, 5.83913250e+05, ...,
          1.07454590e+04, 1.19158562e+06, 1.13070273e+05],
         ...,
         [5.07993516e+04, 1.54445828e+05, 5.69102938e+05, ...,
          2.02457219e+05, 5.73290062e+05, 1.07511000e+05],
         [9.71506400e+06, 1.35885438e+05, 9.10181400e+06, ...,
          3.13398875e+05, 2.19865225e+06, 5.04303600e+06],
         [9.44225750e+05, 5.15863164e+04, 1.29551992e+05, ...,
          9.70420562e+05, 1.25523812e+05, 8.72279297e+03]],

        [[1.16221766e+05, 5.88540250e+05, 4.99497781e+05, ...,
          7.77825859e+04, 1.72556712e+06, 8.40972800e+07],
         [3.40873164e+04, 2.23897594e+05, 3.01547488e+08, ...,
          3.43256328e+04, 7.57655850e+06, 1.57107188e+04],
         [3.16435020e+07, 1.46721533e+04, 5.83913250e+05, ...,
          1.07454590e+04, 1.19158562e+06, 1.13070273e+05],
         ...,
         [5.07993516e+04, 1.54445828e+05, 5.69102938e+05, ...,
          2.02457219e+05, 5.73290062e+05, 1.07511000e+05],
         [9.71506400e+06, 1.35885438e+05, 9.10181400e+06, ...,
          3.13398875e+05, 2.19865225e+06, 5.04303600e+06],
         [9.44225750e+05, 5.15863164e+04, 1.29551992e+05, ...,
          9.70420562e+05, 1.25523812e+05, 8.72279297e+03]],

        [[1.16221766e+05, 5.88540250e+05, 4.99497781e+05, ...,
          7.77825859e+04, 1.72556712e+06, 8.40972800e+07],
         [3.40873164e+04, 2.23897594e+05, 3.01547488e+08, ...,
          3.43256328e+04, 7.57655850e+06, 1.57107188e+04],
         [3.16435020e+07, 1.46721533e+04, 5.83913250e+05, ...,
          1.07454590e+04, 1.19158562e+06, 1.13070273e+05],
         ...,
         [5.07993516e+04, 1.54445828e+05, 5.69102938e+05, ...,
          2.02457219e+05, 5.73290062e+05, 1.07511000e+05],
         [9.71506400e+06, 1.35885438e+05, 9.10181400e+06, ...,
          3.13398875e+05, 2.19865225e+06, 5.04303600e+06],
         [9.44225750e+05, 5.15863164e+04, 1.29551992e+05, ...,
          9.70420562e+05, 1.25523812e+05, 8.72279297e+03]],

        ...,

        [[1.16221766e+05, 5.88540250e+05, 4.99497781e+05, ...,
          7.77825859e+04, 1.72556712e+06, 8.40972800e+07],
         [3.40873164e+04, 2.23897594e+05, 3.01547488e+08, ...,
          3.43256328e+04, 7.57655850e+06, 1.57107188e+04],
         [3.16435020e+07, 1.46721533e+04, 5.83913250e+05, ...,
          1.07454590e+04, 1.19158562e+06, 1.13070273e+05],
         ...,
         [5.07993516e+04, 1.54445828e+05, 5.69102938e+05, ...,
          2.02457219e+05, 5.73290062e+05, 1.07511000e+05],
         [9.71506400e+06, 1.35885438e+05, 9.10181400e+06, ...,
          3.13398875e+05, 2.19865225e+06, 5.04303600e+06],
         [9.44225750e+05, 5.15863164e+04, 1.29551992e+05, ...,
          9.70420562e+05, 1.25523812e+05, 8.72279297e+03]],

        [[1.16221766e+05, 5.88540250e+05, 4.99497781e+05, ...,
          7.77825859e+04, 1.72556712e+06, 8.40972800e+07],
         [3.40873164e+04, 2.23897594e+05, 3.01547488e+08, ...,
          3.43256328e+04, 7.57655850e+06, 1.57107188e+04],
         [3.16435020e+07, 1.46721533e+04, 5.83913250e+05, ...,
          1.07454590e+04, 1.19158562e+06, 1.13070273e+05],
         ...,
         [5.07993516e+04, 1.54445828e+05, 5.69102938e+05, ...,
          2.02457219e+05, 5.73290062e+05, 1.07511000e+05],
         [9.71506400e+06, 1.35885438e+05, 9.10181400e+06, ...,
          3.13398875e+05, 2.19865225e+06, 5.04303600e+06],
         [9.44225750e+05, 5.15863164e+04, 1.29551992e+05, ...,
          9.70420562e+05, 1.25523812e+05, 8.72279297e+03]],

        [[1.16221766e+05, 5.88540250e+05, 4.99497781e+05, ...,
          7.77825859e+04, 1.72556712e+06, 8.40972800e+07],
         [3.40873164e+04, 2.23897594e+05, 3.01547488e+08, ...,
          3.43256328e+04, 7.57655850e+06, 1.57107188e+04],
         [3.16435020e+07, 1.46721533e+04, 5.83913250e+05, ...,
          1.07454590e+04, 1.19158562e+06, 1.13070273e+05],
         ...,
         [5.07993516e+04, 1.54445828e+05, 5.69102938e+05, ...,
          2.02457219e+05, 5.73290062e+05, 1.07511000e+05],
         [9.71506400e+06, 1.35885438e+05, 9.10181400e+06, ...,
          3.13398875e+05, 2.19865225e+06, 5.04303600e+06],
         [9.44225750e+05, 5.15863164e+04, 1.29551992e+05, ...,
          9.70420562e+05, 1.25523812e+05, 8.72279297e+03]]]],
      dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [7], 'to': [11]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.99325615,  0.5358058 , -0.2544631 , ...,  0.10637111,
          -0.23393789, -0.9236794 ],
         [ 0.860431  ,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.37658823],
         [-0.9980116 ,  0.79294544, -0.9050259 , ...,  0.9363585 ,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.20028229, -0.91272753, -0.28279763, ...,  0.40938696,
          -0.3252704 , -0.55119115],
         [ 0.26051322, -0.8474368 , -0.9279214 , ..., -0.12461204,
           0.7127372 ,  0.62568575],
         [ 0.9419554 ,  0.97890556, -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.99325615,  0.5358058 , -0.2544631 , ...,  0.10637111,
          -0.23393789, -0.9236794 ],
         [ 0.860431  ,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.37658823],
         [-0.9980116 ,  0.79294544, -0.9050259 , ...,  0.9363585 ,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.20028229, -0.91272753, -0.28279763, ...,  0.40938696,
          -0.3252704 , -0.55119115],
         [ 0.26051322, -0.8474368 , -0.9279214 , ..., -0.12461204,
           0.7127372 ,  0.62568575],
         [ 0.9419554 ,  0.97890556, -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.99325615,  0.5358058 , -0.2544631 , ...,  0.10637111,
          -0.23393789, -0.9236794 ],
         [ 0.860431  ,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.37658823],
         [-0.9980116 ,  0.79294544, -0.9050259 , ...,  0.9363585 ,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.20028229, -0.91272753, -0.28279763, ...,  0.40938696,
          -0.3252704 , -0.55119115],
         [ 0.26051322, -0.8474368 , -0.9279214 , ..., -0.12461204,
           0.7127372 ,  0.62568575],
         [ 0.9419554 ,  0.97890556, -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        ...,

        [[ 0.99325615,  0.5358058 , -0.2544631 , ...,  0.10637111,
          -0.23393789, -0.9236794 ],
         [ 0.860431  ,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.37658823],
         [-0.9980116 ,  0.79294544, -0.9050259 , ...,  0.9363585 ,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.20028229, -0.91272753, -0.28279763, ...,  0.40938696,
          -0.3252704 , -0.55119115],
         [ 0.26051322, -0.8474368 , -0.9279214 , ..., -0.12461204,
           0.7127372 ,  0.62568575],
         [ 0.9419554 ,  0.97890556, -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.99325615,  0.5358058 , -0.2544631 , ...,  0.10637111,
          -0.23393789, -0.9236794 ],
         [ 0.860431  ,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.37658823],
         [-0.9980116 ,  0.79294544, -0.9050259 , ...,  0.9363585 ,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.20028229, -0.91272753, -0.28279763, ...,  0.40938696,
          -0.3252704 , -0.55119115],
         [ 0.26051322, -0.8474368 , -0.9279214 , ..., -0.12461204,
           0.7127372 ,  0.62568575],
         [ 0.9419554 ,  0.97890556, -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.99325615,  0.5358058 , -0.2544631 , ...,  0.10637111,
          -0.23393789, -0.9236794 ],
         [ 0.860431  ,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.37658823],
         [-0.9980116 ,  0.79294544, -0.9050259 , ...,  0.9363585 ,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.20028229, -0.91272753, -0.28279763, ...,  0.40938696,
          -0.3252704 , -0.55119115],
         [ 0.26051322, -0.8474368 , -0.9279214 , ..., -0.12461204,
           0.7127372 ,  0.62568575],
         [ 0.9419554 ,  0.97890556, -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 16, 16]), 'from': [8], 'to': [9]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.9979855 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789, -0.9236794 ],
         [ 0.86043096,  0.5422214 ,  0.2758498 , ...,  0.5575897 ,
          -0.83519435,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.22233577, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.9979855 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789, -0.9236794 ],
         [ 0.86043096,  0.5422214 ,  0.2758498 , ...,  0.5575897 ,
          -0.83519435,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.22233577, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.9979855 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789, -0.9236794 ],
         [ 0.86043096,  0.5422214 ,  0.2758498 , ...,  0.5575897 ,
          -0.83519435,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.22233577, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        ...,

        [[ 0.9979855 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789, -0.9236794 ],
         [ 0.86043096,  0.5422214 ,  0.2758498 , ...,  0.5575897 ,
          -0.83519435,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.22233577, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.98079526,  0.72804224, -0.79167295, ...,  0.11413596,
           0.13842805,  0.99488515],
         [ 0.88336307,  0.4886822 , -0.16225645, ...,  0.5543428 ,
           0.43058723,  0.37568337],
         [ 0.7125768 ,  0.80527306, -0.68633705, ...,  0.93567103,
           0.00604928, -0.93911815],
         ...,
         [-0.14643015, -0.96915674, -0.28279763, ...,  0.30735007,
          -0.14330262, -0.55119115],
         [-0.01963032, -0.74415123,  0.5757945 , ..., -0.24734274,
          -0.9264936 ,  0.44894326],
         [ 0.51257837,  0.9711193 , -0.8445163 , ...,  0.95292187,
          -0.9995419 ,  0.9873841 ]],

        [[ 0.98079526,  0.72804224, -0.79167295, ...,  0.11413596,
           0.13842805,  0.99488515],
         [ 0.88336307,  0.4886822 , -0.16225645, ...,  0.5543428 ,
           0.43058723,  0.37568337],
         [ 0.7125768 ,  0.80527306, -0.68633705, ...,  0.93567103,
           0.00604928, -0.93911815],
         ...,
         [-0.14643015, -0.96915674, -0.28279763, ...,  0.30735007,
          -0.14330262, -0.55119115],
         [-0.01963032, -0.74415123,  0.5757945 , ..., -0.24734274,
          -0.9264936 ,  0.44894326],
         [ 0.51257837,  0.9711193 , -0.8445163 , ...,  0.95292187,
          -0.9995419 ,  0.9873841 ]]]], dtype=float32), 'output_shape': (1, 128, 16, 16), 'from': [8], 'to': [9]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.9941316 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789,  0.5134841 ],
         [ 0.86043096,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.28279763, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.9941316 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789,  0.5134841 ],
         [ 0.86043096,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.28279763, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.9941316 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789,  0.5134841 ],
         [ 0.86043096,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.28279763, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        ...,

        [[ 0.9941316 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789,  0.5134841 ],
         [ 0.86043096,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.28279763, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.9941316 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789,  0.5134841 ],
         [ 0.86043096,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.28279763, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]],

        [[ 0.9941316 ,  0.53580576, -0.2544631 , ...,  0.1063711 ,
          -0.23393789,  0.5134841 ],
         [ 0.86043096,  0.5422214 ,  0.96514523, ...,  0.5575897 ,
          -0.9966144 ,  0.3765882 ],
         [-0.9980116 ,  0.7929454 , -0.90502584, ...,  0.93635845,
          -0.9988408 , -0.9364052 ],
         ...,
         [-0.1887875 , -0.9127275 , -0.28279763, ...,  0.409387  ,
          -0.2655725 , -0.55119115],
         [ 0.26051322, -0.8474367 , -0.9279214 , ..., -0.12461203,
           0.71273714,  0.62568575],
         [ 0.9419554 ,  0.9796962 , -0.8445163 , ...,  0.9916351 ,
          -0.9956999 ,  0.9870729 ]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 16, 16]), 'from': [8], 'to': [9]}

generate models:486

final statics:
total operators:28
tensorflow --> nums:66,distinct_bugs:6
mindspore --> nums:55,distinct_bugs:6
torch --> nums:50,distinct_bugs:8
tensorflow --> 
conv2d:24
sin:16
softmax:3
log:13
cos:9
add:1
mindspore --> 
sin:19
log:18
softmax:4
cos:11
conv2d:2
add:1
torch --> 
conv2d:3
sin:16
flatten:1
softmax:3
log:15
cos:9
maxpool2d:2
add:1

generate models:486
