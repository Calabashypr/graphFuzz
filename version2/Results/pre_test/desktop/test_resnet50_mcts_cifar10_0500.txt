
analyse output arrays in iter:1

pre layer res:
2:arctan
{'name': 'arctan', 'output': array([[[[1.5643029, 1.56286  , 1.5612729, ..., 1.5598078, 1.5593026,
          1.5581388],
         [1.5636536, 1.5638999, 1.5627966, ..., 1.5603801, 1.5578101,
          1.5567127],
         [1.5636536, 1.5636022, 1.5621009, ..., 1.5581388, 1.5560915,
          1.5558721],
         ...,
         [1.5650822, 1.5643862, 1.5643029, ..., 1.5469913, 1.5544044,
          1.560044 ],
         [1.5647359, 1.5643862, 1.5645071, ..., 1.561088 , 1.5626664,
          1.5631629],
         [1.5646615, 1.5644673, 1.5646615, ..., 1.5638034, 1.5638034,
          1.5638034]],

        [[1.5651467, 1.5634972, 1.5611813, ..., 1.5602704, 1.5596857,
          1.5584513],
         [1.5645465, 1.5642605, 1.5627966, ..., 1.5606956, 1.558297 ,
          1.5570986],
         [1.5643449, 1.5639472, 1.5621009, ..., 1.5586019, 1.5565116,
          1.5563046],
         ...,
         [1.5648084, 1.5643029, 1.5645465, ..., 1.541393 , 1.5519307,
          1.5587487],
         [1.5643029, 1.5642176, 1.5645853, ..., 1.560044 , 1.5620247,
          1.5625321],
         [1.5640397, 1.5640397, 1.5643862, ..., 1.5632777, 1.5633339,
          1.5632777]],

        [[1.5654489, 1.5634435, 1.5602704, ..., 1.5567127, 1.5567127,
          1.5565116],
         [1.5648793, 1.5643029, 1.562322 , ..., 1.5579766, 1.5546688,
          1.5544044],
         [1.5646989, 1.564085 , 1.5618681, ..., 1.5551727, 1.5526166,
          1.5526166],
         ...,
         [1.5647724, 1.5645465, 1.5649141, ..., 1.5430257, 1.5532544,
          1.5598078],
         [1.562984 , 1.5631043, 1.5637542, ..., 1.5603801, 1.5624633,
          1.5631629],
         [1.5624633, 1.5625998, 1.5632777, ..., 1.5636022, 1.5637542,
          1.5638521]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[117.273605, 164.23138 , 164.26463 , ..., 163.54198 ,
          140.14223 ,  93.431786],
         [164.1721  , 229.8674  , 229.86072 , ..., 228.95781 ,
          196.22606 , 130.8136  ],
         [163.99524 , 229.58997 , 229.41458 , ..., 228.96422 ,
          196.18721 , 130.76929 ],
         ...,
         [164.00186 , 229.53296 , 229.41678 , ..., 227.54402 ,
          195.0548  , 130.05154 ],
         [140.54146 , 196.34677 , 196.23183 , ..., 195.62784 ,
          167.79965 , 111.90654 ],
         [ 93.750084, 130.88168 , 130.84871 , ..., 130.41597 ,
          111.92563 ,  74.62035 ]],

        [[117.273605, 164.23138 , 164.26463 , ..., 163.54198 ,
          140.14223 ,  93.431786],
         [164.1721  , 229.8674  , 229.86072 , ..., 228.95781 ,
          196.22606 , 130.8136  ],
         [163.99524 , 229.58997 , 229.41458 , ..., 228.96422 ,
          196.18721 , 130.76929 ],
         ...,
         [164.00186 , 229.53296 , 229.41678 , ..., 227.54402 ,
          195.0548  , 130.05154 ],
         [140.54146 , 196.34677 , 196.23183 , ..., 195.62784 ,
          167.79965 , 111.90654 ],
         [ 93.750084, 130.88168 , 130.84871 , ..., 130.41597 ,
          111.92563 ,  74.62035 ]],

        [[117.273605, 164.23138 , 164.26463 , ..., 163.54198 ,
          140.14223 ,  93.431786],
         [164.1721  , 229.8674  , 229.86072 , ..., 228.95781 ,
          196.22606 , 130.8136  ],
         [163.99524 , 229.58997 , 229.41458 , ..., 228.96422 ,
          196.18721 , 130.76929 ],
         ...,
         [164.00186 , 229.53296 , 229.41678 , ..., 227.54402 ,
          195.0548  , 130.05154 ],
         [140.54146 , 196.34677 , 196.23183 , ..., 195.62784 ,
          167.79965 , 111.90654 ],
         [ 93.750084, 130.88168 , 130.84871 , ..., 130.41597 ,
          111.92563 ,  74.62035 ]],

        ...,

        [[117.273605, 164.23138 , 164.26463 , ..., 163.54198 ,
          140.14223 ,  93.431786],
         [164.1721  , 229.8674  , 229.86072 , ..., 228.95781 ,
          196.22606 , 130.8136  ],
         [163.99524 , 229.58997 , 229.41458 , ..., 228.96422 ,
          196.18721 , 130.76929 ],
         ...,
         [164.00186 , 229.53296 , 229.41678 , ..., 227.54402 ,
          195.0548  , 130.05154 ],
         [140.54146 , 196.34677 , 196.23183 , ..., 195.62784 ,
          167.79965 , 111.90654 ],
         [ 93.750084, 130.88168 , 130.84871 , ..., 130.41597 ,
          111.92563 ,  74.62035 ]],

        [[117.273605, 164.23138 , 164.26463 , ..., 163.54198 ,
          140.14223 ,  93.431786],
         [164.1721  , 229.8674  , 229.86072 , ..., 228.95781 ,
          196.22606 , 130.8136  ],
         [163.99524 , 229.58997 , 229.41458 , ..., 228.96422 ,
          196.18721 , 130.76929 ],
         ...,
         [164.00186 , 229.53296 , 229.41678 , ..., 227.54402 ,
          195.0548  , 130.05154 ],
         [140.54146 , 196.34677 , 196.23183 , ..., 195.62784 ,
          167.79965 , 111.90654 ],
         [ 93.750084, 130.88168 , 130.84871 , ..., 130.41597 ,
          111.92563 ,  74.62035 ]],

        [[117.273605, 164.23138 , 164.26463 , ..., 163.54198 ,
          140.14223 ,  93.431786],
         [164.1721  , 229.8674  , 229.86072 , ..., 228.95781 ,
          196.22606 , 130.8136  ],
         [163.99524 , 229.58997 , 229.41458 , ..., 228.96422 ,
          196.18721 , 130.76929 ],
         ...,
         [164.00186 , 229.53296 , 229.41678 , ..., 227.54402 ,
          195.0548  , 130.05154 ],
         [140.54146 , 196.34677 , 196.23183 , ..., 195.62784 ,
          167.79965 , 111.90654 ],
         [ 93.750084, 130.88168 , 130.84871 , ..., 130.41597 ,
          111.92563 ,  74.62035 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [2], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[ 75.03638 , 112.58179 , 131.38512 , ..., 130.87947 ,
          130.8019  ,  93.460045],
         [112.575615, 168.90207 , 197.08636 , ..., 196.31743 ,
          196.21399 , 140.17696 ],
         [131.31187 , 196.94585 , 229.69116 , ..., 229.0745  ,
          228.94339 , 163.5283  ],
         ...,
         [131.08546 , 196.55373 , 229.12375 , ..., 227.48343 ,
          227.60303 , 162.34943 ],
         [131.28041 , 196.57843 , 229.12082 , ..., 227.77623 ,
          228.35124 , 162.95526 ],
         [ 93.74425 , 140.26768 , 163.43001 , ..., 162.66243 ,
          163.30745 , 116.55865 ]],

        [[ 75.03638 , 112.58179 , 131.38512 , ..., 130.87947 ,
          130.8019  ,  93.460045],
         [112.575615, 168.90207 , 197.08636 , ..., 196.31743 ,
          196.21399 , 140.17696 ],
         [131.31187 , 196.94585 , 229.69116 , ..., 229.0745  ,
          228.94339 , 163.5283  ],
         ...,
         [131.08546 , 196.55373 , 229.12375 , ..., 227.48343 ,
          227.60303 , 162.34943 ],
         [131.28041 , 196.57843 , 229.12082 , ..., 227.77623 ,
          228.35124 , 162.95526 ],
         [ 93.74425 , 140.26768 , 163.43001 , ..., 162.66243 ,
          163.30745 , 116.55865 ]],

        [[ 75.03638 , 112.58179 , 131.38512 , ..., 130.87947 ,
          130.8019  ,  93.460045],
         [112.575615, 168.90207 , 197.08636 , ..., 196.31743 ,
          196.21399 , 140.17696 ],
         [131.31187 , 196.94585 , 229.69116 , ..., 229.0745  ,
          228.94339 , 163.5283  ],
         ...,
         [131.08546 , 196.55373 , 229.12375 , ..., 227.48343 ,
          227.60303 , 162.34943 ],
         [131.28041 , 196.57843 , 229.12082 , ..., 227.77623 ,
          228.35124 , 162.95526 ],
         [ 93.74425 , 140.26768 , 163.43001 , ..., 162.66243 ,
          163.30745 , 116.55865 ]],

        ...,

        [[ 75.03638 , 112.58179 , 131.38512 , ..., 130.87947 ,
          130.8019  ,  93.460045],
         [112.575615, 168.90207 , 197.08636 , ..., 196.31743 ,
          196.21399 , 140.17696 ],
         [131.31187 , 196.94585 , 229.69116 , ..., 229.0745  ,
          228.94339 , 163.5283  ],
         ...,
         [131.08546 , 196.55373 , 229.12375 , ..., 227.48343 ,
          227.60303 , 162.34943 ],
         [131.28041 , 196.57843 , 229.12082 , ..., 227.77623 ,
          228.35124 , 162.95526 ],
         [ 93.74425 , 140.26768 , 163.43001 , ..., 162.66243 ,
          163.30745 , 116.55865 ]],

        [[ 75.03638 , 112.58179 , 131.38512 , ..., 130.87947 ,
          130.8019  ,  93.460045],
         [112.575615, 168.90207 , 197.08636 , ..., 196.31743 ,
          196.21399 , 140.17696 ],
         [131.31187 , 196.94585 , 229.69116 , ..., 229.0745  ,
          228.94339 , 163.5283  ],
         ...,
         [131.08546 , 196.55373 , 229.12375 , ..., 227.48343 ,
          227.60303 , 162.34943 ],
         [131.28041 , 196.57843 , 229.12082 , ..., 227.77623 ,
          228.35124 , 162.95526 ],
         [ 93.74425 , 140.26768 , 163.43001 , ..., 162.66243 ,
          163.30745 , 116.55865 ]],

        [[ 75.03638 , 112.58179 , 131.38512 , ..., 130.87947 ,
          130.8019  ,  93.460045],
         [112.575615, 168.90207 , 197.08636 , ..., 196.31743 ,
          196.21399 , 140.17696 ],
         [131.31187 , 196.94585 , 229.69116 , ..., 229.0745  ,
          228.94339 , 163.5283  ],
         ...,
         [131.08546 , 196.55373 , 229.12375 , ..., 227.48343 ,
          227.60303 , 162.34943 ],
         [131.28041 , 196.57843 , 229.12082 , ..., 227.77623 ,
          228.35124 , 162.95526 ],
         [ 93.74425 , 140.26768 , 163.43001 , ..., 162.66243 ,
          163.30745 , 116.55865 ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [2], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[ 75.036354, 112.58179 , 131.38512 , ..., 130.87947 ,
          130.80191 ,  93.460045],
         [112.575615, 168.90205 , 197.08636 , ..., 196.3174  ,
          196.214   , 140.17693 ],
         [131.31189 , 196.94586 , 229.69122 , ..., 229.07448 ,
          228.94342 , 163.52824 ],
         ...,
         [131.08545 , 196.55368 , 229.12375 , ..., 227.4835  ,
          227.60303 , 162.34943 ],
         [131.2804  , 196.57843 , 229.12088 , ..., 227.77626 ,
          228.35121 , 162.9552  ],
         [ 93.74426 , 140.26765 , 163.43    , ..., 162.66243 ,
          163.30739 , 116.55864 ]],

        [[ 75.036354, 112.58179 , 131.38512 , ..., 130.87947 ,
          130.80191 ,  93.460045],
         [112.575615, 168.90205 , 197.08636 , ..., 196.3174  ,
          196.214   , 140.17693 ],
         [131.31189 , 196.94586 , 229.69122 , ..., 229.07448 ,
          228.94342 , 163.52824 ],
         ...,
         [131.08545 , 196.55368 , 229.12375 , ..., 227.4835  ,
          227.60303 , 162.34943 ],
         [131.2804  , 196.57843 , 229.12088 , ..., 227.77626 ,
          228.35121 , 162.9552  ],
         [ 93.74426 , 140.26765 , 163.43    , ..., 162.66243 ,
          163.30739 , 116.55864 ]],

        [[ 75.036354, 112.58179 , 131.38512 , ..., 130.87947 ,
          130.80191 ,  93.460045],
         [112.575615, 168.90205 , 197.08636 , ..., 196.3174  ,
          196.214   , 140.17693 ],
         [131.31189 , 196.94586 , 229.69122 , ..., 229.07448 ,
          228.94342 , 163.52824 ],
         ...,
         [131.08545 , 196.55368 , 229.12375 , ..., 227.4835  ,
          227.60303 , 162.34943 ],
         [131.2804  , 196.57843 , 229.12088 , ..., 227.77626 ,
          228.35121 , 162.9552  ],
         [ 93.74426 , 140.26765 , 163.43    , ..., 162.66243 ,
          163.30739 , 116.55864 ]],

        ...,

        [[ 75.036354, 112.58179 , 131.38512 , ..., 130.87947 ,
          130.80191 ,  93.460045],
         [112.575615, 168.90205 , 197.08636 , ..., 196.3174  ,
          196.214   , 140.17693 ],
         [131.31189 , 196.94586 , 229.69122 , ..., 229.07448 ,
          228.94342 , 163.52824 ],
         ...,
         [131.08545 , 196.55368 , 229.12375 , ..., 227.4835  ,
          227.60303 , 162.34943 ],
         [131.2804  , 196.57843 , 229.12088 , ..., 227.77626 ,
          228.35121 , 162.9552  ],
         [ 93.74426 , 140.26765 , 163.43    , ..., 162.66243 ,
          163.30739 , 116.55864 ]],

        [[ 75.036354, 112.58179 , 131.38512 , ..., 130.87947 ,
          130.80191 ,  93.460045],
         [112.575615, 168.90205 , 197.08636 , ..., 196.3174  ,
          196.214   , 140.17693 ],
         [131.31189 , 196.94586 , 229.69122 , ..., 229.07448 ,
          228.94342 , 163.52824 ],
         ...,
         [131.08545 , 196.55368 , 229.12375 , ..., 227.4835  ,
          227.60303 , 162.34943 ],
         [131.2804  , 196.57843 , 229.12088 , ..., 227.77626 ,
          228.35121 , 162.9552  ],
         [ 93.74426 , 140.26765 , 163.43    , ..., 162.66243 ,
          163.30739 , 116.55864 ]],

        [[ 75.036354, 112.58179 , 131.38512 , ..., 130.87947 ,
          130.80191 ,  93.460045],
         [112.575615, 168.90205 , 197.08636 , ..., 196.3174  ,
          196.214   , 140.17693 ],
         [131.31189 , 196.94586 , 229.69122 , ..., 229.07448 ,
          228.94342 , 163.52824 ],
         ...,
         [131.08545 , 196.55368 , 229.12375 , ..., 227.4835  ,
          227.60303 , 162.34943 ],
         [131.2804  , 196.57843 , 229.12088 , ..., 227.77626 ,
          228.35121 , 162.9552  ],
         [ 93.74426 , 140.26765 , 163.43    , ..., 162.66243 ,
          163.30739 , 116.55864 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [2], 'to': []}

generate models:2

analyse output arrays in iter:2

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[255., 253., 253., ..., 253., 253., 253.],
         [255., 255., 255., ..., 255., 255., 255.],
         [255., 254., 254., ..., 254., 254., 254.],
         ...,
         [113., 111., 105., ...,  72.,  72.,  72.],
         [111., 104.,  99., ...,  68.,  70.,  78.],
         [106.,  99.,  95., ...,  78.,  79.,  80.]],

        [[255., 253., 253., ..., 253., 253., 253.],
         [255., 255., 255., ..., 255., 255., 255.],
         [255., 254., 254., ..., 254., 254., 254.],
         ...,
         [120., 118., 112., ...,  81.,  80.,  80.],
         [118., 111., 106., ...,  75.,  76.,  84.],
         [113., 106., 102., ...,  85.,  85.,  86.]],

        [[255., 253., 253., ..., 253., 253., 253.],
         [255., 255., 255., ..., 255., 255., 255.],
         [255., 254., 254., ..., 254., 254., 254.],
         ...,
         [112., 111., 106., ...,  80.,  79.,  79.],
         [110., 104.,  98., ...,  73.,  75.,  82.],
         [105.,  98.,  94., ...,  83.,  83.,  84.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1, 4]}
tf node:
{'name': 'conv2d', 'output': array([[[[19089., 26721., 26712., ..., 26709., 22896., 15264.],
         [26735., 37427., 37416., ..., 37399., 32062., 21374.],
         [26747., 37443., 37410., ..., 37310., 32021., 21346.],
         ...,
         [ 9731., 12981., 11902., ..., 10314.,  9197.,  6370.],
         [ 8798., 11847., 11086., ...,  8937.,  7877.,  5454.],
         [ 6134.,  8212.,  7595., ...,  5947.,  5282.,  3712.]],

        [[19089., 26721., 26712., ..., 26709., 22896., 15264.],
         [26735., 37427., 37416., ..., 37399., 32062., 21374.],
         [26747., 37443., 37410., ..., 37310., 32021., 21346.],
         ...,
         [ 9731., 12981., 11902., ..., 10314.,  9197.,  6370.],
         [ 8798., 11847., 11086., ...,  8937.,  7877.,  5454.],
         [ 6134.,  8212.,  7595., ...,  5947.,  5282.,  3712.]],

        [[19089., 26721., 26712., ..., 26709., 22896., 15264.],
         [26735., 37427., 37416., ..., 37399., 32062., 21374.],
         [26747., 37443., 37410., ..., 37310., 32021., 21346.],
         ...,
         [ 9731., 12981., 11902., ..., 10314.,  9197.,  6370.],
         [ 8798., 11847., 11086., ...,  8937.,  7877.,  5454.],
         [ 6134.,  8212.,  7595., ...,  5947.,  5282.,  3712.]],

        ...,

        [[19089., 26721., 26712., ..., 26709., 22896., 15264.],
         [26735., 37427., 37416., ..., 37399., 32062., 21374.],
         [26747., 37443., 37410., ..., 37310., 32021., 21346.],
         ...,
         [ 9731., 12981., 11902., ..., 10314.,  9197.,  6370.],
         [ 8798., 11847., 11086., ...,  8937.,  7877.,  5454.],
         [ 6134.,  8212.,  7595., ...,  5947.,  5282.,  3712.]],

        [[19089., 26721., 26712., ..., 26709., 22896., 15264.],
         [26735., 37427., 37416., ..., 37399., 32062., 21374.],
         [26747., 37443., 37410., ..., 37310., 32021., 21346.],
         ...,
         [ 9731., 12981., 11902., ..., 10314.,  9197.,  6370.],
         [ 8798., 11847., 11086., ...,  8937.,  7877.,  5454.],
         [ 6134.,  8212.,  7595., ...,  5947.,  5282.,  3712.]],

        [[19089., 26721., 26712., ..., 26709., 22896., 15264.],
         [26735., 37427., 37416., ..., 37399., 32062., 21374.],
         [26747., 37443., 37410., ..., 37310., 32021., 21346.],
         ...,
         [ 9731., 12981., 11902., ..., 10314.,  9197.,  6370.],
         [ 8798., 11847., 11086., ...,  8937.,  7877.,  5454.],
         [ 6134.,  8212.,  7595., ...,  5947.,  5282.,  3712.]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [3]}
ms node:
{'name': 'conv2d', 'output': array([[[[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        ...,

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [3]}
torch node:
{'name': 'conv2d', 'output': array([[[[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        ...,

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]],

        [[12213., 18315., 21357., ..., 21343., 21357., 15255.],
         [18333., 27495., 32067., ..., 32038., 32067., 22905.],
         [21400., 32102., 37444., ..., 37289., 37407., 26725.],
         ...,
         [ 8008., 11243., 12001., ...,  9871., 10445.,  7663.],
         [ 8129., 11688., 12922., ..., 10329., 10683.,  7847.],
         [ 6266.,  8915.,  9831., ...,  7351.,  7562.,  5588.]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [3]}

generate models:3

analyse output arrays in iter:3

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[ 28.,  37.,  38., ...,  76.,  81.,  85.],
         [ 33.,  34.,  32., ...,  95.,  96.,  85.],
         [ 39.,  40.,  57., ...,  93., 107.,  95.],
         ...,
         [ 83.,  87.,  84., ...,  99.,  90.,  81.],
         [ 88.,  90.,  93., ...,  80.,  76.,  82.],
         [ 97.,  94.,  93., ...,  54.,  63.,  72.]],

        [[ 25.,  34.,  35., ...,  67.,  72.,  76.],
         [ 28.,  30.,  27., ...,  82.,  82.,  72.],
         [ 32.,  33.,  50., ...,  76.,  89.,  77.],
         ...,
         [ 73.,  77.,  74., ...,  93.,  84.,  75.],
         [ 72.,  74.,  77., ...,  74.,  70.,  76.],
         [ 78.,  75.,  75., ...,  47.,  56.,  65.]],

        [[ 10.,  19.,  20., ...,  39.,  43.,  47.],
         [ 13.,  14.,  12., ...,  55.,  56.,  45.],
         [ 15.,  17.,  33., ...,  52.,  66.,  54.],
         ...,
         [ 52.,  56.,  52., ...,  70.,  61.,  52.],
         [ 51.,  52.,  56., ...,  53.,  49.,  55.],
         [ 56.,  53.,  53., ...,  28.,  37.,  46.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 3264.,  4612.,  5135., ...,  7009.,  6153.,  4096.],
         [ 5064.,  7261.,  7891., ...,  9738.,  8387.,  5527.],
         [ 6032.,  8772.,  9795., ..., 10301.,  8555.,  5577.],
         ...,
         [ 6796.,  9779., 10548., ..., 10941.,  8888.,  5886.],
         [ 6155.,  8826.,  9317., ...,  9429.,  7657.,  4881.],
         [ 4338.,  6107.,  6256., ...,  6536.,  5257.,  3320.]],

        [[ 3264.,  4612.,  5135., ...,  7009.,  6153.,  4096.],
         [ 5064.,  7261.,  7891., ...,  9738.,  8387.,  5527.],
         [ 6032.,  8772.,  9795., ..., 10301.,  8555.,  5577.],
         ...,
         [ 6796.,  9779., 10548., ..., 10941.,  8888.,  5886.],
         [ 6155.,  8826.,  9317., ...,  9429.,  7657.,  4881.],
         [ 4338.,  6107.,  6256., ...,  6536.,  5257.,  3320.]],

        [[ 3264.,  4612.,  5135., ...,  7009.,  6153.,  4096.],
         [ 5064.,  7261.,  7891., ...,  9738.,  8387.,  5527.],
         [ 6032.,  8772.,  9795., ..., 10301.,  8555.,  5577.],
         ...,
         [ 6796.,  9779., 10548., ..., 10941.,  8888.,  5886.],
         [ 6155.,  8826.,  9317., ...,  9429.,  7657.,  4881.],
         [ 4338.,  6107.,  6256., ...,  6536.,  5257.,  3320.]],

        ...,

        [[ 3264.,  4612.,  5135., ...,  7009.,  6153.,  4096.],
         [ 5064.,  7261.,  7891., ...,  9738.,  8387.,  5527.],
         [ 6032.,  8772.,  9795., ..., 10301.,  8555.,  5577.],
         ...,
         [ 6796.,  9779., 10548., ..., 10941.,  8888.,  5886.],
         [ 6155.,  8826.,  9317., ...,  9429.,  7657.,  4881.],
         [ 4338.,  6107.,  6256., ...,  6536.,  5257.,  3320.]],

        [[ 3264.,  4612.,  5135., ...,  7009.,  6153.,  4096.],
         [ 5064.,  7261.,  7891., ...,  9738.,  8387.,  5527.],
         [ 6032.,  8772.,  9795., ..., 10301.,  8555.,  5577.],
         ...,
         [ 6796.,  9779., 10548., ..., 10941.,  8888.,  5886.],
         [ 6155.,  8826.,  9317., ...,  9429.,  7657.,  4881.],
         [ 4338.,  6107.,  6256., ...,  6536.,  5257.,  3320.]],

        [[ 3264.,  4612.,  5135., ...,  7009.,  6153.,  4096.],
         [ 5064.,  7261.,  7891., ...,  9738.,  8387.,  5527.],
         [ 6032.,  8772.,  9795., ..., 10301.,  8555.,  5577.],
         ...,
         [ 6796.,  9779., 10548., ..., 10941.,  8888.,  5886.],
         [ 6155.,  8826.,  9317., ...,  9429.,  7657.,  4881.],
         [ 4338.,  6107.,  6256., ...,  6536.,  5257.,  3320.]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [4]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        ...,

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [4]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        ...,

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]],

        [[ 1746.,  2627.,  3286., ...,  5740.,  5683.,  4225.],
         [ 3246.,  4982.,  6205., ...,  8434.,  8325.,  5990.],
         [ 4408.,  6724.,  8447., ..., 10223.,  9886.,  6949.],
         ...,
         [ 5141.,  8092.,  9989., ..., 10487.,  9998.,  7084.],
         [ 5567.,  8538., 10409., ..., 10975., 10390.,  7270.],
         [ 4194.,  6338.,  7618., ...,  8305.,  7745.,  5323.]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [4]}

generate models:4

analyse output arrays in iter:4

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[170., 168., 177., ..., 162., 158., 157.],
         [168., 172., 171., ..., 159., 156., 154.],
         [154., 149., 129., ..., 161., 157., 154.],
         ...,
         [ 74.,  76.,  78., ...,  71.,  68.,  61.],
         [ 68.,  69.,  72., ...,  76.,  71.,  71.],
         [ 67.,  68.,  69., ...,  75.,  71.,  73.]],

        [[180., 178., 185., ..., 179., 178., 177.],
         [181., 185., 183., ..., 177., 176., 174.],
         [170., 165., 144., ..., 178., 177., 174.],
         ...,
         [ 84.,  85.,  85., ...,  75.,  72.,  65.],
         [ 76.,  77.,  79., ...,  80.,  75.,  75.],
         [ 75.,  76.,  75., ...,  79.,  75.,  77.]],

        [[198., 196., 203., ..., 215., 214., 212.],
         [198., 201., 200., ..., 212., 211., 209.],
         [186., 181., 162., ..., 214., 212., 209.],
         ...,
         [ 80.,  81.,  82., ...,  78.,  75.,  68.],
         [ 77.,  78.,  78., ...,  83.,  78.,  78.],
         [ 78.,  79.,  76., ...,  82.,  78.,  80.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[10842., 15347., 15391., ..., 19383., 16438., 10901.],
         [13700., 19474., 19551., ..., 26927., 22904., 15172.],
         [10581., 15133., 15130., ..., 24359., 21212., 14216.],
         ...,
         [ 7458., 10737., 10211., ...,  4741.,  4344.,  3168.],
         [ 6946.,  9769.,  9813., ...,  5549.,  4813.,  3276.],
         [ 4725.,  6801.,  7083., ...,  5297.,  4497.,  3005.]],

        [[10842., 15347., 15391., ..., 19383., 16438., 10901.],
         [13700., 19474., 19551., ..., 26927., 22904., 15172.],
         [10581., 15133., 15130., ..., 24359., 21212., 14216.],
         ...,
         [ 7458., 10737., 10211., ...,  4741.,  4344.,  3168.],
         [ 6946.,  9769.,  9813., ...,  5549.,  4813.,  3276.],
         [ 4725.,  6801.,  7083., ...,  5297.,  4497.,  3005.]],

        [[10842., 15347., 15391., ..., 19383., 16438., 10901.],
         [13700., 19474., 19551., ..., 26927., 22904., 15172.],
         [10581., 15133., 15130., ..., 24359., 21212., 14216.],
         ...,
         [ 7458., 10737., 10211., ...,  4741.,  4344.,  3168.],
         [ 6946.,  9769.,  9813., ...,  5549.,  4813.,  3276.],
         [ 4725.,  6801.,  7083., ...,  5297.,  4497.,  3005.]],

        ...,

        [[10842., 15347., 15391., ..., 19383., 16438., 10901.],
         [13700., 19474., 19551., ..., 26927., 22904., 15172.],
         [10581., 15133., 15130., ..., 24359., 21212., 14216.],
         ...,
         [ 7458., 10737., 10211., ...,  4741.,  4344.,  3168.],
         [ 6946.,  9769.,  9813., ...,  5549.,  4813.,  3276.],
         [ 4725.,  6801.,  7083., ...,  5297.,  4497.,  3005.]],

        [[10842., 15347., 15391., ..., 19383., 16438., 10901.],
         [13700., 19474., 19551., ..., 26927., 22904., 15172.],
         [10581., 15133., 15130., ..., 24359., 21212., 14216.],
         ...,
         [ 7458., 10737., 10211., ...,  4741.,  4344.,  3168.],
         [ 6946.,  9769.,  9813., ...,  5549.,  4813.,  3276.],
         [ 4725.,  6801.,  7083., ...,  5297.,  4497.,  3005.]],

        [[10842., 15347., 15391., ..., 19383., 16438., 10901.],
         [13700., 19474., 19551., ..., 26927., 22904., 15172.],
         [10581., 15133., 15130., ..., 24359., 21212., 14216.],
         ...,
         [ 7458., 10737., 10211., ...,  4741.,  4344.,  3168.],
         [ 6946.,  9769.,  9813., ...,  5549.,  4813.,  3276.],
         [ 4725.,  6801.,  7083., ...,  5297.,  4497.,  3005.]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [7, 9, 10]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        ...,

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [7, 9, 10]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        ...,

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]],

        [[ 7489., 11227., 13161., ..., 15640., 15435., 10952.],
         [ 9879., 14855., 17485., ..., 23326., 23018., 16332.],
         [ 9752., 14709., 17400., ..., 25843., 26176., 18739.],
         ...,
         [ 5959.,  9734., 10743., ...,  4473.,  4971.,  3592.],
         [ 6146.,  9264., 10599., ...,  5781.,  6074.,  4474.],
         [ 4648.,  7169.,  8592., ...,  5438.,  5355.,  3819.]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [7, 9, 10]}

generate models:5

analyse output arrays in iter:5

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[159., 150., 153., ...,  91.,  74.,  76.],
         [142., 146., 155., ..., 127., 122.,  86.],
         [109.,  99., 105., ..., 137., 163.,  93.],
         ...,
         [244., 240., 241., ..., 156., 179., 200.],
         [246., 243., 243., ..., 162., 178., 192.],
         [246., 243., 244., ..., 166., 173., 182.]],

        [[102.,  91.,  95., ...,  71.,  63.,  58.],
         [ 75.,  72.,  76., ..., 105., 111.,  69.],
         [ 67.,  58.,  59., ..., 112., 132.,  72.],
         ...,
         [129., 123., 122., ...,  42.,  59.,  73.],
         [133., 128., 127., ...,  44.,  56.,  65.],
         [139., 133., 132., ...,  47.,  51.,  57.]],

        [[101.,  95.,  97., ...,  56.,  55.,  55.],
         [ 68.,  66.,  65., ...,  71.,  93.,  61.],
         [ 75.,  60.,  52., ...,  80., 105.,  71.],
         ...,
         [ 70.,  65.,  65., ...,  15.,  26.,  36.],
         [ 74.,  72.,  70., ...,  14.,  22.,  27.],
         [ 82.,  78.,  77., ...,  14.,  17.,  19.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1, 11]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 6992., 10199.,  9035., ..., 11215.,  8335.,  5733.],
         [10236., 14564., 13179., ..., 17093., 12660.,  8772.],
         [10347., 14655., 13855., ..., 20440., 15068.,  9871.],
         ...,
         [14528., 19259., 17003., ...,  8966.,  9979.,  7852.],
         [12879., 17321., 15149., ...,  7806.,  8400.,  6521.],
         [ 8712., 11819., 10266., ...,  4999.,  5250.,  3940.]],

        [[ 6992., 10199.,  9035., ..., 11215.,  8335.,  5733.],
         [10236., 14564., 13179., ..., 17093., 12660.,  8772.],
         [10347., 14655., 13855., ..., 20440., 15068.,  9871.],
         ...,
         [14528., 19259., 17003., ...,  8966.,  9979.,  7852.],
         [12879., 17321., 15149., ...,  7806.,  8400.,  6521.],
         [ 8712., 11819., 10266., ...,  4999.,  5250.,  3940.]],

        [[ 6992., 10199.,  9035., ..., 11215.,  8335.,  5733.],
         [10236., 14564., 13179., ..., 17093., 12660.,  8772.],
         [10347., 14655., 13855., ..., 20440., 15068.,  9871.],
         ...,
         [14528., 19259., 17003., ...,  8966.,  9979.,  7852.],
         [12879., 17321., 15149., ...,  7806.,  8400.,  6521.],
         [ 8712., 11819., 10266., ...,  4999.,  5250.,  3940.]],

        ...,

        [[ 6992., 10199.,  9035., ..., 11215.,  8335.,  5733.],
         [10236., 14564., 13179., ..., 17093., 12660.,  8772.],
         [10347., 14655., 13855., ..., 20440., 15068.,  9871.],
         ...,
         [14528., 19259., 17003., ...,  8966.,  9979.,  7852.],
         [12879., 17321., 15149., ...,  7806.,  8400.,  6521.],
         [ 8712., 11819., 10266., ...,  4999.,  5250.,  3940.]],

        [[ 6992., 10199.,  9035., ..., 11215.,  8335.,  5733.],
         [10236., 14564., 13179., ..., 17093., 12660.,  8772.],
         [10347., 14655., 13855., ..., 20440., 15068.,  9871.],
         ...,
         [14528., 19259., 17003., ...,  8966.,  9979.,  7852.],
         [12879., 17321., 15149., ...,  7806.,  8400.,  6521.],
         [ 8712., 11819., 10266., ...,  4999.,  5250.,  3940.]],

        [[ 6992., 10199.,  9035., ..., 11215.,  8335.,  5733.],
         [10236., 14564., 13179., ..., 17093., 12660.,  8772.],
         [10347., 14655., 13855., ..., 20440., 15068.,  9871.],
         ...,
         [14528., 19259., 17003., ...,  8966.,  9979.,  7852.],
         [12879., 17321., 15149., ...,  7806.,  8400.,  6521.],
         [ 8712., 11819., 10266., ...,  4999.,  5250.,  3940.]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        ...,

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        ...,

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]],

        [[ 4452.,  7250.,  7833., ...,  8734.,  7770.,  5487.],
         [ 6819., 10909., 11628., ..., 14389., 12733.,  9024.],
         [ 7884., 12701., 13792., ..., 19142., 17010., 11178.],
         ...,
         [11461., 16280., 18151., ...,  7512., 11006.,  9117.],
         [12032., 17560., 19209., ...,  7527., 10703.,  8903.],
         [ 8697., 12750., 13934., ...,  5401.,  7372.,  6078.]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [2]}

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[159., 150., 153., ...,  91.,  74.,  76.],
         [142., 146., 155., ..., 127., 122.,  86.],
         [109.,  99., 105., ..., 137., 163.,  93.],
         ...,
         [244., 240., 241., ..., 156., 179., 200.],
         [246., 243., 243., ..., 162., 178., 192.],
         [246., 243., 244., ..., 166., 173., 182.]],

        [[102.,  91.,  95., ...,  71.,  63.,  58.],
         [ 75.,  72.,  76., ..., 105., 111.,  69.],
         [ 67.,  58.,  59., ..., 112., 132.,  72.],
         ...,
         [129., 123., 122., ...,  42.,  59.,  73.],
         [133., 128., 127., ...,  44.,  56.,  65.],
         [139., 133., 132., ...,  47.,  51.,  57.]],

        [[101.,  95.,  97., ...,  56.,  55.,  55.],
         [ 68.,  66.,  65., ...,  71.,  93.,  61.],
         [ 75.,  60.,  52., ...,  80., 105.,  71.],
         ...,
         [ 70.,  65.,  65., ...,  15.,  26.,  36.],
         [ 74.,  72.,  70., ...,  14.,  22.,  27.],
         [ 82.,  78.,  77., ...,  14.,  17.,  19.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1, 11]}
tf node:
{'name': 'log', 'output': array([[[[5.0689044, 5.0106354, 5.030438 , ..., 4.5108595, 4.304065 ,
          4.3307333],
         [4.955827 , 4.983607 , 5.043425 , ..., 4.8441873, 4.804021 ,
          4.454347 ],
         [4.691348 , 4.59512  , 4.65396  , ..., 4.919981 , 5.09375  ,
          4.5325994],
         ...,
         [5.497168 , 5.480639 , 5.484797 , ..., 5.049856 , 5.187386 ,
          5.2983174],
         [5.5053315, 5.4930615, 5.4930615, ..., 5.0875964, 5.1817837,
          5.2574954],
         [5.5053315, 5.4930615, 5.497168 , ..., 5.1119876, 5.1532917,
          5.2040067]],

        [[4.624973 , 4.5108595, 4.553877 , ..., 4.26268  , 4.1431346,
          4.060443 ],
         [4.317488 , 4.276666 , 4.3307333, ..., 4.65396  , 4.7095304,
          4.2341065],
         [4.204693 , 4.060443 , 4.0775375, ..., 4.7184987, 4.882802 ,
          4.276666 ],
         ...,
         [4.8598123, 4.8121843, 4.804021 , ..., 3.7376697, 4.0775375,
          4.2904596],
         [4.890349 , 4.8520303, 4.8441873, ..., 3.7841897, 4.0253515,
          4.1743875],
         [4.934474 , 4.890349 , 4.882802 , ..., 3.8501477, 3.9318256,
          4.0430512]],

        [[4.6151204, 4.553877 , 4.574711 , ..., 4.0253515, 4.0073333,
          4.0073333],
         [4.2195077, 4.189655 , 4.1743875, ..., 4.26268  , 4.5325994,
          4.1108737],
         [4.317488 , 4.0943446, 3.9512436, ..., 4.3820267, 4.65396  ,
          4.26268  ],
         ...,
         [4.248495 , 4.1743875, 4.1743875, ..., 2.7080503, 3.2580965,
          3.583519 ],
         [4.304065 , 4.276666 , 4.248495 , ..., 2.6390574, 3.0910425,
          3.295837 ],
         [4.406719 , 4.356709 , 4.3438053, ..., 2.6390574, 2.8332133,
          2.944439 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [5]}
ms node:
{'name': 'log', 'output': array([[[[5.068905 , 5.010634 , 5.0304365, ..., 4.5108624, 4.304064 ,
          4.330732 ],
         [4.9558277, 4.9836035, 5.0434237, ..., 4.844186 , 4.804021 ,
          4.454345 ],
         [4.6913447, 4.5951176, 4.653958 , ..., 4.919978 , 5.093753 ,
          4.5325994],
         ...,
         [5.497168 , 5.480639 , 5.484797 , ..., 5.0498567, 5.187389 ,
          5.298315 ],
         [5.5053315, 5.4930615, 5.4930615, ..., 5.0875993, 5.1817865,
          5.257493 ],
         [5.5053315, 5.4930615, 5.497168 , ..., 5.1119905, 5.15329  ,
          5.2040095]],

        [[4.6249704, 4.5108624, 4.553877 , ..., 4.2626805, 4.143133 ,
          4.060442 ],
         [4.317487 , 4.276663 , 4.330732 , ..., 4.653958 , 4.7095294,
          4.2341037],
         [4.204696 , 4.060442 , 4.0775375, ..., 4.7184978, 4.8828053,
          4.276663 ],
         ...,
         [4.859811 , 4.8121843, 4.804021 , ..., 3.7376678, 4.0775375,
          4.2904563],
         [4.8903527, 4.852029 , 4.844186 , ..., 3.7841926, 4.0253506,
          4.174386 ],
         [4.934471 , 4.8903527, 4.8828053, ..., 3.8501475, 3.9318233,
          4.0430503]],

        [[4.615118 , 4.553877 , 4.574709 , ..., 4.0253506, 4.0073323,
          4.0073323],
         [4.219505 , 4.189658 , 4.174386 , ..., 4.2626805, 4.5325994,
          4.1108737],
         [4.317487 , 4.0943446, 3.9512413, ..., 4.3820295, 4.653958 ,
          4.2626805],
         ...,
         [4.248496 , 4.174386 , 4.174386 , ..., 2.7080503, 3.258094 ,
          3.583516 ],
         [4.304064 , 4.276663 , 4.248496 , ..., 2.6390564, 3.0910454,
          3.2958336],
         [4.406722 , 4.3567095, 4.343804 , ..., 2.6390564, 2.8332105,
          2.9444375]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [5]}
torch node:
{'name': 'log', 'output': array([[[[5.0689044, 5.0106354, 5.030438 , ..., 4.5108595, 4.304065 ,
          4.3307333],
         [4.955827 , 4.983607 , 5.043425 , ..., 4.8441873, 4.804021 ,
          4.454347 ],
         [4.691348 , 4.59512  , 4.65396  , ..., 4.919981 , 5.09375  ,
          4.5325994],
         ...,
         [5.497168 , 5.480639 , 5.484797 , ..., 5.049856 , 5.1873856,
          5.2983174],
         [5.5053315, 5.4930615, 5.4930615, ..., 5.0875964, 5.1817837,
          5.2574954],
         [5.5053315, 5.4930615, 5.497168 , ..., 5.1119876, 5.1532917,
          5.2040067]],

        [[4.624973 , 4.5108595, 4.553877 , ..., 4.26268  , 4.1431346,
          4.060443 ],
         [4.317488 , 4.276666 , 4.3307333, ..., 4.65396  , 4.7095304,
          4.2341065],
         [4.204693 , 4.060443 , 4.0775375, ..., 4.7184987, 4.882802 ,
          4.276666 ],
         ...,
         [4.8598123, 4.8121843, 4.804021 , ..., 3.7376697, 4.0775375,
          4.2904596],
         [4.890349 , 4.8520303, 4.8441873, ..., 3.7841897, 4.0253515,
          4.1743875],
         [4.934474 , 4.890349 , 4.882802 , ..., 3.8501477, 3.9318256,
          4.0430512]],

        [[4.6151204, 4.553877 , 4.574711 , ..., 4.0253515, 4.0073333,
          4.0073333],
         [4.2195077, 4.189655 , 4.1743875, ..., 4.26268  , 4.5325994,
          4.1108737],
         [4.317488 , 4.0943446, 3.9512436, ..., 4.3820267, 4.65396  ,
          4.26268  ],
         ...,
         [4.248495 , 4.1743875, 4.1743875, ..., 2.7080503, 3.2580965,
          3.583519 ],
         [4.304065 , 4.276666 , 4.248495 , ..., 2.6390574, 3.0910425,
          3.295837 ],
         [4.406719 , 4.356709 , 4.3438053, ..., 2.6390574, 2.8332133,
          2.944439 ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [5]}

generate models:6

analyse output arrays in iter:6

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[164., 105., 118., ..., 109., 108.,  91.],
         [167., 116.,  72., ..., 105., 105.,  89.],
         [140., 142., 119., ..., 104.,  84.,  78.],
         ...,
         [139., 142., 135., ...,  89.,  97., 126.],
         [163., 153., 146., ...,  85.,  98., 127.],
         [183., 176., 154., ...,  94.,  91., 122.]],

        [[206., 140., 148., ..., 147., 147., 129.],
         [213., 160., 109., ..., 142., 142., 127.],
         [191., 193., 163., ..., 139., 120., 115.],
         ...,
         [148., 155., 156., ..., 134., 148., 176.],
         [157., 164., 164., ..., 130., 148., 178.],
         [153., 182., 154., ..., 134., 133., 170.]],

        [[ 84.,  61., 101., ...,  73.,  69.,  57.],
         [ 84.,  49.,  43., ...,  79.,  72.,  57.],
         [ 65.,  66.,  79., ...,  84.,  58.,  49.],
         ...,
         [ 81.,  74.,  72., ...,  28.,  24.,  49.],
         [ 85.,  82.,  90., ...,  19.,  27.,  48.],
         [102., 116., 100., ...,  29.,  26.,  44.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 9153., 12903., 13623., ..., 12439.,  9586.,  5824.],
         [12081., 17348., 18674., ..., 16728., 13087.,  8007.],
         [11087., 15642., 16623., ..., 15617., 12238.,  7443.],
         ...,
         [15519., 19883., 16858., ..., 14793., 13181.,  9860.],
         [12034., 15615., 13571., ..., 11521., 10046.,  7430.],
         [ 7845., 10426.,  9470., ...,  7609.,  6434.,  4595.]],

        [[ 9153., 12903., 13623., ..., 12439.,  9586.,  5824.],
         [12081., 17348., 18674., ..., 16728., 13087.,  8007.],
         [11087., 15642., 16623., ..., 15617., 12238.,  7443.],
         ...,
         [15519., 19883., 16858., ..., 14793., 13181.,  9860.],
         [12034., 15615., 13571., ..., 11521., 10046.,  7430.],
         [ 7845., 10426.,  9470., ...,  7609.,  6434.,  4595.]],

        [[ 9153., 12903., 13623., ..., 12439.,  9586.,  5824.],
         [12081., 17348., 18674., ..., 16728., 13087.,  8007.],
         [11087., 15642., 16623., ..., 15617., 12238.,  7443.],
         ...,
         [15519., 19883., 16858., ..., 14793., 13181.,  9860.],
         [12034., 15615., 13571., ..., 11521., 10046.,  7430.],
         [ 7845., 10426.,  9470., ...,  7609.,  6434.,  4595.]],

        ...,

        [[ 9153., 12903., 13623., ..., 12439.,  9586.,  5824.],
         [12081., 17348., 18674., ..., 16728., 13087.,  8007.],
         [11087., 15642., 16623., ..., 15617., 12238.,  7443.],
         ...,
         [15519., 19883., 16858., ..., 14793., 13181.,  9860.],
         [12034., 15615., 13571., ..., 11521., 10046.,  7430.],
         [ 7845., 10426.,  9470., ...,  7609.,  6434.,  4595.]],

        [[ 9153., 12903., 13623., ..., 12439.,  9586.,  5824.],
         [12081., 17348., 18674., ..., 16728., 13087.,  8007.],
         [11087., 15642., 16623., ..., 15617., 12238.,  7443.],
         ...,
         [15519., 19883., 16858., ..., 14793., 13181.,  9860.],
         [12034., 15615., 13571., ..., 11521., 10046.,  7430.],
         [ 7845., 10426.,  9470., ...,  7609.,  6434.,  4595.]],

        [[ 9153., 12903., 13623., ..., 12439.,  9586.,  5824.],
         [12081., 17348., 18674., ..., 16728., 13087.,  8007.],
         [11087., 15642., 16623., ..., 15617., 12238.,  7443.],
         ...,
         [15519., 19883., 16858., ..., 14793., 13181.,  9860.],
         [12034., 15615., 13571., ..., 11521., 10046.,  7430.],
         [ 7845., 10426.,  9470., ...,  7609.,  6434.,  4595.]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        ...,

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        ...,

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]],

        [[ 6004.,  9077., 10570., ..., 10490.,  9676.,  6291.],
         [ 8417., 13007., 15418., ..., 15121., 13829.,  9021.],
         [ 9061., 13870., 16703., ..., 16329., 15377., 10133.],
         ...,
         [13564., 18738., 19154., ..., 15080., 16237., 12359.],
         [12224., 16828., 17476., ..., 13533., 14379., 10782.],
         [ 8040., 11377., 12103., ...,  9487.,  9643.,  7107.]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [2]}

pre layer res:
9:flatten
{'name': 'flatten', 'output': array([[6.235149e+27, 6.235149e+27, 6.235149e+27, ..., 6.235149e+27,
        6.235149e+27, 6.235149e+27]], dtype=float32), 'output_shape': TensorShape([1, 1024]), 'from': [8], 'to': [14]}
tf node:
{'name': 'sin', 'output': array([[-0.9992202, -0.9992202, -0.9992202, ..., -0.9992202, -0.9992202,
        -0.9992202]], dtype=float32), 'output_shape': TensorShape([1, 1024]), 'from': [9], 'to': [10]}
ms node:
{'name': 'sin', 'output': array([[-0.8658157, -0.8658157, -0.8658157, ..., -0.8658157, -0.8658157,
        -0.8658157]], dtype=float32), 'output_shape': (1, 1024), 'from': [9], 'to': [10]}
torch node:
{'name': 'sin', 'output': array([[-0.9992202, -0.9992202, -0.9992202, ..., -0.9992202, -0.9992202,
        -0.9992202]], dtype=float32), 'output_shape': torch.Size([1, 1024]), 'from': [9], 'to': [10]}

generate models:7

analyse output arrays in iter:7

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[ 28.,  30.,  33., ...,  43.,  52.,  46.],
         [ 27.,  27.,  21., ..., 112., 117., 115.],
         [ 34.,  33.,  24., ..., 175., 177., 176.],
         ...,
         [142., 142., 150., ..., 134., 128., 134.],
         [140., 145., 150., ..., 131., 130., 122.],
         [134., 136., 136., ..., 106., 104., 101.]],

        [[ 35.,  34.,  44., ...,  56.,  64.,  58.],
         [ 30.,  28.,  31., ..., 136., 140., 138.],
         [ 36.,  33.,  30., ..., 208., 209., 208.],
         ...,
         [176., 176., 184., ..., 175., 168., 175.],
         [176., 180., 186., ..., 170., 170., 162.],
         [171., 171., 171., ..., 144., 142., 140.]],

        [[ 39.,  44.,  47., ...,  45.,  53.,  47.],
         [ 38.,  41.,  39., ...,  97., 101., 100.],
         [ 42.,  43.,  40., ..., 143., 144., 143.],
         ...,
         [118., 118., 127., ..., 119., 112., 119.],
         [124., 129., 134., ..., 119., 119., 111.],
         [123., 124., 124., ..., 100.,  99.,  96.]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1, 12]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 3992.,  5418.,  5597., ..., 13993., 12478.,  8529.],
         [ 6760.,  8599.,  7582., ..., 18946., 17437., 12433.],
         [ 8302., 10020.,  7752., ..., 20248., 19002., 14078.],
         ...,
         [17798., 25029., 25459., ..., 16956., 15876., 10235.],
         [14580., 20424., 20936., ..., 15624., 13861.,  9117.],
         [ 9130., 12742., 13111., ..., 11217.,  9617.,  6328.]],

        [[ 3992.,  5418.,  5597., ..., 13993., 12478.,  8529.],
         [ 6760.,  8599.,  7582., ..., 18946., 17437., 12433.],
         [ 8302., 10020.,  7752., ..., 20248., 19002., 14078.],
         ...,
         [17798., 25029., 25459., ..., 16956., 15876., 10235.],
         [14580., 20424., 20936., ..., 15624., 13861.,  9117.],
         [ 9130., 12742., 13111., ..., 11217.,  9617.,  6328.]],

        [[ 3992.,  5418.,  5597., ..., 13993., 12478.,  8529.],
         [ 6760.,  8599.,  7582., ..., 18946., 17437., 12433.],
         [ 8302., 10020.,  7752., ..., 20248., 19002., 14078.],
         ...,
         [17798., 25029., 25459., ..., 16956., 15876., 10235.],
         [14580., 20424., 20936., ..., 15624., 13861.,  9117.],
         [ 9130., 12742., 13111., ..., 11217.,  9617.,  6328.]],

        ...,

        [[ 3992.,  5418.,  5597., ..., 13993., 12478.,  8529.],
         [ 6760.,  8599.,  7582., ..., 18946., 17437., 12433.],
         [ 8302., 10020.,  7752., ..., 20248., 19002., 14078.],
         ...,
         [17798., 25029., 25459., ..., 16956., 15876., 10235.],
         [14580., 20424., 20936., ..., 15624., 13861.,  9117.],
         [ 9130., 12742., 13111., ..., 11217.,  9617.,  6328.]],

        [[ 3992.,  5418.,  5597., ..., 13993., 12478.,  8529.],
         [ 6760.,  8599.,  7582., ..., 18946., 17437., 12433.],
         [ 8302., 10020.,  7752., ..., 20248., 19002., 14078.],
         ...,
         [17798., 25029., 25459., ..., 16956., 15876., 10235.],
         [14580., 20424., 20936., ..., 15624., 13861.,  9117.],
         [ 9130., 12742., 13111., ..., 11217.,  9617.,  6328.]],

        [[ 3992.,  5418.,  5597., ..., 13993., 12478.,  8529.],
         [ 6760.,  8599.,  7582., ..., 18946., 17437., 12433.],
         [ 8302., 10020.,  7752., ..., 20248., 19002., 14078.],
         ...,
         [17798., 25029., 25459., ..., 16956., 15876., 10235.],
         [14580., 20424., 20936., ..., 15624., 13861.,  9117.],
         [ 9130., 12742., 13111., ..., 11217.,  9617.,  6328.]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        ...,

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]]]],
      dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        ...,

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]],

        [[ 2065.,  3633.,  4390., ..., 10322., 10749.,  7819.],
         [ 4095.,  6124.,  6603., ..., 16007., 17200., 12880.],
         [ 6279.,  8388.,  8231., ..., 19105., 21253., 16354.],
         ...,
         [14352., 21986., 25972., ..., 17275., 17179., 13044.],
         [13726., 20802., 24433., ..., 17889., 18138., 13330.],
         [ 9375., 14200., 16809., ..., 13583., 13728.,  9840.]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [2]}

generate models:8

final statics:
total operators:28
tensorflow --> nums:7,distinct_bugs:1
mindspore --> nums:2,distinct_bugs:2
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:7
mindspore --> 
log:1
sin:1
torch --> 

generate models:8

analyse output arrays in iter:16

pre layer res:
15:transpose
{'name': 'transpose', 'output': array([[[[inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         ...,
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         ...,
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         ...,
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.]],

        ...,

        [[inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         ...,
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         ...,
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         ...,
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.],
         [inf, inf, inf, ...,  1.,  1.,  1.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16], 'to': [14]}
tf node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        ...,

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [15], 'to': [6]}
ms node:
{'name': 'log', 'output': array([[[[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        ...,

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         ...,
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]]]],
      dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [15], 'to': [6]}
torch node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        ...,

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         ...,
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.],
         [inf, inf, inf, ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [15], 'to': [6]}

generate models:14

analyse output arrays in iter:20

pre layer res:
6:add
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [5, 15], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [6], 'to': []}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [6], 'to': []}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [6], 'to': []}

generate models:18

final statics:
total operators:28
tensorflow --> nums:8,distinct_bugs:1
mindspore --> nums:3,distinct_bugs:2
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:8
mindspore --> 
log:2
sin:1
torch --> 

generate models:46

analyse output arrays in iter:69

pre layer res:
10:add
{'name': 'add', 'output': array([[[[791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         ...,
         [733.453  , 737.1396 , 737.1396 , ..., 733.453  , 732.1995 ,
          732.1995 ],
         [733.453  , 737.1396 , 737.1396 , ..., 734.28125, 734.694  ,
          734.694  ],
         [728.36615, 728.36615, 725.745  , ..., 734.28125, 734.694  ,
          734.694  ]],

        [[791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         ...,
         [733.453  , 737.1396 , 737.1396 , ..., 733.453  , 732.1995 ,
          732.1995 ],
         [733.453  , 737.1396 , 737.1396 , ..., 734.28125, 734.694  ,
          734.694  ],
         [728.36615, 728.36615, 725.745  , ..., 734.28125, 734.694  ,
          734.694  ]],

        [[791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         ...,
         [733.453  , 737.1396 , 737.1396 , ..., 733.453  , 732.1995 ,
          732.1995 ],
         [733.453  , 737.1396 , 737.1396 , ..., 734.28125, 734.694  ,
          734.694  ],
         [728.36615, 728.36615, 725.745  , ..., 734.28125, 734.694  ,
          734.694  ]],

        ...,

        [[791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         ...,
         [733.453  , 737.1396 , 737.1396 , ..., 733.453  , 732.1995 ,
          732.1995 ],
         [733.453  , 737.1396 , 737.1396 , ..., 734.28125, 734.694  ,
          734.694  ],
         [728.36615, 728.36615, 725.745  , ..., 734.28125, 734.694  ,
          734.694  ]],

        [[791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         ...,
         [733.453  , 737.1396 , 737.1396 , ..., 733.453  , 732.1995 ,
          732.1995 ],
         [733.453  , 737.1396 , 737.1396 , ..., 734.28125, 734.694  ,
          734.694  ],
         [728.36615, 728.36615, 725.745  , ..., 734.28125, 734.694  ,
          734.694  ]],

        [[791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         [791.04266, 791.04266, 791.04266, ..., 791.5706 , 789.97754,
          789.97754],
         ...,
         [733.453  , 737.1396 , 737.1396 , ..., 733.453  , 732.1995 ,
          732.1995 ],
         [733.453  , 737.1396 , 737.1396 , ..., 734.28125, 734.694  ,
          734.694  ],
         [728.36615, 728.36615, 725.745  , ..., 734.28125, 734.694  ,
          734.694  ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [9, 9], 'to': [4]}
tf node:
{'name': 'sin', 'output': array([[[[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ],
         [-0.4647442 , -0.4647442 , -0.03708363, ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ],
         [-0.4647442 , -0.4647442 , -0.03708363, ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ],
         [-0.4647442 , -0.4647442 , -0.03708363, ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ]],

        ...,

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ],
         [-0.4647442 , -0.4647442 , -0.03708363, ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ],
         [-0.4647442 , -0.4647442 , -0.03708363, ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.9064017 ,  0.9064017 , ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ],
         [-0.4647442 , -0.4647442 , -0.03708363, ..., -0.7522241 ,
          -0.4247731 , -0.4247731 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10], 'to': [11]}
ms node:
{'name': 'sin', 'output': array([[[[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.9940583 ,
          -0.20675051, -0.20675051],
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.75226426,
          -0.42587787, -0.42587787],
         [-0.46479827, -0.46479827, -0.03683966, ..., -0.75226426,
          -0.42587787, -0.42587787]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.9940583 ,
          -0.20675051, -0.20675051],
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.75226426,
          -0.42587787, -0.42587787],
         [-0.46479827, -0.46479827, -0.03683966, ..., -0.75226426,
          -0.42587787, -0.42587787]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.9940583 ,
          -0.20675051, -0.20675051],
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.75226426,
          -0.42587787, -0.42587787],
         [-0.46479827, -0.46479827, -0.03683966, ..., -0.75226426,
          -0.42587787, -0.42587787]],

        ...,

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.9940583 ,
          -0.20675051, -0.20675051],
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.75226426,
          -0.42587787, -0.42587787],
         [-0.46479827, -0.46479827, -0.03683966, ..., -0.75226426,
          -0.42587787, -0.42587787]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.9940583 ,
          -0.20675051, -0.20675051],
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.75226426,
          -0.42587787, -0.42587787],
         [-0.46479827, -0.46479827, -0.03683966, ..., -0.75226426,
          -0.42587787, -0.42587787]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.9940583 ,
          -0.20675051, -0.20675051],
         [-0.9940583 ,  0.90640163,  0.90640163, ..., -0.75226426,
          -0.42587787, -0.42587787],
         [-0.46479827, -0.46479827, -0.03683966, ..., -0.75226426,
          -0.42587787, -0.42587787]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [10], 'to': [11]}
torch node:
{'name': 'sin', 'output': array([[[[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ],
         [-0.46474424, -0.46474424, -0.03708363, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ],
         [-0.46474424, -0.46474424, -0.03708363, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ],
         [-0.46474424, -0.46474424, -0.03708363, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ]],

        ...,

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ],
         [-0.46474424, -0.46474424, -0.03708363, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ],
         [-0.46474424, -0.46474424, -0.03708363, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ]],

        [[-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         [-0.59614027, -0.59614027, -0.59614027, ..., -0.11050488,
          -0.9911668 , -0.9911668 ],
         ...,
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.9940782 ,
          -0.20692965, -0.20692965],
         [-0.9940782 ,  0.90640163,  0.90640163, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ],
         [-0.46474424, -0.46474424, -0.03708363, ..., -0.752224  ,
          -0.4247731 , -0.4247731 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [10], 'to': [11]}

generate models:65

analyse output arrays in iter:76

pre layer res:
19:conv2d
{'name': 'conv2d', 'output': array([[[[401.47656, 401.48486, 401.48737, ..., 401.48254, 401.4825 ,
          401.48242],
         [401.47656, 401.49078, 401.49265, ..., 401.48434, 401.48434,
          401.48428],
         [401.46735, 401.49304, 401.49304, ..., 401.4846 , 401.48474,
          401.48474],
         ...,
         [401.47495, 401.47495, 401.47116, ..., 401.46738, 401.47516,
          401.47516],
         [401.4717 , 401.4717 , 401.47116, ..., 401.46738, 401.46738,
          401.46393],
         [401.47125, 401.47125, 401.47116, ..., 401.46738, 401.46738,
          401.46393]],

        [[401.47656, 401.48486, 401.48737, ..., 401.48254, 401.4825 ,
          401.48242],
         [401.47656, 401.49078, 401.49265, ..., 401.48434, 401.48434,
          401.48428],
         [401.46735, 401.49304, 401.49304, ..., 401.4846 , 401.48474,
          401.48474],
         ...,
         [401.47495, 401.47495, 401.47116, ..., 401.46738, 401.47516,
          401.47516],
         [401.4717 , 401.4717 , 401.47116, ..., 401.46738, 401.46738,
          401.46393],
         [401.47125, 401.47125, 401.47116, ..., 401.46738, 401.46738,
          401.46393]],

        [[401.47656, 401.48486, 401.48737, ..., 401.48254, 401.4825 ,
          401.48242],
         [401.47656, 401.49078, 401.49265, ..., 401.48434, 401.48434,
          401.48428],
         [401.46735, 401.49304, 401.49304, ..., 401.4846 , 401.48474,
          401.48474],
         ...,
         [401.47495, 401.47495, 401.47116, ..., 401.46738, 401.47516,
          401.47516],
         [401.4717 , 401.4717 , 401.47116, ..., 401.46738, 401.46738,
          401.46393],
         [401.47125, 401.47125, 401.47116, ..., 401.46738, 401.46738,
          401.46393]],

        ...,

        [[401.47656, 401.48486, 401.48737, ..., 401.48254, 401.4825 ,
          401.48242],
         [401.47656, 401.49078, 401.49265, ..., 401.48434, 401.48434,
          401.48428],
         [401.46735, 401.49304, 401.49304, ..., 401.4846 , 401.48474,
          401.48474],
         ...,
         [401.47495, 401.47495, 401.47116, ..., 401.46738, 401.47516,
          401.47516],
         [401.4717 , 401.4717 , 401.47116, ..., 401.46738, 401.46738,
          401.46393],
         [401.47125, 401.47125, 401.47116, ..., 401.46738, 401.46738,
          401.46393]],

        [[401.47656, 401.48486, 401.48737, ..., 401.48254, 401.4825 ,
          401.48242],
         [401.47656, 401.49078, 401.49265, ..., 401.48434, 401.48434,
          401.48428],
         [401.46735, 401.49304, 401.49304, ..., 401.4846 , 401.48474,
          401.48474],
         ...,
         [401.47495, 401.47495, 401.47116, ..., 401.46738, 401.47516,
          401.47516],
         [401.4717 , 401.4717 , 401.47116, ..., 401.46738, 401.46738,
          401.46393],
         [401.47125, 401.47125, 401.47116, ..., 401.46738, 401.46738,
          401.46393]],

        [[401.47656, 401.48486, 401.48737, ..., 401.48254, 401.4825 ,
          401.48242],
         [401.47656, 401.49078, 401.49265, ..., 401.48434, 401.48434,
          401.48428],
         [401.46735, 401.49304, 401.49304, ..., 401.4846 , 401.48474,
          401.48474],
         ...,
         [401.47495, 401.47495, 401.47116, ..., 401.46738, 401.47516,
          401.47516],
         [401.4717 , 401.4717 , 401.47116, ..., 401.46738, 401.46738,
          401.46393],
         [401.47125, 401.47125, 401.47116, ..., 401.46738, 401.46738,
          401.46393]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [18], 'to': [5]}
tf node:
{'name': 'cos', 'output': array([[[[0.7977166 , 0.80269474, 0.8041847 , ..., 0.80130935,
          0.8012911 , 0.80123633],
         [0.7977166 , 0.80621153, 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.80262196, 0.80262196],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.79686934, 0.79686934],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945033 , 0.7945033 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7977166 , 0.80269474, 0.8041847 , ..., 0.80130935,
          0.8012911 , 0.80123633],
         [0.7977166 , 0.80621153, 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.80262196, 0.80262196],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.79686934, 0.79686934],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945033 , 0.7945033 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7977166 , 0.80269474, 0.8041847 , ..., 0.80130935,
          0.8012911 , 0.80123633],
         [0.7977166 , 0.80621153, 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.80262196, 0.80262196],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.79686934, 0.79686934],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945033 , 0.7945033 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        ...,

        [[0.7977166 , 0.80269474, 0.8041847 , ..., 0.80130935,
          0.8012911 , 0.80123633],
         [0.7977166 , 0.80621153, 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.80262196, 0.80262196],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.79686934, 0.79686934],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945033 , 0.7945033 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7977166 , 0.80269474, 0.8041847 , ..., 0.80130935,
          0.8012911 , 0.80123633],
         [0.7977166 , 0.80621153, 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.80262196, 0.80262196],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.79686934, 0.79686934],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945033 , 0.7945033 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7977166 , 0.80269474, 0.8041847 , ..., 0.80130935,
          0.8012911 , 0.80123633],
         [0.7977166 , 0.80621153, 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.80262196, 0.80262196],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.79686934, 0.79686934],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945033 , 0.7945033 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [19], 'to': [22]}
ms node:
{'name': 'cos', 'output': array([[[[0.7977166 , 0.80269474, 0.8041846 , ..., 0.80130935,
          0.80129105, 0.8012363 ],
         [0.7977166 , 0.8062115 , 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.8026219 , 0.8026219 ],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.7968693 , 0.7968693 ],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945032 , 0.7945032 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7977166 , 0.80269474, 0.8041846 , ..., 0.80130935,
          0.80129105, 0.8012363 ],
         [0.7977166 , 0.8062115 , 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.8026219 , 0.8026219 ],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.7968693 , 0.7968693 ],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945032 , 0.7945032 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7977166 , 0.80269474, 0.8041846 , ..., 0.80130935,
          0.80129105, 0.8012363 ],
         [0.7977166 , 0.8062115 , 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.8026219 , 0.8026219 ],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.7968693 , 0.7968693 ],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945032 , 0.7945032 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        ...,

        [[0.7977166 , 0.80269474, 0.8041846 , ..., 0.80130935,
          0.80129105, 0.8012363 ],
         [0.7977166 , 0.8062115 , 0.8073115 , ..., 0.8023852 ,
          0.8023852 , 0.8023488 ],
         [0.7921251 , 0.80754554, 0.80754554, ..., 0.8025309 ,
          0.8026219 , 0.8026219 ],
         ...,
         [0.79674023, 0.79674023, 0.79444766, ..., 0.7921437 ,
          0.7968693 , 0.7968693 ],
         [0.79478115, 0.79478115, 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ],
         [0.7945032 , 0.7945032 , 0.79444766, ..., 0.7921437 ,
          0.7921437 , 0.7900343 ]],

        [[0.7973852 , 0.80269474, 0.80501825, ..., 0.8005419 ,
          0.800487  , 0.80041385],
         [0.7973852 , 0.8056695 , 0.8072394 , ..., 0.80205727,
          0.80205727, 0.80200255],
         [0.79160327, 0.80752754, 0.80752754, ..., 0.80214834,
          0.80254906, 0.80254906],
         ...,
         [0.79589105, 0.79589105, 0.7949478 , ..., 0.7916592 ,
          0.79631585, 0.79631585],
         [0.7955769 , 0.7955769 , 0.7949478 , ..., 0.7916592 ,
          0.7916592 , 0.7909128 ],
         [0.79502183, 0.79502183, 0.7949478 , ..., 0.7916592 ,
          0.7916592 , 0.7909128 ]],

        [[0.7973852 , 0.80269474, 0.80501825, ..., 0.8005419 ,
          0.800487  , 0.80041385],
         [0.7973852 , 0.8056695 , 0.8072394 , ..., 0.80205727,
          0.80205727, 0.80200255],
         [0.79160327, 0.80752754, 0.80752754, ..., 0.80214834,
          0.80254906, 0.80254906],
         ...,
         [0.79589105, 0.79589105, 0.7949478 , ..., 0.7916592 ,
          0.79631585, 0.79631585],
         [0.7955769 , 0.7955769 , 0.7949478 , ..., 0.7916592 ,
          0.7916592 , 0.7909128 ],
         [0.79502183, 0.79502183, 0.7949478 , ..., 0.7916592 ,
          0.7916592 , 0.7909128 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [19], 'to': [22]}
torch node:
{'name': 'cos', 'output': array([[[[0.7973484 , 0.8026765 , 0.80501825, ..., 0.8005419 ,
          0.8004687 , 0.80039555],
         [0.7973484 , 0.8056514 , 0.8072394 , ..., 0.802039  ,
          0.802039  , 0.8019843 ],
         [0.79156595, 0.8076175 , 0.8076175 , ..., 0.80225766,
          0.8025309 , 0.8025309 ],
         ...,
         [0.79598343, 0.79598343, 0.79492927, ..., 0.7916405 ,
          0.7962974 , 0.7962974 ],
         [0.7955584 , 0.7955584 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ],
         [0.7949848 , 0.7949848 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ]],

        [[0.7973484 , 0.8026765 , 0.80501825, ..., 0.8005419 ,
          0.8004687 , 0.80039555],
         [0.7973484 , 0.8056514 , 0.8072394 , ..., 0.802039  ,
          0.802039  , 0.8019843 ],
         [0.79156595, 0.8076175 , 0.8076175 , ..., 0.80225766,
          0.8025309 , 0.8025309 ],
         ...,
         [0.79598343, 0.79598343, 0.79492927, ..., 0.7916405 ,
          0.7962974 , 0.7962974 ],
         [0.7955584 , 0.7955584 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ],
         [0.7949848 , 0.7949848 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ]],

        [[0.7973484 , 0.8026765 , 0.80501825, ..., 0.8005419 ,
          0.8004687 , 0.80039555],
         [0.7973484 , 0.8056514 , 0.8072394 , ..., 0.802039  ,
          0.802039  , 0.8019843 ],
         [0.79156595, 0.8076175 , 0.8076175 , ..., 0.80225766,
          0.8025309 , 0.8025309 ],
         ...,
         [0.79598343, 0.79598343, 0.79492927, ..., 0.7916405 ,
          0.7962974 , 0.7962974 ],
         [0.7955584 , 0.7955584 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ],
         [0.7949848 , 0.7949848 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ]],

        ...,

        [[0.7973484 , 0.8026765 , 0.80501825, ..., 0.8005419 ,
          0.8004687 , 0.80039555],
         [0.7973484 , 0.8056514 , 0.8072394 , ..., 0.802039  ,
          0.802039  , 0.8019843 ],
         [0.79156595, 0.8076175 , 0.8076175 , ..., 0.80225766,
          0.8025309 , 0.8025309 ],
         ...,
         [0.79598343, 0.79598343, 0.79492927, ..., 0.7916405 ,
          0.7962974 , 0.7962974 ],
         [0.7955584 , 0.7955584 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ],
         [0.7949848 , 0.7949848 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ]],

        [[0.7973484 , 0.8026765 , 0.80501825, ..., 0.8005419 ,
          0.8004687 , 0.80039555],
         [0.7973484 , 0.8056514 , 0.8072394 , ..., 0.802039  ,
          0.802039  , 0.8019843 ],
         [0.79156595, 0.8076175 , 0.8076175 , ..., 0.80225766,
          0.8025309 , 0.8025309 ],
         ...,
         [0.79598343, 0.79598343, 0.79492927, ..., 0.7916405 ,
          0.7962974 , 0.7962974 ],
         [0.7955584 , 0.7955584 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ],
         [0.7949848 , 0.7949848 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ]],

        [[0.7973484 , 0.8026765 , 0.80501825, ..., 0.8005419 ,
          0.8004687 , 0.80039555],
         [0.7973484 , 0.8056514 , 0.8072394 , ..., 0.802039  ,
          0.802039  , 0.8019843 ],
         [0.79156595, 0.8076175 , 0.8076175 , ..., 0.80225766,
          0.8025309 , 0.8025309 ],
         ...,
         [0.79598343, 0.79598343, 0.79492927, ..., 0.7916405 ,
          0.7962974 , 0.7962974 ],
         [0.7955584 , 0.7955584 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ],
         [0.7949848 , 0.7949848 , 0.79492927, ..., 0.7916405 ,
          0.7916405 , 0.7908941 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [19], 'to': [22]}

generate models:72

final statics:
total operators:28
tensorflow --> nums:9,distinct_bugs:2
mindspore --> nums:5,distinct_bugs:3
torch --> nums:1,distinct_bugs:1
tensorflow --> 
conv2d:8
cos:1
mindspore --> 
log:2
sin:2
cos:1
torch --> 
cos:1

generate models:93

analyse output arrays in iter:157

pre layer res:
16:add
{'name': 'add', 'output': array([[[[6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         ...,
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02]],

        [[6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         ...,
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02],
         [6.6375000e+01, 6.9562500e+01, 7.4593750e+01, ...,
          4.5646875e+02, 4.6178125e+02, 4.5350000e+02]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 2.0552081e-35, 1.6653524e-31, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 7.9196671e-29, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 3.8364260e-28, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [15, 21], 'to': [26]}
tf node:
{'name': 'log', 'output': array([[[[  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         ...,
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953]],

        [[  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         ...,
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf, -79.8701   , -70.8701   , ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf, -64.70562  , ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf, -63.127842 , ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [16], 'to': [12]}
ms node:
{'name': 'log', 'output': array([[[[  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         ...,
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944]],

        [[  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         ...,
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944],
         [  4.195324 ,   4.242223 ,   4.312055 , ...,   6.1235194,
            6.1350904,   6.1169944]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf, -79.87011  , -70.8701   , ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf, -64.70563  , ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf, -63.12784  , ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [16], 'to': [12]}
torch node:
{'name': 'log', 'output': array([[[[  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         ...,
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953]],

        [[  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         ...,
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953],
         [  4.1953206,   4.2422256,   4.3120565, ...,   6.1235204,
            6.1350913,   6.1169953]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf, -79.8701   , -70.8701   , ..., -88.8701   ,
          -97.87176  ,        -inf],
         [       -inf, -94.70554  , -64.70562  , ..., -93.70561  ,
                 -inf,        -inf],
         [       -inf, -96.12823  , -63.127842 , ...,        -inf,
                 -inf,        -inf]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [16], 'to': [12]}

generate models:147

analyse output arrays in iter:162

pre layer res:
17:add
{'name': 'add', 'output': array([[[[401637.72  , 402338.1   , 397776.16  , ..., 462795.62  ,
          474493.22  , 478847.2   ],
         [417893.22  , 417954.78  , 416084.53  , ..., 470608.06  ,
          481918.34  , 486015.03  ],
         [421984.03  , 420391.7   , 415829.16  , ..., 472143.88  ,
          482813.72  , 481660.88  ],
         ...,
         [269017.78  , 266399.9   , 286279.34  , ..., 396488.7   ,
          415353.03  , 420345.62  ],
         [289632.12  , 289190.8   , 289358.4   , ..., 417610.75  ,
          436728.53  , 440190.5   ],
         [340575.88  , 343718.22  , 354637.62  , ..., 439370.6   ,
          457854.2   , 469246.62  ]],

        [[353767.28  , 355623.8   , 353622.06  , ..., 439624.2   ,
          459129.88  , 465919.8   ],
         [404965.78  , 406183.5   , 406229.53  , ..., 466636.97  ,
          479104.6   , 483714.25  ],
         [423269.72  , 422567.75  , 415445.12  , ..., 471629.4   ,
          483327.22  , 487041.2   ],
         ...,
         [261721.8   , 251167.9   , 255815.38  , ..., 392392.72  ,
          411257.    , 415865.62  ],
         [275936.12  , 265638.8   , 258638.4   , ..., 414538.78  ,
          433400.53  , 436862.5   ],
         [315231.88  , 311846.22  , 317641.84  , ..., 435658.56  ,
          454526.22  , 465918.62  ]],

        [[322791.3   , 319783.8   , 316368.06  , ..., 437192.2   ,
          457081.88  , 463999.8   ],
         [378213.8   , 379815.5   , 388815.53  , ..., 460876.97  ,
          473344.6   , 478210.25  ],
         [404069.72  , 403745.75  , 399439.12  , ..., 465869.44  ,
          477567.2   , 481537.2   ],
         ...,
         [254425.81  , 244127.9   , 267207.38  , ..., 409928.4   ,
          428920.7   , 420217.6   ],
         [268640.16  , 258598.83  , 270030.4   , ..., 426057.72  ,
          444919.7   , 441213.66  ],
         [310879.06  , 307493.22  , 327496.84  , ..., 447177.72  ,
          466045.38  , 469886.12  ]],

        ...,

        [[  3460.4482,   3460.4482,   3845.092 , ...,   2691.8984,
            2691.8984,   2691.8984],
         [  3460.4482,   3460.4482,   3845.092 , ...,   2691.8984,
            2691.8984,   2691.8984],
         [  3460.4482,   3460.4482,   3460.582 , ...,   2691.8984,
            2691.8984,   2691.8984],
         ...,
         [ 18563.812 ,  18563.812 ,  18179.812 , ...,  22404.365 ,
           22789.314 ,  22789.314 ],
         [ 20099.812 ,  20099.812 ,  20099.812 , ...,  25989.67  ,
           25989.67  ,  25989.67  ],
         [ 20099.812 ,  20099.812 ,  20099.812 , ...,  25989.67  ,
           25989.67  ,  25989.67  ]],

        [[  3460.4482,   3460.4482,   3845.092 , ...,   2691.8984,
            2691.8984,   2691.8984],
         [  3460.4482,   3460.4482,   3845.092 , ...,   2691.8984,
            2691.8984,   2691.8984],
         [  3460.4482,   3460.4482,   3460.582 , ...,   2691.8984,
            2691.8984,   2691.8984],
         ...,
         [ 18563.812 ,  18563.812 ,  18179.812 , ...,  22404.365 ,
           22789.314 ,  22789.314 ],
         [ 20099.812 ,  20099.812 ,  20099.812 , ...,  25989.67  ,
           25989.67  ,  25989.67  ],
         [ 20099.812 ,  20099.812 ,  20099.812 , ...,  25989.67  ,
           25989.67  ,  25989.67  ]],

        [[  3460.4482,   3460.4482,   3845.092 , ...,   2691.8984,
            2691.8984,   2691.8984],
         [  3460.4482,   3460.4482,   3845.092 , ...,   2691.8984,
            2691.8984,   2691.8984],
         [  3460.4482,   3460.4482,   3460.582 , ...,   2691.8984,
            2691.8984,   2691.8984],
         ...,
         [ 18563.812 ,  18563.812 ,  18179.812 , ...,  22404.365 ,
           22789.314 ,  22789.314 ],
         [ 20099.812 ,  20099.812 ,  20099.812 , ...,  25989.67  ,
           25989.67  ,  25989.67  ],
         [ 20099.812 ,  20099.812 ,  20099.812 , ...,  25989.67  ,
           25989.67  ,  25989.67  ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [11, 33], 'to': [13]}
tf node:
{'name': 'cos', 'output': array([[[[-0.69242483,  0.8220525 ,  0.96617806, ...,  0.24040392,
           0.93258834,  0.7973255 ],
         [ 0.13435826, -0.90635985,  0.8439659 , ..., -0.8112059 ,
          -0.38804954, -0.3408629 ],
         [ 0.5593744 , -0.8610629 , -0.09847935, ...,  0.98040736,
           0.36852387, -0.2538579 ],
         ...,
         [-0.9981565 ,  0.64666736,  0.14191458, ...,  0.6636857 ,
          -0.99718326,  0.8638418 ],
         [-0.74749565,  0.6013939 ,  0.42964065, ...,  0.39801735,
          -0.99959356, -0.999284  ],
         [-0.5036454 , -0.9577027 , -0.48738796, ...,  0.9999328 ,
           0.044947  ,  0.8759976 ]],

        [[ 0.376959  , -0.23430404, -0.31359538, ..., -0.6496553 ,
           0.24337581, -0.932625  ],
         [-0.3438702 ,  0.7631439 , -0.92490613, ..., -0.8756825 ,
           0.65825874, -0.99617136],
         [-0.9798553 , -0.02385047,  0.61177856, ...,  0.5810953 ,
           0.86390734,  0.9969272 ],
         ...,
         [-0.4125881 , -0.7549699 , -0.19632362, ...,  0.05763305,
          -0.862556  ,  0.9051458 ],
         [-0.8153533 , -0.1247944 , -0.87378824, ...,  0.7945219 ,
           0.5192112 ,  0.46140078],
         [-0.24182883,  0.67161053, -0.1226251 , ...,  0.22597152,
           0.8289164 , -0.01411992]],

        [[ 0.49802983,  0.45689842, -0.96702826, ..., -0.29537195,
           0.5347864 ,  0.6554149 ],
         [-0.8170463 , -0.99597305,  0.8567154 , ...,  0.5762064 ,
           0.6758834 , -0.98756546],
         [-0.3499881 ,  0.6759589 , -0.24133085, ..., -0.8875975 ,
           0.43401003,  0.9889581 ],
         ...,
         [ 0.70394737,  0.51967585, -0.7051575 , ...,  0.6745518 ,
           0.5755706 , -0.26557264],
         [-0.8401964 , -0.19831756, -0.45991576, ...,  0.35652038,
           0.49521565, -0.50553185],
         [ 0.92861694,  0.9159201 , -0.05319468, ..., -0.96137387,
          -0.8913952 , -0.31209853]],

        ...,

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.83416116, ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]],

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.83416116, ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]],

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.83416116, ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [17], 'to': [15]}
ms node:
{'name': 'cos', 'output': array([[[[-0.69242483,  0.8220525 ,  0.96617806, ...,  0.24040392,
           0.93258834,  0.7973255 ],
         [ 0.13435826, -0.90635985,  0.8439658 , ..., -0.8112059 ,
          -0.38804954, -0.3408629 ],
         [ 0.55937433, -0.8610629 , -0.09847935, ...,  0.98040736,
           0.39738977, -0.28395534],
         ...,
         [-0.9981565 ,  0.64666736,  0.14191458, ...,  0.6636856 ,
          -0.99435294,  0.8638418 ],
         [-0.74749565,  0.6013939 ,  0.42964065, ...,  0.39801738,
          -0.99959356, -0.999284  ],
         [-0.5036454 , -0.9577027 , -0.48738796, ...,  0.99980676,
           0.044947  ,  0.87599754]],

        [[ 0.376959  , -0.20381448, -0.31359538, ..., -0.62558484,
           0.24337581, -0.932625  ],
         [-0.3438702 ,  0.7631439 , -0.92490613, ..., -0.8903427 ,
           0.6582587 , -0.99617136],
         [-0.9798553 , -0.02385047,  0.61177856, ...,  0.5810953 ,
           0.847749  ,  0.9969272 ],
         ...,
         [-0.4125881 , -0.7549699 , -0.19632362, ...,  0.05763305,
          -0.862556  ,  0.9051458 ],
         [-0.8153533 , -0.1247944 , -0.87378824, ...,  0.77516097,
           0.5192112 ,  0.46140078],
         [-0.24182883,  0.64813316, -0.1226251 , ...,  0.22597152,
           0.8289164 , -0.01411992]],

        [[ 0.4980298 ,  0.48446825, -0.96702826, ..., -0.29537195,
           0.5347864 ,  0.6554148 ],
         [-0.8170463 , -0.99597305,  0.8567154 , ...,  0.5762063 ,
           0.6758834 , -0.98756546],
         [-0.3499881 ,  0.6759589 , -0.24133085, ..., -0.8727721 ,
           0.43401003,  0.9889581 ],
         ...,
         [ 0.7039473 ,  0.51967585, -0.7051575 , ...,  0.6745517 ,
           0.5755706 , -0.26557264],
         [-0.8401964 , -0.19831756, -0.45991576, ...,  0.35652038,
           0.49521562, -0.5055318 ],
         [ 0.92861694,  0.9159201 , -0.05319468, ..., -0.96137387,
          -0.8913952 , -0.31209853]],

        ...,

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.8341611 , ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]],

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.8341611 , ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]],

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.8341611 , ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [17], 'to': [15]}
torch node:
{'name': 'cos', 'output': array([[[[-0.69242483,  0.8220525 ,  0.96617806, ...,  0.24040392,
           0.93258834,  0.7973255 ],
         [ 0.13435826, -0.90635985,  0.8439658 , ..., -0.7730983 ,
          -0.38804954, -0.3408629 ],
         [ 0.55937433, -0.8610629 , -0.09847935, ...,  0.98040736,
           0.39738977, -0.28395534],
         ...,
         [-0.9981565 ,  0.64666736,  0.14191458, ...,  0.6636856 ,
          -0.99435294,  0.8638418 ],
         [-0.74749565,  0.6013939 ,  0.42964065, ...,  0.39801738,
          -0.99959356, -0.999284  ],
         [-0.5036454 , -0.9577027 , -0.48738796, ...,  0.9999328 ,
           0.044947  ,  0.87599754]],

        [[ 0.376959  , -0.20381448, -0.31359538, ..., -0.6496553 ,
           0.24337581, -0.932625  ],
         [-0.3438702 ,  0.7631439 , -0.92490613, ..., -0.8756825 ,
           0.6582587 , -0.99617136],
         [-0.9798553 , -0.02385047,  0.61177856, ...,  0.5810953 ,
           0.847749  ,  0.9969272 ],
         ...,
         [-0.4125881 , -0.7549699 , -0.19632362, ...,  0.05763305,
          -0.862556  ,  0.9051458 ],
         [-0.8153533 , -0.1247944 , -0.87378824, ...,  0.7945219 ,
           0.5192112 ,  0.46140078],
         [-0.24182883,  0.64813316, -0.1226251 , ...,  0.19542447,
           0.8289164 , -0.01411992]],

        [[ 0.4980298 ,  0.48446825, -0.96702826, ..., -0.29537195,
           0.5347864 ,  0.6554148 ],
         [-0.8170463 , -0.99597305,  0.8567154 , ...,  0.5762063 ,
           0.6758834 , -0.98756546],
         [-0.3499881 ,  0.6759589 , -0.24133085, ..., -0.8875975 ,
           0.43401003,  0.9889581 ],
         ...,
         [ 0.7039473 ,  0.51967585, -0.7051575 , ...,  0.6745517 ,
           0.5755706 , -0.26557264],
         [-0.8401964 , -0.19831756, -0.45991576, ...,  0.35652038,
           0.49521562, -0.5055318 ],
         [ 0.92861694,  0.9159201 , -0.05319468, ..., -0.96137387,
          -0.8913952 , -0.31209853]],

        ...,

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.8341611 , ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]],

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.8341611 , ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]],

        [[-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.9764687 , ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         [-0.01606505, -0.01606505,  0.11745159, ..., -0.9019784 ,
          -0.9019784 , -0.9019784 ],
         ...,
         [-0.9900042 , -0.9900042 , -0.8341611 , ...,  0.0970722 ,
           0.9797987 ,  0.9797987 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ],
         [ 0.9952703 ,  0.9952703 ,  0.9952703 , ..., -0.7477687 ,
          -0.7477687 , -0.7477687 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [17], 'to': [15]}

generate models:152

analyse output arrays in iter:171

pre layer res:
14:conv2d
{'name': 'conv2d', 'output': array([[[[49157052., 49157052., 49155580., ..., 49147220., 49146300.,
          49146300.],
         [48747284., 48747284., 48746516., ..., 48737108., 48737108.,
          48737108.],
         [45222908., 45222908., 45222908., ..., 45212600., 45212600.,
          45212600.],
         ...,
         [50191272., 50191640., 50192472., ..., 50174440., 50173352.,
          50173352.],
         [43443124., 43447036., 43447036., ..., 43433468., 43429116.,
          43428788.],
         [48185020., 48188924., 48188924., ..., 48175356., 48171004.,
          48170684.]],

        [[49157052., 49157052., 49155580., ..., 49147220., 49146300.,
          49146300.],
         [48747284., 48747284., 48746516., ..., 48737108., 48737108.,
          48737108.],
         [45222908., 45222908., 45222908., ..., 45212600., 45212600.,
          45212600.],
         ...,
         [50191272., 50191640., 50192472., ..., 50174440., 50173352.,
          50173352.],
         [43443124., 43447036., 43447036., ..., 43433468., 43429116.,
          43428788.],
         [48185020., 48188924., 48188924., ..., 48175356., 48171004.,
          48170684.]],

        [[49157052., 49157052., 49155580., ..., 49147220., 49146300.,
          49146300.],
         [48747284., 48747284., 48746516., ..., 48737108., 48737108.,
          48737108.],
         [45222908., 45222908., 45222908., ..., 45212600., 45212600.,
          45212600.],
         ...,
         [50191272., 50191640., 50192472., ..., 50174440., 50173352.,
          50173352.],
         [43443124., 43447036., 43447036., ..., 43433468., 43429116.,
          43428788.],
         [48185020., 48188924., 48188924., ..., 48175356., 48171004.,
          48170684.]],

        ...,

        [[49157052., 49157052., 49155580., ..., 49147220., 49146300.,
          49146300.],
         [48747284., 48747284., 48746516., ..., 48737108., 48737108.,
          48737108.],
         [45222908., 45222908., 45222908., ..., 45212600., 45212600.,
          45212600.],
         ...,
         [50191272., 50191640., 50192472., ..., 50174440., 50173352.,
          50173352.],
         [43443124., 43447036., 43447036., ..., 43433468., 43429116.,
          43428788.],
         [48185020., 48188924., 48188924., ..., 48175356., 48171004.,
          48170684.]],

        [[49157052., 49157052., 49155580., ..., 49147220., 49146300.,
          49146300.],
         [48747284., 48747284., 48746516., ..., 48737108., 48737108.,
          48737108.],
         [45222908., 45222908., 45222908., ..., 45212600., 45212600.,
          45212600.],
         ...,
         [50191272., 50191640., 50192472., ..., 50174440., 50173352.,
          50173352.],
         [43443124., 43447036., 43447036., ..., 43433468., 43429116.,
          43428788.],
         [48185020., 48188924., 48188924., ..., 48175356., 48171004.,
          48170684.]],

        [[49157052., 49157052., 49155580., ..., 49147220., 49146300.,
          49146300.],
         [48747284., 48747284., 48746516., ..., 48737108., 48737108.,
          48737108.],
         [45222908., 45222908., 45222908., ..., 45212600., 45212600.,
          45212600.],
         ...,
         [50191272., 50191640., 50192472., ..., 50174440., 50173352.,
          50173352.],
         [43443124., 43447036., 43447036., ..., 43433468., 43429116.,
          43428788.],
         [48185020., 48188924., 48188924., ..., 48175356., 48171004.,
          48170684.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [5]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.38920632,  0.38920632, -0.97229785, ...,  0.9999023 ,
          -0.87728196, -0.87728196],
         [ 0.24318156,  0.24318156,  0.99204224, ..., -0.5867501 ,
          -0.5867501 , -0.5867501 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.9703247 , -0.77890027,  0.9878826 , ...,  0.6234379 ,
           0.99381506,  0.99381506],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.69445103,
          -0.99585915, -0.20395607],
         [ 0.74601716, -0.9635216 , -0.9635216 , ...,  0.9643718 ,
          -0.81012154, -0.9831222 ]],

        [[ 0.38920632,  0.38920632, -0.97229785, ...,  0.9999023 ,
          -0.87728196, -0.87728196],
         [ 0.24318156,  0.24318156,  0.99204224, ..., -0.5867501 ,
          -0.5867501 , -0.5867501 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.9703247 , -0.77890027,  0.9878826 , ...,  0.6234379 ,
           0.99381506,  0.99381506],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.69445103,
          -0.99585915, -0.20395607],
         [ 0.74601716, -0.9635216 , -0.9635216 , ...,  0.9643718 ,
          -0.81012154, -0.9831222 ]],

        [[ 0.38920632,  0.38920632, -0.97229785, ...,  0.9999023 ,
          -0.87728196, -0.87728196],
         [ 0.24318156,  0.24318156,  0.99204224, ..., -0.5867501 ,
          -0.5867501 , -0.5867501 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.9703247 , -0.77890027,  0.9878826 , ...,  0.6234379 ,
           0.99381506,  0.99381506],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.69445103,
          -0.99585915, -0.20395607],
         [ 0.74601716, -0.9635216 , -0.9635216 , ...,  0.9643718 ,
          -0.81012154, -0.9831222 ]],

        ...,

        [[ 0.38920632,  0.38920632, -0.97229785, ...,  0.9999023 ,
          -0.87728196, -0.87728196],
         [ 0.24318156,  0.24318156,  0.99204224, ..., -0.5867501 ,
          -0.5867501 , -0.5867501 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.9703247 , -0.77890027,  0.9878826 , ...,  0.6234379 ,
           0.99381506,  0.99381506],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.69445103,
          -0.99585915, -0.20395607],
         [ 0.74601716, -0.9635216 , -0.9635216 , ...,  0.9643718 ,
          -0.81012154, -0.9831222 ]],

        [[ 0.38920632,  0.38920632, -0.97229785, ...,  0.9999023 ,
          -0.87728196, -0.87728196],
         [ 0.24318156,  0.24318156,  0.99204224, ..., -0.5867501 ,
          -0.5867501 , -0.5867501 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.9703247 , -0.77890027,  0.9878826 , ...,  0.6234379 ,
           0.99381506,  0.99381506],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.69445103,
          -0.99585915, -0.20395607],
         [ 0.74601716, -0.9635216 , -0.9635216 , ...,  0.9643718 ,
          -0.81012154, -0.9831222 ]],

        [[ 0.38920632,  0.38920632, -0.97229785, ...,  0.9999023 ,
          -0.87728196, -0.87728196],
         [ 0.24318156,  0.24318156,  0.99204224, ..., -0.5867501 ,
          -0.5867501 , -0.5867501 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.9703247 , -0.77890027,  0.9878826 , ...,  0.6234379 ,
           0.99381506,  0.99381506],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.69445103,
          -0.99585915, -0.20395607],
         [ 0.74601716, -0.9635216 , -0.9635216 , ...,  0.9643718 ,
          -0.81012154, -0.9831222 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [14], 'to': [15]}
ms node:
{'name': 'cos', 'output': array([[[[-0.96797746, -0.96797746,  0.8124354 , ..., -0.66415894,
          -0.3472231 , -0.3472231 ],
         [ 0.24318156,  0.24318156,  0.99204224, ...,  0.99635994,
           0.99635994,  0.99635994],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [-0.38041478,  0.73380387, -0.29728812, ...,  0.6234379 ,
          -0.03473386, -0.03473386],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.5502946 ,  0.4272563 ,  0.4272563 , ..., -0.830568  ,
           0.08584624,  0.32404742]],

        [[-0.96797746, -0.96797746,  0.8124354 , ..., -0.66415894,
          -0.3472231 , -0.3472231 ],
         [ 0.24318156,  0.24318156,  0.99204224, ...,  0.99635994,
           0.99635994,  0.99635994],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [-0.38041478,  0.73380387, -0.29728812, ...,  0.6234379 ,
          -0.03473386, -0.03473386],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.5502946 ,  0.4272563 ,  0.4272563 , ..., -0.830568  ,
           0.08584624,  0.32404742]],

        [[-0.96797746, -0.96797746,  0.8124354 , ..., -0.66415894,
          -0.3472231 , -0.3472231 ],
         [ 0.24318156,  0.24318156,  0.99204224, ...,  0.99635994,
           0.99635994,  0.99635994],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [-0.38041478,  0.73380387, -0.29728812, ...,  0.6234379 ,
          -0.03473386, -0.03473386],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.5502946 ,  0.4272563 ,  0.4272563 , ..., -0.830568  ,
           0.08584624,  0.32404742]],

        ...,

        [[-0.96797746, -0.96797746,  0.8124354 , ..., -0.66415894,
          -0.3472231 , -0.3472231 ],
         [ 0.24318156,  0.24318156,  0.99204224, ...,  0.99635994,
           0.99635994,  0.99635994],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [-0.38041478,  0.73380387, -0.29728812, ...,  0.6234379 ,
          -0.03473386, -0.03473386],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.5502946 ,  0.4272563 ,  0.4272563 , ..., -0.830568  ,
           0.08584624,  0.32404742]],

        [[-0.68213195, -0.68213195,  0.8124354 , ..., -0.11408735,
          -0.7961943 , -0.7961943 ],
         [ 0.72567517,  0.72567517,  0.7695812 , ..., -0.9821955 ,
          -0.9821955 , -0.9821955 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.6853588 ,
           0.6853588 ,  0.6853588 ],
         ...,
         [-0.4669738 ,  0.91967195, -0.7745002 , ..., -0.822145  ,
          -0.7455564 , -0.7455564 ],
         [-0.2568018 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.60757995],
         [ 0.9123909 ,  0.4272563 ,  0.4272563 , ..., -0.830568  ,
           0.08584624, -0.23417118]],

        [[-0.68213195, -0.68213195,  0.8124354 , ..., -0.11408735,
          -0.7961943 , -0.7961943 ],
         [ 0.72567517,  0.72567517,  0.7695812 , ..., -0.9821955 ,
          -0.9821955 , -0.9821955 ],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.6853588 ,
           0.6853588 ,  0.6853588 ],
         ...,
         [-0.4669738 ,  0.91967195, -0.7745002 , ..., -0.822145  ,
          -0.7455564 , -0.7455564 ],
         [-0.2568018 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.60757995],
         [ 0.9123909 ,  0.4272563 ,  0.4272563 , ..., -0.830568  ,
           0.08584624, -0.23417118]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [14], 'to': [15]}
torch node:
{'name': 'cos', 'output': array([[[[-0.70758873, -0.70758873, -0.21806365, ...,  0.4275481 ,
          -0.7742779 , -0.7742779 ],
         [ 0.56055844,  0.56055844, -0.7554447 , ...,  0.86958903,
           0.86958903,  0.86958903],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.15776114, -0.98648006,  0.9367993 , ...,  0.97249645,
           0.49160066,  0.49160066],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.30610225, -0.13133584, -0.13133584, ...,  0.62128943,
           0.22192432, -0.9404045 ]],

        [[-0.70758873, -0.70758873, -0.21806365, ...,  0.4275481 ,
          -0.7742779 , -0.7742779 ],
         [ 0.56055844,  0.56055844, -0.7554447 , ...,  0.86958903,
           0.86958903,  0.86958903],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.15776114, -0.98648006,  0.9367993 , ...,  0.97249645,
           0.49160066,  0.49160066],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.30610225, -0.13133584, -0.13133584, ...,  0.62128943,
           0.22192432, -0.9404045 ]],

        [[-0.70758873, -0.70758873, -0.21806365, ...,  0.4275481 ,
          -0.7742779 , -0.7742779 ],
         [ 0.56055844,  0.56055844, -0.7554447 , ...,  0.86958903,
           0.86958903,  0.86958903],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.15776114, -0.98648006,  0.9367993 , ...,  0.97249645,
           0.49160066,  0.49160066],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.30610225, -0.13133584, -0.13133584, ...,  0.62128943,
           0.22192432, -0.9404045 ]],

        ...,

        [[-0.70758873, -0.70758873, -0.21806365, ...,  0.4275481 ,
          -0.7742779 , -0.7742779 ],
         [ 0.56055844,  0.56055844, -0.7554447 , ...,  0.86958903,
           0.86958903,  0.86958903],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.15776114, -0.98648006,  0.9367993 , ...,  0.97249645,
           0.49160066,  0.49160066],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.30610225, -0.13133584, -0.13133584, ...,  0.62128943,
           0.22192432, -0.9404045 ]],

        [[-0.70758873, -0.70758873, -0.21806365, ...,  0.4275481 ,
          -0.7742779 , -0.7742779 ],
         [ 0.56055844,  0.56055844, -0.7554447 , ...,  0.86958903,
           0.86958903,  0.86958903],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.15776114, -0.98648006,  0.9367993 , ...,  0.97249645,
           0.49160066,  0.49160066],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.30610225, -0.13133584, -0.13133584, ...,  0.62128943,
           0.22192432, -0.9404045 ]],

        [[-0.70758873, -0.70758873, -0.21806365, ...,  0.4275481 ,
          -0.7742779 , -0.7742779 ],
         [ 0.56055844,  0.56055844, -0.7554447 , ...,  0.86958903,
           0.86958903,  0.86958903],
         [-0.58366036, -0.58366036, -0.58366036, ...,  0.18760736,
           0.18760736,  0.18760736],
         ...,
         [ 0.15776114, -0.98648006,  0.9367993 , ...,  0.97249645,
           0.49160066,  0.49160066],
         [ 0.8992793 , -0.9652315 , -0.9652315 , ...,  0.694451  ,
          -0.99585915, -0.20395607],
         [ 0.30610225, -0.13133584, -0.13133584, ...,  0.62128943,
           0.22192432, -0.9404045 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [14], 'to': [15]}

generate models:160

analyse output arrays in iter:204

pre layer res:
22:add
{'name': 'add', 'output': array([[[[743.97076, 743.9316 , 765.61646, ..., 791.3533 , 791.29944,
          784.3021 ],
         [744.1721 , 744.1402 , 765.47125, ..., 791.20526, 791.2303 ,
          784.18335],
         [744.0196 , 744.1499 , 765.39417, ..., 775.3693 , 775.2757 ,
          775.18866],
         ...,
         [770.864  , 770.23584, 758.0734 , ..., 803.79126, 819.67365,
          819.8105 ],
         [817.4027 , 817.3092 , 816.04694, ..., 801.4474 , 819.1364 ,
          819.5407 ],
         [817.76294, 817.7558 , 816.7539 , ..., 731.9882 , 783.53186,
          784.3013 ]],

        [[743.97076, 743.9316 , 765.61646, ..., 791.3533 , 791.29944,
          784.3021 ],
         [744.1721 , 744.1402 , 765.47125, ..., 791.20526, 791.2303 ,
          784.18335],
         [744.0196 , 744.1499 , 765.39417, ..., 775.3693 , 775.2757 ,
          775.18866],
         ...,
         [770.864  , 770.23584, 758.0734 , ..., 803.79126, 819.67365,
          819.8105 ],
         [817.4027 , 817.3092 , 816.04694, ..., 801.4474 , 819.1364 ,
          819.5407 ],
         [817.76294, 817.7558 , 816.7539 , ..., 731.9882 , 783.53186,
          784.3013 ]],

        [[743.97076, 743.9316 , 765.61646, ..., 791.3533 , 791.29944,
          784.3021 ],
         [744.1721 , 744.1402 , 765.47125, ..., 791.20526, 791.2303 ,
          784.18335],
         [744.0196 , 744.1499 , 765.39417, ..., 775.3693 , 775.2757 ,
          775.18866],
         ...,
         [770.864  , 770.23584, 758.0734 , ..., 803.79126, 819.67365,
          819.8105 ],
         [817.4027 , 817.3092 , 816.04694, ..., 801.4474 , 819.1364 ,
          819.5407 ],
         [817.76294, 817.7558 , 816.7539 , ..., 731.9882 , 783.53186,
          784.3013 ]],

        ...,

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [11, 25], 'to': [16]}
tf node:
{'name': 'log', 'output': array([[[[6.612002 , 6.611949 , 6.6406813, ..., 6.6737447, 6.6736765,
          6.6647944],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735573, 6.673589 ,
          6.664643 ],
         [6.612067 , 6.6122427, 6.640391 , ..., 6.6533394, 6.6532187,
          6.6531067],
         ...,
         [6.647512 , 6.6466966, 6.63078  , ..., 6.6893396, 6.708906 ,
          6.709073 ],
         [6.706132 , 6.7060175, 6.704472 , ..., 6.6864195, 6.7082505,
          6.708744 ],
         [6.7065725, 6.706564 , 6.705338 , ..., 6.5957646, 6.6638117,
          6.664793 ]],

        [[6.612002 , 6.611949 , 6.6406813, ..., 6.6737447, 6.6736765,
          6.6647944],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735573, 6.673589 ,
          6.664643 ],
         [6.612067 , 6.6122427, 6.640391 , ..., 6.6533394, 6.6532187,
          6.6531067],
         ...,
         [6.647512 , 6.6466966, 6.63078  , ..., 6.6893396, 6.708906 ,
          6.709073 ],
         [6.706132 , 6.7060175, 6.704472 , ..., 6.6864195, 6.7082505,
          6.708744 ],
         [6.7065725, 6.706564 , 6.705338 , ..., 6.5957646, 6.6638117,
          6.664793 ]],

        [[6.612002 , 6.611949 , 6.6406813, ..., 6.6737447, 6.6736765,
          6.6647944],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735573, 6.673589 ,
          6.664643 ],
         [6.612067 , 6.6122427, 6.640391 , ..., 6.6533394, 6.6532187,
          6.6531067],
         ...,
         [6.647512 , 6.6466966, 6.63078  , ..., 6.6893396, 6.708906 ,
          6.709073 ],
         [6.706132 , 6.7060175, 6.704472 , ..., 6.6864195, 6.7082505,
          6.708744 ],
         [6.7065725, 6.706564 , 6.705338 , ..., 6.5957646, 6.6638117,
          6.664793 ]],

        ...,

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]],

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]],

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [22], 'to': [17]}
ms node:
{'name': 'log', 'output': array([[[[6.612002 , 6.611949 , 6.6406813, ..., 6.6737423, 6.673674 ,
          6.66479  ],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735554, 6.673587 ,
          6.664639 ],
         [6.612067 , 6.612242 , 6.640391 , ..., 6.653337 , 6.6532164,
          6.653104 ],
         ...,
         [6.647509 , 6.6466937, 6.63078  , ..., 6.6893373, 6.7089047,
          6.7090716],
         [6.7061296, 6.706015 , 6.704468 , ..., 6.6864166, 6.708249 ,
          6.7087426],
         [6.70657  , 6.7065616, 6.7053337, ..., 6.595767 , 6.6638093,
          6.6647906]],

        [[6.612002 , 6.611949 , 6.6406813, ..., 6.6737423, 6.673674 ,
          6.66479  ],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735554, 6.673587 ,
          6.664639 ],
         [6.612067 , 6.612242 , 6.640391 , ..., 6.653337 , 6.6532164,
          6.653104 ],
         ...,
         [6.647509 , 6.6466937, 6.63078  , ..., 6.6893373, 6.7089047,
          6.7090716],
         [6.7061296, 6.706015 , 6.704468 , ..., 6.6864166, 6.708249 ,
          6.7087426],
         [6.70657  , 6.7065616, 6.7053337, ..., 6.595767 , 6.6638093,
          6.6647906]],

        [[6.612002 , 6.611949 , 6.6406813, ..., 6.6737423, 6.673674 ,
          6.66479  ],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735554, 6.673587 ,
          6.664639 ],
         [6.612067 , 6.612242 , 6.640391 , ..., 6.653337 , 6.6532164,
          6.653104 ],
         ...,
         [6.647509 , 6.6466937, 6.63078  , ..., 6.6893373, 6.7089047,
          6.7090716],
         [6.7061296, 6.706015 , 6.704468 , ..., 6.6864166, 6.708249 ,
          6.7087426],
         [6.70657  , 6.7065616, 6.7053337, ..., 6.595767 , 6.6638093,
          6.6647906]],

        ...,

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]],

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]],

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [22], 'to': [17]}
torch node:
{'name': 'log', 'output': array([[[[6.612002 , 6.611949 , 6.6406813, ..., 6.6737447, 6.6736765,
          6.6647944],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735573, 6.673589 ,
          6.664643 ],
         [6.612067 , 6.6122427, 6.640391 , ..., 6.6533394, 6.6532187,
          6.653106 ],
         ...,
         [6.647512 , 6.6466966, 6.63078  , ..., 6.6893396, 6.708906 ,
          6.709073 ],
         [6.706132 , 6.7060175, 6.704472 , ..., 6.6864195, 6.7082505,
          6.708744 ],
         [6.7065725, 6.706564 , 6.705338 , ..., 6.595764 , 6.6638117,
          6.664793 ]],

        [[6.612002 , 6.611949 , 6.6406813, ..., 6.6737447, 6.6736765,
          6.6647944],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735573, 6.673589 ,
          6.664643 ],
         [6.612067 , 6.6122427, 6.640391 , ..., 6.6533394, 6.6532187,
          6.653106 ],
         ...,
         [6.647512 , 6.6466966, 6.63078  , ..., 6.6893396, 6.708906 ,
          6.709073 ],
         [6.706132 , 6.7060175, 6.704472 , ..., 6.6864195, 6.7082505,
          6.708744 ],
         [6.7065725, 6.706564 , 6.705338 , ..., 6.595764 , 6.6638117,
          6.664793 ]],

        [[6.612002 , 6.611949 , 6.6406813, ..., 6.6737447, 6.6736765,
          6.6647944],
         [6.6122723, 6.6122293, 6.6404915, ..., 6.6735573, 6.673589 ,
          6.664643 ],
         [6.612067 , 6.6122427, 6.640391 , ..., 6.6533394, 6.6532187,
          6.653106 ],
         ...,
         [6.647512 , 6.6466966, 6.63078  , ..., 6.6893396, 6.708906 ,
          6.709073 ],
         [6.706132 , 6.7060175, 6.704472 , ..., 6.6864195, 6.7082505,
          6.708744 ],
         [6.7065725, 6.706564 , 6.705338 , ..., 6.595764 , 6.6638117,
          6.664793 ]],

        ...,

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]],

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]],

        [[      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         ...,
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan],
         [      nan,       nan,       nan, ...,       nan,       nan,
                nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [22], 'to': [17]}

generate models:192

analyse output arrays in iter:227

pre layer res:
5:exp
{'name': 'exp', 'output': array([[[[5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [1.48260873e+31, 1.93785058e+38,            inf, ...,
                     inf,            inf,            inf],
         ...,
         [4.98436849e+35, 4.98436849e+35, 4.98436849e+35, ...,
          7.86745186e+33,            inf,            inf],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 1.05977365e+29],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 2.64931902e+27]],

        [[5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [1.48260873e+31, 1.93785058e+38,            inf, ...,
                     inf,            inf,            inf],
         ...,
         [4.98436849e+35, 4.98436849e+35, 4.98436849e+35, ...,
          7.86745186e+33,            inf,            inf],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 1.05977365e+29],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 2.64931902e+27]],

        [[5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [1.48260873e+31, 1.93785058e+38,            inf, ...,
                     inf,            inf,            inf],
         ...,
         [4.98436849e+35, 4.98436849e+35, 4.98436849e+35, ...,
          7.86745186e+33,            inf,            inf],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 1.05977365e+29],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 2.64931902e+27]],

        ...,

        [[5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [1.48260873e+31, 1.93785058e+38,            inf, ...,
                     inf,            inf,            inf],
         ...,
         [4.98436849e+35, 4.98436849e+35, 4.98436849e+35, ...,
          7.86745186e+33,            inf,            inf],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 1.05977365e+29],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 2.64931902e+27]],

        [[5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [1.48260873e+31, 1.93785058e+38,            inf, ...,
                     inf,            inf,            inf],
         ...,
         [4.98436849e+35, 4.98436849e+35, 4.98436849e+35, ...,
          7.86745186e+33,            inf,            inf],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 1.05977365e+29],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 2.64931902e+27]],

        [[5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [5.74048171e+37, 5.74048171e+37,            inf, ...,
                     inf,            inf,            inf],
         [1.48260873e+31, 1.93785058e+38,            inf, ...,
                     inf,            inf,            inf],
         ...,
         [4.98436849e+35, 4.98436849e+35, 4.98436849e+35, ...,
          7.86745186e+33,            inf,            inf],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 1.05977365e+29],
         [4.98436849e+35, 4.98436849e+35, 3.21186357e+38, ...,
          7.86745186e+33, 5.06542240e+32, 2.64931902e+27]]]],
      dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [11], 'to': [7]}
tf node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [5], 'to': [12]}
ms node:
{'name': 'softmax', 'output': array([[[[ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         ...,
         [ 0.,  0.,  0., ...,  0., nan, nan],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         ...,
         [ 0.,  0.,  0., ...,  0., nan, nan],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         ...,
         [ 0.,  0.,  0., ...,  0., nan, nan],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        ...,

        [[ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         ...,
         [ 0.,  0.,  0., ...,  0., nan, nan],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         ...,
         [ 0.,  0.,  0., ...,  0., nan, nan],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         [ 0.,  0., nan, ..., nan, nan, nan],
         ...,
         [ 0.,  0.,  0., ...,  0., nan, nan],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [5], 'to': [12]}
torch node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [5], 'to': [12]}

generate models:214

analyse output arrays in iter:243

pre layer res:
6:conv2d
{'name': 'conv2d', 'output': array([[[[30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          34332.75 ],
         [30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          35090.86 ],
         [30123.508, 30123.508, 30123.508, ..., 35734.008, 35675.004,
          35675.004],
         ...,
         [46015.227, 46015.227, 45863.273, ..., 56442.746, 56442.746,
          56442.746],
         [46015.227, 46015.227, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ],
         [44618.504, 45635.273, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ]],

        [[30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          34332.75 ],
         [30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          35090.86 ],
         [30123.508, 30123.508, 30123.508, ..., 35734.008, 35675.004,
          35675.004],
         ...,
         [46015.227, 46015.227, 45863.273, ..., 56442.746, 56442.746,
          56442.746],
         [46015.227, 46015.227, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ],
         [44618.504, 45635.273, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ]],

        [[30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          34332.75 ],
         [30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          35090.86 ],
         [30123.508, 30123.508, 30123.508, ..., 35734.008, 35675.004,
          35675.004],
         ...,
         [46015.227, 46015.227, 45863.273, ..., 56442.746, 56442.746,
          56442.746],
         [46015.227, 46015.227, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ],
         [44618.504, 45635.273, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ]],

        ...,

        [[30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          34332.75 ],
         [30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          35090.86 ],
         [30123.508, 30123.508, 30123.508, ..., 35734.008, 35675.004,
          35675.004],
         ...,
         [46015.227, 46015.227, 45863.273, ..., 56442.746, 56442.746,
          56442.746],
         [46015.227, 46015.227, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ],
         [44618.504, 45635.273, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ]],

        [[30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          34332.75 ],
         [30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          35090.86 ],
         [30123.508, 30123.508, 30123.508, ..., 35734.008, 35675.004,
          35675.004],
         ...,
         [46015.227, 46015.227, 45863.273, ..., 56442.746, 56442.746,
          56442.746],
         [46015.227, 46015.227, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ],
         [44618.504, 45635.273, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ]],

        [[30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          34332.75 ],
         [30396.633, 30396.633, 29294.125, ..., 37239.496, 37239.496,
          35090.86 ],
         [30123.508, 30123.508, 30123.508, ..., 35734.008, 35675.004,
          35675.004],
         ...,
         [46015.227, 46015.227, 45863.273, ..., 56442.746, 56442.746,
          56442.746],
         [46015.227, 46015.227, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ],
         [44618.504, 45635.273, 46772.246, ..., 57132.234, 56506.32 ,
          56506.32 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [5], 'to': [17]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480387],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975232, -0.33975232, -0.33975232, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480387],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975232, -0.33975232, -0.33975232, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480387],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975232, -0.33975232, -0.33975232, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493]],

        ...,

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480387],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975232, -0.33975232, -0.33975232, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480387],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975232, -0.33975232, -0.33975232, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480387],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975232, -0.33975232, -0.33975232, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.71817297,
          -0.06400493, -0.06400493]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [6], 'to': [7]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14866784],
         [ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.6704106 ],
         [-0.3434236 , -0.3434236 , -0.3434236 , ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.95077807, -0.95077807, -0.6720623 , ...,  0.6274834 ,
           0.6274834 ,  0.6274834 ],
         [-0.95077807, -0.95077807,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8764016 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14866784],
         [ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.6704106 ],
         [-0.3434236 , -0.3434236 , -0.3434236 , ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.95077807, -0.95077807, -0.6720623 , ...,  0.6274834 ,
           0.6274834 ,  0.6274834 ],
         [-0.95077807, -0.95077807,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8764016 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14866784],
         [ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.6704106 ],
         [-0.3434236 , -0.3434236 , -0.3434236 , ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.95077807, -0.95077807, -0.6720623 , ...,  0.6274834 ,
           0.6274834 ,  0.6274834 ],
         [-0.95077807, -0.95077807,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8764016 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        ...,

        [[ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14866784],
         [ 0.15442537,  0.15442537, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.6704106 ],
         [-0.3434236 , -0.3434236 , -0.3434236 , ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.95077807, -0.95077807, -0.6720623 , ...,  0.6274834 ,
           0.6274834 ,  0.6274834 ],
         [-0.95077807, -0.95077807,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8764016 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.16021177,  0.16021177, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14866784],
         [ 0.16021177,  0.16021177, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.67330384],
         [-0.3489207 , -0.3489207 , -0.3489207 , ...,  0.03000875,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.9566485 , -0.9566485 , -0.686396  , ...,  0.6274834 ,
           0.6274834 ,  0.6274834 ],
         [-0.9566485 , -0.9566485 ,  0.9770474 , ...,  0.70996916,
          -0.1068133 , -0.1068133 ],
         [-0.03423695,  0.8668292 ,  0.9770474 , ...,  0.70996916,
          -0.1068133 , -0.1068133 ]],

        [[ 0.16021177,  0.16021177, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14866784],
         [ 0.16021177,  0.16021177, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.67330384],
         [-0.3489207 , -0.3489207 , -0.3489207 , ...,  0.03000875,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.9566485 , -0.9566485 , -0.686396  , ...,  0.6274834 ,
           0.6274834 ,  0.6274834 ],
         [-0.9566485 , -0.9566485 ,  0.9770474 , ...,  0.70996916,
          -0.1068133 , -0.1068133 ],
         [-0.03423695,  0.8668292 ,  0.9770474 , ...,  0.70996916,
          -0.1068133 , -0.1068133 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [6], 'to': [7]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480388],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975235, -0.33975235, -0.33975235, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480388],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975235, -0.33975235, -0.33975235, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480388],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975235, -0.33975235, -0.33975235, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        ...,

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480388],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975235, -0.33975235, -0.33975235, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480388],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975235, -0.33975235, -0.33975235, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]],

        [[ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.14480388],
         [ 0.15249538,  0.15249538, -0.33753935, ...,  0.5871831 ,
           0.5871831 ,  0.7447971 ],
         [-0.33975235, -0.33975235, -0.33975235, ...,  0.03781674,
           0.6040142 ,  0.6040142 ],
         ...,
         [-0.94956034, -0.94956034, -0.66916466, ...,  0.6274835 ,
           0.6274835 ,  0.6274835 ],
         [-0.94956034, -0.94956034,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493],
         [-0.03423695,  0.8782761 ,  0.9770474 , ...,  0.7181729 ,
          -0.06400493, -0.06400493]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [6], 'to': [7]}

generate models:228

analyse the exceptions in iter:276
torch exception:
{'id': 24, 'name': 'flatten', 'frame_work': 'torch', 'input_datas': [tensor([110.9365,   0.0000,   0.0000,  ...,   0.0000,   0.0000,   0.0000],
       grad_fn=<ConstantPadNdBackward0>)]}
Dimension out of range (expected to be in range of [-1, 0], but got 1)

generate models:256

analyse output arrays in iter:307

pre layer res:
26:reshape
{'name': 'reshape', 'output': array([[[[41607680., 41607680.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [41607680., 41607680.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        ...,

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]],

        [[       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         ...,
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.],
         [       0.,        0.,        0., ...,        0.,        0.,
                 0.]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 112, 112]), 'from': [25], 'to': [23]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 2.4964608e+08,  2.4964602e+08, -1.4588039e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         ...,
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 2.0803840e+08,  2.0803834e+08,  3.8268363e-01, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00]],

        [[ 2.4964608e+08,  2.4964602e+08, -1.4588039e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         ...,
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 2.0803840e+08,  2.0803834e+08,  3.8268363e-01, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00]],

        [[ 2.4964608e+08,  2.4964602e+08, -1.4588039e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         ...,
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 2.0803840e+08,  2.0803834e+08,  3.8268363e-01, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00]],

        ...,

        [[ 2.4964608e+08,  2.4964602e+08, -1.4588039e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         ...,
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 2.0803840e+08,  2.0803834e+08,  3.8268363e-01, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00]],

        [[ 2.4964608e+08,  2.4964602e+08, -1.4588039e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         ...,
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 2.0803840e+08,  2.0803834e+08,  3.8268363e-01, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00]],

        [[ 2.4964608e+08,  2.4964602e+08, -1.4588039e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         ...,
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 2.0803840e+08,  2.0803834e+08,  3.8268363e-01, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00],
         [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00, ...,
           0.0000000e+00,  0.0000000e+00,  0.0000000e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 32, 112, 112]), 'from': [26], 'to': [27]}
ms node:
{'name': 'conv2d', 'output': array([[[[2.4964669e+08, 2.4964669e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803891e+08, 2.0803891e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964669e+08, 2.4964669e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803891e+08, 2.0803891e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964669e+08, 2.4964669e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803891e+08, 2.0803891e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[2.4964669e+08, 2.4964669e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803891e+08, 2.0803891e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964669e+08, 2.4964669e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803891e+08, 2.0803891e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964669e+08, 2.4964669e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803891e+08, 2.0803891e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': (1, 32, 112, 112), 'from': [26], 'to': [27]}
torch node:
{'name': 'conv2d', 'output': array([[[[2.4964608e+08, 2.4964608e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803840e+08, 2.0803840e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964608e+08, 2.4964608e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803840e+08, 2.0803840e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964608e+08, 2.4964608e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803840e+08, 2.0803840e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[2.4964608e+08, 2.4964608e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803840e+08, 2.0803840e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964608e+08, 2.4964608e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803840e+08, 2.0803840e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4964608e+08, 2.4964608e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.0803840e+08, 2.0803840e+08, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]]]], dtype=float32), 'output_shape': torch.Size([1, 32, 112, 112]), 'from': [26], 'to': [27]}

generate models:285

analyse output arrays in iter:330

pre layer res:
12:exp
{'name': 'exp', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.],
         [ 1.,  1.,  1., ...,  1.,  1.,  1.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [2], 'to': [22]}
tf node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12], 'to': [18]}
ms node:
{'name': 'log', 'output': array([[[[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        ...,

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]],

        [[ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         [ 8.8722839e+01,  8.8722839e+01,  8.8722839e+01, ...,
           8.8722839e+01,  8.8722839e+01,  8.8722839e+01],
         ...,
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06],
         [-1.4305115e-06, -1.4305115e-06, -1.4305115e-06, ...,
          -1.4305115e-06, -1.4305115e-06, -1.4305115e-06]]]],
      dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [12], 'to': [18]}
torch node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [12], 'to': [18]}

generate models:307

analyse output arrays in iter:394

pre layer res:
26:softmax
{'name': 'softmax', 'output': array([[[[1.00000000e+00, 1.05306175e-20, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.00000000e+00, 3.77513472e-11, 1.42516414e-21, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.19198069e-01, 3.99864985e-05, 8.80761266e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00]],

        [[1.00000000e+00, 1.05306175e-20, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.00000000e+00, 3.77513472e-11, 1.42516414e-21, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.19198069e-01, 3.99864985e-05, 8.80761266e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00]],

        [[1.00000000e+00, 1.05306175e-20, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.00000000e+00, 3.77513472e-11, 1.42516414e-21, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.19198069e-01, 3.99864985e-05, 8.80761266e-01, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 1.00000000e+00]],

        ...,

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]],

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]],

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]]]],
      dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [22], 'to': [12]}
tf node:
{'name': 'log', 'output': array([[[[  0.        , -46.        ,         -inf, ...,         -inf,
                  -inf,         -inf],
         [  0.        , -24.        , -48.        , ...,         -inf,
                  -inf,         -inf],
         [ -2.1269686 , -10.126968  ,  -0.12696867, ...,         -inf,
                  -inf,         -inf],
         ...,
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ],
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ],
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ]],

        [[  0.        , -46.        ,         -inf, ...,         -inf,
                  -inf,         -inf],
         [  0.        , -24.        , -48.        , ...,         -inf,
                  -inf,         -inf],
         [ -2.1269686 , -10.126968  ,  -0.12696867, ...,         -inf,
                  -inf,         -inf],
         ...,
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ],
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ],
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ]],

        [[  0.        , -46.        ,         -inf, ...,         -inf,
                  -inf,         -inf],
         [  0.        , -24.        , -48.        , ...,         -inf,
                  -inf,         -inf],
         [ -2.1269686 , -10.126968  ,  -0.12696867, ...,         -inf,
                  -inf,         -inf],
         ...,
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ],
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ],
         [        -inf,         -inf,         -inf, ...,         -inf,
                  -inf,   0.        ]],

        ...,

        [[ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         ...,
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ]],

        [[ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         ...,
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ]],

        [[ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         ...,
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ],
         [ -3.465736  ,  -3.465736  ,  -3.465736  , ...,  -3.465736  ,
           -3.465736  ,  -3.465736  ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [26], 'to': [17]}
ms node:
{'name': 'log', 'output': array([[[[-1.43051147e-06, -4.60000000e+01,            -inf, ...,
                     -inf,            -inf,            -inf],
         [-1.43051147e-06, -2.39999962e+01, -4.80000038e+01, ...,
                     -inf,            -inf,            -inf],
         [-2.12696886e+00, -1.01269655e+01, -1.26969799e-01, ...,
                     -inf,            -inf,            -inf],
         ...,
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06],
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06],
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06]],

        [[-1.43051147e-06, -4.60000000e+01,            -inf, ...,
                     -inf,            -inf,            -inf],
         [-1.43051147e-06, -2.39999962e+01, -4.80000038e+01, ...,
                     -inf,            -inf,            -inf],
         [-2.12696886e+00, -1.01269655e+01, -1.26969799e-01, ...,
                     -inf,            -inf,            -inf],
         ...,
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06],
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06],
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06]],

        [[-1.43051147e-06, -4.60000000e+01,            -inf, ...,
                     -inf,            -inf,            -inf],
         [-1.43051147e-06, -2.39999962e+01, -4.80000038e+01, ...,
                     -inf,            -inf,            -inf],
         [-2.12696886e+00, -1.01269655e+01, -1.26969799e-01, ...,
                     -inf,            -inf,            -inf],
         ...,
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06],
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06],
         [           -inf,            -inf,            -inf, ...,
                     -inf,            -inf, -1.43051147e-06]],

        ...,

        [[-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         ...,
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00]],

        [[-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         ...,
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00]],

        [[-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         ...,
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00],
         [-3.46573734e+00, -3.46573734e+00, -3.46573734e+00, ...,
          -3.46573734e+00, -3.46573734e+00, -3.46573734e+00]]]],
      dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [26], 'to': [17]}
torch node:
{'name': 'log', 'output': array([[[[  0.       , -46.       ,        -inf, ...,        -inf,
                 -inf,        -inf],
         [  0.       , -24.       , -48.       , ...,        -inf,
                 -inf,        -inf],
         [ -2.1269689, -10.126968 ,  -0.1269688, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ]],

        [[  0.       , -46.       ,        -inf, ...,        -inf,
                 -inf,        -inf],
         [  0.       , -24.       , -48.       , ...,        -inf,
                 -inf,        -inf],
         [ -2.1269689, -10.126968 ,  -0.1269688, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ]],

        [[  0.       , -46.       ,        -inf, ...,        -inf,
                 -inf,        -inf],
         [  0.       , -24.       , -48.       , ...,        -inf,
                 -inf,        -inf],
         [ -2.1269689, -10.126968 ,  -0.1269688, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,   0.       ]],

        ...,

        [[ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         ...,
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ]],

        [[ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         ...,
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ]],

        [[ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         ...,
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ],
         [ -3.465736 ,  -3.465736 ,  -3.465736 , ...,  -3.465736 ,
           -3.465736 ,  -3.465736 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [26], 'to': [17]}

generate models:363

analyse output arrays in iter:408

pre layer res:
4:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[482.69482, 483.5059 , 484.5548 , ..., 487.146  , 487.146  ,
          487.146  ],
         [482.69482, 483.5059 , 484.5548 , ..., 487.29248, 487.26566,
          487.26566],
         [482.69482, 483.5059 , 484.5548 , ..., 487.3961 , 487.3961 ,
          487.3961 ],
         ...,
         [484.78564, 485.4474 , 486.2362 , ..., 487.4086 , 487.3961 ,
          487.3961 ],
         [483.85168, 485.26025, 486.18753, ..., 487.33154, 487.3048 ,
          487.3048 ],
         [483.65637, 485.26025, 486.18753, ..., 487.23975, 487.18567,
          487.18567]],

        [[482.69482, 483.5059 , 484.5548 , ..., 487.146  , 487.146  ,
          487.146  ],
         [482.69482, 483.5059 , 484.5548 , ..., 487.29248, 487.26566,
          487.26566],
         [482.69482, 483.5059 , 484.5548 , ..., 487.3961 , 487.3961 ,
          487.3961 ],
         ...,
         [484.78564, 485.4474 , 486.2362 , ..., 487.4086 , 487.3961 ,
          487.3961 ],
         [483.85168, 485.26025, 486.18753, ..., 487.33154, 487.3048 ,
          487.3048 ],
         [483.65637, 485.26025, 486.18753, ..., 487.23975, 487.18567,
          487.18567]],

        [[482.69482, 483.5059 , 484.5548 , ..., 487.146  , 487.146  ,
          487.146  ],
         [482.69482, 483.5059 , 484.5548 , ..., 487.29248, 487.26566,
          487.26566],
         [482.69482, 483.5059 , 484.5548 , ..., 487.3961 , 487.3961 ,
          487.3961 ],
         ...,
         [484.78564, 485.4474 , 486.2362 , ..., 487.4086 , 487.3961 ,
          487.3961 ],
         [483.85168, 485.26025, 486.18753, ..., 487.33154, 487.3048 ,
          487.3048 ],
         [483.65637, 485.26025, 486.18753, ..., 487.23975, 487.18567,
          487.18567]],

        ...,

        [[482.69482, 483.5059 , 484.5548 , ..., 487.146  , 487.146  ,
          487.146  ],
         [482.69482, 483.5059 , 484.5548 , ..., 487.29248, 487.26566,
          487.26566],
         [482.69482, 483.5059 , 484.5548 , ..., 487.3961 , 487.3961 ,
          487.3961 ],
         ...,
         [484.78564, 485.4474 , 486.2362 , ..., 487.4086 , 487.3961 ,
          487.3961 ],
         [483.85168, 485.26025, 486.18753, ..., 487.33154, 487.3048 ,
          487.3048 ],
         [483.65637, 485.26025, 486.18753, ..., 487.23975, 487.18567,
          487.18567]],

        [[482.69482, 483.5059 , 484.5548 , ..., 487.146  , 487.146  ,
          487.146  ],
         [482.69482, 483.5059 , 484.5548 , ..., 487.29248, 487.26566,
          487.26566],
         [482.69482, 483.5059 , 484.5548 , ..., 487.3961 , 487.3961 ,
          487.3961 ],
         ...,
         [484.78564, 485.4474 , 486.2362 , ..., 487.4086 , 487.3961 ,
          487.3961 ],
         [483.85168, 485.26025, 486.18753, ..., 487.33154, 487.3048 ,
          487.3048 ],
         [483.65637, 485.26025, 486.18753, ..., 487.23975, 487.18567,
          487.18567]],

        [[482.69482, 483.5059 , 484.5548 , ..., 487.146  , 487.146  ,
          487.146  ],
         [482.69482, 483.5059 , 484.5548 , ..., 487.29248, 487.26566,
          487.26566],
         [482.69482, 483.5059 , 484.5548 , ..., 487.3961 , 487.3961 ,
          487.3961 ],
         ...,
         [484.78564, 485.4474 , 486.2362 , ..., 487.4086 , 487.3961 ,
          487.3961 ],
         [483.85168, 485.26025, 486.18753, ..., 487.33154, 487.3048 ,
          487.3048 ],
         [483.65637, 485.26025, 486.18753, ..., 487.23975, 487.18567,
          487.18567]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [24], 'to': [8]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.5567103 , -0.07126226, -0.75793463, ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.7252969 , ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.7252969 , ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.5567103 , -0.07126226, -0.75793463, ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.7252969 , ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.7252969 , ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.5567103 , -0.07126226, -0.75793463, ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.7252969 , ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.7252969 , ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        ...,

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.5567103 , -0.07126226, -0.75793463, ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.7252969 , ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.7252969 , ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.5567103 , -0.07126226, -0.75793463, ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.7252969 , ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.7252969 , ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.5567103 , -0.07126226, -0.75793463, ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.7252969 , ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.7252969 , ..., -0.957415  ,
          -0.97162074, -0.97162074]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [4], 'to': [6]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.94119626,
          -0.9496236 , -0.9496236 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07117094, -0.7577554 , ..., -0.89540166,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.72529685, ..., -0.9269179 ,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.9576965 ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.94119626,
          -0.9496236 , -0.9496236 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07117094, -0.7577554 , ..., -0.89540166,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.72529685, ..., -0.9269179 ,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.9576965 ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.94119626,
          -0.9496236 , -0.9496236 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07117094, -0.7577554 , ..., -0.89540166,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.72529685, ..., -0.9269179 ,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.9576965 ,
          -0.97162074, -0.97162074]],

        ...,

        [[ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.94119626,
          -0.9496236 , -0.9496236 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07117094, -0.7577554 , ..., -0.89540166,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.72529685, ..., -0.9269179 ,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.9576965 ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.94119626,
          -0.9496236 , -0.9496236 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07117094, -0.7577554 , ..., -0.89540166,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.72529685, ..., -0.9269179 ,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.9576965 ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.94119626,
          -0.9496236 , -0.9496236 ],
         [ 0.4442634 ,  0.9555199 ,  0.73206407, ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07117094, -0.7577554 , ..., -0.89540166,
          -0.90078336, -0.90078336],
         [ 0.998923  ,  0.11555237, -0.72529685, ..., -0.9269179 ,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.9576965 ,
          -0.97162074, -0.97162074]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [4], 'to': [6]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07126226, -0.7579346 , ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.99892294,  0.11555237, -0.72529685, ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07126226, -0.7579346 , ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.99892294,  0.11555237, -0.72529685, ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07126226, -0.7579346 , ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.99892294,  0.11555237, -0.72529685, ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        ...,

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07126226, -0.7579346 , ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.99892294,  0.11555237, -0.72529685, ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07126226, -0.7579346 , ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.99892294,  0.11555237, -0.72529685, ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.957415  ,
          -0.97162074, -0.97162074]],

        [[ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9802381 ,
          -0.9802381 , -0.9802381 ],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.9408659 ,
          -0.94961405, -0.94961405],
         [ 0.4442634 ,  0.9555199 ,  0.7320017 , ..., -0.90078336,
          -0.90078336, -0.90078336],
         ...,
         [ 0.55671036, -0.07126226, -0.7579346 , ..., -0.89527935,
          -0.90078336, -0.90078336],
         [ 0.99892294,  0.11555237, -0.72529685, ..., -0.92691797,
          -0.9366176 , -0.9366176 ],
         [ 0.98893535,  0.11555237, -0.72529685, ..., -0.957415  ,
          -0.97162074, -0.97162074]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [4], 'to': [6]}

generate models:376

analyse the exceptions in iter:411
torch exception:
{'id': 21, 'name': 'flatten', 'frame_work': 'torch', 'input_datas': [tensor([0.])]}
Dimension out of range (expected to be in range of [-1, 0], but got 1)

generate models:379

analyse output arrays in iter:412

pre layer res:
8:slice
{'name': 'slice', 'output': array([[inf, inf, inf, ..., inf, inf, inf]], dtype=float32), 'output_shape': TensorShape([1, 100352]), 'from': [7], 'to': [22]}
tf node:
{'name': 'cos', 'output': array([[nan, nan, nan, ..., nan, nan, nan]], dtype=float32), 'output_shape': TensorShape([1, 100352]), 'from': [8], 'to': [12]}
ms node:
{'name': 'cos', 'output': array([[nan, nan, nan, ..., nan, nan, nan]], dtype=float32), 'output_shape': (1, 100352), 'from': [8], 'to': [12]}
torch node:
{'name': 'cos', 'output': array([[nan, nan, nan, ..., nan, nan, nan]], dtype=float32), 'output_shape': torch.Size([1, 100352]), 'from': [8], 'to': [12]}

generate models:380

analyse output arrays in iter:424

pre layer res:
7:pad
{'name': 'pad', 'output': array([[inf, inf, inf, ...,  0.,  0.,  0.]], dtype=float32), 'output_shape': TensorShape([1, 262144]), 'from': [12], 'to': [13]}
tf node:
{'name': 'sin', 'output': array([[nan, nan, nan, ...,  0.,  0.,  0.]], dtype=float32), 'output_shape': TensorShape([1, 262144]), 'from': [7], 'to': [8, 16]}
ms node:
{'name': 'sin', 'output': array([[nan, nan, nan, ...,  0.,  0.,  0.]], dtype=float32), 'output_shape': (1, 262144), 'from': [7], 'to': [8, 16]}
torch node:
{'name': 'sin', 'output': array([[nan, nan, nan, ...,  0.,  0.,  0.]], dtype=float32), 'output_shape': torch.Size([1, 262144]), 'from': [7], 'to': [8, 16]}

generate models:392

analyse output arrays in iter:457

pre layer res:
6:add
{'name': 'add', 'output': array([[[[46202.086, 46202.086, 46208.16 , ..., 45918.49 , 45880.51 ,
          45840.695],
         [46226.113, 46237.863, 46237.863, ..., 45948.547, 45918.49 ,
          45874.152],
         [46253.14 , 46253.14 , 46253.14 , ..., 45971.617, 45936.566,
          45890.363],
         ...,
         [46082.113, 46082.113, 46082.113, ..., 45936.566, 45936.566,
          45906.13 ],
         [46049.77 , 46054.797, 46054.797, ..., 45936.566, 45936.566,
          45906.13 ],
         [45999.664, 46007.703, 46007.703, ..., 45918.49 , 45918.49 ,
          45890.363]],

        [[46202.086, 46202.086, 46208.16 , ..., 45918.49 , 45880.51 ,
          45840.695],
         [46226.113, 46237.863, 46237.863, ..., 45948.547, 45918.49 ,
          45874.152],
         [46253.14 , 46253.14 , 46253.14 , ..., 45971.617, 45936.566,
          45890.363],
         ...,
         [46082.113, 46082.113, 46082.113, ..., 45936.566, 45936.566,
          45906.13 ],
         [46049.77 , 46054.797, 46054.797, ..., 45936.566, 45936.566,
          45906.13 ],
         [45999.664, 46007.703, 46007.703, ..., 45918.49 , 45918.49 ,
          45890.363]],

        [[46202.086, 46202.086, 46208.16 , ..., 45918.49 , 45880.51 ,
          45840.695],
         [46226.113, 46237.863, 46237.863, ..., 45948.547, 45918.49 ,
          45874.152],
         [46253.14 , 46253.14 , 46253.14 , ..., 45971.617, 45936.566,
          45890.363],
         ...,
         [46082.113, 46082.113, 46082.113, ..., 45936.566, 45936.566,
          45906.13 ],
         [46049.77 , 46054.797, 46054.797, ..., 45936.566, 45936.566,
          45906.13 ],
         [45999.664, 46007.703, 46007.703, ..., 45918.49 , 45918.49 ,
          45890.363]],

        ...,

        [[46202.086, 46202.086, 46208.16 , ..., 45918.49 , 45880.51 ,
          45840.695],
         [46226.113, 46237.863, 46237.863, ..., 45948.547, 45918.49 ,
          45874.152],
         [46253.14 , 46253.14 , 46253.14 , ..., 45971.617, 45936.566,
          45890.363],
         ...,
         [46082.113, 46082.113, 46082.113, ..., 45936.566, 45936.566,
          45906.13 ],
         [46049.77 , 46054.797, 46054.797, ..., 45936.566, 45936.566,
          45906.13 ],
         [45999.664, 46007.703, 46007.703, ..., 45918.49 , 45918.49 ,
          45890.363]],

        [[46202.086, 46202.086, 46208.16 , ..., 45918.49 , 45880.51 ,
          45840.695],
         [46226.113, 46237.863, 46237.863, ..., 45948.547, 45918.49 ,
          45874.152],
         [46253.14 , 46253.14 , 46253.14 , ..., 45971.617, 45936.566,
          45890.363],
         ...,
         [46082.113, 46082.113, 46082.113, ..., 45936.566, 45936.566,
          45906.13 ],
         [46049.77 , 46054.797, 46054.797, ..., 45936.566, 45936.566,
          45906.13 ],
         [45999.664, 46007.703, 46007.703, ..., 45918.49 , 45918.49 ,
          45890.363]],

        [[46202.086, 46202.086, 46208.16 , ..., 45918.49 , 45880.51 ,
          45840.695],
         [46226.113, 46237.863, 46237.863, ..., 45948.547, 45918.49 ,
          45874.152],
         [46253.14 , 46253.14 , 46253.14 , ..., 45971.617, 45936.566,
          45890.363],
         ...,
         [46082.113, 46082.113, 46082.113, ..., 45936.566, 45936.566,
          45906.13 ],
         [46049.77 , 46054.797, 46054.797, ..., 45936.566, 45936.566,
          45906.13 ],
         [45999.664, 46007.703, 46007.703, ..., 45918.49 , 45918.49 ,
          45890.363]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12, 16], 'to': [17]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.96802115,  0.96802115,  0.9990051 , ...,  0.8249176 ,
           0.6385447 , -0.98934525],
         [ 0.65861475, -0.09724039, -0.09724039, ..., -0.37766793,
           0.8249176 ,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.81424457, -0.81424457, ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963806 ,  0.7963806 , ...,  0.8249176 ,
           0.8249176 , -0.89983463]],

        [[ 0.96802115,  0.96802115,  0.9990051 , ...,  0.8249176 ,
           0.6385447 , -0.98934525],
         [ 0.65861475, -0.09724039, -0.09724039, ..., -0.37766793,
           0.8249176 ,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.81424457, -0.81424457, ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963806 ,  0.7963806 , ...,  0.8249176 ,
           0.8249176 , -0.89983463]],

        [[ 0.96802115,  0.96802115,  0.9990051 , ...,  0.8249176 ,
           0.6385447 , -0.98934525],
         [ 0.65861475, -0.09724039, -0.09724039, ..., -0.37766793,
           0.8249176 ,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.81424457, -0.81424457, ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963806 ,  0.7963806 , ...,  0.8249176 ,
           0.8249176 , -0.89983463]],

        ...,

        [[ 0.96802115,  0.96802115,  0.9990051 , ...,  0.8249176 ,
           0.6385447 , -0.98934525],
         [ 0.65861475, -0.09724039, -0.09724039, ..., -0.37766793,
           0.8249176 ,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.81424457, -0.81424457, ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963806 ,  0.7963806 , ...,  0.8249176 ,
           0.8249176 , -0.89983463]],

        [[ 0.96802115,  0.96802115,  0.9990051 , ...,  0.8249176 ,
           0.6385447 , -0.98934525],
         [ 0.65861475, -0.09724039, -0.09724039, ..., -0.37766793,
           0.8249176 ,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.81424457, -0.81424457, ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963806 ,  0.7963806 , ...,  0.8249176 ,
           0.8249176 , -0.89983463]],

        [[ 0.96802115,  0.96802115,  0.9990051 , ...,  0.8249176 ,
           0.6385447 , -0.98934525],
         [ 0.65861475, -0.09724039, -0.09724039, ..., -0.37766793,
           0.8249176 ,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.81424457, -0.81424457, ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963806 ,  0.7963806 , ...,  0.8249176 ,
           0.8249176 , -0.89983463]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [6], 'to': [13]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.9689937 ,  0.9689937 ,  0.9994591 , ...,  0.82491755,
           0.6385447 , -0.99545985],
         [ 0.65861475, -0.10889665, -0.10889665, ..., -0.37766793,
           0.82491755,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.8142445 , -0.8142445 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963805 ,  0.7963805 , ...,  0.82491755,
           0.82491755, -0.89983463]],

        [[ 0.9689937 ,  0.9689937 ,  0.9994591 , ...,  0.82491755,
           0.6385447 , -0.99545985],
         [ 0.65861475, -0.10889665, -0.10889665, ..., -0.37766793,
           0.82491755,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.8142445 , -0.8142445 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963805 ,  0.7963805 , ...,  0.82491755,
           0.82491755, -0.89983463]],

        [[ 0.9689937 ,  0.9689937 ,  0.9994591 , ...,  0.82491755,
           0.6385447 , -0.99545985],
         [ 0.65861475, -0.10889665, -0.10889665, ..., -0.37766793,
           0.82491755,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.8142445 , -0.8142445 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963805 ,  0.7963805 , ...,  0.82491755,
           0.82491755, -0.89983463]],

        ...,

        [[ 0.9689937 ,  0.9689937 ,  0.9994591 , ...,  0.82491755,
           0.6385447 , -0.99545985],
         [ 0.65861475, -0.10889665, -0.10889665, ..., -0.37766793,
           0.82491755,  0.5781145 ],
         [ 0.50381863,  0.50381863,  0.50381863, ..., -0.6379918 ,
           0.197322  , -0.89983463],
         ...,
         [ 0.9432346 ,  0.9432346 ,  0.9432346 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.29973507, -0.8142445 , -0.8142445 , ...,  0.197322  ,
           0.197322  ,  0.923479  ],
         [ 0.44791204,  0.7963805 ,  0.7963805 , ...,  0.82491755,
           0.82491755, -0.89983463]],

        [[ 0.9650149 ,  0.9650149 ,  0.9946791 , ...,  0.81598514,
           0.6910337 , -0.9863132 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]],

        [[ 0.9650149 ,  0.9650149 ,  0.9946791 , ...,  0.81598514,
           0.6910337 , -0.9863132 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [6], 'to': [13]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.96293706,  0.96293706,  0.99149066, ...,  0.81598514,
           0.6910337 , -0.9645136 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]],

        [[ 0.96293706,  0.96293706,  0.99149066, ...,  0.81598514,
           0.6910337 , -0.9645136 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]],

        [[ 0.96293706,  0.96293706,  0.99149066, ...,  0.81598514,
           0.6910337 , -0.9645136 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]],

        ...,

        [[ 0.96293706,  0.96293706,  0.99149066, ...,  0.81598514,
           0.6910337 , -0.9645136 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]],

        [[ 0.96293706,  0.96293706,  0.99149066, ...,  0.81598514,
           0.6910337 , -0.9645136 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]],

        [[ 0.96293706,  0.96293706,  0.99149066, ...,  0.81598514,
           0.6910337 , -0.9645136 ],
         [ 0.65861475, -0.18230653, -0.18230653, ..., -0.39208907,
           0.81598514,  0.53264993],
         [ 0.51725364,  0.51725364,  0.51725364, ..., -0.6379918 ,
           0.21261509, -0.85907143],
         ...,
         [ 0.9642374 ,  0.9642374 ,  0.9642374 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.29973507, -0.8050748 , -0.8050748 , ...,  0.21261509,
           0.21261509,  0.86059   ],
         [ 0.44791204,  0.78683376,  0.78683376, ...,  0.81598514,
           0.81598514, -0.85907143]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [6], 'to': [13]}

generate models:419

analyse output arrays in iter:459

pre layer res:
12:conv2d
{'name': 'conv2d', 'output': array([[[[25695.842, 25695.842, 25694.998, ..., 25694.002, 25694.121,
          25694.121],
         [25696.033, 25696.033, 25695.498, ..., 25694.16 , 25694.379,
          25694.379],
         [25696.492, 25696.492, 25695.996, ..., 25695.627, 25695.533,
          25695.498],
         ...,
         [25712.037, 25712.037, 25710.848, ..., 25698.652, 25690.008,
          25682.008],
         [25709.996, 25709.996, 25709.996, ..., 25707.121, 25697.873,
          25676.533],
         [25708.627, 25708.627, 25707.842, ..., 25707.121, 25697.873,
          25669.373]],

        [[25695.842, 25695.842, 25694.998, ..., 25694.002, 25694.121,
          25694.121],
         [25696.033, 25696.033, 25695.498, ..., 25694.16 , 25694.379,
          25694.379],
         [25696.492, 25696.492, 25695.996, ..., 25695.627, 25695.533,
          25695.498],
         ...,
         [25712.037, 25712.037, 25710.848, ..., 25698.652, 25690.008,
          25682.008],
         [25709.996, 25709.996, 25709.996, ..., 25707.121, 25697.873,
          25676.533],
         [25708.627, 25708.627, 25707.842, ..., 25707.121, 25697.873,
          25669.373]],

        [[25695.842, 25695.842, 25694.998, ..., 25694.002, 25694.121,
          25694.121],
         [25696.033, 25696.033, 25695.498, ..., 25694.16 , 25694.379,
          25694.379],
         [25696.492, 25696.492, 25695.996, ..., 25695.627, 25695.533,
          25695.498],
         ...,
         [25712.037, 25712.037, 25710.848, ..., 25698.652, 25690.008,
          25682.008],
         [25709.996, 25709.996, 25709.996, ..., 25707.121, 25697.873,
          25676.533],
         [25708.627, 25708.627, 25707.842, ..., 25707.121, 25697.873,
          25669.373]],

        ...,

        [[25695.842, 25695.842, 25694.998, ..., 25694.002, 25694.121,
          25694.121],
         [25696.033, 25696.033, 25695.498, ..., 25694.16 , 25694.379,
          25694.379],
         [25696.492, 25696.492, 25695.996, ..., 25695.627, 25695.533,
          25695.498],
         ...,
         [25712.037, 25712.037, 25710.848, ..., 25698.652, 25690.008,
          25682.008],
         [25709.996, 25709.996, 25709.996, ..., 25707.121, 25697.873,
          25676.533],
         [25708.627, 25708.627, 25707.842, ..., 25707.121, 25697.873,
          25669.373]],

        [[25695.842, 25695.842, 25694.998, ..., 25694.002, 25694.121,
          25694.121],
         [25696.033, 25696.033, 25695.498, ..., 25694.16 , 25694.379,
          25694.379],
         [25696.492, 25696.492, 25695.996, ..., 25695.627, 25695.533,
          25695.498],
         ...,
         [25712.037, 25712.037, 25710.848, ..., 25698.652, 25690.008,
          25682.008],
         [25709.996, 25709.996, 25709.996, ..., 25707.121, 25697.873,
          25676.533],
         [25708.627, 25708.627, 25707.842, ..., 25707.121, 25697.873,
          25669.373]],

        [[25695.842, 25695.842, 25694.998, ..., 25694.002, 25694.121,
          25694.121],
         [25696.033, 25696.033, 25695.498, ..., 25694.16 , 25694.379,
          25694.379],
         [25696.492, 25696.492, 25695.996, ..., 25695.627, 25695.533,
          25695.498],
         ...,
         [25712.037, 25712.037, 25710.848, ..., 25698.652, 25690.008,
          25682.008],
         [25709.996, 25709.996, 25709.996, ..., 25707.121, 25697.873,
          25676.533],
         [25708.627, 25708.627, 25707.842, ..., 25707.121, 25697.873,
          25669.373]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [11], 'to': [22]}
tf node:
{'name': 'sin', 'output': array([[[[-0.68564045, -0.68564045,  0.08815227, ...,  0.8840047 ,
           0.8221742 ,  0.8221742 ],
         [-0.81160223, -0.81160223, -0.40019822, ...,  0.7993169 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.4321625 , -0.40019822],
         ...,
         [ 0.94670016,  0.94670016,  0.05335392, ...,  0.41180813,
          -0.9337262 ,  0.49003562],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.34745863, -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.34745863,  0.5484635 ]],

        [[-0.68564045, -0.68564045,  0.08815227, ...,  0.8840047 ,
           0.8221742 ,  0.8221742 ],
         [-0.81160223, -0.81160223, -0.40019822, ...,  0.7993169 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.4321625 , -0.40019822],
         ...,
         [ 0.94670016,  0.94670016,  0.05335392, ...,  0.41180813,
          -0.9337262 ,  0.49003562],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.34745863, -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.34745863,  0.5484635 ]],

        [[-0.68564045, -0.68564045,  0.08815227, ...,  0.8840047 ,
           0.8221742 ,  0.8221742 ],
         [-0.81160223, -0.81160223, -0.40019822, ...,  0.7993169 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.4321625 , -0.40019822],
         ...,
         [ 0.94670016,  0.94670016,  0.05335392, ...,  0.41180813,
          -0.9337262 ,  0.49003562],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.34745863, -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.34745863,  0.5484635 ]],

        ...,

        [[-0.68564045, -0.68564045,  0.08815227, ...,  0.8840047 ,
           0.8221742 ,  0.8221742 ],
         [-0.81160223, -0.81160223, -0.40019822, ...,  0.7993169 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.4321625 , -0.40019822],
         ...,
         [ 0.94670016,  0.94670016,  0.05335392, ...,  0.41180813,
          -0.9337262 ,  0.49003562],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.34745863, -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.34745863,  0.5484635 ]],

        [[-0.68564045, -0.68564045,  0.08815227, ...,  0.8840047 ,
           0.8221742 ,  0.8221742 ],
         [-0.81160223, -0.81160223, -0.40019822, ...,  0.7993169 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.4321625 , -0.40019822],
         ...,
         [ 0.94670016,  0.94670016,  0.05335392, ...,  0.41180813,
          -0.9337262 ,  0.49003562],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.34745863, -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.34745863,  0.5484635 ]],

        [[-0.68564045, -0.68564045,  0.08815227, ...,  0.8840047 ,
           0.8221742 ,  0.8221742 ],
         [-0.81160223, -0.81160223, -0.40019822, ...,  0.7993169 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.4321625 , -0.40019822],
         ...,
         [ 0.94670016,  0.94670016,  0.05335392, ...,  0.41180813,
          -0.9337262 ,  0.49003562],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.34745863, -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.34745863,  0.5484635 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12], 'to': [13]}
ms node:
{'name': 'sin', 'output': array([[[[-0.68564045, -0.68564045,  0.09009762, ...,  0.8840047 ,
           0.82217413,  0.82217413],
         [-0.7965087 , -0.7965087 , -0.40019825, ...,  0.7993168 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.43216252, -0.40019825],
         ...,
         [ 0.9454347 ,  0.9454347 ,  0.05335392, ...,  0.41180816,
          -0.9337262 ,  0.4900356 ],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.3474586 , -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.3474586 ,  0.5484635 ]],

        [[-0.68564045, -0.68564045,  0.09009762, ...,  0.8840047 ,
           0.82217413,  0.82217413],
         [-0.7965087 , -0.7965087 , -0.40019825, ...,  0.7993168 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.43216252, -0.40019825],
         ...,
         [ 0.9454347 ,  0.9454347 ,  0.05335392, ...,  0.41180816,
          -0.9337262 ,  0.4900356 ],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.3474586 , -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.3474586 ,  0.5484635 ]],

        [[-0.68564045, -0.68564045,  0.09009762, ...,  0.8840047 ,
           0.82217413,  0.82217413],
         [-0.7965087 , -0.7965087 , -0.40019825, ...,  0.7993168 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.43216252, -0.40019825],
         ...,
         [ 0.9454347 ,  0.9454347 ,  0.05335392, ...,  0.41180816,
          -0.9337262 ,  0.4900356 ],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.3474586 , -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.3474586 ,  0.5484635 ]],

        ...,

        [[-0.68564045, -0.68564045,  0.09009762, ...,  0.8840047 ,
           0.82217413,  0.82217413],
         [-0.7965087 , -0.7965087 , -0.40019825, ...,  0.7993168 ,
           0.6498655 ,  0.6498655 ],
         [-0.98643106, -0.98643106, -0.78936875, ..., -0.5146843 ,
          -0.43216252, -0.40019825],
         ...,
         [ 0.9454347 ,  0.9454347 ,  0.05335392, ...,  0.41180816,
          -0.9337262 ,  0.4900356 ],
         [-0.7160891 , -0.7160891 , -0.7160891 , ...,  0.5069051 ,
          -0.3474586 , -0.29212245],
         [-0.82729137, -0.82729137, -0.18798734, ...,  0.5069051 ,
          -0.3474586 ,  0.5484635 ]],

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.8567612 , -0.8567612 , -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]],

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.8567612 , -0.8567612 , -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [12], 'to': [13]}
torch node:
{'name': 'sin', 'output': array([[[[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.85575235, -0.85575235, -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]],

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.85575235, -0.85575235, -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]],

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.85575235, -0.85575235, -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]],

        ...,

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.85575235, -0.85575235, -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]],

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.85575235, -0.85575235, -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]],

        [[-0.6175622 , -0.6175622 ,  0.09204262, ...,  0.8840047 ,
           0.7922202 ,  0.7922202 ],
         [-0.801208  , -0.801208  , -0.40019825, ...,  0.7421776 ,
           0.6876074 ,  0.6876074 ],
         [-0.9851184 , -0.9851184 , -0.78816813, ..., -0.5640094 ,
          -0.46012804, -0.40019825],
         ...,
         [ 0.95515305,  0.95515305, -0.02864806, ...,  0.48509222,
          -0.9351174 ,  0.48662677],
         [-0.7174511 , -0.7174511 , -0.7174511 , ...,  0.4624969 ,
          -0.401774  , -0.32186186],
         [-0.85575235, -0.85575235, -0.09910584, ...,  0.4624969 ,
          -0.401774  ,  0.59648883]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [12], 'to': [13]}

generate models:421

analyse output arrays in iter:469

pre layer res:
13:relu
{'name': 'relu', 'output': array([[[[1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          2.0015577e-08, 2.8751465e+04, 2.8751465e+04],
         [1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         [2.3804557e-06, 2.9863640e+01, 8.4821133e+03, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         ...,
         [2.4511248e+03, 2.4511248e+03, 1.4567889e-11, ...,
          5.5564802e-12, 3.9453087e+00, 3.9453087e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          2.7664053e-13, 1.4604576e+00, 1.4604576e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          3.7439402e-14, 1.4604576e+00, 1.4604576e+00]],

        [[1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          2.0015577e-08, 2.8751465e+04, 2.8751465e+04],
         [1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         [2.3804557e-06, 2.9863640e+01, 8.4821133e+03, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         ...,
         [2.4511248e+03, 2.4511248e+03, 1.4567889e-11, ...,
          5.5564802e-12, 3.9453087e+00, 3.9453087e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          2.7664053e-13, 1.4604576e+00, 1.4604576e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          3.7439402e-14, 1.4604576e+00, 1.4604576e+00]],

        [[1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          2.0015577e-08, 2.8751465e+04, 2.8751465e+04],
         [1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         [2.3804557e-06, 2.9863640e+01, 8.4821133e+03, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         ...,
         [2.4511248e+03, 2.4511248e+03, 1.4567889e-11, ...,
          5.5564802e-12, 3.9453087e+00, 3.9453087e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          2.7664053e-13, 1.4604576e+00, 1.4604576e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          3.7439402e-14, 1.4604576e+00, 1.4604576e+00]],

        ...,

        [[1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          2.0015577e-08, 2.8751465e+04, 2.8751465e+04],
         [1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         [2.3804557e-06, 2.9863640e+01, 8.4821133e+03, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         ...,
         [2.4511248e+03, 2.4511248e+03, 1.4567889e-11, ...,
          5.5564802e-12, 3.9453087e+00, 3.9453087e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          2.7664053e-13, 1.4604576e+00, 1.4604576e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          3.7439402e-14, 1.4604576e+00, 1.4604576e+00]],

        [[1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          2.0015577e-08, 2.8751465e+04, 2.8751465e+04],
         [1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         [2.3804557e-06, 2.9863640e+01, 8.4821133e+03, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         ...,
         [2.4511248e+03, 2.4511248e+03, 1.4567889e-11, ...,
          5.5564802e-12, 3.9453087e+00, 3.9453087e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          2.7664053e-13, 1.4604576e+00, 1.4604576e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          3.7439402e-14, 1.4604576e+00, 1.4604576e+00]],

        [[1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          2.0015577e-08, 2.8751465e+04, 2.8751465e+04],
         [1.3853004e+04, 1.3853004e+04, 1.3853004e+04, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         [2.3804557e-06, 2.9863640e+01, 8.4821133e+03, ...,
          1.7852785e-01, 2.8751465e+04, 2.8751465e+04],
         ...,
         [2.4511248e+03, 2.4511248e+03, 1.4567889e-11, ...,
          5.5564802e-12, 3.9453087e+00, 3.9453087e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          2.7664053e-13, 1.4604576e+00, 1.4604576e+00],
         [1.8519457e+04, 1.8519457e+04, 5.8770770e-09, ...,
          3.7439402e-14, 1.4604576e+00, 1.4604576e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12], 'to': [7]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.15052594,  0.15052594,  0.15052594, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052594,  0.15052594,  0.15052594, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850857,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.15052594,  0.15052594,  0.15052594, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052594,  0.15052594,  0.15052594, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850857,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.15052594,  0.15052594,  0.15052594, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052594,  0.15052594,  0.15052594, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850857,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        ...,

        [[ 0.15052594,  0.15052594,  0.15052594, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052594,  0.15052594,  0.15052594, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850857,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.15052594,  0.15052594,  0.15052594, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052594,  0.15052594,  0.15052594, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850857,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.15052594,  0.15052594,  0.15052594, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052594,  0.15052594,  0.15052594, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850857,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [6]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.15052593,  0.15052593,  0.15052593, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052593,  0.15052593,  0.15052593, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850856,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.15052593,  0.15052593,  0.15052593, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052593,  0.15052593,  0.15052593, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850856,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.15052593,  0.15052593,  0.15052593, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052593,  0.15052593,  0.15052593, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850856,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        ...,

        [[ 0.15052593,  0.15052593,  0.15052593, ...,  1.        ,
           0.9244819 ,  0.9244819 ],
         [ 0.15052593,  0.15052593,  0.15052593, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         [ 1.        ,  0.01850856,  0.98258805, ...,  0.9841062 ,
           0.9244819 ,  0.9244819 ],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940362 , -0.6940362 ],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501],
         [-0.9732862 , -0.9732862 ,  1.        , ...,  1.        ,
           0.11011501,  0.11011501]],

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]],

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [13], 'to': [6]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]],

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]],

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]],

        ...,

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]],

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]],

        [[ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  1.        ,
           0.91051096,  0.91051096],
         [ 0.1534216 ,  0.1534216 ,  0.1534216 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         [ 1.        ,  0.01839605,  0.9820395 , ...,  0.9841062 ,
           0.91051096,  0.91051096],
         ...,
         [ 0.7760071 ,  0.7760071 ,  1.        , ...,  1.        ,
          -0.6940389 , -0.6940389 ],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229],
         [-0.96305335, -0.96305335,  1.        , ...,  1.        ,
           0.11011229,  0.11011229]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [13], 'to': [6]}

generate models:430

analyse output arrays in iter:488

pre layer res:
10:add
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [9, 9], 'to': [5]}
13:add
{'name': 'add', 'output': array([[[[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        [[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        [[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [8, 22], 'to': [5]}
tf node:
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10, 13], 'to': [11]}
ms node:
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [10, 13], 'to': [11]}
torch node:
{'name': 'add', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [10, 13], 'to': [11]}

pre layer res:
16:reshape
{'name': 'reshape', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [15], 'to': [22]}
tf node:
{'name': 'log', 'output': array([[[[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        [[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        [[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [16], 'to': [13]}
ms node:
{'name': 'log', 'output': array([[[[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        ...,

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf]],

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf]],

        [[    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         ...,
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf],
         [    -inf,     -inf,     -inf, ...,     -inf,     -inf,
              -inf]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [16], 'to': [13]}
torch node:
{'name': 'log', 'output': array([[[[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        [[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        [[ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         ...,
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf],
         [ inf,  inf,  inf, ...,  inf,  inf,  inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [16], 'to': [13]}

generate models:448

analyse output arrays in iter:498

pre layer res:
7:relu
{'name': 'relu', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [18], 'to': [19]}
tf node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [7], 'to': [23]}
ms node:
{'name': 'log', 'output': array([[[[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        ...,

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [7], 'to': [23]}
torch node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [7], 'to': [23]}

generate models:457

final statics:
total operators:28
tensorflow --> nums:23,distinct_bugs:6
mindspore --> nums:22,distinct_bugs:5
torch --> nums:16,distinct_bugs:6
tensorflow --> 
conv2d:9
cos:6
log:3
softmax:1
sin:3
add:1
mindspore --> 
log:8
sin:5
cos:7
softmax:1
add:1
torch --> 
cos:6
log:3
softmax:1
flatten:2
sin:3
add:1

generate models:458
