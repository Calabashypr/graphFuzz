
analyse output arrays in iter:2

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[-0.71861535,  0.46376073, -0.5866023 , ..., -1.2113084 ,
           0.07988955,  0.08749603],
         [-0.45592275, -0.0522012 , -1.339847  , ...,  0.75810564,
          -1.0678238 , -1.3955643 ],
         [ 1.4841745 ,  0.9981921 , -0.03311788, ..., -0.6103785 ,
          -0.1802629 ,  0.05125037],
         ...,
         [ 0.6730578 ,  0.10371449, -1.2484442 , ..., -0.35591   ,
           0.5881552 , -1.4661194 ],
         [-0.07374939, -1.5056957 ,  0.65142334, ...,  1.4047248 ,
          -0.70253974,  1.1712297 ],
         [ 0.7009785 ,  0.05818987,  0.06414309, ...,  1.4368945 ,
           0.6339549 ,  0.33694088]],

        [[-0.47612518,  1.142971  , -1.573355  , ..., -0.4174152 ,
           0.9057631 ,  1.2418418 ],
         [ 0.19804518, -0.32977706, -0.0407129 , ...,  1.6616621 ,
          -0.0051503 , -0.14413908],
         [-0.20648685,  0.23814717,  2.1274676 , ..., -0.23688751,
           0.133327  ,  1.3171462 ],
         ...,
         [ 0.36906207,  0.3657884 , -0.06057245, ..., -1.806321  ,
           1.9818851 , -0.3905515 ],
         [ 0.6282131 ,  0.20735331,  0.3353947 , ..., -0.23079087,
          -0.40507135, -0.7873806 ],
         [-0.07682494, -0.59275407, -0.6431774 , ...,  1.4495077 ,
           0.3019012 ,  1.1391463 ]],

        [[ 0.2224862 , -1.1576525 ,  0.20628262, ...,  0.5258948 ,
          -1.2348713 , -0.12317585],
         [-0.5113836 ,  0.01768288,  1.5764749 , ...,  0.40408957,
          -0.99702793, -0.7359685 ],
         [-0.74925387,  1.8449055 , -0.34201196, ...,  0.27027616,
           1.6069419 ,  0.42060155],
         ...,
         [-2.0123618 ,  0.16648737, -0.08411841, ...,  2.435559  ,
          -0.3541651 , -1.5874417 ],
         [-0.199421  ,  0.27950913, -0.8529872 , ..., -0.39173734,
           0.42248705, -1.1439929 ],
         [-0.39122617, -0.54863673,  0.33332667, ..., -0.18023737,
          -0.26350132,  1.6791983 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[ 1.2609282e+01,  4.7407784e+00, -8.4872627e+00, ...,
          -3.4246256e+00, -5.1128864e-03,  2.4529018e+00],
         [ 1.3770793e+01,  5.2904143e+00, -8.7761059e+00, ...,
          -4.0270596e+00, -1.3284354e+00, -2.8158516e-01],
         [ 1.2192040e+01,  4.9508371e+00, -3.2882280e+00, ...,
          -4.9078879e+00,  2.7622924e+00, -1.4653239e+00],
         ...,
         [ 2.8334768e+00,  3.5530744e+00,  8.6114416e+00, ...,
           2.4050394e+01,  5.5217524e+00, -4.2506104e+00],
         [-5.7655334e+00, -5.8720698e+00,  3.9411969e+00, ...,
           2.0514683e+01,  1.1430448e+01,  5.1650572e+00],
         [-4.6554999e+00, -1.0870659e+00,  4.3641701e+00, ...,
           1.0511566e+01,  6.3917460e+00,  5.8190885e+00]],

        [[ 1.2609282e+01,  4.7407784e+00, -8.4872627e+00, ...,
          -3.4246256e+00, -5.1128864e-03,  2.4529018e+00],
         [ 1.3770793e+01,  5.2904143e+00, -8.7761059e+00, ...,
          -4.0270596e+00, -1.3284354e+00, -2.8158516e-01],
         [ 1.2192040e+01,  4.9508371e+00, -3.2882280e+00, ...,
          -4.9078879e+00,  2.7622924e+00, -1.4653239e+00],
         ...,
         [ 2.8334768e+00,  3.5530744e+00,  8.6114416e+00, ...,
           2.4050394e+01,  5.5217524e+00, -4.2506104e+00],
         [-5.7655334e+00, -5.8720698e+00,  3.9411969e+00, ...,
           2.0514683e+01,  1.1430448e+01,  5.1650572e+00],
         [-4.6554999e+00, -1.0870659e+00,  4.3641701e+00, ...,
           1.0511566e+01,  6.3917460e+00,  5.8190885e+00]],

        [[ 1.2609282e+01,  4.7407784e+00, -8.4872627e+00, ...,
          -3.4246256e+00, -5.1128864e-03,  2.4529018e+00],
         [ 1.3770793e+01,  5.2904143e+00, -8.7761059e+00, ...,
          -4.0270596e+00, -1.3284354e+00, -2.8158516e-01],
         [ 1.2192040e+01,  4.9508371e+00, -3.2882280e+00, ...,
          -4.9078879e+00,  2.7622924e+00, -1.4653239e+00],
         ...,
         [ 2.8334768e+00,  3.5530744e+00,  8.6114416e+00, ...,
           2.4050394e+01,  5.5217524e+00, -4.2506104e+00],
         [-5.7655334e+00, -5.8720698e+00,  3.9411969e+00, ...,
           2.0514683e+01,  1.1430448e+01,  5.1650572e+00],
         [-4.6554999e+00, -1.0870659e+00,  4.3641701e+00, ...,
           1.0511566e+01,  6.3917460e+00,  5.8190885e+00]],

        ...,

        [[ 1.2609282e+01,  4.7407784e+00, -8.4872627e+00, ...,
          -3.4246256e+00, -5.1128864e-03,  2.4529018e+00],
         [ 1.3770793e+01,  5.2904143e+00, -8.7761059e+00, ...,
          -4.0270596e+00, -1.3284354e+00, -2.8158516e-01],
         [ 1.2192040e+01,  4.9508371e+00, -3.2882280e+00, ...,
          -4.9078879e+00,  2.7622924e+00, -1.4653239e+00],
         ...,
         [ 2.8334768e+00,  3.5530744e+00,  8.6114416e+00, ...,
           2.4050394e+01,  5.5217524e+00, -4.2506104e+00],
         [-5.7655334e+00, -5.8720698e+00,  3.9411969e+00, ...,
           2.0514683e+01,  1.1430448e+01,  5.1650572e+00],
         [-4.6554999e+00, -1.0870659e+00,  4.3641701e+00, ...,
           1.0511566e+01,  6.3917460e+00,  5.8190885e+00]],

        [[ 1.2609282e+01,  4.7407784e+00, -8.4872627e+00, ...,
          -3.4246256e+00, -5.1128864e-03,  2.4529018e+00],
         [ 1.3770793e+01,  5.2904143e+00, -8.7761059e+00, ...,
          -4.0270596e+00, -1.3284354e+00, -2.8158516e-01],
         [ 1.2192040e+01,  4.9508371e+00, -3.2882280e+00, ...,
          -4.9078879e+00,  2.7622924e+00, -1.4653239e+00],
         ...,
         [ 2.8334768e+00,  3.5530744e+00,  8.6114416e+00, ...,
           2.4050394e+01,  5.5217524e+00, -4.2506104e+00],
         [-5.7655334e+00, -5.8720698e+00,  3.9411969e+00, ...,
           2.0514683e+01,  1.1430448e+01,  5.1650572e+00],
         [-4.6554999e+00, -1.0870659e+00,  4.3641701e+00, ...,
           1.0511566e+01,  6.3917460e+00,  5.8190885e+00]],

        [[ 1.2609282e+01,  4.7407784e+00, -8.4872627e+00, ...,
          -3.4246256e+00, -5.1128864e-03,  2.4529018e+00],
         [ 1.3770793e+01,  5.2904143e+00, -8.7761059e+00, ...,
          -4.0270596e+00, -1.3284354e+00, -2.8158516e-01],
         [ 1.2192040e+01,  4.9508371e+00, -3.2882280e+00, ...,
          -4.9078879e+00,  2.7622924e+00, -1.4653239e+00],
         ...,
         [ 2.8334768e+00,  3.5530744e+00,  8.6114416e+00, ...,
           2.4050394e+01,  5.5217524e+00, -4.2506104e+00],
         [-5.7655334e+00, -5.8720698e+00,  3.9411969e+00, ...,
           2.0514683e+01,  1.1430448e+01,  5.1650572e+00],
         [-4.6554999e+00, -1.0870659e+00,  4.3641701e+00, ...,
           1.0511566e+01,  6.3917460e+00,  5.8190885e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [3, 3]}
ms node:
{'name': 'conv2d', 'output': array([[[[ 8.291424  ,  5.2375126 ,  3.734794  , ...,  2.4052367 ,
           4.6066527 ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.619928  , ...,  0.597478  ,
           1.4063199 ,  5.8303967 ],
         [ 8.073481  ,  8.416256  ,  4.2354054 , ..., -0.28553718,
          -7.0158944 , -0.48686457],
         ...,
         [ 8.556078  ,  1.9252113 ,  2.983466  , ..., 22.189716  ,
          13.179595  , -0.19105732],
         [-3.7947564 , -2.4234178 ,  1.0803833 , ..., 25.191486  ,
          13.15466   ,  3.6245618 ],
         [-5.1746454 , -4.2851896 , -5.7373743 , ..., 16.712482  ,
          10.943908  ,  8.16703   ]],

        [[ 8.291424  ,  5.2375126 ,  3.734794  , ...,  2.4052367 ,
           4.6066527 ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.619928  , ...,  0.597478  ,
           1.4063199 ,  5.8303967 ],
         [ 8.073481  ,  8.416256  ,  4.2354054 , ..., -0.28553718,
          -7.0158944 , -0.48686457],
         ...,
         [ 8.556078  ,  1.9252113 ,  2.983466  , ..., 22.189716  ,
          13.179595  , -0.19105732],
         [-3.7947564 , -2.4234178 ,  1.0803833 , ..., 25.191486  ,
          13.15466   ,  3.6245618 ],
         [-5.1746454 , -4.2851896 , -5.7373743 , ..., 16.712482  ,
          10.943908  ,  8.16703   ]],

        [[ 8.291424  ,  5.2375126 ,  3.734794  , ...,  2.4052367 ,
           4.6066527 ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.619928  , ...,  0.597478  ,
           1.4063199 ,  5.8303967 ],
         [ 8.073481  ,  8.416256  ,  4.2354054 , ..., -0.28553718,
          -7.0158944 , -0.48686457],
         ...,
         [ 8.556078  ,  1.9252113 ,  2.983466  , ..., 22.189716  ,
          13.179595  , -0.19105732],
         [-3.7947564 , -2.4234178 ,  1.0803833 , ..., 25.191486  ,
          13.15466   ,  3.6245618 ],
         [-5.1746454 , -4.2851896 , -5.7373743 , ..., 16.712482  ,
          10.943908  ,  8.16703   ]],

        ...,

        [[ 8.291424  ,  5.2375126 ,  3.734794  , ...,  2.4052367 ,
           4.6066527 ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.619928  , ...,  0.597478  ,
           1.4063199 ,  5.8303967 ],
         [ 8.073481  ,  8.416256  ,  4.2354054 , ..., -0.28553718,
          -7.0158944 , -0.48686457],
         ...,
         [ 8.556078  ,  1.9252113 ,  2.983466  , ..., 22.189716  ,
          13.179595  , -0.19105732],
         [-3.7947564 , -2.4234178 ,  1.0803833 , ..., 25.191486  ,
          13.15466   ,  3.6245618 ],
         [-5.1746454 , -4.2851896 , -5.7373743 , ..., 16.712482  ,
          10.943908  ,  8.16703   ]],

        [[ 8.291424  ,  5.2375126 ,  3.734794  , ...,  2.4052367 ,
           4.6066527 ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.619928  , ...,  0.597478  ,
           1.4063199 ,  5.8303967 ],
         [ 8.073481  ,  8.416256  ,  4.2354054 , ..., -0.28553718,
          -7.0158944 , -0.48686457],
         ...,
         [ 8.556078  ,  1.9252113 ,  2.983466  , ..., 22.189716  ,
          13.179595  , -0.19105732],
         [-3.7947564 , -2.4234178 ,  1.0803833 , ..., 25.191486  ,
          13.15466   ,  3.6245618 ],
         [-5.1746454 , -4.2851896 , -5.7373743 , ..., 16.712482  ,
          10.943908  ,  8.16703   ]],

        [[ 8.291424  ,  5.2375126 ,  3.734794  , ...,  2.4052367 ,
           4.6066527 ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.619928  , ...,  0.597478  ,
           1.4063199 ,  5.8303967 ],
         [ 8.073481  ,  8.416256  ,  4.2354054 , ..., -0.28553718,
          -7.0158944 , -0.48686457],
         ...,
         [ 8.556078  ,  1.9252113 ,  2.983466  , ..., 22.189716  ,
          13.179595  , -0.19105732],
         [-3.7947564 , -2.4234178 ,  1.0803833 , ..., 25.191486  ,
          13.15466   ,  3.6245618 ],
         [-5.1746454 , -4.2851896 , -5.7373743 , ..., 16.712482  ,
          10.943908  ,  8.16703   ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [3, 3]}
torch node:
{'name': 'conv2d', 'output': array([[[[ 8.291426  ,  5.2375126 ,  3.7347946 , ...,  2.4052377 ,
           4.606654  ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.6199288 , ...,  0.59747803,
           1.4063194 ,  5.8303967 ],
         [ 8.073481  ,  8.416255  ,  4.235407  , ..., -0.28553945,
          -7.0158944 , -0.48686373],
         ...,
         [ 8.556081  ,  1.9252099 ,  2.983465  , ..., 22.189713  ,
          13.179592  , -0.19105649],
         [-3.7947564 , -2.4234157 ,  1.0803821 , ..., 25.191494  ,
          13.15466   ,  3.6245606 ],
         [-5.1746454 , -4.2851877 , -5.737373  , ..., 16.712479  ,
          10.943906  ,  8.16703   ]],

        [[ 8.291426  ,  5.2375126 ,  3.7347946 , ...,  2.4052377 ,
           4.606654  ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.6199288 , ...,  0.59747803,
           1.4063194 ,  5.8303967 ],
         [ 8.073481  ,  8.416255  ,  4.235407  , ..., -0.28553945,
          -7.0158944 , -0.48686373],
         ...,
         [ 8.556081  ,  1.9252099 ,  2.983465  , ..., 22.189713  ,
          13.179592  , -0.19105649],
         [-3.7947564 , -2.4234157 ,  1.0803821 , ..., 25.191494  ,
          13.15466   ,  3.6245606 ],
         [-5.1746454 , -4.2851877 , -5.737373  , ..., 16.712479  ,
          10.943906  ,  8.16703   ]],

        [[ 8.291426  ,  5.2375126 ,  3.7347946 , ...,  2.4052377 ,
           4.606654  ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.6199288 , ...,  0.59747803,
           1.4063194 ,  5.8303967 ],
         [ 8.073481  ,  8.416255  ,  4.235407  , ..., -0.28553945,
          -7.0158944 , -0.48686373],
         ...,
         [ 8.556081  ,  1.9252099 ,  2.983465  , ..., 22.189713  ,
          13.179592  , -0.19105649],
         [-3.7947564 , -2.4234157 ,  1.0803821 , ..., 25.191494  ,
          13.15466   ,  3.6245606 ],
         [-5.1746454 , -4.2851877 , -5.737373  , ..., 16.712479  ,
          10.943906  ,  8.16703   ]],

        ...,

        [[ 8.291426  ,  5.2375126 ,  3.7347946 , ...,  2.4052377 ,
           4.606654  ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.6199288 , ...,  0.59747803,
           1.4063194 ,  5.8303967 ],
         [ 8.073481  ,  8.416255  ,  4.235407  , ..., -0.28553945,
          -7.0158944 , -0.48686373],
         ...,
         [ 8.556081  ,  1.9252099 ,  2.983465  , ..., 22.189713  ,
          13.179592  , -0.19105649],
         [-3.7947564 , -2.4234157 ,  1.0803821 , ..., 25.191494  ,
          13.15466   ,  3.6245606 ],
         [-5.1746454 , -4.2851877 , -5.737373  , ..., 16.712479  ,
          10.943906  ,  8.16703   ]],

        [[ 8.291426  ,  5.2375126 ,  3.7347946 , ...,  2.4052377 ,
           4.606654  ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.6199288 , ...,  0.59747803,
           1.4063194 ,  5.8303967 ],
         [ 8.073481  ,  8.416255  ,  4.235407  , ..., -0.28553945,
          -7.0158944 , -0.48686373],
         ...,
         [ 8.556081  ,  1.9252099 ,  2.983465  , ..., 22.189713  ,
          13.179592  , -0.19105649],
         [-3.7947564 , -2.4234157 ,  1.0803821 , ..., 25.191494  ,
          13.15466   ,  3.6245606 ],
         [-5.1746454 , -4.2851877 , -5.737373  , ..., 16.712479  ,
          10.943906  ,  8.16703   ]],

        [[ 8.291426  ,  5.2375126 ,  3.7347946 , ...,  2.4052377 ,
           4.606654  ,  8.002755  ],
         [10.557283  , 10.994067  ,  3.6199288 , ...,  0.59747803,
           1.4063194 ,  5.8303967 ],
         [ 8.073481  ,  8.416255  ,  4.235407  , ..., -0.28553945,
          -7.0158944 , -0.48686373],
         ...,
         [ 8.556081  ,  1.9252099 ,  2.983465  , ..., 22.189713  ,
          13.179592  , -0.19105649],
         [-3.7947564 , -2.4234157 ,  1.0803821 , ..., 25.191494  ,
          13.15466   ,  3.6245606 ],
         [-5.1746454 , -4.2851877 , -5.737373  , ..., 16.712479  ,
          10.943906  ,  8.16703   ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [3, 3]}

generate models:3

analyse output arrays in iter:3

pre layer res:
4:sigmoid
{'name': 'sigmoid', 'output': array([[[[0.1110415 , 0.8180587 , 0.6164652 , ..., 0.64562374,
          0.6597306 , 0.3436451 ],
         [0.49211356, 0.26808244, 0.34508717, ..., 0.70439315,
          0.91261905, 0.80295926],
         [0.7036266 , 0.7521057 , 0.22231266, ..., 0.3557568 ,
          0.546475  , 0.26044038],
         ...,
         [0.31819573, 0.5221674 , 0.81862694, ..., 0.15947993,
          0.17774868, 0.55254763],
         [0.16663982, 0.5903488 , 0.5484772 , ..., 0.5416914 ,
          0.17258365, 0.4538022 ],
         [0.864513  , 0.3197873 , 0.76338553, ..., 0.6106344 ,
          0.66939795, 0.21672155]],

        [[0.6920219 , 0.13464774, 0.60484016, ..., 0.365107  ,
          0.90505713, 0.26172018],
         [0.55609536, 0.4177938 , 0.4506513 , ..., 0.4492012 ,
          0.6907769 , 0.29865596],
         [0.5838312 , 0.4577698 , 0.41663268, ..., 0.25803635,
          0.63846976, 0.7653661 ],
         ...,
         [0.7898678 , 0.8267451 , 0.12110838, ..., 0.90317625,
          0.39317548, 0.26943097],
         [0.36763105, 0.17363977, 0.93035436, ..., 0.79793304,
          0.73792464, 0.14916746],
         [0.57709026, 0.6443686 , 0.78248435, ..., 0.2915236 ,
          0.2579423 , 0.7282757 ]],

        [[0.5909547 , 0.4286328 , 0.69621986, ..., 0.76339746,
          0.5486873 , 0.46188605],
         [0.8450419 , 0.19067806, 0.7127349 , ..., 0.58434576,
          0.5025121 , 0.657364  ],
         [0.7965173 , 0.56308866, 0.5064955 , ..., 0.2310111 ,
          0.48370838, 0.75314736],
         ...,
         [0.5361984 , 0.90733945, 0.70791286, ..., 0.4352447 ,
          0.43339726, 0.35019708],
         [0.7657224 , 0.22681472, 0.785223  , ..., 0.6003539 ,
          0.5776668 , 0.7528287 ],
         [0.3322325 , 0.40546858, 0.56214255, ..., 0.7024662 ,
          0.37196493, 0.69288707]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [1, 6]}
tf node:
{'name': 'conv2d', 'output': array([[[[40.116978, 54.7378  , 53.06014 , ..., 56.197727, 48.510082,
          32.31734 ],
         [55.4407  , 76.11317 , 74.17769 , ..., 77.27733 , 67.48051 ,
          45.07092 ],
         [56.676464, 77.4804  , 74.272545, ..., 73.491455, 63.79144 ,
          42.308704],
         ...,
         [51.76978 , 74.651665, 74.40639 , ..., 71.75952 , 63.506737,
          42.54895 ],
         [44.492683, 64.21612 , 64.47756 , ..., 60.75196 , 52.45521 ,
          35.03451 ],
         [31.000729, 44.570023, 44.343925, ..., 39.509266, 33.87838 ,
          22.747383]],

        [[40.116978, 54.7378  , 53.06014 , ..., 56.197727, 48.510082,
          32.31734 ],
         [55.4407  , 76.11317 , 74.17769 , ..., 77.27733 , 67.48051 ,
          45.07092 ],
         [56.676464, 77.4804  , 74.272545, ..., 73.491455, 63.79144 ,
          42.308704],
         ...,
         [51.76978 , 74.651665, 74.40639 , ..., 71.75952 , 63.506737,
          42.54895 ],
         [44.492683, 64.21612 , 64.47756 , ..., 60.75196 , 52.45521 ,
          35.03451 ],
         [31.000729, 44.570023, 44.343925, ..., 39.509266, 33.87838 ,
          22.747383]],

        [[40.116978, 54.7378  , 53.06014 , ..., 56.197727, 48.510082,
          32.31734 ],
         [55.4407  , 76.11317 , 74.17769 , ..., 77.27733 , 67.48051 ,
          45.07092 ],
         [56.676464, 77.4804  , 74.272545, ..., 73.491455, 63.79144 ,
          42.308704],
         ...,
         [51.76978 , 74.651665, 74.40639 , ..., 71.75952 , 63.506737,
          42.54895 ],
         [44.492683, 64.21612 , 64.47756 , ..., 60.75196 , 52.45521 ,
          35.03451 ],
         [31.000729, 44.570023, 44.343925, ..., 39.509266, 33.87838 ,
          22.747383]],

        ...,

        [[40.116978, 54.7378  , 53.06014 , ..., 56.197727, 48.510082,
          32.31734 ],
         [55.4407  , 76.11317 , 74.17769 , ..., 77.27733 , 67.48051 ,
          45.07092 ],
         [56.676464, 77.4804  , 74.272545, ..., 73.491455, 63.79144 ,
          42.308704],
         ...,
         [51.76978 , 74.651665, 74.40639 , ..., 71.75952 , 63.506737,
          42.54895 ],
         [44.492683, 64.21612 , 64.47756 , ..., 60.75196 , 52.45521 ,
          35.03451 ],
         [31.000729, 44.570023, 44.343925, ..., 39.509266, 33.87838 ,
          22.747383]],

        [[40.116978, 54.7378  , 53.06014 , ..., 56.197727, 48.510082,
          32.31734 ],
         [55.4407  , 76.11317 , 74.17769 , ..., 77.27733 , 67.48051 ,
          45.07092 ],
         [56.676464, 77.4804  , 74.272545, ..., 73.491455, 63.79144 ,
          42.308704],
         ...,
         [51.76978 , 74.651665, 74.40639 , ..., 71.75952 , 63.506737,
          42.54895 ],
         [44.492683, 64.21612 , 64.47756 , ..., 60.75196 , 52.45521 ,
          35.03451 ],
         [31.000729, 44.570023, 44.343925, ..., 39.509266, 33.87838 ,
          22.747383]],

        [[40.116978, 54.7378  , 53.06014 , ..., 56.197727, 48.510082,
          32.31734 ],
         [55.4407  , 76.11317 , 74.17769 , ..., 77.27733 , 67.48051 ,
          45.07092 ],
         [56.676464, 77.4804  , 74.272545, ..., 73.491455, 63.79144 ,
          42.308704],
         ...,
         [51.76978 , 74.651665, 74.40639 , ..., 71.75952 , 63.506737,
          42.54895 ],
         [44.492683, 64.21612 , 64.47756 , ..., 60.75196 , 52.45521 ,
          35.03451 ],
         [31.000729, 44.570023, 44.343925, ..., 39.509266, 33.87838 ,
          22.747383]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [4], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[24.874949, 38.58731 , 43.005203, ..., 43.290546, 44.501915,
          31.227324],
         [37.653923, 56.82447 , 63.863934, ..., 64.37965 , 67.610634,
          48.482285],
         [44.11417 , 66.23467 , 73.89364 , ..., 74.94197 , 77.66942 ,
          55.807613],
         ...,
         [41.05618 , 63.285503, 72.430305, ..., 73.2505  , 72.72604 ,
          52.229057],
         [42.567345, 64.621475, 74.6333  , ..., 74.06199 , 72.091324,
          51.639366],
         [31.799023, 47.486065, 55.66082 , ..., 51.95005 , 49.5798  ,
          35.378925]],

        [[24.874949, 38.58731 , 43.005203, ..., 43.290546, 44.501915,
          31.227324],
         [37.653923, 56.82447 , 63.863934, ..., 64.37965 , 67.610634,
          48.482285],
         [44.11417 , 66.23467 , 73.89364 , ..., 74.94197 , 77.66942 ,
          55.807613],
         ...,
         [41.05618 , 63.285503, 72.430305, ..., 73.2505  , 72.72604 ,
          52.229057],
         [42.567345, 64.621475, 74.6333  , ..., 74.06199 , 72.091324,
          51.639366],
         [31.799023, 47.486065, 55.66082 , ..., 51.95005 , 49.5798  ,
          35.378925]],

        [[24.874949, 38.58731 , 43.005203, ..., 43.290546, 44.501915,
          31.227324],
         [37.653923, 56.82447 , 63.863934, ..., 64.37965 , 67.610634,
          48.482285],
         [44.11417 , 66.23467 , 73.89364 , ..., 74.94197 , 77.66942 ,
          55.807613],
         ...,
         [41.05618 , 63.285503, 72.430305, ..., 73.2505  , 72.72604 ,
          52.229057],
         [42.567345, 64.621475, 74.6333  , ..., 74.06199 , 72.091324,
          51.639366],
         [31.799023, 47.486065, 55.66082 , ..., 51.95005 , 49.5798  ,
          35.378925]],

        ...,

        [[24.874949, 38.58731 , 43.005203, ..., 43.290546, 44.501915,
          31.227324],
         [37.653923, 56.82447 , 63.863934, ..., 64.37965 , 67.610634,
          48.482285],
         [44.11417 , 66.23467 , 73.89364 , ..., 74.94197 , 77.66942 ,
          55.807613],
         ...,
         [41.05618 , 63.285503, 72.430305, ..., 73.2505  , 72.72604 ,
          52.229057],
         [42.567345, 64.621475, 74.6333  , ..., 74.06199 , 72.091324,
          51.639366],
         [31.799023, 47.486065, 55.66082 , ..., 51.95005 , 49.5798  ,
          35.378925]],

        [[24.874949, 38.58731 , 43.005203, ..., 43.290546, 44.501915,
          31.227324],
         [37.653923, 56.82447 , 63.863934, ..., 64.37965 , 67.610634,
          48.482285],
         [44.11417 , 66.23467 , 73.89364 , ..., 74.94197 , 77.66942 ,
          55.807613],
         ...,
         [41.05618 , 63.285503, 72.430305, ..., 73.2505  , 72.72604 ,
          52.229057],
         [42.567345, 64.621475, 74.6333  , ..., 74.06199 , 72.091324,
          51.639366],
         [31.799023, 47.486065, 55.66082 , ..., 51.95005 , 49.5798  ,
          35.378925]],

        [[24.874949, 38.58731 , 43.005203, ..., 43.290546, 44.501915,
          31.227324],
         [37.653923, 56.82447 , 63.863934, ..., 64.37965 , 67.610634,
          48.482285],
         [44.11417 , 66.23467 , 73.89364 , ..., 74.94197 , 77.66942 ,
          55.807613],
         ...,
         [41.05618 , 63.285503, 72.430305, ..., 73.2505  , 72.72604 ,
          52.229057],
         [42.567345, 64.621475, 74.6333  , ..., 74.06199 , 72.091324,
          51.639366],
         [31.799023, 47.486065, 55.66082 , ..., 51.95005 , 49.5798  ,
          35.378925]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [4], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[24.874952, 38.58732 , 43.005215, ..., 43.290546, 44.501907,
          31.227325],
         [37.653923, 56.824474, 63.863945, ..., 64.37965 , 67.61063 ,
          48.482273],
         [44.114166, 66.23468 , 73.89364 , ..., 74.94193 , 77.669395,
          55.80761 ],
         ...,
         [41.056168, 63.2855  , 72.43029 , ..., 73.25051 , 72.72605 ,
          52.229065],
         [42.567337, 64.62146 , 74.633286, ..., 74.062004, 72.09135 ,
          51.63938 ],
         [31.799023, 47.486057, 55.66082 , ..., 51.95005 , 49.57979 ,
          35.37893 ]],

        [[24.874952, 38.58732 , 43.005215, ..., 43.290546, 44.501907,
          31.227325],
         [37.653923, 56.824474, 63.863945, ..., 64.37965 , 67.61063 ,
          48.482273],
         [44.114166, 66.23468 , 73.89364 , ..., 74.94193 , 77.669395,
          55.80761 ],
         ...,
         [41.056168, 63.2855  , 72.43029 , ..., 73.25051 , 72.72605 ,
          52.229065],
         [42.567337, 64.62146 , 74.633286, ..., 74.062004, 72.09135 ,
          51.63938 ],
         [31.799023, 47.486057, 55.66082 , ..., 51.95005 , 49.57979 ,
          35.37893 ]],

        [[24.874952, 38.58732 , 43.005215, ..., 43.290546, 44.501907,
          31.227325],
         [37.653923, 56.824474, 63.863945, ..., 64.37965 , 67.61063 ,
          48.482273],
         [44.114166, 66.23468 , 73.89364 , ..., 74.94193 , 77.669395,
          55.80761 ],
         ...,
         [41.056168, 63.2855  , 72.43029 , ..., 73.25051 , 72.72605 ,
          52.229065],
         [42.567337, 64.62146 , 74.633286, ..., 74.062004, 72.09135 ,
          51.63938 ],
         [31.799023, 47.486057, 55.66082 , ..., 51.95005 , 49.57979 ,
          35.37893 ]],

        ...,

        [[24.874952, 38.58732 , 43.005215, ..., 43.290546, 44.501907,
          31.227325],
         [37.653923, 56.824474, 63.863945, ..., 64.37965 , 67.61063 ,
          48.482273],
         [44.114166, 66.23468 , 73.89364 , ..., 74.94193 , 77.669395,
          55.80761 ],
         ...,
         [41.056168, 63.2855  , 72.43029 , ..., 73.25051 , 72.72605 ,
          52.229065],
         [42.567337, 64.62146 , 74.633286, ..., 74.062004, 72.09135 ,
          51.63938 ],
         [31.799023, 47.486057, 55.66082 , ..., 51.95005 , 49.57979 ,
          35.37893 ]],

        [[24.874952, 38.58732 , 43.005215, ..., 43.290546, 44.501907,
          31.227325],
         [37.653923, 56.824474, 63.863945, ..., 64.37965 , 67.61063 ,
          48.482273],
         [44.114166, 66.23468 , 73.89364 , ..., 74.94193 , 77.669395,
          55.80761 ],
         ...,
         [41.056168, 63.2855  , 72.43029 , ..., 73.25051 , 72.72605 ,
          52.229065],
         [42.567337, 64.62146 , 74.633286, ..., 74.062004, 72.09135 ,
          51.63938 ],
         [31.799023, 47.486057, 55.66082 , ..., 51.95005 , 49.57979 ,
          35.37893 ]],

        [[24.874952, 38.58732 , 43.005215, ..., 43.290546, 44.501907,
          31.227325],
         [37.653923, 56.824474, 63.863945, ..., 64.37965 , 67.61063 ,
          48.482273],
         [44.114166, 66.23468 , 73.89364 , ..., 74.94193 , 77.669395,
          55.80761 ],
         ...,
         [41.056168, 63.2855  , 72.43029 , ..., 73.25051 , 72.72605 ,
          52.229065],
         [42.567337, 64.62146 , 74.633286, ..., 74.062004, 72.09135 ,
          51.63938 ],
         [31.799023, 47.486057, 55.66082 , ..., 51.95005 , 49.57979 ,
          35.37893 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [4], 'to': [2]}

generate models:4

analyse output arrays in iter:4

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[-0.07033683, -0.5442775 , -0.1972274 , ..., -0.9967169 ,
          -0.8528062 , -2.1976619 ],
         [-0.3776856 , -0.97968304,  0.01714372, ...,  0.32513425,
           0.33589903, -0.6855285 ],
         [ 0.22437453,  0.53922623,  0.47554338, ...,  0.5464726 ,
          -1.6514161 ,  0.6556974 ],
         ...,
         [-0.85293293, -0.55934745,  0.628324  , ..., -0.03992862,
          -0.15767974,  0.17292212],
         [-2.2741716 ,  0.7221756 ,  1.0090375 , ...,  0.4647199 ,
          -1.2242103 , -0.57967293],
         [ 0.10798085, -1.7201706 , -0.7193159 , ...,  0.3932429 ,
           0.91689396, -0.10410799]],

        [[ 0.34864318,  1.7164629 , -1.8911028 , ..., -1.2036829 ,
           1.3125283 , -1.2732676 ],
         [-0.3815149 , -0.43622765,  0.53948396, ..., -1.4894562 ,
          -0.12677872,  1.2813648 ],
         [-1.53701   , -0.8861035 , -1.8825047 , ...,  0.29716736,
           0.9211845 , -1.3380516 ],
         ...,
         [ 1.794359  ,  0.02648446,  1.7030243 , ...,  0.80686677,
          -0.01474309, -0.5278903 ],
         [ 0.50692284,  0.51005673, -1.4324707 , ...,  1.9881662 ,
          -0.3794597 , -0.21389927],
         [-0.4065372 , -0.775137  , -0.99601734, ..., -1.6888973 ,
          -1.8147883 , -0.31637448]],

        [[ 0.731876  , -0.1791713 , -0.8042025 , ...,  0.4748755 ,
           0.527241  ,  1.3452793 ],
         [-0.14493121, -0.28784707,  0.6379232 , ..., -0.57802373,
           0.5055484 , -0.24465014],
         [ 0.8542204 , -0.14569123, -0.767015  , ...,  1.4808198 ,
          -0.4091234 , -0.23871541],
         ...,
         [ 0.46442926,  0.5107383 , -2.435926  , ...,  1.0787398 ,
           1.6662599 , -0.49983248],
         [ 0.7651807 ,  1.383904  ,  0.4511967 , ...,  0.4764251 ,
          -0.20480518, -0.18515547],
         [-0.53332466, -0.13439932, -0.38748282, ...,  0.19672127,
          -0.03549989,  0.38195968]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[  0.75658953,   9.879223  ,  15.065918  , ...,  -1.8899477 ,
           -1.3881459 , -11.32643   ],
         [ -4.969639  ,  11.078127  ,  13.252606  , ...,  -7.859786  ,
           -4.2282224 , -11.686355  ],
         [ -5.323691  ,   6.043412  ,   7.669101  , ..., -19.992092  ,
          -13.061171  ,  -9.742441  ],
         ...,
         [  5.896699  ,   4.805041  ,  -5.98671   , ...,   5.682988  ,
            2.955723  ,  -5.0657067 ],
         [ -0.62321186,  -3.5028672 ,  -9.493436  , ...,  14.551567  ,
            1.3794954 ,  -0.21426362],
         [  7.3562703 ,   3.647664  ,   2.385991  , ...,  18.872944  ,
           11.031328  ,   3.6042585 ]],

        [[  0.75658953,   9.879223  ,  15.065918  , ...,  -1.8899477 ,
           -1.3881459 , -11.32643   ],
         [ -4.969639  ,  11.078127  ,  13.252606  , ...,  -7.859786  ,
           -4.2282224 , -11.686355  ],
         [ -5.323691  ,   6.043412  ,   7.669101  , ..., -19.992092  ,
          -13.061171  ,  -9.742441  ],
         ...,
         [  5.896699  ,   4.805041  ,  -5.98671   , ...,   5.682988  ,
            2.955723  ,  -5.0657067 ],
         [ -0.62321186,  -3.5028672 ,  -9.493436  , ...,  14.551567  ,
            1.3794954 ,  -0.21426362],
         [  7.3562703 ,   3.647664  ,   2.385991  , ...,  18.872944  ,
           11.031328  ,   3.6042585 ]],

        [[  0.75658953,   9.879223  ,  15.065918  , ...,  -1.8899477 ,
           -1.3881459 , -11.32643   ],
         [ -4.969639  ,  11.078127  ,  13.252606  , ...,  -7.859786  ,
           -4.2282224 , -11.686355  ],
         [ -5.323691  ,   6.043412  ,   7.669101  , ..., -19.992092  ,
          -13.061171  ,  -9.742441  ],
         ...,
         [  5.896699  ,   4.805041  ,  -5.98671   , ...,   5.682988  ,
            2.955723  ,  -5.0657067 ],
         [ -0.62321186,  -3.5028672 ,  -9.493436  , ...,  14.551567  ,
            1.3794954 ,  -0.21426362],
         [  7.3562703 ,   3.647664  ,   2.385991  , ...,  18.872944  ,
           11.031328  ,   3.6042585 ]],

        ...,

        [[  0.75658953,   9.879223  ,  15.065918  , ...,  -1.8899477 ,
           -1.3881459 , -11.32643   ],
         [ -4.969639  ,  11.078127  ,  13.252606  , ...,  -7.859786  ,
           -4.2282224 , -11.686355  ],
         [ -5.323691  ,   6.043412  ,   7.669101  , ..., -19.992092  ,
          -13.061171  ,  -9.742441  ],
         ...,
         [  5.896699  ,   4.805041  ,  -5.98671   , ...,   5.682988  ,
            2.955723  ,  -5.0657067 ],
         [ -0.62321186,  -3.5028672 ,  -9.493436  , ...,  14.551567  ,
            1.3794954 ,  -0.21426362],
         [  7.3562703 ,   3.647664  ,   2.385991  , ...,  18.872944  ,
           11.031328  ,   3.6042585 ]],

        [[  0.75658953,   9.879223  ,  15.065918  , ...,  -1.8899477 ,
           -1.3881459 , -11.32643   ],
         [ -4.969639  ,  11.078127  ,  13.252606  , ...,  -7.859786  ,
           -4.2282224 , -11.686355  ],
         [ -5.323691  ,   6.043412  ,   7.669101  , ..., -19.992092  ,
          -13.061171  ,  -9.742441  ],
         ...,
         [  5.896699  ,   4.805041  ,  -5.98671   , ...,   5.682988  ,
            2.955723  ,  -5.0657067 ],
         [ -0.62321186,  -3.5028672 ,  -9.493436  , ...,  14.551567  ,
            1.3794954 ,  -0.21426362],
         [  7.3562703 ,   3.647664  ,   2.385991  , ...,  18.872944  ,
           11.031328  ,   3.6042585 ]],

        [[  0.75658953,   9.879223  ,  15.065918  , ...,  -1.8899477 ,
           -1.3881459 , -11.32643   ],
         [ -4.969639  ,  11.078127  ,  13.252606  , ...,  -7.859786  ,
           -4.2282224 , -11.686355  ],
         [ -5.323691  ,   6.043412  ,   7.669101  , ..., -19.992092  ,
          -13.061171  ,  -9.742441  ],
         ...,
         [  5.896699  ,   4.805041  ,  -5.98671   , ...,   5.682988  ,
            2.955723  ,  -5.0657067 ],
         [ -0.62321186,  -3.5028672 ,  -9.493436  , ...,  14.551567  ,
            1.3794954 ,  -0.21426362],
         [  7.3562703 ,   3.647664  ,   2.385991  , ...,  18.872944  ,
           11.031328  ,   3.6042585 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [0], 'to': [5]}
ms node:
{'name': 'conv2d', 'output': array([[[[ -1.0114453 ,   8.013494  ,   8.042919  , ...,   6.2219415 ,
            2.0719657 ,  -2.1847112 ],
         [  1.4287269 ,   7.951354  ,   3.2904584 , ...,  -5.3279915 ,
           -0.16424271,  -4.0679493 ],
         [ -2.602089  ,   1.7068429 ,   4.308675  , ..., -23.16438   ,
           -7.8928785 ,  -7.1410465 ],
         ...,
         [ -2.7626252 ,  -0.4742396 ,  -4.7371087 , ...,   2.8821201 ,
           -5.090396  , -10.984834  ],
         [ -1.0126321 ,  -1.3621682 ,  -8.085241  , ...,  19.81232   ,
            2.883798  ,  -3.2633543 ],
         [ -4.914213  ,  -4.240664  ,  -9.974653  , ...,  16.227468  ,
            4.214614  ,   1.7334638 ]],

        [[ -1.0114453 ,   8.013494  ,   8.042919  , ...,   6.2219415 ,
            2.0719657 ,  -2.1847112 ],
         [  1.4287269 ,   7.951354  ,   3.2904584 , ...,  -5.3279915 ,
           -0.16424271,  -4.0679493 ],
         [ -2.602089  ,   1.7068429 ,   4.308675  , ..., -23.16438   ,
           -7.8928785 ,  -7.1410465 ],
         ...,
         [ -2.7626252 ,  -0.4742396 ,  -4.7371087 , ...,   2.8821201 ,
           -5.090396  , -10.984834  ],
         [ -1.0126321 ,  -1.3621682 ,  -8.085241  , ...,  19.81232   ,
            2.883798  ,  -3.2633543 ],
         [ -4.914213  ,  -4.240664  ,  -9.974653  , ...,  16.227468  ,
            4.214614  ,   1.7334638 ]],

        [[ -1.0114453 ,   8.013494  ,   8.042919  , ...,   6.2219415 ,
            2.0719657 ,  -2.1847112 ],
         [  1.4287269 ,   7.951354  ,   3.2904584 , ...,  -5.3279915 ,
           -0.16424271,  -4.0679493 ],
         [ -2.602089  ,   1.7068429 ,   4.308675  , ..., -23.16438   ,
           -7.8928785 ,  -7.1410465 ],
         ...,
         [ -2.7626252 ,  -0.4742396 ,  -4.7371087 , ...,   2.8821201 ,
           -5.090396  , -10.984834  ],
         [ -1.0126321 ,  -1.3621682 ,  -8.085241  , ...,  19.81232   ,
            2.883798  ,  -3.2633543 ],
         [ -4.914213  ,  -4.240664  ,  -9.974653  , ...,  16.227468  ,
            4.214614  ,   1.7334638 ]],

        ...,

        [[ -1.0114453 ,   8.013494  ,   8.042919  , ...,   6.2219415 ,
            2.0719657 ,  -2.1847112 ],
         [  1.4287269 ,   7.951354  ,   3.2904584 , ...,  -5.3279915 ,
           -0.16424271,  -4.0679493 ],
         [ -2.602089  ,   1.7068429 ,   4.308675  , ..., -23.16438   ,
           -7.8928785 ,  -7.1410465 ],
         ...,
         [ -2.7626252 ,  -0.4742396 ,  -4.7371087 , ...,   2.8821201 ,
           -5.090396  , -10.984834  ],
         [ -1.0126321 ,  -1.3621682 ,  -8.085241  , ...,  19.81232   ,
            2.883798  ,  -3.2633543 ],
         [ -4.914213  ,  -4.240664  ,  -9.974653  , ...,  16.227468  ,
            4.214614  ,   1.7334638 ]],

        [[ -1.0114453 ,   8.013494  ,   8.042919  , ...,   6.2219415 ,
            2.0719657 ,  -2.1847112 ],
         [  1.4287269 ,   7.951354  ,   3.2904584 , ...,  -5.3279915 ,
           -0.16424271,  -4.0679493 ],
         [ -2.602089  ,   1.7068429 ,   4.308675  , ..., -23.16438   ,
           -7.8928785 ,  -7.1410465 ],
         ...,
         [ -2.7626252 ,  -0.4742396 ,  -4.7371087 , ...,   2.8821201 ,
           -5.090396  , -10.984834  ],
         [ -1.0126321 ,  -1.3621682 ,  -8.085241  , ...,  19.81232   ,
            2.883798  ,  -3.2633543 ],
         [ -4.914213  ,  -4.240664  ,  -9.974653  , ...,  16.227468  ,
            4.214614  ,   1.7334638 ]],

        [[ -1.0114453 ,   8.013494  ,   8.042919  , ...,   6.2219415 ,
            2.0719657 ,  -2.1847112 ],
         [  1.4287269 ,   7.951354  ,   3.2904584 , ...,  -5.3279915 ,
           -0.16424271,  -4.0679493 ],
         [ -2.602089  ,   1.7068429 ,   4.308675  , ..., -23.16438   ,
           -7.8928785 ,  -7.1410465 ],
         ...,
         [ -2.7626252 ,  -0.4742396 ,  -4.7371087 , ...,   2.8821201 ,
           -5.090396  , -10.984834  ],
         [ -1.0126321 ,  -1.3621682 ,  -8.085241  , ...,  19.81232   ,
            2.883798  ,  -3.2633543 ],
         [ -4.914213  ,  -4.240664  ,  -9.974653  , ...,  16.227468  ,
            4.214614  ,   1.7334638 ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [0], 'to': [5]}
torch node:
{'name': 'conv2d', 'output': array([[[[ -1.0114455 ,   8.013494  ,   8.042918  , ...,   6.221942  ,
            2.0719655 ,  -2.1847093 ],
         [  1.4287268 ,   7.9513526 ,   3.2904568 , ...,  -5.3279915 ,
           -0.16424274,  -4.067949  ],
         [ -2.602088  ,   1.7068467 ,   4.3086767 , ..., -23.164383  ,
           -7.8928766 ,  -7.1410446 ],
         ...,
         [ -2.762625  ,  -0.47423863,  -4.7371097 , ...,   2.8821197 ,
           -5.0903974 , -10.984829  ],
         [ -1.0126332 ,  -1.3621693 ,  -8.085245  , ...,  19.812323  ,
            2.8837996 ,  -3.2633567 ],
         [ -4.9142137 ,  -4.240666  ,  -9.974649  , ...,  16.22747   ,
            4.214615  ,   1.7334635 ]],

        [[ -1.0114455 ,   8.013494  ,   8.042918  , ...,   6.221942  ,
            2.0719655 ,  -2.1847093 ],
         [  1.4287268 ,   7.9513526 ,   3.2904568 , ...,  -5.3279915 ,
           -0.16424274,  -4.067949  ],
         [ -2.602088  ,   1.7068467 ,   4.3086767 , ..., -23.164383  ,
           -7.8928766 ,  -7.1410446 ],
         ...,
         [ -2.762625  ,  -0.47423863,  -4.7371097 , ...,   2.8821197 ,
           -5.0903974 , -10.984829  ],
         [ -1.0126332 ,  -1.3621693 ,  -8.085245  , ...,  19.812323  ,
            2.8837996 ,  -3.2633567 ],
         [ -4.9142137 ,  -4.240666  ,  -9.974649  , ...,  16.22747   ,
            4.214615  ,   1.7334635 ]],

        [[ -1.0114455 ,   8.013494  ,   8.042918  , ...,   6.221942  ,
            2.0719655 ,  -2.1847093 ],
         [  1.4287268 ,   7.9513526 ,   3.2904568 , ...,  -5.3279915 ,
           -0.16424274,  -4.067949  ],
         [ -2.602088  ,   1.7068467 ,   4.3086767 , ..., -23.164383  ,
           -7.8928766 ,  -7.1410446 ],
         ...,
         [ -2.762625  ,  -0.47423863,  -4.7371097 , ...,   2.8821197 ,
           -5.0903974 , -10.984829  ],
         [ -1.0126332 ,  -1.3621693 ,  -8.085245  , ...,  19.812323  ,
            2.8837996 ,  -3.2633567 ],
         [ -4.9142137 ,  -4.240666  ,  -9.974649  , ...,  16.22747   ,
            4.214615  ,   1.7334635 ]],

        ...,

        [[ -1.0114455 ,   8.013494  ,   8.042918  , ...,   6.221942  ,
            2.0719655 ,  -2.1847093 ],
         [  1.4287268 ,   7.9513526 ,   3.2904568 , ...,  -5.3279915 ,
           -0.16424274,  -4.067949  ],
         [ -2.602088  ,   1.7068467 ,   4.3086767 , ..., -23.164383  ,
           -7.8928766 ,  -7.1410446 ],
         ...,
         [ -2.762625  ,  -0.47423863,  -4.7371097 , ...,   2.8821197 ,
           -5.0903974 , -10.984829  ],
         [ -1.0126332 ,  -1.3621693 ,  -8.085245  , ...,  19.812323  ,
            2.8837996 ,  -3.2633567 ],
         [ -4.9142137 ,  -4.240666  ,  -9.974649  , ...,  16.22747   ,
            4.214615  ,   1.7334635 ]],

        [[ -1.0114455 ,   8.013494  ,   8.042918  , ...,   6.221942  ,
            2.0719655 ,  -2.1847093 ],
         [  1.4287268 ,   7.9513526 ,   3.2904568 , ...,  -5.3279915 ,
           -0.16424274,  -4.067949  ],
         [ -2.602088  ,   1.7068467 ,   4.3086767 , ..., -23.164383  ,
           -7.8928766 ,  -7.1410446 ],
         ...,
         [ -2.762625  ,  -0.47423863,  -4.7371097 , ...,   2.8821197 ,
           -5.0903974 , -10.984829  ],
         [ -1.0126332 ,  -1.3621693 ,  -8.085245  , ...,  19.812323  ,
            2.8837996 ,  -3.2633567 ],
         [ -4.9142137 ,  -4.240666  ,  -9.974649  , ...,  16.22747   ,
            4.214615  ,   1.7334635 ]],

        [[ -1.0114455 ,   8.013494  ,   8.042918  , ...,   6.221942  ,
            2.0719655 ,  -2.1847093 ],
         [  1.4287268 ,   7.9513526 ,   3.2904568 , ...,  -5.3279915 ,
           -0.16424274,  -4.067949  ],
         [ -2.602088  ,   1.7068467 ,   4.3086767 , ..., -23.164383  ,
           -7.8928766 ,  -7.1410446 ],
         ...,
         [ -2.762625  ,  -0.47423863,  -4.7371097 , ...,   2.8821197 ,
           -5.0903974 , -10.984829  ],
         [ -1.0126332 ,  -1.3621693 ,  -8.085245  , ...,  19.812323  ,
            2.8837996 ,  -3.2633567 ],
         [ -4.9142137 ,  -4.240666  ,  -9.974649  , ...,  16.22747   ,
            4.214615  ,   1.7334635 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [0], 'to': [5]}

generate models:5

analyse output arrays in iter:8

pre layer res:
11:transpose
{'name': 'transpose', 'output': array([[[[-1.03042030e+00, -1.37750134e-02,  4.23799098e-01, ...,
          -6.62658632e-01,  1.41091749e-01,  6.76435381e-02],
         [ 1.45687294e+00,  1.92949069e+00, -7.63842762e-01, ...,
           6.27209306e-01, -7.84722567e-01,  5.29218554e-01],
         [-1.35782087e+00, -2.35225654e+00, -5.48047125e-01, ...,
           1.20693274e-01, -8.68178964e-01, -1.55979348e-03],
         ...,
         [-9.96789813e-01, -4.24210250e-01,  5.52300930e-01, ...,
          -8.47448230e-01, -6.99421763e-01, -8.97948444e-01],
         [ 1.71839166e+00, -2.30200124e+00,  1.71129599e-01, ...,
          -6.54272214e-02, -3.42392027e-01,  7.90163457e-01],
         [ 3.04410875e-01,  2.53401220e-01, -1.50301301e+00, ...,
          -1.09955525e+00,  7.11227238e-01, -8.86520624e-01]],

        [[-1.39443731e+00,  9.12835777e-01, -1.05194914e+00, ...,
           8.18892360e-01,  5.06424844e-01, -1.85070261e-01],
         [ 1.39869861e-02,  1.59909236e+00, -1.87063232e-01, ...,
          -6.66347921e-01, -5.77975214e-01, -8.95524383e-01],
         [-1.82428324e+00, -1.14258438e-01,  3.28489810e-01, ...,
          -4.73145038e-01,  1.15019405e+00,  5.59941381e-02],
         ...,
         [-8.10323834e-01, -8.25371206e-01, -5.62101424e-01, ...,
          -4.50571775e-01, -6.67223513e-01, -1.77846920e+00],
         [-1.46005642e+00,  6.03386521e-01, -4.29495759e-02, ...,
          -5.86066544e-01, -1.66639757e+00, -1.33220327e+00],
         [-2.72130948e-02,  6.40459061e-01,  1.57732412e-01, ...,
          -2.80800521e-01,  1.58213988e-01, -1.49272895e+00]],

        [[ 8.33618879e-01, -1.15622789e-01,  7.81962499e-02, ...,
           1.39363325e+00, -2.10392070e+00, -1.10702300e+00],
         [-1.18522918e+00,  3.05034429e-01,  3.44228119e-01, ...,
          -2.50007415e+00, -5.27557909e-01, -1.37198544e+00],
         [ 5.76487362e-01,  7.79696107e-01,  1.55963075e+00, ...,
           4.02019434e-02,  1.94971651e-01, -9.98542488e-01],
         ...,
         [-5.41899264e-01, -3.25736493e-01,  6.70695305e-01, ...,
          -1.47474420e+00,  1.60390842e+00,  4.19438303e-01],
         [ 3.38837475e-01, -1.06852376e+00,  2.24222824e-01, ...,
           3.63965124e-01,  8.85546744e-01, -6.94914520e-01],
         [-4.46380943e-01, -5.63588560e-01,  1.67883456e+00, ...,
           5.95569253e-01,  8.09558749e-01, -1.67750525e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[ -6.508867 , -12.616285 ,  -9.319956 , ...,   6.8585544,
           -3.9063206, -12.513539 ],
         [ -4.3915753, -10.227008 ,   2.5825815, ...,  -4.168407 ,
          -14.050986 , -16.68563  ],
         [-12.016736 , -21.400131 ,  -0.3776239, ...,  -8.714637 ,
          -11.939316 ,  -8.11521  ],
         ...,
         [-15.48118  , -16.800362 ,  -9.186131 , ...,   3.528326 ,
            6.0468063,   3.1742716],
         [ -3.7690322,  -4.773207 ,  -9.163643 , ...,  -4.5162535,
           -9.550273 ,  -5.771779 ],
         [ -5.1559334,  -5.0069966,  -4.0481305, ...,  -9.822877 ,
          -15.133731 ,  -5.2744436]],

        [[ -6.508867 , -12.616285 ,  -9.319956 , ...,   6.8585544,
           -3.9063206, -12.513539 ],
         [ -4.3915753, -10.227008 ,   2.5825815, ...,  -4.168407 ,
          -14.050986 , -16.68563  ],
         [-12.016736 , -21.400131 ,  -0.3776239, ...,  -8.714637 ,
          -11.939316 ,  -8.11521  ],
         ...,
         [-15.48118  , -16.800362 ,  -9.186131 , ...,   3.528326 ,
            6.0468063,   3.1742716],
         [ -3.7690322,  -4.773207 ,  -9.163643 , ...,  -4.5162535,
           -9.550273 ,  -5.771779 ],
         [ -5.1559334,  -5.0069966,  -4.0481305, ...,  -9.822877 ,
          -15.133731 ,  -5.2744436]],

        [[ -6.508867 , -12.616285 ,  -9.319956 , ...,   6.8585544,
           -3.9063206, -12.513539 ],
         [ -4.3915753, -10.227008 ,   2.5825815, ...,  -4.168407 ,
          -14.050986 , -16.68563  ],
         [-12.016736 , -21.400131 ,  -0.3776239, ...,  -8.714637 ,
          -11.939316 ,  -8.11521  ],
         ...,
         [-15.48118  , -16.800362 ,  -9.186131 , ...,   3.528326 ,
            6.0468063,   3.1742716],
         [ -3.7690322,  -4.773207 ,  -9.163643 , ...,  -4.5162535,
           -9.550273 ,  -5.771779 ],
         [ -5.1559334,  -5.0069966,  -4.0481305, ...,  -9.822877 ,
          -15.133731 ,  -5.2744436]],

        ...,

        [[ -6.508867 , -12.616285 ,  -9.319956 , ...,   6.8585544,
           -3.9063206, -12.513539 ],
         [ -4.3915753, -10.227008 ,   2.5825815, ...,  -4.168407 ,
          -14.050986 , -16.68563  ],
         [-12.016736 , -21.400131 ,  -0.3776239, ...,  -8.714637 ,
          -11.939316 ,  -8.11521  ],
         ...,
         [-15.48118  , -16.800362 ,  -9.186131 , ...,   3.528326 ,
            6.0468063,   3.1742716],
         [ -3.7690322,  -4.773207 ,  -9.163643 , ...,  -4.5162535,
           -9.550273 ,  -5.771779 ],
         [ -5.1559334,  -5.0069966,  -4.0481305, ...,  -9.822877 ,
          -15.133731 ,  -5.2744436]],

        [[ -6.508867 , -12.616285 ,  -9.319956 , ...,   6.8585544,
           -3.9063206, -12.513539 ],
         [ -4.3915753, -10.227008 ,   2.5825815, ...,  -4.168407 ,
          -14.050986 , -16.68563  ],
         [-12.016736 , -21.400131 ,  -0.3776239, ...,  -8.714637 ,
          -11.939316 ,  -8.11521  ],
         ...,
         [-15.48118  , -16.800362 ,  -9.186131 , ...,   3.528326 ,
            6.0468063,   3.1742716],
         [ -3.7690322,  -4.773207 ,  -9.163643 , ...,  -4.5162535,
           -9.550273 ,  -5.771779 ],
         [ -5.1559334,  -5.0069966,  -4.0481305, ...,  -9.822877 ,
          -15.133731 ,  -5.2744436]],

        [[ -6.508867 , -12.616285 ,  -9.319956 , ...,   6.8585544,
           -3.9063206, -12.513539 ],
         [ -4.3915753, -10.227008 ,   2.5825815, ...,  -4.168407 ,
          -14.050986 , -16.68563  ],
         [-12.016736 , -21.400131 ,  -0.3776239, ...,  -8.714637 ,
          -11.939316 ,  -8.11521  ],
         ...,
         [-15.48118  , -16.800362 ,  -9.186131 , ...,   3.528326 ,
            6.0468063,   3.1742716],
         [ -3.7690322,  -4.773207 ,  -9.163643 , ...,  -4.5162535,
           -9.550273 ,  -5.771779 ],
         [ -5.1559334,  -5.0069966,  -4.0481305, ...,  -9.822877 ,
          -15.133731 ,  -5.2744436]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [11], 'to': [2, 16]}
ms node:
{'name': 'conv2d', 'output': array([[[[ -4.980938 ,  -7.0658064,  -4.1337023, ...,  15.046147 ,
           -1.1545757,  -5.9476404],
         [-12.19138  , -10.917193 ,  -5.85172  , ...,   3.145822 ,
           -9.682221 , -14.209032 ],
         [ -8.120934 ,  -6.9669027,   4.3425455, ...,  -7.334857 ,
          -12.069003 , -10.304085 ],
         ...,
         [-14.092207 , -14.430688 , -14.203111 , ...,   4.900686 ,
           16.165743 ,   9.283115 ],
         [-15.426622 , -14.863729 ,  -9.614707 , ..., -10.086367 ,
           -2.7930691,  -0.8614868],
         [ -9.821002 ,  -3.1023295,  -1.7566452, ..., -13.383312 ,
          -12.602813 ,  -8.036154 ]],

        [[ -4.980938 ,  -7.0658064,  -4.1337023, ...,  15.046147 ,
           -1.1545757,  -5.9476404],
         [-12.19138  , -10.917193 ,  -5.85172  , ...,   3.145822 ,
           -9.682221 , -14.209032 ],
         [ -8.120934 ,  -6.9669027,   4.3425455, ...,  -7.334857 ,
          -12.069003 , -10.304085 ],
         ...,
         [-14.092207 , -14.430688 , -14.203111 , ...,   4.900686 ,
           16.165743 ,   9.283115 ],
         [-15.426622 , -14.863729 ,  -9.614707 , ..., -10.086367 ,
           -2.7930691,  -0.8614868],
         [ -9.821002 ,  -3.1023295,  -1.7566452, ..., -13.383312 ,
          -12.602813 ,  -8.036154 ]],

        [[ -4.980938 ,  -7.0658064,  -4.1337023, ...,  15.046147 ,
           -1.1545757,  -5.9476404],
         [-12.19138  , -10.917193 ,  -5.85172  , ...,   3.145822 ,
           -9.682221 , -14.209032 ],
         [ -8.120934 ,  -6.9669027,   4.3425455, ...,  -7.334857 ,
          -12.069003 , -10.304085 ],
         ...,
         [-14.092207 , -14.430688 , -14.203111 , ...,   4.900686 ,
           16.165743 ,   9.283115 ],
         [-15.426622 , -14.863729 ,  -9.614707 , ..., -10.086367 ,
           -2.7930691,  -0.8614868],
         [ -9.821002 ,  -3.1023295,  -1.7566452, ..., -13.383312 ,
          -12.602813 ,  -8.036154 ]],

        ...,

        [[ -4.980938 ,  -7.0658064,  -4.1337023, ...,  15.046147 ,
           -1.1545757,  -5.9476404],
         [-12.19138  , -10.917193 ,  -5.85172  , ...,   3.145822 ,
           -9.682221 , -14.209032 ],
         [ -8.120934 ,  -6.9669027,   4.3425455, ...,  -7.334857 ,
          -12.069003 , -10.304085 ],
         ...,
         [-14.092207 , -14.430688 , -14.203111 , ...,   4.900686 ,
           16.165743 ,   9.283115 ],
         [-15.426622 , -14.863729 ,  -9.614707 , ..., -10.086367 ,
           -2.7930691,  -0.8614868],
         [ -9.821002 ,  -3.1023295,  -1.7566452, ..., -13.383312 ,
          -12.602813 ,  -8.036154 ]],

        [[ -4.980938 ,  -7.0658064,  -4.1337023, ...,  15.046147 ,
           -1.1545757,  -5.9476404],
         [-12.19138  , -10.917193 ,  -5.85172  , ...,   3.145822 ,
           -9.682221 , -14.209032 ],
         [ -8.120934 ,  -6.9669027,   4.3425455, ...,  -7.334857 ,
          -12.069003 , -10.304085 ],
         ...,
         [-14.092207 , -14.430688 , -14.203111 , ...,   4.900686 ,
           16.165743 ,   9.283115 ],
         [-15.426622 , -14.863729 ,  -9.614707 , ..., -10.086367 ,
           -2.7930691,  -0.8614868],
         [ -9.821002 ,  -3.1023295,  -1.7566452, ..., -13.383312 ,
          -12.602813 ,  -8.036154 ]],

        [[ -4.980938 ,  -7.0658064,  -4.1337023, ...,  15.046147 ,
           -1.1545757,  -5.9476404],
         [-12.19138  , -10.917193 ,  -5.85172  , ...,   3.145822 ,
           -9.682221 , -14.209032 ],
         [ -8.120934 ,  -6.9669027,   4.3425455, ...,  -7.334857 ,
          -12.069003 , -10.304085 ],
         ...,
         [-14.092207 , -14.430688 , -14.203111 , ...,   4.900686 ,
           16.165743 ,   9.283115 ],
         [-15.426622 , -14.863729 ,  -9.614707 , ..., -10.086367 ,
           -2.7930691,  -0.8614868],
         [ -9.821002 ,  -3.1023295,  -1.7566452, ..., -13.383312 ,
          -12.602813 ,  -8.036154 ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [11], 'to': [2, 16]}
torch node:
{'name': 'conv2d', 'output': array([[[[ -4.980938  ,  -7.0658064 ,  -4.1337013 , ...,  15.046149  ,
           -1.1545779 ,  -5.94764   ],
         [-12.191379  , -10.917193  ,  -5.851717  , ...,   3.1458232 ,
           -9.682223  , -14.209029  ],
         [ -8.1209345 ,  -6.9669    ,   4.342547  , ...,  -7.334859  ,
          -12.0689945 , -10.304085  ],
         ...,
         [-14.092206  , -14.430677  , -14.203101  , ...,   4.900686  ,
           16.165737  ,   9.283113  ],
         [-15.426623  , -14.863728  ,  -9.614704  , ..., -10.086364  ,
           -2.7930772 ,  -0.86148715],
         [ -9.821002  ,  -3.1023307 ,  -1.7566446 , ..., -13.383313  ,
          -12.602809  ,  -8.036153  ]],

        [[ -4.980938  ,  -7.0658064 ,  -4.1337013 , ...,  15.046149  ,
           -1.1545779 ,  -5.94764   ],
         [-12.191379  , -10.917193  ,  -5.851717  , ...,   3.1458232 ,
           -9.682223  , -14.209029  ],
         [ -8.1209345 ,  -6.9669    ,   4.342547  , ...,  -7.334859  ,
          -12.0689945 , -10.304085  ],
         ...,
         [-14.092206  , -14.430677  , -14.203101  , ...,   4.900686  ,
           16.165737  ,   9.283113  ],
         [-15.426623  , -14.863728  ,  -9.614704  , ..., -10.086364  ,
           -2.7930772 ,  -0.86148715],
         [ -9.821002  ,  -3.1023307 ,  -1.7566446 , ..., -13.383313  ,
          -12.602809  ,  -8.036153  ]],

        [[ -4.980938  ,  -7.0658064 ,  -4.1337013 , ...,  15.046149  ,
           -1.1545779 ,  -5.94764   ],
         [-12.191379  , -10.917193  ,  -5.851717  , ...,   3.1458232 ,
           -9.682223  , -14.209029  ],
         [ -8.1209345 ,  -6.9669    ,   4.342547  , ...,  -7.334859  ,
          -12.0689945 , -10.304085  ],
         ...,
         [-14.092206  , -14.430677  , -14.203101  , ...,   4.900686  ,
           16.165737  ,   9.283113  ],
         [-15.426623  , -14.863728  ,  -9.614704  , ..., -10.086364  ,
           -2.7930772 ,  -0.86148715],
         [ -9.821002  ,  -3.1023307 ,  -1.7566446 , ..., -13.383313  ,
          -12.602809  ,  -8.036153  ]],

        ...,

        [[ -4.980938  ,  -7.0658064 ,  -4.1337013 , ...,  15.046149  ,
           -1.1545779 ,  -5.94764   ],
         [-12.191379  , -10.917193  ,  -5.851717  , ...,   3.1458232 ,
           -9.682223  , -14.209029  ],
         [ -8.1209345 ,  -6.9669    ,   4.342547  , ...,  -7.334859  ,
          -12.0689945 , -10.304085  ],
         ...,
         [-14.092206  , -14.430677  , -14.203101  , ...,   4.900686  ,
           16.165737  ,   9.283113  ],
         [-15.426623  , -14.863728  ,  -9.614704  , ..., -10.086364  ,
           -2.7930772 ,  -0.86148715],
         [ -9.821002  ,  -3.1023307 ,  -1.7566446 , ..., -13.383313  ,
          -12.602809  ,  -8.036153  ]],

        [[ -4.980938  ,  -7.0658064 ,  -4.1337013 , ...,  15.046149  ,
           -1.1545779 ,  -5.94764   ],
         [-12.191379  , -10.917193  ,  -5.851717  , ...,   3.1458232 ,
           -9.682223  , -14.209029  ],
         [ -8.1209345 ,  -6.9669    ,   4.342547  , ...,  -7.334859  ,
          -12.0689945 , -10.304085  ],
         ...,
         [-14.092206  , -14.430677  , -14.203101  , ...,   4.900686  ,
           16.165737  ,   9.283113  ],
         [-15.426623  , -14.863728  ,  -9.614704  , ..., -10.086364  ,
           -2.7930772 ,  -0.86148715],
         [ -9.821002  ,  -3.1023307 ,  -1.7566446 , ..., -13.383313  ,
          -12.602809  ,  -8.036153  ]],

        [[ -4.980938  ,  -7.0658064 ,  -4.1337013 , ...,  15.046149  ,
           -1.1545779 ,  -5.94764   ],
         [-12.191379  , -10.917193  ,  -5.851717  , ...,   3.1458232 ,
           -9.682223  , -14.209029  ],
         [ -8.1209345 ,  -6.9669    ,   4.342547  , ...,  -7.334859  ,
          -12.0689945 , -10.304085  ],
         ...,
         [-14.092206  , -14.430677  , -14.203101  , ...,   4.900686  ,
           16.165737  ,   9.283113  ],
         [-15.426623  , -14.863728  ,  -9.614704  , ..., -10.086364  ,
           -2.7930772 ,  -0.86148715],
         [ -9.821002  ,  -3.1023307 ,  -1.7566446 , ..., -13.383313  ,
          -12.602809  ,  -8.036153  ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [11], 'to': [2, 16]}

generate models:9

analyse output arrays in iter:9

pre layer res:
8:relu
{'name': 'relu', 'output': array([[[[1.5916536 , 0.        , 2.1642983 , ..., 0.2538473 ,
          1.6031777 , 0.        ],
         [0.        , 0.7023529 , 0.82898283, ..., 0.9470087 ,
          0.38855597, 0.        ],
         [0.        , 1.3213545 , 0.        , ..., 0.8533051 ,
          0.6622215 , 0.        ],
         ...,
         [1.8499877 , 0.        , 0.        , ..., 1.4744171 ,
          0.5989361 , 0.        ],
         [1.0284003 , 0.82873046, 1.4960527 , ..., 0.4221037 ,
          0.        , 0.        ],
         [0.        , 1.6134329 , 0.        , ..., 0.        ,
          1.5228096 , 0.        ]],

        [[1.2576237 , 2.8819153 , 0.77156806, ..., 0.        ,
          0.        , 0.        ],
         [1.7368966 , 0.25783637, 0.        , ..., 0.23647034,
          0.557117  , 0.        ],
         [0.09631111, 0.        , 0.        , ..., 1.7905949 ,
          1.6603218 , 0.8941164 ],
         ...,
         [0.        , 1.017688  , 0.        , ..., 0.        ,
          0.3915155 , 0.        ],
         [0.        , 0.        , 0.19471191, ..., 0.42243055,
          0.02302884, 0.6233037 ],
         [0.        , 0.26004004, 0.        , ..., 0.02363159,
          2.5722768 , 1.2187037 ]],

        [[0.        , 0.        , 0.        , ..., 0.16557011,
          0.52684855, 0.36979914],
         [0.        , 0.        , 0.4997345 , ..., 0.79787165,
          1.6401345 , 0.07426043],
         [0.        , 0.        , 0.9356789 , ..., 0.        ,
          1.0106149 , 2.2521951 ],
         ...,
         [0.3883046 , 0.        , 0.        , ..., 0.        ,
          0.62920386, 0.7046068 ],
         [0.        , 0.        , 0.76588595, ..., 0.7451302 ,
          0.        , 0.        ],
         [0.        , 0.        , 0.        , ..., 0.        ,
          0.        , 0.94611144]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [15], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[36.201862, 46.037487, 46.395817, ..., 45.792343, 40.514996,
          26.97502 ],
         [44.141533, 67.75501 , 70.13783 , ..., 59.188686, 52.062675,
          35.58948 ],
         [43.41599 , 67.38957 , 69.30453 , ..., 56.81181 , 49.544777,
          39.423283],
         ...,
         [41.68121 , 56.419514, 52.81629 , ..., 57.568634, 52.767982,
          35.188583],
         [40.072044, 53.62512 , 48.607468, ..., 47.36863 , 44.318787,
          30.360743],
         [28.071857, 37.967564, 36.659042, ..., 29.889328, 25.803032,
          19.591084]],

        [[36.201862, 46.037487, 46.395817, ..., 45.792343, 40.514996,
          26.97502 ],
         [44.141533, 67.75501 , 70.13783 , ..., 59.188686, 52.062675,
          35.58948 ],
         [43.41599 , 67.38957 , 69.30453 , ..., 56.81181 , 49.544777,
          39.423283],
         ...,
         [41.68121 , 56.419514, 52.81629 , ..., 57.568634, 52.767982,
          35.188583],
         [40.072044, 53.62512 , 48.607468, ..., 47.36863 , 44.318787,
          30.360743],
         [28.071857, 37.967564, 36.659042, ..., 29.889328, 25.803032,
          19.591084]],

        [[36.201862, 46.037487, 46.395817, ..., 45.792343, 40.514996,
          26.97502 ],
         [44.141533, 67.75501 , 70.13783 , ..., 59.188686, 52.062675,
          35.58948 ],
         [43.41599 , 67.38957 , 69.30453 , ..., 56.81181 , 49.544777,
          39.423283],
         ...,
         [41.68121 , 56.419514, 52.81629 , ..., 57.568634, 52.767982,
          35.188583],
         [40.072044, 53.62512 , 48.607468, ..., 47.36863 , 44.318787,
          30.360743],
         [28.071857, 37.967564, 36.659042, ..., 29.889328, 25.803032,
          19.591084]],

        ...,

        [[36.201862, 46.037487, 46.395817, ..., 45.792343, 40.514996,
          26.97502 ],
         [44.141533, 67.75501 , 70.13783 , ..., 59.188686, 52.062675,
          35.58948 ],
         [43.41599 , 67.38957 , 69.30453 , ..., 56.81181 , 49.544777,
          39.423283],
         ...,
         [41.68121 , 56.419514, 52.81629 , ..., 57.568634, 52.767982,
          35.188583],
         [40.072044, 53.62512 , 48.607468, ..., 47.36863 , 44.318787,
          30.360743],
         [28.071857, 37.967564, 36.659042, ..., 29.889328, 25.803032,
          19.591084]],

        [[36.201862, 46.037487, 46.395817, ..., 45.792343, 40.514996,
          26.97502 ],
         [44.141533, 67.75501 , 70.13783 , ..., 59.188686, 52.062675,
          35.58948 ],
         [43.41599 , 67.38957 , 69.30453 , ..., 56.81181 , 49.544777,
          39.423283],
         ...,
         [41.68121 , 56.419514, 52.81629 , ..., 57.568634, 52.767982,
          35.188583],
         [40.072044, 53.62512 , 48.607468, ..., 47.36863 , 44.318787,
          30.360743],
         [28.071857, 37.967564, 36.659042, ..., 29.889328, 25.803032,
          19.591084]],

        [[36.201862, 46.037487, 46.395817, ..., 45.792343, 40.514996,
          26.97502 ],
         [44.141533, 67.75501 , 70.13783 , ..., 59.188686, 52.062675,
          35.58948 ],
         [43.41599 , 67.38957 , 69.30453 , ..., 56.81181 , 49.544777,
          39.423283],
         ...,
         [41.68121 , 56.419514, 52.81629 , ..., 57.568634, 52.767982,
          35.188583],
         [40.072044, 53.62512 , 48.607468, ..., 47.36863 , 44.318787,
          30.360743],
         [28.071857, 37.967564, 36.659042, ..., 29.889328, 25.803032,
          19.591084]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [8], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[28.578432, 34.200405, 38.9746  , ..., 35.143402, 40.129383,
          29.408672],
         [36.276306, 50.52669 , 60.294548, ..., 47.64909 , 56.939808,
          43.428307],
         [32.459103, 49.235546, 65.59577 , ..., 51.2476  , 60.125202,
          46.920303],
         ...,
         [38.225277, 53.74798 , 57.857426, ..., 61.056183, 64.77744 ,
          46.56728 ],
         [34.97423 , 55.298634, 57.002953, ..., 55.56152 , 58.010674,
          43.04964 ],
         [25.51121 , 40.010586, 39.96085 , ..., 37.189014, 39.4483  ,
          28.618984]],

        [[28.578432, 34.200405, 38.9746  , ..., 35.143402, 40.129383,
          29.408672],
         [36.276306, 50.52669 , 60.294548, ..., 47.64909 , 56.939808,
          43.428307],
         [32.459103, 49.235546, 65.59577 , ..., 51.2476  , 60.125202,
          46.920303],
         ...,
         [38.225277, 53.74798 , 57.857426, ..., 61.056183, 64.77744 ,
          46.56728 ],
         [34.97423 , 55.298634, 57.002953, ..., 55.56152 , 58.010674,
          43.04964 ],
         [25.51121 , 40.010586, 39.96085 , ..., 37.189014, 39.4483  ,
          28.618984]],

        [[28.578432, 34.200405, 38.9746  , ..., 35.143402, 40.129383,
          29.408672],
         [36.276306, 50.52669 , 60.294548, ..., 47.64909 , 56.939808,
          43.428307],
         [32.459103, 49.235546, 65.59577 , ..., 51.2476  , 60.125202,
          46.920303],
         ...,
         [38.225277, 53.74798 , 57.857426, ..., 61.056183, 64.77744 ,
          46.56728 ],
         [34.97423 , 55.298634, 57.002953, ..., 55.56152 , 58.010674,
          43.04964 ],
         [25.51121 , 40.010586, 39.96085 , ..., 37.189014, 39.4483  ,
          28.618984]],

        ...,

        [[28.578432, 34.200405, 38.9746  , ..., 35.143402, 40.129383,
          29.408672],
         [36.276306, 50.52669 , 60.294548, ..., 47.64909 , 56.939808,
          43.428307],
         [32.459103, 49.235546, 65.59577 , ..., 51.2476  , 60.125202,
          46.920303],
         ...,
         [38.225277, 53.74798 , 57.857426, ..., 61.056183, 64.77744 ,
          46.56728 ],
         [34.97423 , 55.298634, 57.002953, ..., 55.56152 , 58.010674,
          43.04964 ],
         [25.51121 , 40.010586, 39.96085 , ..., 37.189014, 39.4483  ,
          28.618984]],

        [[28.578432, 34.200405, 38.9746  , ..., 35.143402, 40.129383,
          29.408672],
         [36.276306, 50.52669 , 60.294548, ..., 47.64909 , 56.939808,
          43.428307],
         [32.459103, 49.235546, 65.59577 , ..., 51.2476  , 60.125202,
          46.920303],
         ...,
         [38.225277, 53.74798 , 57.857426, ..., 61.056183, 64.77744 ,
          46.56728 ],
         [34.97423 , 55.298634, 57.002953, ..., 55.56152 , 58.010674,
          43.04964 ],
         [25.51121 , 40.010586, 39.96085 , ..., 37.189014, 39.4483  ,
          28.618984]],

        [[28.578432, 34.200405, 38.9746  , ..., 35.143402, 40.129383,
          29.408672],
         [36.276306, 50.52669 , 60.294548, ..., 47.64909 , 56.939808,
          43.428307],
         [32.459103, 49.235546, 65.59577 , ..., 51.2476  , 60.125202,
          46.920303],
         ...,
         [38.225277, 53.74798 , 57.857426, ..., 61.056183, 64.77744 ,
          46.56728 ],
         [34.97423 , 55.298634, 57.002953, ..., 55.56152 , 58.010674,
          43.04964 ],
         [25.51121 , 40.010586, 39.96085 , ..., 37.189014, 39.4483  ,
          28.618984]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [8], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[28.57843 , 34.200405, 38.9746  , ..., 35.14341 , 40.129383,
          29.40867 ],
         [36.27631 , 50.526695, 60.29456 , ..., 47.649105, 56.93982 ,
          43.428307],
         [32.4591  , 49.23555 , 65.59578 , ..., 51.247612, 60.125217,
          46.920307],
         ...,
         [38.225266, 53.74798 , 57.857433, ..., 61.056187, 64.77745 ,
          46.567287],
         [34.974228, 55.29863 , 57.002956, ..., 55.561523, 58.010685,
          43.04965 ],
         [25.51121 , 40.010582, 39.96085 , ..., 37.18901 , 39.448303,
          28.618982]],

        [[28.57843 , 34.200405, 38.9746  , ..., 35.14341 , 40.129383,
          29.40867 ],
         [36.27631 , 50.526695, 60.29456 , ..., 47.649105, 56.93982 ,
          43.428307],
         [32.4591  , 49.23555 , 65.59578 , ..., 51.247612, 60.125217,
          46.920307],
         ...,
         [38.225266, 53.74798 , 57.857433, ..., 61.056187, 64.77745 ,
          46.567287],
         [34.974228, 55.29863 , 57.002956, ..., 55.561523, 58.010685,
          43.04965 ],
         [25.51121 , 40.010582, 39.96085 , ..., 37.18901 , 39.448303,
          28.618982]],

        [[28.57843 , 34.200405, 38.9746  , ..., 35.14341 , 40.129383,
          29.40867 ],
         [36.27631 , 50.526695, 60.29456 , ..., 47.649105, 56.93982 ,
          43.428307],
         [32.4591  , 49.23555 , 65.59578 , ..., 51.247612, 60.125217,
          46.920307],
         ...,
         [38.225266, 53.74798 , 57.857433, ..., 61.056187, 64.77745 ,
          46.567287],
         [34.974228, 55.29863 , 57.002956, ..., 55.561523, 58.010685,
          43.04965 ],
         [25.51121 , 40.010582, 39.96085 , ..., 37.18901 , 39.448303,
          28.618982]],

        ...,

        [[28.57843 , 34.200405, 38.9746  , ..., 35.14341 , 40.129383,
          29.40867 ],
         [36.27631 , 50.526695, 60.29456 , ..., 47.649105, 56.93982 ,
          43.428307],
         [32.4591  , 49.23555 , 65.59578 , ..., 51.247612, 60.125217,
          46.920307],
         ...,
         [38.225266, 53.74798 , 57.857433, ..., 61.056187, 64.77745 ,
          46.567287],
         [34.974228, 55.29863 , 57.002956, ..., 55.561523, 58.010685,
          43.04965 ],
         [25.51121 , 40.010582, 39.96085 , ..., 37.18901 , 39.448303,
          28.618982]],

        [[28.57843 , 34.200405, 38.9746  , ..., 35.14341 , 40.129383,
          29.40867 ],
         [36.27631 , 50.526695, 60.29456 , ..., 47.649105, 56.93982 ,
          43.428307],
         [32.4591  , 49.23555 , 65.59578 , ..., 51.247612, 60.125217,
          46.920307],
         ...,
         [38.225266, 53.74798 , 57.857433, ..., 61.056187, 64.77745 ,
          46.567287],
         [34.974228, 55.29863 , 57.002956, ..., 55.561523, 58.010685,
          43.04965 ],
         [25.51121 , 40.010582, 39.96085 , ..., 37.18901 , 39.448303,
          28.618982]],

        [[28.57843 , 34.200405, 38.9746  , ..., 35.14341 , 40.129383,
          29.40867 ],
         [36.27631 , 50.526695, 60.29456 , ..., 47.649105, 56.93982 ,
          43.428307],
         [32.4591  , 49.23555 , 65.59578 , ..., 51.247612, 60.125217,
          46.920307],
         ...,
         [38.225266, 53.74798 , 57.857433, ..., 61.056187, 64.77745 ,
          46.567287],
         [34.974228, 55.29863 , 57.002956, ..., 55.561523, 58.010685,
          43.04965 ],
         [25.51121 , 40.010582, 39.96085 , ..., 37.18901 , 39.448303,
          28.618982]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [8], 'to': [2]}

generate models:10

final statics:
total operators:28
tensorflow --> nums:5,distinct_bugs:1
mindspore --> nums:0,distinct_bugs:0
torch --> nums:0,distinct_bugs:0
tensorflow --> 
conv2d:5
mindspore --> 
torch --> 

generate models:10

analyse output arrays in iter:11

pre layer res:
13:relu
{'name': 'relu', 'output': array([[[[1.0056365e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 1.0801791e+00],
         [0.0000000e+00, 7.8634906e-01, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 7.8020471e-01],
         [2.0712358e-03, 0.0000000e+00, 2.3437691e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 4.0206519e-01, ...,
          4.9707824e-01, 0.0000000e+00, 1.5066104e+00],
         [1.5964661e+00, 1.3392326e-01, 9.8677224e-01, ...,
          2.5216374e-01, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 1.6057409e-01, 1.4444630e-01, ...,
          0.0000000e+00, 2.0483425e+00, 8.1764132e-01]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 1.8870478e+00, 0.0000000e+00],
         [1.2813565e+00, 1.4264436e+00, 0.0000000e+00, ...,
          6.1639428e-01, 9.5192581e-01, 0.0000000e+00],
         [0.0000000e+00, 7.6502413e-01, 0.0000000e+00, ...,
          0.0000000e+00, 4.0334231e-01, 0.0000000e+00],
         ...,
         [0.0000000e+00, 5.2434969e-01, 2.9848361e-01, ...,
          0.0000000e+00, 1.1064941e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 9.6794569e-01, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 1.3982326e+00, ...,
          1.4529783e+00, 8.2776600e-01, 2.6218516e-01]],

        [[0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 2.3613437e-01, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [8.2988665e-02, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 1.1529357e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 8.5195231e-01, 1.0726402e-01, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 2.1622854e-01, 0.0000000e+00, ...,
          2.6155140e+00, 0.0000000e+00, 2.3363118e-01],
         [6.7831981e-01, 0.0000000e+00, 1.0447763e+00, ...,
          1.8350363e+00, 6.4910078e-01, 0.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[35.462967, 52.926796, 49.523014, ..., 36.97331 , 29.171991,
          17.02756 ],
         [44.3637  , 65.6017  , 59.709007, ..., 49.289146, 38.081966,
          23.41206 ],
         [43.47374 , 60.463715, 55.562668, ..., 53.398457, 44.36576 ,
          29.173407],
         ...,
         [33.788586, 56.732807, 53.050503, ..., 51.166645, 46.956398,
          31.69668 ],
         [34.735313, 59.40816 , 58.624157, ..., 53.608715, 45.62963 ,
          32.102898],
         [21.613699, 41.45094 , 44.10226 , ..., 36.131107, 30.426125,
          21.989014]],

        [[35.462967, 52.926796, 49.523014, ..., 36.97331 , 29.171991,
          17.02756 ],
         [44.3637  , 65.6017  , 59.709007, ..., 49.289146, 38.081966,
          23.41206 ],
         [43.47374 , 60.463715, 55.562668, ..., 53.398457, 44.36576 ,
          29.173407],
         ...,
         [33.788586, 56.732807, 53.050503, ..., 51.166645, 46.956398,
          31.69668 ],
         [34.735313, 59.40816 , 58.624157, ..., 53.608715, 45.62963 ,
          32.102898],
         [21.613699, 41.45094 , 44.10226 , ..., 36.131107, 30.426125,
          21.989014]],

        [[35.462967, 52.926796, 49.523014, ..., 36.97331 , 29.171991,
          17.02756 ],
         [44.3637  , 65.6017  , 59.709007, ..., 49.289146, 38.081966,
          23.41206 ],
         [43.47374 , 60.463715, 55.562668, ..., 53.398457, 44.36576 ,
          29.173407],
         ...,
         [33.788586, 56.732807, 53.050503, ..., 51.166645, 46.956398,
          31.69668 ],
         [34.735313, 59.40816 , 58.624157, ..., 53.608715, 45.62963 ,
          32.102898],
         [21.613699, 41.45094 , 44.10226 , ..., 36.131107, 30.426125,
          21.989014]],

        ...,

        [[35.462967, 52.926796, 49.523014, ..., 36.97331 , 29.171991,
          17.02756 ],
         [44.3637  , 65.6017  , 59.709007, ..., 49.289146, 38.081966,
          23.41206 ],
         [43.47374 , 60.463715, 55.562668, ..., 53.398457, 44.36576 ,
          29.173407],
         ...,
         [33.788586, 56.732807, 53.050503, ..., 51.166645, 46.956398,
          31.69668 ],
         [34.735313, 59.40816 , 58.624157, ..., 53.608715, 45.62963 ,
          32.102898],
         [21.613699, 41.45094 , 44.10226 , ..., 36.131107, 30.426125,
          21.989014]],

        [[35.462967, 52.926796, 49.523014, ..., 36.97331 , 29.171991,
          17.02756 ],
         [44.3637  , 65.6017  , 59.709007, ..., 49.289146, 38.081966,
          23.41206 ],
         [43.47374 , 60.463715, 55.562668, ..., 53.398457, 44.36576 ,
          29.173407],
         ...,
         [33.788586, 56.732807, 53.050503, ..., 51.166645, 46.956398,
          31.69668 ],
         [34.735313, 59.40816 , 58.624157, ..., 53.608715, 45.62963 ,
          32.102898],
         [21.613699, 41.45094 , 44.10226 , ..., 36.131107, 30.426125,
          21.989014]],

        [[35.462967, 52.926796, 49.523014, ..., 36.97331 , 29.171991,
          17.02756 ],
         [44.3637  , 65.6017  , 59.709007, ..., 49.289146, 38.081966,
          23.41206 ],
         [43.47374 , 60.463715, 55.562668, ..., 53.398457, 44.36576 ,
          29.173407],
         ...,
         [33.788586, 56.732807, 53.050503, ..., 51.166645, 46.956398,
          31.69668 ],
         [34.735313, 59.40816 , 58.624157, ..., 53.608715, 45.62963 ,
          32.102898],
         [21.613699, 41.45094 , 44.10226 , ..., 36.131107, 30.426125,
          21.989014]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [13], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[16.141613, 31.264128, 41.144302, ..., 29.145798, 29.143097,
          16.93112 ],
         [26.013693, 46.443096, 56.65393 , ..., 44.204014, 43.556644,
          26.982706],
         [33.750965, 54.27474 , 63.203594, ..., 48.75062 , 45.265453,
          33.149647],
         ...,
         [31.713015, 45.23117 , 54.53883 , ..., 49.505394, 54.494934,
          39.099106],
         [30.442802, 47.72803 , 65.269806, ..., 61.69687 , 61.173485,
          42.362137],
         [25.617569, 38.078068, 54.193077, ..., 45.44001 , 47.468918,
          32.373276]],

        [[16.141613, 31.264128, 41.144302, ..., 29.145798, 29.143097,
          16.93112 ],
         [26.013693, 46.443096, 56.65393 , ..., 44.204014, 43.556644,
          26.982706],
         [33.750965, 54.27474 , 63.203594, ..., 48.75062 , 45.265453,
          33.149647],
         ...,
         [31.713015, 45.23117 , 54.53883 , ..., 49.505394, 54.494934,
          39.099106],
         [30.442802, 47.72803 , 65.269806, ..., 61.69687 , 61.173485,
          42.362137],
         [25.617569, 38.078068, 54.193077, ..., 45.44001 , 47.468918,
          32.373276]],

        [[16.141613, 31.264128, 41.144302, ..., 29.145798, 29.143097,
          16.93112 ],
         [26.013693, 46.443096, 56.65393 , ..., 44.204014, 43.556644,
          26.982706],
         [33.750965, 54.27474 , 63.203594, ..., 48.75062 , 45.265453,
          33.149647],
         ...,
         [31.713015, 45.23117 , 54.53883 , ..., 49.505394, 54.494934,
          39.099106],
         [30.442802, 47.72803 , 65.269806, ..., 61.69687 , 61.173485,
          42.362137],
         [25.617569, 38.078068, 54.193077, ..., 45.44001 , 47.468918,
          32.373276]],

        ...,

        [[16.141613, 31.264128, 41.144302, ..., 29.145798, 29.143097,
          16.93112 ],
         [26.013693, 46.443096, 56.65393 , ..., 44.204014, 43.556644,
          26.982706],
         [33.750965, 54.27474 , 63.203594, ..., 48.75062 , 45.265453,
          33.149647],
         ...,
         [31.713015, 45.23117 , 54.53883 , ..., 49.505394, 54.494934,
          39.099106],
         [30.442802, 47.72803 , 65.269806, ..., 61.69687 , 61.173485,
          42.362137],
         [25.617569, 38.078068, 54.193077, ..., 45.44001 , 47.468918,
          32.373276]],

        [[16.141613, 31.264128, 41.144302, ..., 29.145798, 29.143097,
          16.93112 ],
         [26.013693, 46.443096, 56.65393 , ..., 44.204014, 43.556644,
          26.982706],
         [33.750965, 54.27474 , 63.203594, ..., 48.75062 , 45.265453,
          33.149647],
         ...,
         [31.713015, 45.23117 , 54.53883 , ..., 49.505394, 54.494934,
          39.099106],
         [30.442802, 47.72803 , 65.269806, ..., 61.69687 , 61.173485,
          42.362137],
         [25.617569, 38.078068, 54.193077, ..., 45.44001 , 47.468918,
          32.373276]],

        [[16.141613, 31.264128, 41.144302, ..., 29.145798, 29.143097,
          16.93112 ],
         [26.013693, 46.443096, 56.65393 , ..., 44.204014, 43.556644,
          26.982706],
         [33.750965, 54.27474 , 63.203594, ..., 48.75062 , 45.265453,
          33.149647],
         ...,
         [31.713015, 45.23117 , 54.53883 , ..., 49.505394, 54.494934,
          39.099106],
         [30.442802, 47.72803 , 65.269806, ..., 61.69687 , 61.173485,
          42.362137],
         [25.617569, 38.078068, 54.193077, ..., 45.44001 , 47.468918,
          32.373276]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [13], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[16.141613, 31.26413 , 41.1443  , ..., 29.145798, 29.143097,
          16.931122],
         [26.01369 , 46.443096, 56.65392 , ..., 44.204025, 43.556652,
          26.982708],
         [33.75096 , 54.274734, 63.20359 , ..., 48.75063 , 45.26546 ,
          33.149643],
         ...,
         [31.713015, 45.231174, 54.538826, ..., 49.505394, 54.494934,
          39.099102],
         [30.442799, 47.728024, 65.269806, ..., 61.696865, 61.173473,
          42.362137],
         [25.617567, 38.078064, 54.19308 , ..., 45.440006, 47.468914,
          32.373272]],

        [[16.141613, 31.26413 , 41.1443  , ..., 29.145798, 29.143097,
          16.931122],
         [26.01369 , 46.443096, 56.65392 , ..., 44.204025, 43.556652,
          26.982708],
         [33.75096 , 54.274734, 63.20359 , ..., 48.75063 , 45.26546 ,
          33.149643],
         ...,
         [31.713015, 45.231174, 54.538826, ..., 49.505394, 54.494934,
          39.099102],
         [30.442799, 47.728024, 65.269806, ..., 61.696865, 61.173473,
          42.362137],
         [25.617567, 38.078064, 54.19308 , ..., 45.440006, 47.468914,
          32.373272]],

        [[16.141613, 31.26413 , 41.1443  , ..., 29.145798, 29.143097,
          16.931122],
         [26.01369 , 46.443096, 56.65392 , ..., 44.204025, 43.556652,
          26.982708],
         [33.75096 , 54.274734, 63.20359 , ..., 48.75063 , 45.26546 ,
          33.149643],
         ...,
         [31.713015, 45.231174, 54.538826, ..., 49.505394, 54.494934,
          39.099102],
         [30.442799, 47.728024, 65.269806, ..., 61.696865, 61.173473,
          42.362137],
         [25.617567, 38.078064, 54.19308 , ..., 45.440006, 47.468914,
          32.373272]],

        ...,

        [[16.141613, 31.26413 , 41.1443  , ..., 29.145798, 29.143097,
          16.931122],
         [26.01369 , 46.443096, 56.65392 , ..., 44.204025, 43.556652,
          26.982708],
         [33.75096 , 54.274734, 63.20359 , ..., 48.75063 , 45.26546 ,
          33.149643],
         ...,
         [31.713015, 45.231174, 54.538826, ..., 49.505394, 54.494934,
          39.099102],
         [30.442799, 47.728024, 65.269806, ..., 61.696865, 61.173473,
          42.362137],
         [25.617567, 38.078064, 54.19308 , ..., 45.440006, 47.468914,
          32.373272]],

        [[16.141613, 31.26413 , 41.1443  , ..., 29.145798, 29.143097,
          16.931122],
         [26.01369 , 46.443096, 56.65392 , ..., 44.204025, 43.556652,
          26.982708],
         [33.75096 , 54.274734, 63.20359 , ..., 48.75063 , 45.26546 ,
          33.149643],
         ...,
         [31.713015, 45.231174, 54.538826, ..., 49.505394, 54.494934,
          39.099102],
         [30.442799, 47.728024, 65.269806, ..., 61.696865, 61.173473,
          42.362137],
         [25.617567, 38.078064, 54.19308 , ..., 45.440006, 47.468914,
          32.373272]],

        [[16.141613, 31.26413 , 41.1443  , ..., 29.145798, 29.143097,
          16.931122],
         [26.01369 , 46.443096, 56.65392 , ..., 44.204025, 43.556652,
          26.982708],
         [33.75096 , 54.274734, 63.20359 , ..., 48.75063 , 45.26546 ,
          33.149643],
         ...,
         [31.713015, 45.231174, 54.538826, ..., 49.505394, 54.494934,
          39.099102],
         [30.442799, 47.728024, 65.269806, ..., 61.696865, 61.173473,
          42.362137],
         [25.617567, 38.078064, 54.19308 , ..., 45.440006, 47.468914,
          32.373272]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [13], 'to': [2]}

generate models:12

analyse output arrays in iter:14

pre layer res:
6:reshape
{'name': 'reshape', 'output': array([[[[-0.41330048,  0.4821649 , -2.4050827 , ...,  0.8491379 ,
           0.5082203 , -2.2793777 ],
         [ 1.5401566 , -0.7016576 ,  1.0785898 , ...,  0.11422395,
           0.2792929 ,  0.06709729],
         [ 0.8360574 ,  0.92330444, -1.102797  , ..., -0.22776489,
          -1.4771605 ,  0.01313189],
         ...,
         [ 1.0826735 ,  0.8621029 , -0.36331093, ..., -1.0533707 ,
           0.25906062, -0.08643506],
         [-1.9581096 , -2.0601866 ,  1.0540409 , ..., -0.46499977,
           0.8106732 , -0.16032338],
         [ 0.01109957, -0.6409685 , -1.417936  , ..., -0.5666778 ,
          -0.6335916 , -0.60912687]],

        [[ 0.10542435, -0.8262123 , -0.4281733 , ..., -0.37595448,
          -1.7966036 ,  0.6947231 ],
         [-0.09072614,  0.06730619,  1.0379311 , ...,  0.39333785,
          -0.13355434, -0.35034007],
         [ 0.768377  ,  0.34374616, -2.2195098 , ...,  1.642421  ,
           0.8741856 , -1.5290962 ],
         ...,
         [-0.07288487,  0.11920843,  1.6873969 , ..., -1.3766439 ,
           0.5866325 ,  0.25099277],
         [ 1.1097059 ,  0.5888799 , -0.9043939 , ..., -0.8624544 ,
           0.5075838 ,  0.4249466 ],
         [-0.533239  ,  0.60646623,  0.6123056 , ...,  1.3512988 ,
           1.1972331 ,  0.55716753]],

        [[-1.4708613 ,  0.7814763 , -0.06811164, ..., -2.3964484 ,
          -0.06390727,  1.139086  ],
         [-0.2471189 ,  0.80271953,  0.549708  , ..., -1.1163435 ,
          -2.1161432 , -0.9305418 ],
         [-0.7279346 ,  0.9760009 ,  0.51669866, ..., -0.44089055,
          -0.39008304, -1.1772907 ],
         ...,
         [-0.36508337,  1.0272148 ,  1.3165072 , ...,  0.93498206,
           0.8813546 ,  1.218537  ],
         [-0.6342259 ,  1.6387988 ,  0.5706866 , ...,  1.9998273 ,
          -1.2371014 ,  1.3343692 ],
         [-0.24413107, -0.28658542, -0.05607935, ..., -1.3332661 ,
           0.0291271 ,  0.20727046]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [5], 'to': [1]}
tf node:
{'name': 'conv2d', 'output': array([[[[ -4.659528 ,  -1.2991719,  -9.638933 , ...,  -5.4924207,
          -10.035494 , -10.080437 ],
         [ -9.635321 ,   1.5237792, -14.036352 , ..., -11.909753 ,
          -25.958094 , -24.594456 ],
         [-17.553038 ,  -2.6686826,  -7.2476416, ...,  -8.897433 ,
          -13.313108 , -12.81905  ],
         ...,
         [  1.7458194,  -4.911995 ,  -4.7814665, ...,  18.752792 ,
           29.975607 ,  18.250067 ],
         [  4.4489255, -11.919259 , -17.221636 , ...,   8.635153 ,
           25.100811 ,  10.710808 ],
         [ -0.2430006, -13.295476 , -11.545656 , ...,   7.141162 ,
           20.708511 ,  12.215317 ]],

        [[ -4.659528 ,  -1.2991719,  -9.638933 , ...,  -5.4924207,
          -10.035494 , -10.080437 ],
         [ -9.635321 ,   1.5237792, -14.036352 , ..., -11.909753 ,
          -25.958094 , -24.594456 ],
         [-17.553038 ,  -2.6686826,  -7.2476416, ...,  -8.897433 ,
          -13.313108 , -12.81905  ],
         ...,
         [  1.7458194,  -4.911995 ,  -4.7814665, ...,  18.752792 ,
           29.975607 ,  18.250067 ],
         [  4.4489255, -11.919259 , -17.221636 , ...,   8.635153 ,
           25.100811 ,  10.710808 ],
         [ -0.2430006, -13.295476 , -11.545656 , ...,   7.141162 ,
           20.708511 ,  12.215317 ]],

        [[ -4.659528 ,  -1.2991719,  -9.638933 , ...,  -5.4924207,
          -10.035494 , -10.080437 ],
         [ -9.635321 ,   1.5237792, -14.036352 , ..., -11.909753 ,
          -25.958094 , -24.594456 ],
         [-17.553038 ,  -2.6686826,  -7.2476416, ...,  -8.897433 ,
          -13.313108 , -12.81905  ],
         ...,
         [  1.7458194,  -4.911995 ,  -4.7814665, ...,  18.752792 ,
           29.975607 ,  18.250067 ],
         [  4.4489255, -11.919259 , -17.221636 , ...,   8.635153 ,
           25.100811 ,  10.710808 ],
         [ -0.2430006, -13.295476 , -11.545656 , ...,   7.141162 ,
           20.708511 ,  12.215317 ]],

        ...,

        [[ -4.659528 ,  -1.2991719,  -9.638933 , ...,  -5.4924207,
          -10.035494 , -10.080437 ],
         [ -9.635321 ,   1.5237792, -14.036352 , ..., -11.909753 ,
          -25.958094 , -24.594456 ],
         [-17.553038 ,  -2.6686826,  -7.2476416, ...,  -8.897433 ,
          -13.313108 , -12.81905  ],
         ...,
         [  1.7458194,  -4.911995 ,  -4.7814665, ...,  18.752792 ,
           29.975607 ,  18.250067 ],
         [  4.4489255, -11.919259 , -17.221636 , ...,   8.635153 ,
           25.100811 ,  10.710808 ],
         [ -0.2430006, -13.295476 , -11.545656 , ...,   7.141162 ,
           20.708511 ,  12.215317 ]],

        [[ -4.659528 ,  -1.2991719,  -9.638933 , ...,  -5.4924207,
          -10.035494 , -10.080437 ],
         [ -9.635321 ,   1.5237792, -14.036352 , ..., -11.909753 ,
          -25.958094 , -24.594456 ],
         [-17.553038 ,  -2.6686826,  -7.2476416, ...,  -8.897433 ,
          -13.313108 , -12.81905  ],
         ...,
         [  1.7458194,  -4.911995 ,  -4.7814665, ...,  18.752792 ,
           29.975607 ,  18.250067 ],
         [  4.4489255, -11.919259 , -17.221636 , ...,   8.635153 ,
           25.100811 ,  10.710808 ],
         [ -0.2430006, -13.295476 , -11.545656 , ...,   7.141162 ,
           20.708511 ,  12.215317 ]],

        [[ -4.659528 ,  -1.2991719,  -9.638933 , ...,  -5.4924207,
          -10.035494 , -10.080437 ],
         [ -9.635321 ,   1.5237792, -14.036352 , ..., -11.909753 ,
          -25.958094 , -24.594456 ],
         [-17.553038 ,  -2.6686826,  -7.2476416, ...,  -8.897433 ,
          -13.313108 , -12.81905  ],
         ...,
         [  1.7458194,  -4.911995 ,  -4.7814665, ...,  18.752792 ,
           29.975607 ,  18.250067 ],
         [  4.4489255, -11.919259 , -17.221636 , ...,   8.635153 ,
           25.100811 ,  10.710808 ],
         [ -0.2430006, -13.295476 , -11.545656 , ...,   7.141162 ,
           20.708511 ,  12.215317 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 16, 16]), 'from': [6], 'to': [2]}
ms node:
{'name': 'conv2d', 'output': array([[[[ -5.9313517 ,  -4.206665  ,   0.04154789, ...,   3.3081188 ,
           -2.877143  , -11.317467  ],
         [ -7.1827264 ,  -3.6171012 ,  -1.8347023 , ...,   5.0801854 ,
           -6.599884  , -19.549551  ],
         [ -8.046709  ,   3.2034945 ,   5.7220745 , ...,   3.9360864 ,
          -14.020056  , -25.667871  ],
         ...,
         [  5.6478777 ,   0.4167515 ,  -9.432091  , ...,  10.929153  ,
           13.812589  ,   9.090162  ],
         [  9.140477  ,  -2.7156978 , -11.138757  , ...,  14.850451  ,
           27.118694  ,  21.214342  ],
         [  6.0316687 ,  -6.408933  , -14.258734  , ...,   8.869543  ,
           17.689886  ,  13.427143  ]],

        [[ -5.9313517 ,  -4.206665  ,   0.04154789, ...,   3.3081188 ,
           -2.877143  , -11.317467  ],
         [ -7.1827264 ,  -3.6171012 ,  -1.8347023 , ...,   5.0801854 ,
           -6.599884  , -19.549551  ],
         [ -8.046709  ,   3.2034945 ,   5.7220745 , ...,   3.9360864 ,
          -14.020056  , -25.667871  ],
         ...,
         [  5.6478777 ,   0.4167515 ,  -9.432091  , ...,  10.929153  ,
           13.812589  ,   9.090162  ],
         [  9.140477  ,  -2.7156978 , -11.138757  , ...,  14.850451  ,
           27.118694  ,  21.214342  ],
         [  6.0316687 ,  -6.408933  , -14.258734  , ...,   8.869543  ,
           17.689886  ,  13.427143  ]],

        [[ -5.9313517 ,  -4.206665  ,   0.04154789, ...,   3.3081188 ,
           -2.877143  , -11.317467  ],
         [ -7.1827264 ,  -3.6171012 ,  -1.8347023 , ...,   5.0801854 ,
           -6.599884  , -19.549551  ],
         [ -8.046709  ,   3.2034945 ,   5.7220745 , ...,   3.9360864 ,
          -14.020056  , -25.667871  ],
         ...,
         [  5.6478777 ,   0.4167515 ,  -9.432091  , ...,  10.929153  ,
           13.812589  ,   9.090162  ],
         [  9.140477  ,  -2.7156978 , -11.138757  , ...,  14.850451  ,
           27.118694  ,  21.214342  ],
         [  6.0316687 ,  -6.408933  , -14.258734  , ...,   8.869543  ,
           17.689886  ,  13.427143  ]],

        ...,

        [[ -5.9313517 ,  -4.206665  ,   0.04154789, ...,   3.3081188 ,
           -2.877143  , -11.317467  ],
         [ -7.1827264 ,  -3.6171012 ,  -1.8347023 , ...,   5.0801854 ,
           -6.599884  , -19.549551  ],
         [ -8.046709  ,   3.2034945 ,   5.7220745 , ...,   3.9360864 ,
          -14.020056  , -25.667871  ],
         ...,
         [  5.6478777 ,   0.4167515 ,  -9.432091  , ...,  10.929153  ,
           13.812589  ,   9.090162  ],
         [  9.140477  ,  -2.7156978 , -11.138757  , ...,  14.850451  ,
           27.118694  ,  21.214342  ],
         [  6.0316687 ,  -6.408933  , -14.258734  , ...,   8.869543  ,
           17.689886  ,  13.427143  ]],

        [[ -5.9313517 ,  -4.206665  ,   0.04154789, ...,   3.3081188 ,
           -2.877143  , -11.317467  ],
         [ -7.1827264 ,  -3.6171012 ,  -1.8347023 , ...,   5.0801854 ,
           -6.599884  , -19.549551  ],
         [ -8.046709  ,   3.2034945 ,   5.7220745 , ...,   3.9360864 ,
          -14.020056  , -25.667871  ],
         ...,
         [  5.6478777 ,   0.4167515 ,  -9.432091  , ...,  10.929153  ,
           13.812589  ,   9.090162  ],
         [  9.140477  ,  -2.7156978 , -11.138757  , ...,  14.850451  ,
           27.118694  ,  21.214342  ],
         [  6.0316687 ,  -6.408933  , -14.258734  , ...,   8.869543  ,
           17.689886  ,  13.427143  ]],

        [[ -5.9313517 ,  -4.206665  ,   0.04154789, ...,   3.3081188 ,
           -2.877143  , -11.317467  ],
         [ -7.1827264 ,  -3.6171012 ,  -1.8347023 , ...,   5.0801854 ,
           -6.599884  , -19.549551  ],
         [ -8.046709  ,   3.2034945 ,   5.7220745 , ...,   3.9360864 ,
          -14.020056  , -25.667871  ],
         ...,
         [  5.6478777 ,   0.4167515 ,  -9.432091  , ...,  10.929153  ,
           13.812589  ,   9.090162  ],
         [  9.140477  ,  -2.7156978 , -11.138757  , ...,  14.850451  ,
           27.118694  ,  21.214342  ],
         [  6.0316687 ,  -6.408933  , -14.258734  , ...,   8.869543  ,
           17.689886  ,  13.427143  ]]]], dtype=float32), 'output_shape': (1, 64, 16, 16), 'from': [6], 'to': [2]}
torch node:
{'name': 'conv2d', 'output': array([[[[ -5.9313507 ,  -4.206666  ,   0.04154706, ...,   3.3081203 ,
           -2.8771424 , -11.317466  ],
         [ -7.182727  ,  -3.6170988 ,  -1.8347027 , ...,   5.0801888 ,
           -6.599884  , -19.549553  ],
         [ -8.046708  ,   3.203496  ,   5.7220755 , ...,   3.9360874 ,
          -14.020054  , -25.667871  ],
         ...,
         [  5.6478763 ,   0.41675627,  -9.432089  , ...,  10.929154  ,
           13.812595  ,   9.090162  ],
         [  9.140478  ,  -2.7156992 , -11.138757  , ...,  14.85045   ,
           27.118692  ,  21.21434   ],
         [  6.0316677 ,  -6.4089327 , -14.258733  , ...,   8.869542  ,
           17.689886  ,  13.42714   ]],

        [[ -5.9313507 ,  -4.206666  ,   0.04154706, ...,   3.3081203 ,
           -2.8771424 , -11.317466  ],
         [ -7.182727  ,  -3.6170988 ,  -1.8347027 , ...,   5.0801888 ,
           -6.599884  , -19.549553  ],
         [ -8.046708  ,   3.203496  ,   5.7220755 , ...,   3.9360874 ,
          -14.020054  , -25.667871  ],
         ...,
         [  5.6478763 ,   0.41675627,  -9.432089  , ...,  10.929154  ,
           13.812595  ,   9.090162  ],
         [  9.140478  ,  -2.7156992 , -11.138757  , ...,  14.85045   ,
           27.118692  ,  21.21434   ],
         [  6.0316677 ,  -6.4089327 , -14.258733  , ...,   8.869542  ,
           17.689886  ,  13.42714   ]],

        [[ -5.9313507 ,  -4.206666  ,   0.04154706, ...,   3.3081203 ,
           -2.8771424 , -11.317466  ],
         [ -7.182727  ,  -3.6170988 ,  -1.8347027 , ...,   5.0801888 ,
           -6.599884  , -19.549553  ],
         [ -8.046708  ,   3.203496  ,   5.7220755 , ...,   3.9360874 ,
          -14.020054  , -25.667871  ],
         ...,
         [  5.6478763 ,   0.41675627,  -9.432089  , ...,  10.929154  ,
           13.812595  ,   9.090162  ],
         [  9.140478  ,  -2.7156992 , -11.138757  , ...,  14.85045   ,
           27.118692  ,  21.21434   ],
         [  6.0316677 ,  -6.4089327 , -14.258733  , ...,   8.869542  ,
           17.689886  ,  13.42714   ]],

        ...,

        [[ -5.9313507 ,  -4.206666  ,   0.04154706, ...,   3.3081203 ,
           -2.8771424 , -11.317466  ],
         [ -7.182727  ,  -3.6170988 ,  -1.8347027 , ...,   5.0801888 ,
           -6.599884  , -19.549553  ],
         [ -8.046708  ,   3.203496  ,   5.7220755 , ...,   3.9360874 ,
          -14.020054  , -25.667871  ],
         ...,
         [  5.6478763 ,   0.41675627,  -9.432089  , ...,  10.929154  ,
           13.812595  ,   9.090162  ],
         [  9.140478  ,  -2.7156992 , -11.138757  , ...,  14.85045   ,
           27.118692  ,  21.21434   ],
         [  6.0316677 ,  -6.4089327 , -14.258733  , ...,   8.869542  ,
           17.689886  ,  13.42714   ]],

        [[ -5.9313507 ,  -4.206666  ,   0.04154706, ...,   3.3081203 ,
           -2.8771424 , -11.317466  ],
         [ -7.182727  ,  -3.6170988 ,  -1.8347027 , ...,   5.0801888 ,
           -6.599884  , -19.549553  ],
         [ -8.046708  ,   3.203496  ,   5.7220755 , ...,   3.9360874 ,
          -14.020054  , -25.667871  ],
         ...,
         [  5.6478763 ,   0.41675627,  -9.432089  , ...,  10.929154  ,
           13.812595  ,   9.090162  ],
         [  9.140478  ,  -2.7156992 , -11.138757  , ...,  14.85045   ,
           27.118692  ,  21.21434   ],
         [  6.0316677 ,  -6.4089327 , -14.258733  , ...,   8.869542  ,
           17.689886  ,  13.42714   ]],

        [[ -5.9313507 ,  -4.206666  ,   0.04154706, ...,   3.3081203 ,
           -2.8771424 , -11.317466  ],
         [ -7.182727  ,  -3.6170988 ,  -1.8347027 , ...,   5.0801888 ,
           -6.599884  , -19.549553  ],
         [ -8.046708  ,   3.203496  ,   5.7220755 , ...,   3.9360874 ,
          -14.020054  , -25.667871  ],
         ...,
         [  5.6478763 ,   0.41675627,  -9.432089  , ...,  10.929154  ,
           13.812595  ,   9.090162  ],
         [  9.140478  ,  -2.7156992 , -11.138757  , ...,  14.85045   ,
           27.118692  ,  21.21434   ],
         [  6.0316677 ,  -6.4089327 , -14.258733  , ...,   8.869542  ,
           17.689886  ,  13.42714   ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 16, 16]), 'from': [6], 'to': [2]}

generate models:15

analyse output arrays in iter:20

pre layer res:
6:conv2d
{'name': 'conv2d', 'output': array([[[[2244.706  , 3531.0073 , 3694.9482 , ..., 1580.7441 ,
          1106.242  ,  452.6007 ],
         [4326.3423 , 6255.793  , 6022.067  , ..., 2846.7063 ,
          2087.433  ,  916.88184],
         [6244.9004 , 7799.3525 , 6447.028  , ..., 3702.4722 ,
          2713.6267 , 1162.896  ],
         ...,
         [3006.7756 , 7241.14   , 8981.309  , ..., 6907.6807 ,
          4436.6987 , 3754.5203 ],
         [4634.719  , 8317.565  , 7693.66   , ..., 5327.507  ,
          3530.5896 , 2824.2878 ],
         [4175.1123 , 6262.667  , 4273.2725 , ..., 3016.9023 ,
          2043.6459 , 1572.7777 ]],

        [[2244.706  , 3531.0073 , 3694.9482 , ..., 1580.7441 ,
          1106.242  ,  452.6007 ],
         [4326.3423 , 6255.793  , 6022.067  , ..., 2846.7063 ,
          2087.433  ,  916.88184],
         [6244.9004 , 7799.3525 , 6447.028  , ..., 3702.4722 ,
          2713.6267 , 1162.896  ],
         ...,
         [3006.7756 , 7241.14   , 8981.309  , ..., 6907.6807 ,
          4436.6987 , 3754.5203 ],
         [4634.719  , 8317.565  , 7693.66   , ..., 5327.507  ,
          3530.5896 , 2824.2878 ],
         [4175.1123 , 6262.667  , 4273.2725 , ..., 3016.9023 ,
          2043.6459 , 1572.7777 ]],

        [[2244.706  , 3531.0073 , 3694.9482 , ..., 1580.7441 ,
          1106.242  ,  452.6007 ],
         [4326.3423 , 6255.793  , 6022.067  , ..., 2846.7063 ,
          2087.433  ,  916.88184],
         [6244.9004 , 7799.3525 , 6447.028  , ..., 3702.4722 ,
          2713.6267 , 1162.896  ],
         ...,
         [3006.7756 , 7241.14   , 8981.309  , ..., 6907.6807 ,
          4436.6987 , 3754.5203 ],
         [4634.719  , 8317.565  , 7693.66   , ..., 5327.507  ,
          3530.5896 , 2824.2878 ],
         [4175.1123 , 6262.667  , 4273.2725 , ..., 3016.9023 ,
          2043.6459 , 1572.7777 ]],

        ...,

        [[2244.706  , 3531.0073 , 3694.9482 , ..., 1580.7441 ,
          1106.242  ,  452.6007 ],
         [4326.3423 , 6255.793  , 6022.067  , ..., 2846.7063 ,
          2087.433  ,  916.88184],
         [6244.9004 , 7799.3525 , 6447.028  , ..., 3702.4722 ,
          2713.6267 , 1162.896  ],
         ...,
         [3006.7756 , 7241.14   , 8981.309  , ..., 6907.6807 ,
          4436.6987 , 3754.5203 ],
         [4634.719  , 8317.565  , 7693.66   , ..., 5327.507  ,
          3530.5896 , 2824.2878 ],
         [4175.1123 , 6262.667  , 4273.2725 , ..., 3016.9023 ,
          2043.6459 , 1572.7777 ]],

        [[2244.706  , 3531.0073 , 3694.9482 , ..., 1580.7441 ,
          1106.242  ,  452.6007 ],
         [4326.3423 , 6255.793  , 6022.067  , ..., 2846.7063 ,
          2087.433  ,  916.88184],
         [6244.9004 , 7799.3525 , 6447.028  , ..., 3702.4722 ,
          2713.6267 , 1162.896  ],
         ...,
         [3006.7756 , 7241.14   , 8981.309  , ..., 6907.6807 ,
          4436.6987 , 3754.5203 ],
         [4634.719  , 8317.565  , 7693.66   , ..., 5327.507  ,
          3530.5896 , 2824.2878 ],
         [4175.1123 , 6262.667  , 4273.2725 , ..., 3016.9023 ,
          2043.6459 , 1572.7777 ]],

        [[2244.706  , 3531.0073 , 3694.9482 , ..., 1580.7441 ,
          1106.242  ,  452.6007 ],
         [4326.3423 , 6255.793  , 6022.067  , ..., 2846.7063 ,
          2087.433  ,  916.88184],
         [6244.9004 , 7799.3525 , 6447.028  , ..., 3702.4722 ,
          2713.6267 , 1162.896  ],
         ...,
         [3006.7756 , 7241.14   , 8981.309  , ..., 6907.6807 ,
          4436.6987 , 3754.5203 ],
         [4634.719  , 8317.565  , 7693.66   , ..., 5327.507  ,
          3530.5896 , 2824.2878 ],
         [4175.1123 , 6262.667  , 4273.2725 , ..., 3016.9023 ,
          2043.6459 , 1572.7777 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [5], 'to': [33]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.99927413, -0.1423334 ,  0.42166573, ..., -0.49951243,
           0.39064237,  0.2097956 ],
         [-0.36087054, -0.7720088 ,  0.3580909 , ...,  0.4108213 ,
           0.98797864, -0.4468301 ],
         [-0.5528701 ,  0.93979156,  0.46151912, ...,  0.99446887,
          -0.65133595,  0.48530704],
         ...,
         [-0.26814333,  0.22888274,  0.48363492, ...,  0.63002175,
           0.696066  , -0.31175795],
         [-0.7643768 , -0.9802886 ,  0.10008454, ..., -0.59261745,
          -0.5316462 ,  0.00395377],
         [ 0.06428757, -0.99520546,  0.6491391 , ...,  0.8268009 ,
           0.999206  ,  0.91688675]],

        [[ 0.99927413, -0.1423334 ,  0.42166573, ..., -0.49951243,
           0.39064237,  0.2097956 ],
         [-0.36087054, -0.7720088 ,  0.3580909 , ...,  0.4108213 ,
           0.98797864, -0.4468301 ],
         [-0.5528701 ,  0.93979156,  0.46151912, ...,  0.99446887,
          -0.65133595,  0.48530704],
         ...,
         [-0.26814333,  0.22888274,  0.48363492, ...,  0.63002175,
           0.696066  , -0.31175795],
         [-0.7643768 , -0.9802886 ,  0.10008454, ..., -0.59261745,
          -0.5316462 ,  0.00395377],
         [ 0.06428757, -0.99520546,  0.6491391 , ...,  0.8268009 ,
           0.999206  ,  0.91688675]],

        [[ 0.99927413, -0.1423334 ,  0.42166573, ..., -0.49951243,
           0.39064237,  0.2097956 ],
         [-0.36087054, -0.7720088 ,  0.3580909 , ...,  0.4108213 ,
           0.98797864, -0.4468301 ],
         [-0.5528701 ,  0.93979156,  0.46151912, ...,  0.99446887,
          -0.65133595,  0.48530704],
         ...,
         [-0.26814333,  0.22888274,  0.48363492, ...,  0.63002175,
           0.696066  , -0.31175795],
         [-0.7643768 , -0.9802886 ,  0.10008454, ..., -0.59261745,
          -0.5316462 ,  0.00395377],
         [ 0.06428757, -0.99520546,  0.6491391 , ...,  0.8268009 ,
           0.999206  ,  0.91688675]],

        ...,

        [[ 0.99927413, -0.1423334 ,  0.42166573, ..., -0.49951243,
           0.39064237,  0.2097956 ],
         [-0.36087054, -0.7720088 ,  0.3580909 , ...,  0.4108213 ,
           0.98797864, -0.4468301 ],
         [-0.5528701 ,  0.93979156,  0.46151912, ...,  0.99446887,
          -0.65133595,  0.48530704],
         ...,
         [-0.26814333,  0.22888274,  0.48363492, ...,  0.63002175,
           0.696066  , -0.31175795],
         [-0.7643768 , -0.9802886 ,  0.10008454, ..., -0.59261745,
          -0.5316462 ,  0.00395377],
         [ 0.06428757, -0.99520546,  0.6491391 , ...,  0.8268009 ,
           0.999206  ,  0.91688675]],

        [[ 0.99927413, -0.1423334 ,  0.42166573, ..., -0.49951243,
           0.39064237,  0.2097956 ],
         [-0.36087054, -0.7720088 ,  0.3580909 , ...,  0.4108213 ,
           0.98797864, -0.4468301 ],
         [-0.5528701 ,  0.93979156,  0.46151912, ...,  0.99446887,
          -0.65133595,  0.48530704],
         ...,
         [-0.26814333,  0.22888274,  0.48363492, ...,  0.63002175,
           0.696066  , -0.31175795],
         [-0.7643768 , -0.9802886 ,  0.10008454, ..., -0.59261745,
          -0.5316462 ,  0.00395377],
         [ 0.06428757, -0.99520546,  0.6491391 , ...,  0.8268009 ,
           0.999206  ,  0.91688675]],

        [[ 0.99927413, -0.1423334 ,  0.42166573, ..., -0.49951243,
           0.39064237,  0.2097956 ],
         [-0.36087054, -0.7720088 ,  0.3580909 , ...,  0.4108213 ,
           0.98797864, -0.4468301 ],
         [-0.5528701 ,  0.93979156,  0.46151912, ...,  0.99446887,
          -0.65133595,  0.48530704],
         ...,
         [-0.26814333,  0.22888274,  0.48363492, ...,  0.63002175,
           0.696066  , -0.31175795],
         [-0.7643768 , -0.9802886 ,  0.10008454, ..., -0.59261745,
          -0.5316462 ,  0.00395377],
         [ 0.06428757, -0.99520546,  0.6491391 , ...,  0.8268009 ,
           0.999206  ,  0.91688675]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [6], 'to': [7]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.99932885, -0.14474952,  0.42343593, ..., -0.49908936,
           0.38985562,  0.20964639],
         [-0.3622363 , -0.7720088 ,  0.3548975 , ...,  0.4112664 ,
           0.98767483, -0.44693932],
         [-0.5479782 ,  0.93878627,  0.46454862, ...,  0.9938904 ,
          -0.65133595,  0.48498678],
         ...,
         [-0.26649654,  0.2331584 ,  0.47420487, ...,  0.61972916,
           0.7047783 , -0.31940287],
         [-0.76751596, -0.9781098 ,  0.09279448, ..., -0.5847233 ,
          -0.530405  ,  0.0054186 ],
         [ 0.06282569, -0.99602664,  0.65247554, ...,  0.82871866,
           0.9992726 ,  0.91747046]],

        [[ 0.99932885, -0.14474952,  0.42343593, ..., -0.49908936,
           0.38985562,  0.20964639],
         [-0.3622363 , -0.7720088 ,  0.3548975 , ...,  0.4112664 ,
           0.98767483, -0.44693932],
         [-0.5479782 ,  0.93878627,  0.46454862, ...,  0.9938904 ,
          -0.65133595,  0.48498678],
         ...,
         [-0.26649654,  0.2331584 ,  0.47420487, ...,  0.61972916,
           0.7047783 , -0.31940287],
         [-0.76751596, -0.9781098 ,  0.09279448, ..., -0.5847233 ,
          -0.530405  ,  0.0054186 ],
         [ 0.06282569, -0.99602664,  0.65247554, ...,  0.82871866,
           0.9992726 ,  0.91747046]],

        [[ 0.99932885, -0.14474952,  0.42343593, ..., -0.49908936,
           0.38985562,  0.20964639],
         [-0.3622363 , -0.7720088 ,  0.3548975 , ...,  0.4112664 ,
           0.98767483, -0.44693932],
         [-0.5479782 ,  0.93878627,  0.46454862, ...,  0.9938904 ,
          -0.65133595,  0.48498678],
         ...,
         [-0.26649654,  0.2331584 ,  0.47420487, ...,  0.61972916,
           0.7047783 , -0.31940287],
         [-0.76751596, -0.9781098 ,  0.09279448, ..., -0.5847233 ,
          -0.530405  ,  0.0054186 ],
         [ 0.06282569, -0.99602664,  0.65247554, ...,  0.82871866,
           0.9992726 ,  0.91747046]],

        ...,

        [[ 0.99932885, -0.14474952,  0.42343593, ..., -0.49908936,
           0.38985562,  0.20964639],
         [-0.3622363 , -0.7720088 ,  0.3548975 , ...,  0.4112664 ,
           0.98767483, -0.44693932],
         [-0.5479782 ,  0.93878627,  0.46454862, ...,  0.9938904 ,
          -0.65133595,  0.48498678],
         ...,
         [-0.26649654,  0.2331584 ,  0.47420487, ...,  0.61972916,
           0.7047783 , -0.31940287],
         [-0.76751596, -0.9781098 ,  0.09279448, ..., -0.5847233 ,
          -0.530405  ,  0.0054186 ],
         [ 0.06282569, -0.99602664,  0.65247554, ...,  0.82871866,
           0.9992726 ,  0.91747046]],

        [[ 0.99932885, -0.14474952,  0.42343593, ..., -0.49908936,
           0.38985562,  0.20964639],
         [-0.3622363 , -0.7720088 ,  0.3548975 , ...,  0.4112664 ,
           0.98767483, -0.44693932],
         [-0.5479782 ,  0.93878627,  0.46454862, ...,  0.9938904 ,
          -0.65133595,  0.48498678],
         ...,
         [-0.26649654,  0.2331584 ,  0.47420487, ...,  0.61972916,
           0.7047783 , -0.31940287],
         [-0.76751596, -0.9781098 ,  0.09279448, ..., -0.5847233 ,
          -0.530405  ,  0.0054186 ],
         [ 0.06282569, -0.99602664,  0.65247554, ...,  0.82871866,
           0.9992726 ,  0.91747046]],

        [[ 0.99932885, -0.14474952,  0.42343593, ..., -0.49908936,
           0.38985562,  0.20964639],
         [-0.3622363 , -0.7720088 ,  0.3548975 , ...,  0.4112664 ,
           0.98767483, -0.44693932],
         [-0.5479782 ,  0.93878627,  0.46454862, ...,  0.9938904 ,
          -0.65133595,  0.48498678],
         ...,
         [-0.26649654,  0.2331584 ,  0.47420487, ...,  0.61972916,
           0.7047783 , -0.31940287],
         [-0.76751596, -0.9781098 ,  0.09279448, ..., -0.5847233 ,
          -0.530405  ,  0.0054186 ],
         [ 0.06282569, -0.99602664,  0.65247554, ...,  0.82871866,
           0.9992726 ,  0.91747046]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [6], 'to': [7]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.9991074 , -0.14354156,  0.4313817 , ..., -0.50521207,
           0.3888437 ,  0.20863174],
         [-0.34945947, -0.76733273,  0.341165  , ...,  0.41815323,
           0.9892992 , -0.44857657],
         [-0.5642104 ,  0.9412843 ,  0.46929827, ...,  0.9944945 ,
          -0.64780915,  0.4846665 ],
         ...,
         [-0.26343617,  0.22555418,  0.48363492, ...,  0.6296425 ,
           0.69781685, -0.3108299 ],
         [-0.76751596, -0.9766644 ,  0.09376679, ..., -0.58194715,
          -0.529991  ,  0.0054186 ],
         [ 0.05551432, -0.996692  ,  0.6565364 , ...,  0.83414453,
           0.9988408 ,  0.915468  ]],

        [[ 0.9991074 , -0.14354156,  0.4313817 , ..., -0.50521207,
           0.3888437 ,  0.20863174],
         [-0.34945947, -0.76733273,  0.341165  , ...,  0.41815323,
           0.9892992 , -0.44857657],
         [-0.5642104 ,  0.9412843 ,  0.46929827, ...,  0.9944945 ,
          -0.64780915,  0.4846665 ],
         ...,
         [-0.26343617,  0.22555418,  0.48363492, ...,  0.6296425 ,
           0.69781685, -0.3108299 ],
         [-0.76751596, -0.9766644 ,  0.09376679, ..., -0.58194715,
          -0.529991  ,  0.0054186 ],
         [ 0.05551432, -0.996692  ,  0.6565364 , ...,  0.83414453,
           0.9988408 ,  0.915468  ]],

        [[ 0.9991074 , -0.14354156,  0.4313817 , ..., -0.50521207,
           0.3888437 ,  0.20863174],
         [-0.34945947, -0.76733273,  0.341165  , ...,  0.41815323,
           0.9892992 , -0.44857657],
         [-0.5642104 ,  0.9412843 ,  0.46929827, ...,  0.9944945 ,
          -0.64780915,  0.4846665 ],
         ...,
         [-0.26343617,  0.22555418,  0.48363492, ...,  0.6296425 ,
           0.69781685, -0.3108299 ],
         [-0.76751596, -0.9766644 ,  0.09376679, ..., -0.58194715,
          -0.529991  ,  0.0054186 ],
         [ 0.05551432, -0.996692  ,  0.6565364 , ...,  0.83414453,
           0.9988408 ,  0.915468  ]],

        ...,

        [[ 0.9991074 , -0.14354156,  0.4313817 , ..., -0.50521207,
           0.3888437 ,  0.20863174],
         [-0.34945947, -0.76733273,  0.341165  , ...,  0.41815323,
           0.9892992 , -0.44857657],
         [-0.5642104 ,  0.9412843 ,  0.46929827, ...,  0.9944945 ,
          -0.64780915,  0.4846665 ],
         ...,
         [-0.26343617,  0.22555418,  0.48363492, ...,  0.6296425 ,
           0.69781685, -0.3108299 ],
         [-0.76751596, -0.9766644 ,  0.09376679, ..., -0.58194715,
          -0.529991  ,  0.0054186 ],
         [ 0.05551432, -0.996692  ,  0.6565364 , ...,  0.83414453,
           0.9988408 ,  0.915468  ]],

        [[ 0.9991074 , -0.14354156,  0.4313817 , ..., -0.50521207,
           0.3888437 ,  0.20863174],
         [-0.34945947, -0.76733273,  0.341165  , ...,  0.41815323,
           0.9892992 , -0.44857657],
         [-0.5642104 ,  0.9412843 ,  0.46929827, ...,  0.9944945 ,
          -0.64780915,  0.4846665 ],
         ...,
         [-0.26343617,  0.22555418,  0.48363492, ...,  0.6296425 ,
           0.69781685, -0.3108299 ],
         [-0.76751596, -0.9766644 ,  0.09376679, ..., -0.58194715,
          -0.529991  ,  0.0054186 ],
         [ 0.05551432, -0.996692  ,  0.6565364 , ...,  0.83414453,
           0.9988408 ,  0.915468  ]],

        [[ 0.9991074 , -0.14354156,  0.4313817 , ..., -0.50521207,
           0.3888437 ,  0.20863174],
         [-0.34945947, -0.76733273,  0.341165  , ...,  0.41815323,
           0.9892992 , -0.44857657],
         [-0.5642104 ,  0.9412843 ,  0.46929827, ...,  0.9944945 ,
          -0.64780915,  0.4846665 ],
         ...,
         [-0.26343617,  0.22555418,  0.48363492, ...,  0.6296425 ,
           0.69781685, -0.3108299 ],
         [-0.76751596, -0.9766644 ,  0.09376679, ..., -0.58194715,
          -0.529991  ,  0.0054186 ],
         [ 0.05551432, -0.996692  ,  0.6565364 , ...,  0.83414453,
           0.9988408 ,  0.915468  ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [6], 'to': [7]}

generate models:19

final statics:
total operators:28
tensorflow --> nums:8,distinct_bugs:2
mindspore --> nums:1,distinct_bugs:1
torch --> nums:1,distinct_bugs:1
tensorflow --> 
conv2d:7
sin:1
mindspore --> 
sin:1
torch --> 
sin:1

generate models:46

analyse output arrays in iter:50

pre layer res:
15:add
{'name': 'add', 'output': array([[[[ 2.2918715 ,  2.1354012 ,  4.071417  , ...,  2.4904122 ,
           1.5944679 ,  0.6432282 ],
         [ 1.4977422 ,  3.995337  ,  2.5214562 , ...,  1.9781848 ,
           2.2929409 ,  2.2225034 ],
         [ 2.1252036 ,  1.4359277 ,  2.213643  , ...,  4.202295  ,
           3.7297218 ,  1.9953632 ],
         ...,
         [ 1.2172095 ,  1.9972756 ,  2.2094736 , ...,  2.0839405 ,
           3.1806574 ,  2.5567818 ],
         [ 1.551424  ,  0.78655547,  2.7684057 , ...,  1.4579811 ,
           4.2345066 ,  3.1475186 ],
         [ 0.27227318,  2.9964375 , -0.37193906, ...,  3.7619328 ,
           1.0141585 ,  0.8404827 ]],

        [[ 0.38221788,  4.3676343 ,  3.881228  , ..., -0.43860292,
           2.7331028 ,  1.067251  ],
         [ 2.4874225 ,  1.1994907 ,  3.5859056 , ...,  3.4333532 ,
           2.8577487 ,  1.7256445 ],
         [ 4.2901316 ,  2.0011458 ,  2.4313097 , ...,  5.700094  ,
           3.0251224 ,  2.3549933 ],
         ...,
         [ 1.4288962 ,  1.3640066 ,  1.7961848 , ...,  3.7734685 ,
           1.3832332 ,  2.55287   ],
         [ 1.6679602 ,  0.7794479 ,  1.3741436 , ...,  1.5103538 ,
           2.671146  ,  1.8973378 ],
         [-0.35240835,  1.9462217 ,  3.2382412 , ...,  1.3835104 ,
           1.7436345 ,  2.453731  ]],

        [[ 1.0367103 ,  2.037491  ,  1.8635871 , ...,  1.2286719 ,
           1.9181589 ,  1.0217233 ],
         [ 2.2567444 ,  3.0221722 ,  4.584812  , ...,  2.653829  ,
           2.6099832 ,  0.29852903],
         [ 3.0495162 ,  1.2431954 ,  4.0136294 , ...,  3.5157192 ,
           6.3996687 ,  1.8388631 ],
         ...,
         [ 1.3377148 ,  2.9975529 ,  1.8819107 , ...,  2.243748  ,
           5.048601  ,  0.6645497 ],
         [ 1.9108732 ,  2.3539248 ,  2.4975803 , ...,  3.3885436 ,
           1.0202198 ,  2.4518857 ],
         [ 1.6551042 ,  0.85380125,  0.6766141 , ...,  2.4672143 ,
           1.8749791 ,  1.6656069 ]],

        ...,

        [[ 1.4503032 ,  2.6730435 ,  2.6730435 , ...,  1.7146468 ,
           1.5614324 ,  1.5614324 ],
         [ 1.597202  ,  2.6730435 ,  2.6730435 , ...,  2.206918  ,
           2.206918  ,  1.9433224 ],
         [ 2.6225498 ,  2.6730435 ,  2.6730435 , ...,  3.7370634 ,
           3.7370634 ,  1.9433224 ],
         ...,
         [ 1.3787377 ,  1.6600324 ,  1.6600324 , ...,  2.658881  ,
           2.658881  ,  1.981468  ],
         [ 1.3787377 ,  1.6600324 ,  1.6600324 , ...,  1.981468  ,
           1.981468  ,  1.981468  ],
         [ 0.9940441 ,  1.6600324 ,  1.6600324 , ...,  1.981468  ,
           1.981468  ,  1.981468  ]],

        [[ 1.4503032 ,  2.6730435 ,  2.6730435 , ...,  1.7146468 ,
           1.5614324 ,  1.5614324 ],
         [ 1.597202  ,  2.6730435 ,  2.6730435 , ...,  2.206918  ,
           2.206918  ,  1.9433224 ],
         [ 2.6225498 ,  2.6730435 ,  2.6730435 , ...,  3.7370634 ,
           3.7370634 ,  1.9433224 ],
         ...,
         [ 1.3787377 ,  1.6600324 ,  1.6600324 , ...,  2.658881  ,
           2.658881  ,  1.981468  ],
         [ 1.3787377 ,  1.6600324 ,  1.6600324 , ...,  1.981468  ,
           1.981468  ,  1.981468  ],
         [ 0.9940441 ,  1.6600324 ,  1.6600324 , ...,  1.981468  ,
           1.981468  ,  1.981468  ]],

        [[ 1.4503032 ,  2.6730435 ,  2.6730435 , ...,  1.7146468 ,
           1.5614324 ,  1.5614324 ],
         [ 1.597202  ,  2.6730435 ,  2.6730435 , ...,  2.206918  ,
           2.206918  ,  1.9433224 ],
         [ 2.6225498 ,  2.6730435 ,  2.6730435 , ...,  3.7370634 ,
           3.7370634 ,  1.9433224 ],
         ...,
         [ 1.3787377 ,  1.6600324 ,  1.6600324 , ...,  2.658881  ,
           2.658881  ,  1.981468  ],
         [ 1.3787377 ,  1.6600324 ,  1.6600324 , ...,  1.981468  ,
           1.981468  ,  1.981468  ],
         [ 0.9940441 ,  1.6600324 ,  1.6600324 , ...,  1.981468  ,
           1.981468  ,  1.981468  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [3, 18], 'to': [20]}
tf node:
{'name': 'log', 'output': array([[[[ 0.82936877,  0.7586546 ,  1.4039911 , ...,  0.9124483 ,
           0.46654007, -0.44125575],
         [ 0.40395877,  1.3851279 ,  0.92483664, ...,  0.6821797 ,
           0.8298352 ,  0.79863423],
         [ 0.7538676 ,  0.36181116,  0.7946396 , ...,  1.4356308 ,
           1.3163337 ,  0.6908261 ],
         ...,
         [ 0.1965609 ,  0.691784  ,  0.7927543 , ...,  0.73426056,
           1.1570879 ,  0.9387493 ],
         [ 0.43917322, -0.24009204,  1.0182716 , ...,  0.3770527 ,
           1.4432669 ,  1.1466144 ],
         [-1.3009493 ,  1.097424  ,         nan, ...,  1.3249329 ,
           0.01405919, -0.17377889]],

        [[-0.96176445,  1.4742215 ,  1.3561516 , ...,         nan,
           1.0054375 ,  0.06508616],
         [ 0.911247  ,  0.18189703,  1.277011  , ...,  1.2335374 ,
           1.0500342 ,  0.5456006 ],
         [ 1.4563174 ,  0.6937199 ,  0.8884301 , ...,  1.7404827 ,
           1.1069516 ,  0.85653794],
         ...,
         [ 0.35690224,  0.3104264 ,  0.58566487, ...,  1.3279946 ,
           0.32442364,  0.93721825],
         [ 0.51160145, -0.24916941,  0.3178307 , ...,  0.41234392,
           0.9825076 ,  0.6404517 ],
         [        nan,  0.6658899 ,  1.1750304 , ...,  0.324624  ,
           0.55597174,  0.8976098 ]],

        [[ 0.03605249,  0.7117192 ,  0.6225032 , ...,  0.20593384,
           0.6513658 ,  0.02149068],
         [ 0.81392324,  1.1059759 ,  1.5227492 , ...,  0.9760035 ,
           0.9593438 , -1.208888  ],
         [ 1.114983  ,  0.21768501,  1.3896959 , ...,  1.2572441 ,
           1.8562462 ,  0.60914755],
         ...,
         [ 0.2909628 ,  1.0977962 ,  0.63228756, ...,  0.80814767,
           1.6191112 , -0.4086456 ],
         [ 0.6475603 ,  0.85608405,  0.91532236, ...,  1.2204002 ,
           0.0200181 ,  0.8968574 ],
         [ 0.50386393, -0.15805684, -0.39065418, ...,  0.9030897 ,
           0.62859756,  0.51018953]],

        ...,

        [[ 0.37177265,  0.9832177 ,  0.9832177 , ...,  0.5392071 ,
           0.44560358,  0.44560358],
         [ 0.4682533 ,  0.9832177 ,  0.9832177 , ...,  0.79159695,
           0.79159695,  0.6643991 ],
         [ 0.96414703,  0.9832177 ,  0.9832177 , ...,  1.3183001 ,
           1.3183001 ,  0.6643991 ],
         ...,
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.97790533,
           0.97790533,  0.68383795],
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795],
         [-0.00597368,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795]],

        [[ 0.37177265,  0.9832177 ,  0.9832177 , ...,  0.5392071 ,
           0.44560358,  0.44560358],
         [ 0.4682533 ,  0.9832177 ,  0.9832177 , ...,  0.79159695,
           0.79159695,  0.6643991 ],
         [ 0.96414703,  0.9832177 ,  0.9832177 , ...,  1.3183001 ,
           1.3183001 ,  0.6643991 ],
         ...,
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.97790533,
           0.97790533,  0.68383795],
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795],
         [-0.00597368,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795]],

        [[ 0.37177265,  0.9832177 ,  0.9832177 , ...,  0.5392071 ,
           0.44560358,  0.44560358],
         [ 0.4682533 ,  0.9832177 ,  0.9832177 , ...,  0.79159695,
           0.79159695,  0.6643991 ],
         [ 0.96414703,  0.9832177 ,  0.9832177 , ...,  1.3183001 ,
           1.3183001 ,  0.6643991 ],
         ...,
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.97790533,
           0.97790533,  0.68383795],
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795],
         [-0.00597368,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [15], 'to': [4]}
ms node:
{'name': 'log', 'output': array([[[[ 0.8293656 ,  0.7586517 ,  1.4039897 , ...,  0.91244906,
           0.46653765, -0.44125295],
         [ 0.4039587 ,  1.3851265 ,  0.92483944, ...,  0.68217826,
           0.8298321 ,  0.7986348 ],
         [ 0.7538647 ,  0.36181402,  0.7946402 , ...,  1.4356341 ,
           1.3163337 ,  0.6908247 ],
         ...,
         [ 0.19655943,  0.6917826 ,  0.7927549 , ...,  0.734264  ,
           1.1570855 ,  0.9387522 ],
         [ 0.43917102, -0.24009444,  1.0182744 , ...,  0.37705263,
           1.4432702 ,  1.146612  ],
         [-1.3009523 ,  1.097424  ,         nan, ...,  1.3249329 ,
           0.01405776, -0.17378218]],

        [[-0.96176666,  1.4742186 ,  1.3561502 , ...,         nan,
           1.0054356 ,  0.06508325],
         [ 0.91124785,  0.18189554,  1.2770101 , ...,  1.2335341 ,
           1.050037  ,  0.5455996 ],
         [ 1.4563144 ,  0.6937185 ,  0.8884286 , ...,  1.7404855 ,
           1.1069493 ,  0.85653645],
         ...,
         [ 0.3569051 ,  0.3104245 ,  0.58566386, ...,  1.3279946 ,
           0.3244265 ,  0.93722105],
         [ 0.5115981 , -0.24917164,  0.31782877, ...,  0.4123417 ,
           0.9825056 ,  0.6404518 ],
         [        nan,  0.6658885 ,  1.175028  , ...,  0.32462686,
           0.5559707 ,  0.89761055]],

        [[ 0.0360559 ,  0.7117178 ,  0.6225032 , ...,  0.20593464,
           0.6513658 ,  0.02148925],
         [ 0.8139201 ,  1.1059736 ,  1.522746  , ...,  0.9760016 ,
           0.9593466 , -1.2088896 ],
         [ 1.1149807 ,  0.21768582,  1.3896945 , ...,  1.2572432 ,
           1.8562438 ,  0.60914654],
         ...,
         [ 0.29096085,  1.0977962 ,  0.6322876 , ...,  0.80814826,
           1.619114  , -0.40864754],
         [ 0.6475603 ,  0.85608256,  0.9153232 , ...,  1.2203969 ,
           0.02001667,  0.8968582 ],
         [ 0.50386155, -0.15806013, -0.3906561 , ...,  0.90309054,
           0.62859756,  0.51018625]],

        ...,

        [[ 0.3717726 ,  0.9832158 ,  0.9832158 , ...,  0.5392038 ,
           0.44560134,  0.44560134],
         [ 0.4682509 ,  0.9832158 ,  0.9832158 , ...,  0.79159755,
           0.79159755,  0.66439766],
         [ 0.96414983,  0.9832158 ,  0.9832158 , ...,  1.3183001 ,
           1.3183001 ,  0.66439766],
         ...,
         [ 0.32117122,  0.50683385,  0.50683385, ...,  0.9779034 ,
           0.9779034 ,  0.6838365 ],
         [ 0.32117122,  0.50683385,  0.50683385, ...,  0.6838365 ,
           0.6838365 ,  0.6838365 ],
         [-0.00597511,  0.50683385,  0.50683385, ...,  0.6838365 ,
           0.6838365 ,  0.6838365 ]],

        [[ 0.3717726 ,  0.9832158 ,  0.9832158 , ...,  0.5392038 ,
           0.44560134,  0.44560134],
         [ 0.4682509 ,  0.9832158 ,  0.9832158 , ...,  0.79159755,
           0.79159755,  0.66439766],
         [ 0.96414983,  0.9832158 ,  0.9832158 , ...,  1.3183001 ,
           1.3183001 ,  0.66439766],
         ...,
         [ 0.32117122,  0.50683385,  0.50683385, ...,  0.9779034 ,
           0.9779034 ,  0.6838365 ],
         [ 0.32117122,  0.50683385,  0.50683385, ...,  0.6838365 ,
           0.6838365 ,  0.6838365 ],
         [-0.00597511,  0.50683385,  0.50683385, ...,  0.6838365 ,
           0.6838365 ,  0.6838365 ]],

        [[ 0.3717726 ,  0.9832158 ,  0.9832158 , ...,  0.5392038 ,
           0.44560134,  0.44560134],
         [ 0.4682509 ,  0.9832158 ,  0.9832158 , ...,  0.79159755,
           0.79159755,  0.66439766],
         [ 0.96414983,  0.9832158 ,  0.9832158 , ...,  1.3183001 ,
           1.3183001 ,  0.66439766],
         ...,
         [ 0.32117122,  0.50683385,  0.50683385, ...,  0.9779034 ,
           0.9779034 ,  0.6838365 ],
         [ 0.32117122,  0.50683385,  0.50683385, ...,  0.6838365 ,
           0.6838365 ,  0.6838365 ],
         [-0.00597511,  0.50683385,  0.50683385, ...,  0.6838365 ,
           0.6838365 ,  0.6838365 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [15], 'to': [4]}
torch node:
{'name': 'log', 'output': array([[[[ 0.82936877,  0.7586546 ,  1.4039911 , ...,  0.9124483 ,
           0.46654007, -0.44125578],
         [ 0.40395877,  1.3851279 ,  0.92483664, ...,  0.6821797 ,
           0.8298352 ,  0.79863423],
         [ 0.7538676 ,  0.36181116,  0.7946396 , ...,  1.4356308 ,
           1.3163337 ,  0.6908261 ],
         ...,
         [ 0.1965609 ,  0.691784  ,  0.7927543 , ...,  0.73426056,
           1.1570879 ,  0.9387493 ],
         [ 0.43917325, -0.24009204,  1.0182716 , ...,  0.3770527 ,
           1.4432669 ,  1.1466144 ],
         [-1.3009493 ,  1.097424  ,         nan, ...,  1.3249329 ,
           0.01405919, -0.17377889]],

        [[-0.96176445,  1.4742215 ,  1.3561516 , ...,         nan,
           1.0054375 ,  0.06508616],
         [ 0.911247  ,  0.18189703,  1.277011  , ...,  1.2335374 ,
           1.0500342 ,  0.5456006 ],
         [ 1.4563174 ,  0.6937199 ,  0.8884301 , ...,  1.7404827 ,
           1.1069516 ,  0.85653794],
         ...,
         [ 0.35690224,  0.3104264 ,  0.58566487, ...,  1.3279946 ,
           0.32442364,  0.93721825],
         [ 0.51160145, -0.24916941,  0.3178307 , ...,  0.41234392,
           0.9825076 ,  0.6404517 ],
         [        nan,  0.6658899 ,  1.1750304 , ...,  0.324624  ,
           0.55597174,  0.8976098 ]],

        [[ 0.03605249,  0.7117192 ,  0.6225032 , ...,  0.20593384,
           0.6513658 ,  0.02149068],
         [ 0.81392324,  1.1059759 ,  1.5227492 , ...,  0.9760035 ,
           0.9593438 , -1.208888  ],
         [ 1.114983  ,  0.21768501,  1.3896959 , ...,  1.2572441 ,
           1.8562462 ,  0.60914755],
         ...,
         [ 0.2909628 ,  1.0977962 ,  0.63228756, ...,  0.80814767,
           1.6191112 , -0.4086456 ],
         [ 0.6475603 ,  0.85608405,  0.91532236, ...,  1.2204002 ,
           0.0200181 ,  0.8968574 ],
         [ 0.50386393, -0.15805684, -0.39065418, ...,  0.9030897 ,
           0.62859756,  0.51018953]],

        ...,

        [[ 0.37177265,  0.9832177 ,  0.9832177 , ...,  0.5392071 ,
           0.44560358,  0.44560358],
         [ 0.4682533 ,  0.9832177 ,  0.9832177 , ...,  0.79159695,
           0.79159695,  0.6643991 ],
         [ 0.96414703,  0.9832177 ,  0.9832177 , ...,  1.3183001 ,
           1.3183001 ,  0.6643991 ],
         ...,
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.97790533,
           0.97790533,  0.68383795],
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795],
         [-0.00597368,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795]],

        [[ 0.37177265,  0.9832177 ,  0.9832177 , ...,  0.5392071 ,
           0.44560358,  0.44560358],
         [ 0.4682533 ,  0.9832177 ,  0.9832177 , ...,  0.79159695,
           0.79159695,  0.6643991 ],
         [ 0.96414703,  0.9832177 ,  0.9832177 , ...,  1.3183001 ,
           1.3183001 ,  0.6643991 ],
         ...,
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.97790533,
           0.97790533,  0.68383795],
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795],
         [-0.00597368,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795]],

        [[ 0.37177265,  0.9832177 ,  0.9832177 , ...,  0.5392071 ,
           0.44560358,  0.44560358],
         [ 0.4682533 ,  0.9832177 ,  0.9832177 , ...,  0.79159695,
           0.79159695,  0.6643991 ],
         [ 0.96414703,  0.9832177 ,  0.9832177 , ...,  1.3183001 ,
           1.3183001 ,  0.6643991 ],
         ...,
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.97790533,
           0.97790533,  0.68383795],
         [ 0.32116836,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795],
         [-0.00597368,  0.5068371 ,  0.5068371 , ...,  0.68383795,
           0.68383795,  0.68383795]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [15], 'to': [4]}

generate models:47

analyse output arrays in iter:68

pre layer res:
8:add
{'name': 'add', 'output': array([[[[-6.27072752e-01,  2.31483191e-01, -3.00439745e-01, ...,
          -2.85927534e-01, -1.55504569e-01, -2.08066654e+00],
         [ 8.37972045e-01,  3.93700331e-01,  1.17933890e-02, ...,
           7.29155421e-01,  4.18468751e-02,  1.32301307e+00],
         [-1.31500161e+00,  5.25725007e-01, -1.65891898e+00, ...,
           1.52541459e+00, -1.15429252e-01,  5.25390208e-01],
         ...,
         [ 9.32787359e-01, -3.57594311e-01,  3.94734234e-01, ...,
           9.51568842e-01,  6.83310449e-01,  8.60207796e-01],
         [ 4.91437137e-01,  7.54321694e-01,  4.57126528e-01, ...,
           1.00992598e-01,  3.30496371e-01,  1.60028028e+00],
         [ 3.95212211e-02,  1.29049644e-01,  4.01201099e-02, ...,
           1.01165366e+00, -1.73489463e+00,  5.87946653e-01]],

        [[-1.14372551e+00,  4.75607038e-01,  5.73985457e-01, ...,
          -1.04915726e+00, -2.21011579e-01, -1.03775227e+00],
         [-3.80926430e-01,  1.83828622e-02, -5.29056251e-01, ...,
          -1.57849178e-01, -5.28709054e-01, -1.02910328e+00],
         [ 2.32237768e+00, -9.46104825e-01, -1.30547416e+00, ...,
          -8.05378497e-01,  1.90982521e+00,  1.18343234e+00],
         ...,
         [-1.81561664e-01, -6.83329403e-02,  1.70200360e+00, ...,
          -3.87537479e-01,  1.10573554e+00,  1.06341350e+00],
         [-3.46256900e+00, -3.60943407e-01, -1.42583892e-01, ...,
          -1.24585414e-02,  1.33588767e+00,  1.04256526e-01],
         [-6.54019475e-01,  2.81335592e-01,  5.90998232e-01, ...,
          -9.84208167e-01, -2.01710224e+00,  4.59438771e-01]],

        [[-7.31445789e-01, -4.59392130e-01, -9.34000731e-01, ...,
          -5.50705850e-01, -5.62593043e-01,  1.69488716e+00],
         [ 5.45147359e-01,  4.90931451e-01, -4.50866699e-01, ...,
           6.68945432e-01, -1.04444647e+00, -4.32633460e-01],
         [ 3.33061703e-02, -2.71908313e-01,  2.21446916e-01, ...,
          -2.46406242e-04,  5.06696403e-01, -8.96802723e-01],
         ...,
         [-3.22852522e-01, -4.29444194e-01,  7.66754448e-01, ...,
           7.88337052e-01, -1.29140958e-01,  5.10325015e-01],
         [ 3.32064837e-01, -2.13560805e-01, -5.63673079e-01, ...,
           1.81620288e+00, -4.32375818e-01, -5.53955615e-01],
         [-5.75298190e-01,  8.15063655e-01,  1.94580376e+00, ...,
          -1.14662826e-01, -1.00135975e-01,  5.04089668e-02]],

        ...,

        [[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         ...,
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00]],

        [[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         ...,
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00]],

        [[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         ...,
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
         [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00, ...,
           0.00000000e+00,  0.00000000e+00,  0.00000000e+00]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13, 18], 'to': [6]}
tf node:
{'name': 'log', 'output': array([[[[        nan, -1.463248  ,         nan, ...,         nan,
                  nan,         nan],
         [-0.17677054, -0.93216527, -4.440216  , ..., -0.31586838,
          -3.1737382 ,  0.27991176],
         [        nan, -0.642977  ,         nan, ...,  0.42226624,
                  nan, -0.64361405],
         ...,
         [-0.06957801,         nan, -0.92954254, ..., -0.04964324,
          -0.380806  , -0.1505813 ],
         [-0.71042126, -0.28193635, -0.7827951 , ..., -2.2927082 ,
          -1.1071596 ,  0.47017878],
         [-3.2309175 , -2.047558  , -3.2158775 , ...,  0.01158628,
                  nan, -0.53111905]],

        [[        nan, -0.74316335, -0.5551512 , ...,         nan,
                  nan,         nan],
         [        nan, -3.9963365 ,         nan, ...,         nan,
                  nan,         nan],
         [ 0.8425915 ,         nan,         nan, ...,         nan,
           0.6470117 ,  0.16841899],
         ...,
         [        nan,         nan,  0.5318061 , ...,         nan,
           0.10051076,  0.06148402],
         [        nan,         nan,         nan, ...,         nan,
           0.289596  , -2.2609007 ],
         [        nan, -1.2682071 , -0.52594227, ...,         nan,
                  nan, -0.7777496 ]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.52761614],
         [-0.6066991 , -0.71145076,         nan, ..., -0.4020528 ,
                  nan,         nan],
         [-3.4020126 ,         nan, -1.5075724 , ...,         nan,
          -0.67984325,         nan],
         ...,
         [        nan,         nan, -0.26558867, ..., -0.23782955,
                  nan, -0.6727075 ],
         [-1.1024251 ,         nan,         nan, ...,  0.596748  ,
                  nan,         nan],
         [        nan, -0.20448907,  0.66567516, ...,         nan,
                  nan, -2.9875863 ]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [8], 'to': [14]}
ms node:
{'name': 'log', 'output': array([[[[        nan, -1.463248  ,         nan, ...,         nan,
                  nan,         nan],
         [-0.17677382, -0.93216765, -4.4402184 , ..., -0.31586844,
          -3.1737401 ,  0.27990985],
         [        nan, -0.6429736 ,         nan, ...,  0.422264  ,
                  nan, -0.64361066],
         ...,
         [-0.06957799,         nan, -0.929545  , ..., -0.04964322,
          -0.3808079 , -0.15058228],
         [-0.7104227 , -0.28193858, -0.782796  , ..., -2.2927105 ,
          -1.1071615 ,  0.47017637],
         [-3.2309146 , -2.0475547 , -3.2158747 , ...,  0.01158485,
                  nan, -0.53112054]],

        [[        nan, -0.7431633 , -0.5551544 , ...,         nan,
                  nan,         nan],
         [        nan, -3.996338  ,         nan, ...,         nan,
                  nan,         nan],
         [ 0.84259003,         nan,         nan, ...,         nan,
           0.64701176,  0.1684175 ],
         ...,
         [        nan,         nan,  0.53180283, ...,         nan,
           0.10051133,  0.06148111],
         [        nan,         nan,         nan, ...,         nan,
           0.28959408, -2.260904  ],
         [        nan, -1.2682102 , -0.52594376, ...,         nan,
                  nan, -0.7777506 ]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.52761286],
         [-0.606702  , -0.7114522 ,         nan, ..., -0.40205473,
                  nan,         nan],
         [-3.4020154 ,         nan, -1.5075734 , ...,         nan,
          -0.6798447 ,         nan],
         ...,
         [        nan,         nan, -0.2655909 , ..., -0.23783197,
                  nan, -0.6727089 ],
         [-1.102427  ,         nan,         nan, ...,  0.596747  ,
                  nan,         nan],
         [        nan, -0.20449148,  0.66567373, ...,         nan,
                  nan, -2.9875886 ]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [8], 'to': [14]}
torch node:
{'name': 'log', 'output': array([[[[        nan, -1.463248  ,         nan, ...,         nan,
                  nan,         nan],
         [-0.17677054, -0.93216527, -4.440216  , ..., -0.31586838,
          -3.1737382 ,  0.27991176],
         [        nan, -0.642977  ,         nan, ...,  0.42226624,
                  nan, -0.64361405],
         ...,
         [-0.06957801,         nan, -0.92954254, ..., -0.04964324,
          -0.380806  , -0.1505813 ],
         [-0.71042126, -0.28193635, -0.7827951 , ..., -2.2927082 ,
          -1.1071596 ,  0.47017878],
         [-3.2309175 , -2.047558  , -3.2158775 , ...,  0.01158628,
                  nan, -0.53111905]],

        [[        nan, -0.7431633 , -0.5551512 , ...,         nan,
                  nan,         nan],
         [        nan, -3.9963365 ,         nan, ...,         nan,
                  nan,         nan],
         [ 0.8425915 ,         nan,         nan, ...,         nan,
           0.6470117 ,  0.16841897],
         ...,
         [        nan,         nan,  0.5318061 , ...,         nan,
           0.10051076,  0.06148402],
         [        nan,         nan,         nan, ...,         nan,
           0.289596  , -2.2609007 ],
         [        nan, -1.2682071 , -0.52594227, ...,         nan,
                  nan, -0.7777496 ]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.52761614],
         [-0.6066991 , -0.71145076,         nan, ..., -0.4020528 ,
                  nan,         nan],
         [-3.4020126 ,         nan, -1.5075724 , ...,         nan,
          -0.67984325,         nan],
         ...,
         [        nan,         nan, -0.26558867, ..., -0.23782955,
                  nan, -0.6727075 ],
         [-1.1024251 ,         nan,         nan, ...,  0.596748  ,
                  nan,         nan],
         [        nan, -0.20448907,  0.66567516, ...,         nan,
                  nan, -2.9875863 ]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [8], 'to': [14]}

generate models:63

analyse output arrays in iter:69

pre layer res:
17:reshape
{'name': 'reshape', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16], 'to': [8]}
tf node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [17], 'to': [13]}
ms node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [17], 'to': [13]}
torch node:
{'name': 'cos', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [17], 'to': [13]}

generate models:64

analyse output arrays in iter:75

pre layer res:
28:add
{'name': 'add', 'output': array([[[[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 6.0048156e+04]],

        ...,

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04],
         [4.3356952e+13,           inf,           inf, ...,
                    inf,           inf, 5.0267926e+04]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16, 31], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [28], 'to': [27]}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [28], 'to': [27]}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [28], 'to': [27]}

generate models:69

analyse output arrays in iter:77

pre layer res:
7:reshape
{'name': 'reshape', 'output': array([[[[ 0.60928005,  0.7329619 ,  0.3694585 , ..., -0.16521579,
           0.9889435 ,  0.13859682],
         [ 0.7640725 , -0.9231492 , -0.64746594, ..., -0.2826134 ,
           0.16656773,  0.05862945],
         [-0.33147258, -0.4176784 , -0.9760121 , ...,  0.35315645,
          -0.06520409,  0.11654068],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [6], 'to': [18]}
tf node:
{'name': 'log', 'output': array([[[[-0.49547726, -0.31066155, -0.99571687, ...,         nan,
          -0.01111806, -1.9761862 ],
         [-0.26909262,         nan,         nan, ...,         nan,
          -1.7923533 , -2.8365183 ],
         [        nan,         nan,         nan, ..., -1.0408442 ,
                  nan, -2.149515  ],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [7], 'to': [1]}
ms node:
{'name': 'log', 'output': array([[[[-0.49547875, -0.31066146, -0.9957169 , ...,         nan,
          -0.01111949, -1.9761821 ],
         [-0.26909485,         nan,         nan, ...,         nan,
          -1.7923523 , -2.8365142 ],
         [        nan,         nan,         nan, ..., -1.0408412 ,
                  nan, -2.149515  ],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [7], 'to': [1]}
torch node:
{'name': 'log', 'output': array([[[[-0.49547786, -0.31066155, -0.9957156 , ...,         nan,
          -0.01111806, -1.9761862 ],
         [-0.26909223,         nan,         nan, ...,         nan,
          -1.7923518 , -2.8365202 ],
         [        nan,         nan,         nan, ..., -1.0408442 ,
                  nan, -2.149515  ],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [7], 'to': [1]}

generate models:71

analyse output arrays in iter:78

pre layer res:
27:reshape
{'name': 'reshape', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         ...,
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.],
         [ 0.,  0.,  0., ...,  0.,  0.,  0.]]]], dtype=float32), 'output_shape': TensorShape([1, 32, 112, 112]), 'from': [26], 'to': [24]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 128, 112, 112]), 'from': [27], 'to': [28]}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 128, 112, 112), 'from': [27], 'to': [28]}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 128, 112, 112]), 'from': [27], 'to': [28]}

generate models:72

analyse output arrays in iter:82

pre layer res:
16:log
{'name': 'log', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [16], 'to': [5]}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [16], 'to': [5]}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [16], 'to': [5]}

generate models:76

analyse output arrays in iter:83

pre layer res:
4:add
{'name': 'add', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13, 24], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [4], 'to': [15]}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [4], 'to': [15]}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [4], 'to': [15]}

generate models:77

analyse output arrays in iter:86

pre layer res:
11:relu
{'name': 'relu', 'output': array([[[[  427.26126,   427.26126,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  427.26126,  1224.383  ,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  243.92163,  1224.383  ,  1343.534  , ...,   927.8898 ,
            927.8898 ,   177.53903],
         ...,
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2124.976  , ...,  1003.72565,
            195.69049,   141.53127]],

        [[  427.26126,   427.26126,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  427.26126,  1224.383  ,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  243.92163,  1224.383  ,  1343.534  , ...,   927.8898 ,
            927.8898 ,   177.53903],
         ...,
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2124.976  , ...,  1003.72565,
            195.69049,   141.53127]],

        [[  427.26126,   427.26126,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  427.26126,  1224.383  ,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  243.92163,  1224.383  ,  1343.534  , ...,   927.8898 ,
            927.8898 ,   177.53903],
         ...,
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2124.976  , ...,  1003.72565,
            195.69049,   141.53127]],

        ...,

        [[  427.26126,   427.26126,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  427.26126,  1224.383  ,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  243.92163,  1224.383  ,  1343.534  , ...,   927.8898 ,
            927.8898 ,   177.53903],
         ...,
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2124.976  , ...,  1003.72565,
            195.69049,   141.53127]],

        [[  427.26126,   427.26126,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  427.26126,  1224.383  ,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  243.92163,  1224.383  ,  1343.534  , ...,   927.8898 ,
            927.8898 ,   177.53903],
         ...,
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2124.976  , ...,  1003.72565,
            195.69049,   141.53127]],

        [[  427.26126,   427.26126,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  427.26126,  1224.383  ,  1343.534  , ...,   671.5405 ,
            671.5405 ,   265.59283],
         [  243.92163,  1224.383  ,  1343.534  , ...,   927.8898 ,
            927.8898 ,   177.53903],
         ...,
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2574.0842 , ...,  1299.1648 ,
          30547.723  , 30547.723  ],
         [ 4103.4854 ,  4103.4854 ,  2124.976  , ...,  1003.72565,
            195.69049,   141.53127]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [17], 'to': [4]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.99998915,  0.99998915,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4357385 ,
          -0.4357385 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01320547,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4357385 ,
          -0.4357385 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01320547,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4357385 ,
          -0.4357385 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01320547,
           0.6123662 , -0.9872916 ]],

        ...,

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4357385 ,
          -0.4357385 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01320547,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4357385 ,
          -0.4357385 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01320547,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.724629  ,
           0.724629  , -0.12790392],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4357385 ,
          -0.4357385 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597113,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01320547,
           0.6123662 , -0.9872916 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [11], 'to': [5]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.99998915,  0.99998915,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4359033 ,
          -0.4359033 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4359033 ,
          -0.4359033 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4359033 ,
          -0.4359033 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        ...,

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4359033 ,
          -0.4359033 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4359033 ,
          -0.4359033 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.72530156,
           0.72530156, -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.4359033 ,
          -0.4359033 , -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [11], 'to': [5]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.99998915,  0.99998915,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.43573853,
          -0.43573853, -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.43573853,
          -0.43573853, -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.43573853,
          -0.43573853, -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        ...,

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.43573853,
          -0.43573853, -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.43573853,
          -0.43573853, -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]],

        [[ 0.99998915,  0.99998915,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.99998915,  0.6688926 ,  0.48222977, ...,  0.7246289 ,
           0.7246289 , -0.12790391],
         [ 0.43334422,  0.6688926 ,  0.48222977, ..., -0.43573853,
          -0.43573853, -0.03903713],
         ...,
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 , -0.43582174, ...,  0.11597112,
           0.43180144,  0.43180144],
         [ 0.8444033 ,  0.8444033 ,  0.30634966, ..., -0.01308341,
           0.6123662 , -0.9872916 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [11], 'to': [5]}

generate models:80

analyse output arrays in iter:88

pre layer res:
4:transpose
{'name': 'transpose', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [4], 'to': [6]}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [4], 'to': [6]}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [4], 'to': [6]}

generate models:82

analyse output arrays in iter:93

pre layer res:
13:relu
{'name': 'relu', 'output': array([[[[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.6037338e+34,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.6037338e+34,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.6037338e+34,           inf,           inf, ...,
                    inf,           inf,           inf]],

        ...,

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.6037338e+34,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.6037338e+34,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.6037338e+34,           inf,           inf, ...,
                    inf,           inf,           inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [13], 'to': [15]}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [13], 'to': [15]}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [13], 'to': [15]}

generate models:87

analyse output arrays in iter:95

pre layer res:
18:add
{'name': 'add', 'output': array([[  7769.166,   7769.166, -15857.469, ...,  -3409.76 ,  -3409.76 ,
         -3409.76 ]], dtype=float32), 'output_shape': TensorShape([1, 1024]), 'from': [6, 21], 'to': [16]}
tf node:
{'name': 'softmax', 'output': array([[0., 0., 0., ..., 0., 0., 0.]], dtype=float32), 'output_shape': TensorShape([1, 1024]), 'from': [18], 'to': [7]}
ms node:
{'name': 'softmax', 'output': array([[0., 0., 0., ..., 0., 0., 0.]], dtype=float32), 'output_shape': (1, 1024), 'from': [18], 'to': [7]}
torch node:
{'name': 'softmax', 'output': array([[0., 0., 0., ..., 0., 0., 0.]], dtype=float32), 'output_shape': torch.Size([1, 1024]), 'from': [18], 'to': [7]}

generate models:89

final statics:
total operators:28
tensorflow --> nums:20,distinct_bugs:5
mindspore --> nums:7,distinct_bugs:4
torch --> nums:7,distinct_bugs:4
tensorflow --> 
conv2d:13
sin:1
log:3
cos:2
softmax:1
mindspore --> 
sin:1
log:3
cos:2
softmax:1
torch --> 
sin:1
log:3
cos:2
softmax:1

generate models:92

analyse output arrays in iter:103

pre layer res:
4:log
{'name': 'log', 'output': array([[[[       -inf,  0.93805945,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-1.4832478 ,        -inf, -0.7626127 , ...,        -inf,
                 -inf, -0.15511897],
         [ 0.77506804, -0.88290215, -0.3183565 , ...,  0.996738  ,
           0.1984539 ,        -inf],
         ...,
         [ 0.19691597, -0.641556  , -0.8103897 , ...,  0.36947235,
                 -inf,        -inf],
         [       -inf,        -inf, -0.46142316, ...,        -inf,
           0.2788265 ,  0.640262  ],
         [       -inf,        -inf,        -inf, ...,        -inf,
          -0.3393248 ,  0.39306065]],

        [[       -inf,  0.93805945,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-1.4832478 ,        -inf, -0.7626127 , ...,        -inf,
                 -inf, -0.15511897],
         [ 0.77506804, -0.88290215, -0.3183565 , ...,  0.996738  ,
           0.1984539 ,        -inf],
         ...,
         [ 0.19691597, -0.641556  , -0.8103897 , ...,  0.36947235,
                 -inf,        -inf],
         [       -inf,        -inf, -0.46142316, ...,        -inf,
           0.2788265 ,  0.640262  ],
         [       -inf,        -inf,        -inf, ...,        -inf,
          -0.3393248 ,  0.39306065]],

        [[       -inf,  0.93805945,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-1.4832478 ,        -inf, -0.7626127 , ...,        -inf,
                 -inf, -0.15511897],
         [ 0.77506804, -0.88290215, -0.3183565 , ...,  0.996738  ,
           0.1984539 ,        -inf],
         ...,
         [ 0.19691597, -0.641556  , -0.8103897 , ...,  0.36947235,
                 -inf,        -inf],
         [       -inf,        -inf, -0.46142316, ...,        -inf,
           0.2788265 ,  0.640262  ],
         [       -inf,        -inf,        -inf, ...,        -inf,
          -0.3393248 ,  0.39306065]],

        ...,

        [[       -inf,  0.93805945,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-1.4832478 ,        -inf, -0.7626127 , ...,        -inf,
                 -inf, -0.15511897],
         [ 0.77506804, -0.88290215, -0.3183565 , ...,  0.996738  ,
           0.1984539 ,        -inf],
         ...,
         [ 0.19691597, -0.641556  , -0.8103897 , ...,  0.36947235,
                 -inf,        -inf],
         [       -inf,        -inf, -0.46142316, ...,        -inf,
           0.2788265 ,  0.640262  ],
         [       -inf,        -inf,        -inf, ...,        -inf,
          -0.3393248 ,  0.39306065]],

        [[       -inf,  0.93805945,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-1.4832478 ,        -inf, -0.7626127 , ...,        -inf,
                 -inf, -0.15511897],
         [ 0.77506804, -0.88290215, -0.3183565 , ...,  0.996738  ,
           0.1984539 ,        -inf],
         ...,
         [ 0.19691597, -0.641556  , -0.8103897 , ...,  0.36947235,
                 -inf,        -inf],
         [       -inf,        -inf, -0.46142316, ...,        -inf,
           0.2788265 ,  0.640262  ],
         [       -inf,        -inf,        -inf, ...,        -inf,
          -0.3393248 ,  0.39306065]],

        [[       -inf,  0.93805945,        -inf, ...,        -inf,
                 -inf,        -inf],
         [-1.4832478 ,        -inf, -0.7626127 , ...,        -inf,
                 -inf, -0.15511897],
         [ 0.77506804, -0.88290215, -0.3183565 , ...,  0.996738  ,
           0.1984539 ,        -inf],
         ...,
         [ 0.19691597, -0.641556  , -0.8103897 , ...,  0.36947235,
                 -inf,        -inf],
         [       -inf,        -inf, -0.46142316, ...,        -inf,
           0.2788265 ,  0.640262  ],
         [       -inf,        -inf,        -inf, ...,        -inf,
          -0.3393248 ,  0.39306065]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [2], 'to': [3]}
tf node:
{'name': 'maxpool2d', 'output': array([[[[ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
          -3.4028235e+38, -1.5511897e-01, -1.5511897e-01],
         [ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         [ 9.4708866e-01,  9.4708866e-01,  8.6131763e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         ...,
         [ 3.5896361e-01,  9.1914570e-01,  1.2919450e+00, ...,
           7.8745002e-01,  7.8745002e-01,  7.0985818e-01],
         [ 1.9691597e-01,  1.9691597e-01,  1.2919450e+00, ...,
           3.6947235e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142316e-01,  1.2919450e+00, ...,
           2.7882650e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
          -3.4028235e+38, -1.5511897e-01, -1.5511897e-01],
         [ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         [ 9.4708866e-01,  9.4708866e-01,  8.6131763e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         ...,
         [ 3.5896361e-01,  9.1914570e-01,  1.2919450e+00, ...,
           7.8745002e-01,  7.8745002e-01,  7.0985818e-01],
         [ 1.9691597e-01,  1.9691597e-01,  1.2919450e+00, ...,
           3.6947235e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142316e-01,  1.2919450e+00, ...,
           2.7882650e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
          -3.4028235e+38, -1.5511897e-01, -1.5511897e-01],
         [ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         [ 9.4708866e-01,  9.4708866e-01,  8.6131763e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         ...,
         [ 3.5896361e-01,  9.1914570e-01,  1.2919450e+00, ...,
           7.8745002e-01,  7.8745002e-01,  7.0985818e-01],
         [ 1.9691597e-01,  1.9691597e-01,  1.2919450e+00, ...,
           3.6947235e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142316e-01,  1.2919450e+00, ...,
           2.7882650e-01,  6.4026201e-01,  6.4026201e-01]],

        ...,

        [[ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
          -3.4028235e+38, -1.5511897e-01, -1.5511897e-01],
         [ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         [ 9.4708866e-01,  9.4708866e-01,  8.6131763e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         ...,
         [ 3.5896361e-01,  9.1914570e-01,  1.2919450e+00, ...,
           7.8745002e-01,  7.8745002e-01,  7.0985818e-01],
         [ 1.9691597e-01,  1.9691597e-01,  1.2919450e+00, ...,
           3.6947235e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142316e-01,  1.2919450e+00, ...,
           2.7882650e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
          -3.4028235e+38, -1.5511897e-01, -1.5511897e-01],
         [ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         [ 9.4708866e-01,  9.4708866e-01,  8.6131763e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         ...,
         [ 3.5896361e-01,  9.1914570e-01,  1.2919450e+00, ...,
           7.8745002e-01,  7.8745002e-01,  7.0985818e-01],
         [ 1.9691597e-01,  1.9691597e-01,  1.2919450e+00, ...,
           3.6947235e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142316e-01,  1.2919450e+00, ...,
           2.7882650e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
          -3.4028235e+38, -1.5511897e-01, -1.5511897e-01],
         [ 9.3805945e-01,  9.3805945e-01,  9.3805945e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         [ 9.4708866e-01,  9.4708866e-01,  8.6131763e-01, ...,
           9.9673802e-01,  9.9673802e-01,  1.9845390e-01],
         ...,
         [ 3.5896361e-01,  9.1914570e-01,  1.2919450e+00, ...,
           7.8745002e-01,  7.8745002e-01,  7.0985818e-01],
         [ 1.9691597e-01,  1.9691597e-01,  1.2919450e+00, ...,
           3.6947235e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142316e-01,  1.2919450e+00, ...,
           2.7882650e-01,  6.4026201e-01,  6.4026201e-01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [9]}
ms node:
{'name': 'maxpool2d', 'output': array([[[[ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
          -3.4028235e+38, -1.5512227e-01, -1.5512227e-01],
         [ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         [ 9.4709146e-01,  9.4709146e-01,  8.6131614e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         ...,
         [ 3.5896647e-01,  9.1914850e-01,  1.2919439e+00, ...,
           7.8745055e-01,  7.8745055e-01,  7.0985675e-01],
         [ 1.9691448e-01,  1.9691448e-01,  1.2919439e+00, ...,
           3.6947230e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142033e-01,  1.2919439e+00, ...,
           2.7882457e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
          -3.4028235e+38, -1.5512227e-01, -1.5512227e-01],
         [ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         [ 9.4709146e-01,  9.4709146e-01,  8.6131614e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         ...,
         [ 3.5896647e-01,  9.1914850e-01,  1.2919439e+00, ...,
           7.8745055e-01,  7.8745055e-01,  7.0985675e-01],
         [ 1.9691448e-01,  1.9691448e-01,  1.2919439e+00, ...,
           3.6947230e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142033e-01,  1.2919439e+00, ...,
           2.7882457e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
          -3.4028235e+38, -1.5512227e-01, -1.5512227e-01],
         [ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         [ 9.4709146e-01,  9.4709146e-01,  8.6131614e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         ...,
         [ 3.5896647e-01,  9.1914850e-01,  1.2919439e+00, ...,
           7.8745055e-01,  7.8745055e-01,  7.0985675e-01],
         [ 1.9691448e-01,  1.9691448e-01,  1.2919439e+00, ...,
           3.6947230e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142033e-01,  1.2919439e+00, ...,
           2.7882457e-01,  6.4026201e-01,  6.4026201e-01]],

        ...,

        [[ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
          -3.4028235e+38, -1.5512227e-01, -1.5512227e-01],
         [ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         [ 9.4709146e-01,  9.4709146e-01,  8.6131614e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         ...,
         [ 3.5896647e-01,  9.1914850e-01,  1.2919439e+00, ...,
           7.8745055e-01,  7.8745055e-01,  7.0985675e-01],
         [ 1.9691448e-01,  1.9691448e-01,  1.2919439e+00, ...,
           3.6947230e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142033e-01,  1.2919439e+00, ...,
           2.7882457e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
          -3.4028235e+38, -1.5512227e-01, -1.5512227e-01],
         [ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         [ 9.4709146e-01,  9.4709146e-01,  8.6131614e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         ...,
         [ 3.5896647e-01,  9.1914850e-01,  1.2919439e+00, ...,
           7.8745055e-01,  7.8745055e-01,  7.0985675e-01],
         [ 1.9691448e-01,  1.9691448e-01,  1.2919439e+00, ...,
           3.6947230e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142033e-01,  1.2919439e+00, ...,
           2.7882457e-01,  6.4026201e-01,  6.4026201e-01]],

        [[ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
          -3.4028235e+38, -1.5512227e-01, -1.5512227e-01],
         [ 9.3806225e-01,  9.3806225e-01,  9.3806225e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         [ 9.4709146e-01,  9.4709146e-01,  8.6131614e-01, ...,
           9.9673611e-01,  9.9673611e-01,  1.9845471e-01],
         ...,
         [ 3.5896647e-01,  9.1914850e-01,  1.2919439e+00, ...,
           7.8745055e-01,  7.8745055e-01,  7.0985675e-01],
         [ 1.9691448e-01,  1.9691448e-01,  1.2919439e+00, ...,
           3.6947230e-01,  6.4026201e-01,  6.4026201e-01],
         [-3.4028235e+38, -4.6142033e-01,  1.2919439e+00, ...,
           2.7882457e-01,  6.4026201e-01,  6.4026201e-01]]]],
      dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [4], 'to': [9]}
torch node:
{'name': 'maxpool2d', 'output': array([[[[ 0.93805945,  0.93805945,  0.93805945, ...,        -inf,
          -0.15511897, -0.15511897],
         [ 0.93805945,  0.93805945,  0.93805945, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         [ 0.94708866,  0.94708866,  0.86131763, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         ...,
         [ 0.3589636 ,  0.9191457 ,  1.291945  , ...,  0.78745   ,
           0.78745   ,  0.7098582 ],
         [ 0.19691597,  0.19691597,  1.291945  , ...,  0.36947235,
           0.640262  ,  0.640262  ],
         [       -inf, -0.46142316,  1.291945  , ...,  0.2788265 ,
           0.640262  ,  0.640262  ]],

        [[ 0.93805945,  0.93805945,  0.93805945, ...,        -inf,
          -0.15511897, -0.15511897],
         [ 0.93805945,  0.93805945,  0.93805945, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         [ 0.94708866,  0.94708866,  0.86131763, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         ...,
         [ 0.3589636 ,  0.9191457 ,  1.291945  , ...,  0.78745   ,
           0.78745   ,  0.7098582 ],
         [ 0.19691597,  0.19691597,  1.291945  , ...,  0.36947235,
           0.640262  ,  0.640262  ],
         [       -inf, -0.46142316,  1.291945  , ...,  0.2788265 ,
           0.640262  ,  0.640262  ]],

        [[ 0.93805945,  0.93805945,  0.93805945, ...,        -inf,
          -0.15511897, -0.15511897],
         [ 0.93805945,  0.93805945,  0.93805945, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         [ 0.94708866,  0.94708866,  0.86131763, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         ...,
         [ 0.3589636 ,  0.9191457 ,  1.291945  , ...,  0.78745   ,
           0.78745   ,  0.7098582 ],
         [ 0.19691597,  0.19691597,  1.291945  , ...,  0.36947235,
           0.640262  ,  0.640262  ],
         [       -inf, -0.46142316,  1.291945  , ...,  0.2788265 ,
           0.640262  ,  0.640262  ]],

        ...,

        [[ 0.93805945,  0.93805945,  0.93805945, ...,        -inf,
          -0.15511897, -0.15511897],
         [ 0.93805945,  0.93805945,  0.93805945, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         [ 0.94708866,  0.94708866,  0.86131763, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         ...,
         [ 0.3589636 ,  0.9191457 ,  1.291945  , ...,  0.78745   ,
           0.78745   ,  0.7098582 ],
         [ 0.19691597,  0.19691597,  1.291945  , ...,  0.36947235,
           0.640262  ,  0.640262  ],
         [       -inf, -0.46142316,  1.291945  , ...,  0.2788265 ,
           0.640262  ,  0.640262  ]],

        [[ 0.93805945,  0.93805945,  0.93805945, ...,        -inf,
          -0.15511897, -0.15511897],
         [ 0.93805945,  0.93805945,  0.93805945, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         [ 0.94708866,  0.94708866,  0.86131763, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         ...,
         [ 0.3589636 ,  0.9191457 ,  1.291945  , ...,  0.78745   ,
           0.78745   ,  0.7098582 ],
         [ 0.19691597,  0.19691597,  1.291945  , ...,  0.36947235,
           0.640262  ,  0.640262  ],
         [       -inf, -0.46142316,  1.291945  , ...,  0.2788265 ,
           0.640262  ,  0.640262  ]],

        [[ 0.93805945,  0.93805945,  0.93805945, ...,        -inf,
          -0.15511897, -0.15511897],
         [ 0.93805945,  0.93805945,  0.93805945, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         [ 0.94708866,  0.94708866,  0.86131763, ...,  0.996738  ,
           0.996738  ,  0.19845389],
         ...,
         [ 0.3589636 ,  0.9191457 ,  1.291945  , ...,  0.78745   ,
           0.78745   ,  0.7098582 ],
         [ 0.19691597,  0.19691597,  1.291945  , ...,  0.36947235,
           0.640262  ,  0.640262  ],
         [       -inf, -0.46142316,  1.291945  , ...,  0.2788265 ,
           0.640262  ,  0.640262  ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [4], 'to': [9]}

pre layer res:
9:conv2d
{'name': 'conv2d', 'output': array([[[[ 60.035835,  60.035835,  60.035835, ...,       -inf,
           -9.927613,  -9.927613],
         [ 60.035835,  60.035835,  60.035835, ...,  63.791256,
           63.791256,  12.70105 ],
         [ 60.61371 ,  60.61371 ,  55.124287, ...,  63.791256,
           63.791256,  12.70105 ],
         ...,
         [ 22.973665,  58.825375,  82.684525, ...,  50.396786,
           50.396786,  45.430912],
         [ 12.602615,  12.602615,  82.684525, ...,  23.646238,
           40.976788,  40.976788],
         [      -inf, -29.531097,  82.684525, ...,  17.8449  ,
           40.976788,  40.976788]],

        [[ 60.035835,  60.035835,  60.035835, ...,       -inf,
           -9.927613,  -9.927613],
         [ 60.035835,  60.035835,  60.035835, ...,  63.791256,
           63.791256,  12.70105 ],
         [ 60.61371 ,  60.61371 ,  55.124287, ...,  63.791256,
           63.791256,  12.70105 ],
         ...,
         [ 22.973665,  58.825375,  82.684525, ...,  50.396786,
           50.396786,  45.430912],
         [ 12.602615,  12.602615,  82.684525, ...,  23.646238,
           40.976788,  40.976788],
         [      -inf, -29.531097,  82.684525, ...,  17.8449  ,
           40.976788,  40.976788]],

        [[ 60.035835,  60.035835,  60.035835, ...,       -inf,
           -9.927613,  -9.927613],
         [ 60.035835,  60.035835,  60.035835, ...,  63.791256,
           63.791256,  12.70105 ],
         [ 60.61371 ,  60.61371 ,  55.124287, ...,  63.791256,
           63.791256,  12.70105 ],
         ...,
         [ 22.973665,  58.825375,  82.684525, ...,  50.396786,
           50.396786,  45.430912],
         [ 12.602615,  12.602615,  82.684525, ...,  23.646238,
           40.976788,  40.976788],
         [      -inf, -29.531097,  82.684525, ...,  17.8449  ,
           40.976788,  40.976788]],

        ...,

        [[ 60.035835,  60.035835,  60.035835, ...,       -inf,
           -9.927613,  -9.927613],
         [ 60.035835,  60.035835,  60.035835, ...,  63.791256,
           63.791256,  12.70105 ],
         [ 60.61371 ,  60.61371 ,  55.124287, ...,  63.791256,
           63.791256,  12.70105 ],
         ...,
         [ 22.973665,  58.825375,  82.684525, ...,  50.396786,
           50.396786,  45.430912],
         [ 12.602615,  12.602615,  82.684525, ...,  23.646238,
           40.976788,  40.976788],
         [      -inf, -29.531097,  82.684525, ...,  17.8449  ,
           40.976788,  40.976788]],

        [[ 60.035835,  60.035835,  60.035835, ...,       -inf,
           -9.927613,  -9.927613],
         [ 60.035835,  60.035835,  60.035835, ...,  63.791256,
           63.791256,  12.70105 ],
         [ 60.61371 ,  60.61371 ,  55.124287, ...,  63.791256,
           63.791256,  12.70105 ],
         ...,
         [ 22.973665,  58.825375,  82.684525, ...,  50.396786,
           50.396786,  45.430912],
         [ 12.602615,  12.602615,  82.684525, ...,  23.646238,
           40.976788,  40.976788],
         [      -inf, -29.531097,  82.684525, ...,  17.8449  ,
           40.976788,  40.976788]],

        [[ 60.035835,  60.035835,  60.035835, ...,       -inf,
           -9.927613,  -9.927613],
         [ 60.035835,  60.035835,  60.035835, ...,  63.791256,
           63.791256,  12.70105 ],
         [ 60.61371 ,  60.61371 ,  55.124287, ...,  63.791256,
           63.791256,  12.70105 ],
         ...,
         [ 22.973665,  58.825375,  82.684525, ...,  50.396786,
           50.396786,  45.430912],
         [ 12.602615,  12.602615,  82.684525, ...,  23.646238,
           40.976788,  40.976788],
         [      -inf, -29.531097,  82.684525, ...,  17.8449  ,
           40.976788,  40.976788]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [3], 'to': [10, 5, 7]}
tf node:
{'name': 'log', 'output': array([[[[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.0095906, ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.0095906, ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.0095906, ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        ...,

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.0095906, ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.0095906, ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.0095906, ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [9], 'to': [26, 26]}
ms node:
{'name': 'log', 'output': array([[[[4.0949435, 4.0949435, 4.0949435, ...,       nan,       nan,
                nan],
         [4.0949435, 4.0949435, 4.0949435, ..., 4.155612 , 4.155612 ,
          2.5416868],
         [4.104523 , 4.104523 , 4.0095887, ..., 4.155612 , 4.155612 ,
          2.5416868],
         ...,
         [3.1343603, 4.0745745, 4.415034 , ..., 3.9199255, 3.9199255,
          3.816194 ],
         [2.5338955, 2.5338955, 4.415034 , ..., 3.163204 , 3.7130086,
          3.7130086],
         [      nan,       nan, 4.415034 , ..., 2.8817115, 3.7130086,
          3.7130086]],

        [[4.0949435, 4.0949435, 4.0949435, ...,       nan,       nan,
                nan],
         [4.0949435, 4.0949435, 4.0949435, ..., 4.155612 , 4.155612 ,
          2.5416868],
         [4.104523 , 4.104523 , 4.0095887, ..., 4.155612 , 4.155612 ,
          2.5416868],
         ...,
         [3.1343603, 4.0745745, 4.415034 , ..., 3.9199255, 3.9199255,
          3.816194 ],
         [2.5338955, 2.5338955, 4.415034 , ..., 3.163204 , 3.7130086,
          3.7130086],
         [      nan,       nan, 4.415034 , ..., 2.8817115, 3.7130086,
          3.7130086]],

        [[4.0949435, 4.0949435, 4.0949435, ...,       nan,       nan,
                nan],
         [4.0949435, 4.0949435, 4.0949435, ..., 4.155612 , 4.155612 ,
          2.5416868],
         [4.104523 , 4.104523 , 4.0095887, ..., 4.155612 , 4.155612 ,
          2.5416868],
         ...,
         [3.1343603, 4.0745745, 4.415034 , ..., 3.9199255, 3.9199255,
          3.816194 ],
         [2.5338955, 2.5338955, 4.415034 , ..., 3.163204 , 3.7130086,
          3.7130086],
         [      nan,       nan, 4.415034 , ..., 2.8817115, 3.7130086,
          3.7130086]],

        ...,

        [[4.0949435, 4.0949435, 4.0949435, ...,       nan,       nan,
                nan],
         [4.0949435, 4.0949435, 4.0949435, ..., 4.155612 , 4.155612 ,
          2.5416868],
         [4.104523 , 4.104523 , 4.0095887, ..., 4.155612 , 4.155612 ,
          2.5416868],
         ...,
         [3.1343603, 4.0745745, 4.415034 , ..., 3.9199255, 3.9199255,
          3.816194 ],
         [2.5338955, 2.5338955, 4.415034 , ..., 3.163204 , 3.7130086,
          3.7130086],
         [      nan,       nan, 4.415034 , ..., 2.8817115, 3.7130086,
          3.7130086]],

        [[4.0949435, 4.0949435, 4.0949435, ...,       nan,       nan,
                nan],
         [4.0949435, 4.0949435, 4.0949435, ..., 4.155612 , 4.155612 ,
          2.5416868],
         [4.104523 , 4.104523 , 4.0095887, ..., 4.155612 , 4.155612 ,
          2.5416868],
         ...,
         [3.1343603, 4.0745745, 4.415034 , ..., 3.9199255, 3.9199255,
          3.816194 ],
         [2.5338955, 2.5338955, 4.415034 , ..., 3.163204 , 3.7130086,
          3.7130086],
         [      nan,       nan, 4.415034 , ..., 2.8817115, 3.7130086,
          3.7130086]],

        [[4.0949435, 4.0949435, 4.0949435, ...,       nan,       nan,
                nan],
         [4.0949435, 4.0949435, 4.0949435, ..., 4.155612 , 4.155612 ,
          2.5416868],
         [4.104523 , 4.104523 , 4.0095887, ..., 4.155612 , 4.155612 ,
          2.5416868],
         ...,
         [3.1343603, 4.0745745, 4.415034 , ..., 3.9199255, 3.9199255,
          3.816194 ],
         [2.5338955, 2.5338955, 4.415034 , ..., 3.163204 , 3.7130086,
          3.7130086],
         [      nan,       nan, 4.415034 , ..., 2.8817115, 3.7130086,
          3.7130086]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [9], 'to': [26, 26]}
torch node:
{'name': 'log', 'output': array([[[[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.00959  , ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.00959  , ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.00959  , ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        ...,

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.00959  , ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.00959  , ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]],

        [[4.0949416, 4.0949416, 4.0949416, ...,       nan,       nan,
                nan],
         [4.0949416, 4.0949416, 4.0949416, ..., 4.1556163, 4.1556163,
          2.5416846],
         [4.1045213, 4.1045213, 4.00959  , ..., 4.1556163, 4.1556163,
          2.5416846],
         ...,
         [3.1343486, 4.0745735, 4.4150324, ..., 3.9199274, 3.9199274,
          3.8161929],
         [2.5339043, 2.5339043, 4.4150324, ..., 3.163204 , 3.7130058,
          3.7130058],
         [      nan,       nan, 4.4150324, ..., 2.8817177, 3.7130058,
          3.7130058]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [9], 'to': [26, 26]}

generate models:95

analyse output arrays in iter:117

pre layer res:
16:log
{'name': 'log', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [8], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [16], 'to': [15]}
ms node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [16], 'to': [15]}
torch node:
{'name': 'conv2d', 'output': array([[[[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [16], 'to': [15]}

generate models:108

analyse output arrays in iter:125

pre layer res:
9:add
{'name': 'add', 'output': array([[[[ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          223.96904 , 223.96904 ],
         [ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          313.04382 , 313.04382 ],
         [154.60716 , 154.60716 , 154.60716 , ...,   0.      ,
          313.04382 , 313.04382 ],
         ...,
         [ 59.233803,  76.30695 ,  84.309456, ..., 259.25513 ,
          181.34032 , 181.34032 ],
         [ 59.233803,  76.30695 ,  76.30695 , ..., 259.25513 ,
           26.622555,  26.622555],
         [ 59.233803,  71.83806 ,  71.83806 , ..., 259.25513 ,
           26.622555,  26.622555]],

        [[ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          223.96904 , 223.96904 ],
         [ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          313.04382 , 313.04382 ],
         [154.60716 , 154.60716 , 154.60716 , ...,   0.      ,
          313.04382 , 313.04382 ],
         ...,
         [ 59.233803,  76.30695 ,  84.309456, ..., 259.25513 ,
          181.34032 , 181.34032 ],
         [ 59.233803,  76.30695 ,  76.30695 , ..., 259.25513 ,
           26.622555,  26.622555],
         [ 59.233803,  71.83806 ,  71.83806 , ..., 259.25513 ,
           26.622555,  26.622555]],

        [[ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          223.96904 , 223.96904 ],
         [ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          313.04382 , 313.04382 ],
         [154.60716 , 154.60716 , 154.60716 , ...,   0.      ,
          313.04382 , 313.04382 ],
         ...,
         [ 59.233803,  76.30695 ,  84.309456, ..., 259.25513 ,
          181.34032 , 181.34032 ],
         [ 59.233803,  76.30695 ,  76.30695 , ..., 259.25513 ,
           26.622555,  26.622555],
         [ 59.233803,  71.83806 ,  71.83806 , ..., 259.25513 ,
           26.622555,  26.622555]],

        ...,

        [[ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          223.96904 , 223.96904 ],
         [ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          313.04382 , 313.04382 ],
         [154.60716 , 154.60716 , 154.60716 , ...,   0.      ,
          313.04382 , 313.04382 ],
         ...,
         [ 59.233803,  76.30695 ,  84.309456, ..., 259.25513 ,
          181.34032 , 181.34032 ],
         [ 59.233803,  76.30695 ,  76.30695 , ..., 259.25513 ,
           26.622555,  26.622555],
         [ 59.233803,  71.83806 ,  71.83806 , ..., 259.25513 ,
           26.622555,  26.622555]],

        [[ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          223.96904 , 223.96904 ],
         [ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          313.04382 , 313.04382 ],
         [154.60716 , 154.60716 , 154.60716 , ...,   0.      ,
          313.04382 , 313.04382 ],
         ...,
         [ 59.233803,  76.30695 ,  84.309456, ..., 259.25513 ,
          181.34032 , 181.34032 ],
         [ 59.233803,  76.30695 ,  76.30695 , ..., 259.25513 ,
           26.622555,  26.622555],
         [ 59.233803,  71.83806 ,  71.83806 , ..., 259.25513 ,
           26.622555,  26.622555]],

        [[ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          223.96904 , 223.96904 ],
         [ 96.160065,  96.160065,  96.160065, ..., 172.93703 ,
          313.04382 , 313.04382 ],
         [154.60716 , 154.60716 , 154.60716 , ...,   0.      ,
          313.04382 , 313.04382 ],
         ...,
         [ 59.233803,  76.30695 ,  84.309456, ..., 259.25513 ,
          181.34032 , 181.34032 ],
         [ 59.233803,  76.30695 ,  76.30695 , ..., 259.25513 ,
           26.622555,  26.622555],
         [ 59.233803,  71.83806 ,  71.83806 , ..., 259.25513 ,
           26.622555,  26.622555]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [5, 3], 'to': [12, 16]}
tf node:
{'name': 'cos', 'output': array([[[[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.89761955,  0.6147481 , -0.8710081 , ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.89761955,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089428,  0.08089428],
         [-0.89761955, -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089428,  0.08089428]],

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.89761955,  0.6147481 , -0.8710081 , ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.89761955,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089428,  0.08089428],
         [-0.89761955, -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089428,  0.08089428]],

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.89761955,  0.6147481 , -0.8710081 , ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.89761955,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089428,  0.08089428],
         [-0.89761955, -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089428,  0.08089428]],

        ...,

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.89761955,  0.6147481 , -0.8710081 , ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.89761955,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089428,  0.08089428],
         [-0.89761955, -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089428,  0.08089428]],

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.89761955,  0.6147481 , -0.8710081 , ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.89761955,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089428,  0.08089428],
         [-0.89761955, -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089428,  0.08089428]],

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.89761955,  0.6147481 , -0.8710081 , ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.89761955,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089428,  0.08089428],
         [-0.89761955, -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089428,  0.08089428]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [9], 'to': [6]}
ms node:
{'name': 'cos', 'output': array([[[[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        ...,

        [[-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489025, -0.33489025, -0.33489025, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489746, -0.33489746, -0.33489746, ..., -0.9888423 ,
          -0.6090766 , -0.6090766 ],
         [-0.33489746, -0.33489746, -0.33489746, ..., -0.9888423 ,
           0.43967083,  0.43967083],
         [-0.784319  , -0.784319  , -0.784319  , ...,  1.        ,
           0.43967083,  0.43967083],
         ...,
         [-0.8976195 ,  0.61473006, -0.87103426, ..., -0.07366624,
           0.6431594 ,  0.6431594 ],
         [-0.8976195 ,  0.61473006,  0.61473006, ..., -0.07366624,
           0.08091711,  0.08091711],
         [-0.8976195 , -0.91365147, -0.91365147, ..., -0.07366624,
           0.08091711,  0.08091711]],

        [[-0.33489746, -0.33489746, -0.33489746, ..., -0.9888423 ,
          -0.6090766 , -0.6090766 ],
         [-0.33489746, -0.33489746, -0.33489746, ..., -0.9888423 ,
           0.43967083,  0.43967083],
         [-0.784319  , -0.784319  , -0.784319  , ...,  1.        ,
           0.43967083,  0.43967083],
         ...,
         [-0.8976195 ,  0.61473006, -0.87103426, ..., -0.07366624,
           0.6431594 ,  0.6431594 ],
         [-0.8976195 ,  0.61473006,  0.61473006, ..., -0.07366624,
           0.08091711,  0.08091711],
         [-0.8976195 , -0.91365147, -0.91365147, ..., -0.07366624,
           0.08091711,  0.08091711]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [9], 'to': [6]}
torch node:
{'name': 'cos', 'output': array([[[[-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        ...,

        [[-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]],

        [[-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
          -0.6090282 , -0.6090282 ],
         [-0.33489028, -0.33489028, -0.33489028, ..., -0.98885596,
           0.43978047,  0.43978047],
         [-0.7843663 , -0.7843663 , -0.7843663 , ...,  1.        ,
           0.43978047,  0.43978047],
         ...,
         [-0.8976195 ,  0.6147481 , -0.87100804, ..., -0.07366624,
           0.64325285,  0.64325285],
         [-0.8976195 ,  0.6147481 ,  0.6147481 , ..., -0.07366624,
           0.08089429,  0.08089429],
         [-0.8976195 , -0.91367006, -0.91367006, ..., -0.07366624,
           0.08089429,  0.08089429]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [9], 'to': [6]}

generate models:116

analyse output arrays in iter:131

pre layer res:
10:add
{'name': 'add', 'output': array([[[[290194.8 , 371883.9 , 234220.97, ..., 491384.66, 295692.5 ,
          437443.12],
         [290198.5 , 371883.28, 234217.12, ..., 491377.5 , 295695.16,
          437443.16],
         [290197.3 , 371884.66, 234221.67, ..., 491381.53, 295699.  ,
          437441.97],
         ...,
         [290200.8 , 371884.9 , 234222.92, ..., 491369.2 , 295698.28,
          437443.16],
         [290200.2 , 371889.47, 234220.27, ..., 491376.25, 295697.8 ,
          437443.44],
         [290202.5 , 371887.75, 234224.88, ..., 491381.66, 295693.38,
          437439.03]],

        [[290194.8 , 371883.9 , 234220.97, ..., 491384.66, 295692.5 ,
          437443.12],
         [290198.5 , 371883.28, 234217.12, ..., 491377.5 , 295695.16,
          437443.16],
         [290197.3 , 371884.66, 234221.67, ..., 491381.53, 295699.  ,
          437441.97],
         ...,
         [290200.8 , 371884.9 , 234222.92, ..., 491369.2 , 295698.28,
          437443.16],
         [290200.2 , 371889.47, 234220.27, ..., 491376.25, 295697.8 ,
          437443.44],
         [290202.5 , 371887.75, 234224.88, ..., 491381.66, 295693.38,
          437439.03]],

        [[290194.8 , 371883.9 , 234220.97, ..., 491384.66, 295692.5 ,
          437443.12],
         [290198.5 , 371883.28, 234217.12, ..., 491377.5 , 295695.16,
          437443.16],
         [290197.3 , 371884.66, 234221.67, ..., 491381.53, 295699.  ,
          437441.97],
         ...,
         [290200.8 , 371884.9 , 234222.92, ..., 491369.2 , 295698.28,
          437443.16],
         [290200.2 , 371889.47, 234220.27, ..., 491376.25, 295697.8 ,
          437443.44],
         [290202.5 , 371887.75, 234224.88, ..., 491381.66, 295693.38,
          437439.03]],

        ...,

        [[290194.8 , 371883.9 , 234220.97, ..., 491384.66, 295692.5 ,
          437443.12],
         [290198.5 , 371883.28, 234217.12, ..., 491377.5 , 295695.16,
          437443.16],
         [290197.3 , 371884.66, 234221.67, ..., 491381.53, 295699.  ,
          437441.97],
         ...,
         [290200.8 , 371884.9 , 234222.92, ..., 491369.2 , 295698.28,
          437443.16],
         [290200.2 , 371889.47, 234220.27, ..., 491376.25, 295697.8 ,
          437443.44],
         [290202.5 , 371887.75, 234224.88, ..., 491381.66, 295693.38,
          437439.03]],

        [[290194.8 , 371883.9 , 234220.97, ..., 491384.66, 295692.5 ,
          437443.12],
         [290198.5 , 371883.28, 234217.12, ..., 491377.5 , 295695.16,
          437443.16],
         [290197.3 , 371884.66, 234221.67, ..., 491381.53, 295699.  ,
          437441.97],
         ...,
         [290200.8 , 371884.9 , 234222.92, ..., 491369.2 , 295698.28,
          437443.16],
         [290200.2 , 371889.47, 234220.27, ..., 491376.25, 295697.8 ,
          437443.44],
         [290202.5 , 371887.75, 234224.88, ..., 491381.66, 295693.38,
          437439.03]],

        [[290194.8 , 371883.9 , 234220.97, ..., 491384.66, 295692.5 ,
          437443.12],
         [290198.5 , 371883.28, 234217.12, ..., 491377.5 , 295695.16,
          437443.16],
         [290197.3 , 371884.66, 234221.67, ..., 491381.53, 295699.  ,
          437441.97],
         ...,
         [290200.8 , 371884.9 , 234222.92, ..., 491369.2 , 295698.28,
          437443.16],
         [290200.2 , 371889.47, 234220.27, ..., 491376.25, 295697.8 ,
          437443.44],
         [290202.5 , 371887.75, 234224.88, ..., 491381.66, 295693.38,
          437439.03]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [8, 8], 'to': [15]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994575],
         [-0.9869373 ,  0.9239657 ,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.1482861 ,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994575],
         [-0.9869373 ,  0.9239657 ,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.1482861 ,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994575],
         [-0.9869373 ,  0.9239657 ,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.1482861 ,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        ...,

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994575],
         [-0.9869373 ,  0.9239657 ,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.1482861 ,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994575],
         [-0.9869373 ,  0.9239657 ,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.1482861 ,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994575],
         [-0.9869373 ,  0.9239657 ,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.1482861 ,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10], 'to': [11]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.32079658,
           0.8852611 ,  0.05878357],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.51969534,
          -0.566055  ,  0.02756399],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.3364674 ,
           0.96458614,  0.9373929 ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5360775 ,
           0.5522993 ,  0.02756399],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.97463816,
           0.11610737, -0.2509703 ],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.45124775,
           0.9244297 , -0.84734994]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.32079658,
           0.8852611 ,  0.05878357],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.51969534,
          -0.566055  ,  0.02756399],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.3364674 ,
           0.96458614,  0.9373929 ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5360775 ,
           0.5522993 ,  0.02756399],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.97463816,
           0.11610737, -0.2509703 ],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.45124775,
           0.9244297 , -0.84734994]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.32079658,
           0.8852611 ,  0.05878357],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.51969534,
          -0.566055  ,  0.02756399],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.3364674 ,
           0.96458614,  0.9373929 ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5360775 ,
           0.5522993 ,  0.02756399],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.97463816,
           0.11610737, -0.2509703 ],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.45124775,
           0.9244297 , -0.84734994]],

        ...,

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.32079658,
           0.8852611 ,  0.05878357],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.51969534,
          -0.566055  ,  0.02756399],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.3364674 ,
           0.96458614,  0.9373929 ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5360775 ,
           0.5522993 ,  0.02756399],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.97463816,
           0.11610737, -0.2509703 ],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.45124775,
           0.9244297 , -0.84734994]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.32079658,
           0.8852611 ,  0.05878357],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.51969534,
          -0.566055  ,  0.02756399],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.3364674 ,
           0.96458614,  0.9373929 ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5360775 ,
           0.5522993 ,  0.02756399],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.97463816,
           0.11610737, -0.2509703 ],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.45124775,
           0.9244297 , -0.84734994]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.32079658,
           0.8852611 ,  0.05878357],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.51969534,
          -0.566055  ,  0.02756399],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.3364674 ,
           0.96458614,  0.9373929 ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5360775 ,
           0.5522993 ,  0.02756399],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.97463816,
           0.11610737, -0.2509703 ],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.45124775,
           0.9244297 , -0.84734994]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [10], 'to': [11]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994576],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994576],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994576],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        ...,

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994576],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994576],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]],

        [[ 0.927137  ,  0.52551675, -0.8908705 , ..., -0.29104638,
           0.8852611 ,  0.08994576],
         [-0.9869373 ,  0.92396563,  0.38674617, ...,  0.5461357 ,
          -0.566055  ,  0.05878357],
         [-0.518509  , -0.1954121 , -0.97330344, ...,  0.30687994,
           0.96458614,  0.947817  ],
         ...,
         [ 0.7855062 , -0.43197152, -0.08909144, ...,  0.5094398 ,
           0.5522993 ,  0.05878357],
         [ 0.27492684,  0.9562806 , -0.38585365, ...,  0.9671701 ,
           0.11610737, -0.22060287],
         [ 0.5231808 ,  0.14828609,  0.95734733, ...,  0.42314452,
           0.9244297 , -0.8635284 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [10], 'to': [11]}

generate models:122

analyse output arrays in iter:139

pre layer res:
4:add
{'name': 'add', 'output': array([[[[401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 401.26807, ..., 401.89252, 401.89252,
          401.89252],
         ...,
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.23236, 402.1386 , ..., 402.1958 , 402.1958 ,
          401.6244 ]],

        [[401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 401.26807, ..., 401.89252, 401.89252,
          401.89252],
         ...,
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.23236, 402.1386 , ..., 402.1958 , 402.1958 ,
          401.6244 ]],

        [[401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 401.26807, ..., 401.89252, 401.89252,
          401.89252],
         ...,
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.23236, 402.1386 , ..., 402.1958 , 402.1958 ,
          401.6244 ]],

        ...,

        [[401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 401.26807, ..., 401.89252, 401.89252,
          401.89252],
         ...,
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.23236, 402.1386 , ..., 402.1958 , 402.1958 ,
          401.6244 ]],

        [[401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 401.26807, ..., 401.89252, 401.89252,
          401.89252],
         ...,
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.23236, 402.1386 , ..., 402.1958 , 402.1958 ,
          401.6244 ]],

        [[401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 402.62448, ..., 401.89252, 401.94537,
          401.94537],
         [401.26807, 401.26807, 401.26807, ..., 401.89252, 401.89252,
          401.89252],
         ...,
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.28717, 402.1386 , ..., 402.50778, 402.50778,
          402.50778],
         [400.83606, 401.23236, 402.1386 , ..., 402.1958 , 402.1958 ,
          401.6244 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [19, 7], 'to': [8]}
tf node:
{'name': 'sin', 'output': array([[[[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928452,
          -0.22928452, -0.22928452],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928452,
          -0.22928452, -0.22928452],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928452,
          -0.22928452, -0.22928452],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        ...,

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928452,
          -0.22928452, -0.22928452],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928452,
          -0.22928452, -0.22928452],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928452,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928452,
          -0.22928452, -0.22928452],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [12]}
ms node:
{'name': 'sin', 'output': array([[[[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928454,
          -0.22928454, -0.22928454],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928454,
          -0.22928454, -0.22928454],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928454,
          -0.22928454, -0.22928454],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        ...,

        [[-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125,  0.4799709 , ..., -0.22928454,
          -0.17753994, -0.17753994],
         [-0.75509125, -0.75509125, -0.75509125, ..., -0.22928454,
          -0.22928454, -0.22928454],
         ...,
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.74242926,  0.01475065, ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.9602231 , -0.77801424,  0.01475065, ...,  0.07187908,
           0.07187908, -0.47896037]],

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]],

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [4], 'to': [12]}
torch node:
{'name': 'sin', 'output': array([[[[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]],

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]],

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]],

        ...,

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]],

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]],

        [[-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015,  0.4795425 , ..., -0.22851214,
          -0.17750992, -0.17750992],
         [-0.75419015, -0.75419015, -0.75419015, ..., -0.22851214,
          -0.22851214, -0.22851214],
         ...,
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.7429606 ,  0.0138047 , ...,  0.37456012,
           0.37456012,  0.37456012],
         [-0.960189  , -0.77860826,  0.0138047 , ...,  0.07233565,
           0.07233565, -0.47949606]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [4], 'to': [12]}

generate models:129

analyse output arrays in iter:140

pre layer res:
17:add
{'name': 'add', 'output': array([[[[ 6.1798706e+02,  7.1995862e+02,  7.0697424e+02, ...,
           6.0641272e+02,  6.7871216e+02,  6.4736481e+02],
         [ 6.1798706e+02,  7.1995862e+02,  7.0697424e+02, ...,
           6.0641272e+02,  6.7871216e+02,  6.4736481e+02],
         [ 6.1857153e+02,  7.2054309e+02,  7.0683325e+02, ...,
           6.0605609e+02,  6.7835553e+02,  6.4638849e+02],
         ...,
         [ 6.1803156e+02,  7.2000311e+02,  7.0629327e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02],
         [ 6.1843500e+02,  7.1908826e+02,  7.0699146e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02],
         [ 6.1843500e+02,  7.1908826e+02,  7.0699146e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02]],

        [[ 6.1798706e+02,  7.1995862e+02,  7.0697424e+02, ...,
           6.0641272e+02,  6.7871216e+02,  6.4736481e+02],
         [ 6.1798706e+02,  7.1995862e+02,  7.0697424e+02, ...,
           6.0641272e+02,  6.7871216e+02,  6.4736481e+02],
         [ 6.1857153e+02,  7.2054309e+02,  7.0683325e+02, ...,
           6.0605609e+02,  6.7835553e+02,  6.4638849e+02],
         ...,
         [ 6.1803156e+02,  7.2000311e+02,  7.0629327e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02],
         [ 6.1843500e+02,  7.1908826e+02,  7.0699146e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02],
         [ 6.1843500e+02,  7.1908826e+02,  7.0699146e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02]],

        [[ 6.1798706e+02,  7.1995862e+02,  7.0697424e+02, ...,
           6.0641272e+02,  6.7871216e+02,  6.4736481e+02],
         [ 6.1798706e+02,  7.1995862e+02,  7.0697424e+02, ...,
           6.0641272e+02,  6.7871216e+02,  6.4736481e+02],
         [ 6.1857153e+02,  7.2054309e+02,  7.0683325e+02, ...,
           6.0605609e+02,  6.7835553e+02,  6.4638849e+02],
         ...,
         [ 6.1803156e+02,  7.2000311e+02,  7.0629327e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02],
         [ 6.1843500e+02,  7.1908826e+02,  7.0699146e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02],
         [ 6.1843500e+02,  7.1908826e+02,  7.0699146e+02, ...,
           6.0733752e+02,  6.7963696e+02,  6.4766992e+02]],

        ...,

        [[ 2.5289986e-01,  2.5289986e-01,  9.7839677e-01, ...,
          -5.1149416e-01, -5.1149416e-01,  1.0821171e-01],
         [ 2.5289986e-01,  2.5289986e-01,  9.7839677e-01, ...,
          -5.1149416e-01, -5.1149416e-01,  1.0821171e-01],
         [ 8.3738887e-01,  8.3738887e-01,  8.3738887e-01, ...,
          -8.6807477e-01, -8.6807477e-01, -8.6807477e-01],
         ...,
         [ 2.9744491e-01,  2.9744491e-01,  2.9744491e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01],
         [ 7.0086479e-01, -6.1745101e-01,  9.9558640e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01],
         [ 7.0086479e-01, -6.1745101e-01,  9.9558640e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01]],

        [[ 2.5289986e-01,  2.5289986e-01,  9.7839677e-01, ...,
          -5.1149416e-01, -5.1149416e-01,  1.0821171e-01],
         [ 2.5289986e-01,  2.5289986e-01,  9.7839677e-01, ...,
          -5.1149416e-01, -5.1149416e-01,  1.0821171e-01],
         [ 8.3738887e-01,  8.3738887e-01,  8.3738887e-01, ...,
          -8.6807477e-01, -8.6807477e-01, -8.6807477e-01],
         ...,
         [ 2.9744491e-01,  2.9744491e-01,  2.9744491e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01],
         [ 7.0086479e-01, -6.1745101e-01,  9.9558640e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01],
         [ 7.0086479e-01, -6.1745101e-01,  9.9558640e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01]],

        [[ 2.5289986e-01,  2.5289986e-01,  9.7839677e-01, ...,
          -5.1149416e-01, -5.1149416e-01,  1.0821171e-01],
         [ 2.5289986e-01,  2.5289986e-01,  9.7839677e-01, ...,
          -5.1149416e-01, -5.1149416e-01,  1.0821171e-01],
         [ 8.3738887e-01,  8.3738887e-01,  8.3738887e-01, ...,
          -8.6807477e-01, -8.6807477e-01, -8.6807477e-01],
         ...,
         [ 2.9744491e-01,  2.9744491e-01,  2.9744491e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01],
         [ 7.0086479e-01, -6.1745101e-01,  9.9558640e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01],
         [ 7.0086479e-01, -6.1745101e-01,  9.9558640e-01, ...,
           4.1334283e-01,  4.1334283e-01,  4.1334283e-01]]]],
      dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [8, 15], 'to': [4]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.7874693 , -0.50889486, -0.11563683, ..., -0.08523405,
           0.1277946 ,  0.19545414],
         [ 0.7874693 , -0.50889486, -0.11563683, ..., -0.08523405,
           0.1277946 ,  0.19545414],
         [ 0.31667265, -0.89939046,  0.02509247, ...,  0.2679753 ,
          -0.2265006 , -0.7029935 ],
         ...,
         [ 0.75927454, -0.5466808 ,  0.5354776 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ],
         [ 0.44283235,  0.33014843, -0.1327153 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ],
         [ 0.44283235,  0.33014843, -0.1327153 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ]],

        [[ 0.7874693 , -0.50889486, -0.11563683, ..., -0.08523405,
           0.1277946 ,  0.19545414],
         [ 0.7874693 , -0.50889486, -0.11563683, ..., -0.08523405,
           0.1277946 ,  0.19545414],
         [ 0.31667265, -0.89939046,  0.02509247, ...,  0.2679753 ,
          -0.2265006 , -0.7029935 ],
         ...,
         [ 0.75927454, -0.5466808 ,  0.5354776 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ],
         [ 0.44283235,  0.33014843, -0.1327153 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ],
         [ 0.44283235,  0.33014843, -0.1327153 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ]],

        [[ 0.7874693 , -0.50889486, -0.11563683, ..., -0.08523405,
           0.1277946 ,  0.19545414],
         [ 0.7874693 , -0.50889486, -0.11563683, ..., -0.08523405,
           0.1277946 ,  0.19545414],
         [ 0.31667265, -0.89939046,  0.02509247, ...,  0.2679753 ,
          -0.2265006 , -0.7029935 ],
         ...,
         [ 0.75927454, -0.5466808 ,  0.5354776 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ],
         [ 0.44283235,  0.33014843, -0.1327153 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ],
         [ 0.44283235,  0.33014843, -0.1327153 , ..., -0.8469075 ,
           0.8688872 ,  0.4810353 ]],

        ...,

        [[ 0.2502126 ,  0.2502126 ,  0.8296033 , ..., -0.48948073,
          -0.48948073,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.8296033 , ..., -0.48948073,
          -0.48948073,  0.10800064],
         [ 0.7428978 ,  0.7428978 ,  0.7428978 , ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.6448789 , -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.6448789 , -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]],

        [[ 0.2502126 ,  0.2502126 ,  0.8296033 , ..., -0.48948073,
          -0.48948073,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.8296033 , ..., -0.48948073,
          -0.48948073,  0.10800064],
         [ 0.7428978 ,  0.7428978 ,  0.7428978 , ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.6448789 , -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.6448789 , -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]],

        [[ 0.2502126 ,  0.2502126 ,  0.8296033 , ..., -0.48948073,
          -0.48948073,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.8296033 , ..., -0.48948073,
          -0.48948073,  0.10800064],
         [ 0.7428978 ,  0.7428978 ,  0.7428978 , ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.6448789 , -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.6448789 , -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [17], 'to': [18]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.78746927, -0.50889486, -0.11563683, ..., -0.08529486,
           0.1277946 ,  0.19539428],
         [ 0.78746927, -0.50889486, -0.11563683, ..., -0.08529486,
           0.1277946 ,  0.19539428],
         [ 0.31667265, -0.89939046,  0.02509247, ...,  0.26791647,
          -0.22650059, -0.7030369 ],
         ...,
         [ 0.75927454, -0.5466808 ,  0.5354776 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ],
         [ 0.44283235,  0.33014846, -0.1327153 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ],
         [ 0.44283235,  0.33014846, -0.1327153 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ]],

        [[ 0.78746927, -0.50889486, -0.11563683, ..., -0.08529486,
           0.1277946 ,  0.19539428],
         [ 0.78746927, -0.50889486, -0.11563683, ..., -0.08529486,
           0.1277946 ,  0.19539428],
         [ 0.31667265, -0.89939046,  0.02509247, ...,  0.26791647,
          -0.22650059, -0.7030369 ],
         ...,
         [ 0.75927454, -0.5466808 ,  0.5354776 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ],
         [ 0.44283235,  0.33014846, -0.1327153 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ],
         [ 0.44283235,  0.33014846, -0.1327153 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ]],

        [[ 0.78746927, -0.50889486, -0.11563683, ..., -0.08529486,
           0.1277946 ,  0.19539428],
         [ 0.78746927, -0.50889486, -0.11563683, ..., -0.08529486,
           0.1277946 ,  0.19539428],
         [ 0.31667265, -0.89939046,  0.02509247, ...,  0.26791647,
          -0.22650059, -0.7030369 ],
         ...,
         [ 0.75927454, -0.5466808 ,  0.5354776 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ],
         [ 0.44283235,  0.33014846, -0.1327153 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ],
         [ 0.44283235,  0.33014846, -0.1327153 , ..., -0.84694   ,
           0.8688871 ,  0.4809818 ]],

        ...,

        [[ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.74289775,  0.74289775,  0.74289775, ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]],

        [[ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.74289775,  0.74289775,  0.74289775, ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]],

        [[ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.74289775,  0.74289775,  0.74289775, ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [17], 'to': [18]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.78746927, -0.50889486, -0.11569746, ..., -0.08535567,
           0.12785514,  0.19545414],
         [ 0.78746927, -0.50889486, -0.11569746, ..., -0.08535567,
           0.12785514,  0.19545414],
         [ 0.31667265, -0.89939046,  0.02503145, ...,  0.26785767,
          -0.22644114, -0.70299345],
         ...,
         [ 0.7592745 , -0.5466808 ,  0.535426  , ..., -0.8469724 ,
           0.86891735,  0.4810353 ],
         [ 0.44283235,  0.33014846, -0.1327758 , ..., -0.8469724 ,
           0.86891735,  0.4810353 ],
         [ 0.44283235,  0.33014846, -0.1327758 , ..., -0.8469724 ,
           0.86891735,  0.4810353 ]],

        [[ 0.78746927, -0.50889486, -0.11569746, ..., -0.08535567,
           0.12785514,  0.19545414],
         [ 0.78746927, -0.50889486, -0.11569746, ..., -0.08535567,
           0.12785514,  0.19545414],
         [ 0.31667265, -0.89939046,  0.02503145, ...,  0.26785767,
          -0.22644114, -0.70299345],
         ...,
         [ 0.7592745 , -0.5466808 ,  0.535426  , ..., -0.8469724 ,
           0.86891735,  0.4810353 ],
         [ 0.44283235,  0.33014846, -0.1327758 , ..., -0.8469724 ,
           0.86891735,  0.4810353 ],
         [ 0.44283235,  0.33014846, -0.1327758 , ..., -0.8469724 ,
           0.86891735,  0.4810353 ]],

        [[ 0.78746927, -0.50889486, -0.11569746, ..., -0.08535567,
           0.12785514,  0.19545414],
         [ 0.78746927, -0.50889486, -0.11569746, ..., -0.08535567,
           0.12785514,  0.19545414],
         [ 0.31667265, -0.89939046,  0.02503145, ...,  0.26785767,
          -0.22644114, -0.70299345],
         ...,
         [ 0.7592745 , -0.5466808 ,  0.535426  , ..., -0.8469724 ,
           0.86891735,  0.4810353 ],
         [ 0.44283235,  0.33014846, -0.1327758 , ..., -0.8469724 ,
           0.86891735,  0.4810353 ],
         [ 0.44283235,  0.33014846, -0.1327758 , ..., -0.8469724 ,
           0.86891735,  0.4810353 ]],

        ...,

        [[ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.74289775,  0.74289775,  0.74289775, ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]],

        [[ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.74289775,  0.74289775,  0.74289775, ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]],

        [[ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.2502126 ,  0.2502126 ,  0.82960325, ..., -0.48948076,
          -0.48948076,  0.10800064],
         [ 0.74289775,  0.74289775,  0.74289775, ..., -0.7630861 ,
          -0.7630861 , -0.7630861 ],
         ...,
         [ 0.29307827,  0.29307827,  0.29307827, ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287],
         [ 0.64487886, -0.5789587 ,  0.8390781 , ...,  0.40167287,
           0.40167287,  0.40167287]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [17], 'to': [18]}

generate models:130

analyse output arrays in iter:148

pre layer res:
4:log
{'name': 'log', 'output': array([[[[2.182024 , 2.182024 , 1.2116865, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 2.7829833, 2.7829833,
          2.7829833],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[2.182024 , 2.182024 , 1.2116865, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 2.7829833, 2.7829833,
          2.7829833],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[2.182024 , 2.182024 , 1.2116865, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 2.7829833, 2.7829833,
          2.7829833],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        ...,

        [[2.182024 , 2.182024 , 1.2116865, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 2.7829833, 2.7829833,
          2.7829833],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[2.182024 , 2.182024 , 1.2116865, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 2.7829833, 2.7829833,
          2.7829833],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]],

        [[2.182024 , 2.182024 , 1.2116865, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 3.1457434, 3.1457434,
          2.7829833],
         [3.0421865, 3.0421865, 2.7935047, ..., 2.7829833, 2.7829833,
          2.7829833],
         ...,
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf],
         [     -inf,      -inf,      -inf, ...,      -inf,      -inf,
               -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [11], 'to': [14]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.8189441 ,  0.8189441 ,  0.93621004, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93621004, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93621004, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[ 0.8189441 ,  0.8189441 ,  0.93621004, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93621004, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93621004, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [4], 'to': [12]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.8189441 ,  0.8189441 ,  0.93620884, ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ...,  0.35097373,
           0.35097373,  0.35097373],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93620884, ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ...,  0.35097373,
           0.35097373,  0.35097373],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93620884, ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ...,  0.35097373,
           0.35097373,  0.35097373],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[ 0.8189441 ,  0.8189441 ,  0.93620884, ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ...,  0.35097373,
           0.35097373,  0.35097373],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93620884, ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ...,  0.35097373,
           0.35097373,  0.35097373],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189441 ,  0.8189441 ,  0.93620884, ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ..., -0.00415047,
          -0.00415047,  0.35097373],
         [ 0.09923968,  0.09923968,  0.3411024 , ...,  0.35097373,
           0.35097373,  0.35097373],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [4], 'to': [12]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.8189445 ,  0.8189445 ,  0.9362098 , ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189445 ,  0.8189445 ,  0.9362098 , ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189445 ,  0.8189445 ,  0.9362098 , ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[ 0.8189445 ,  0.8189445 ,  0.9362098 , ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189445 ,  0.8189445 ,  0.9362098 , ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[ 0.8189445 ,  0.8189445 ,  0.9362098 , ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ..., -0.0041507 ,
          -0.0041507 ,  0.35097238],
         [ 0.09924252,  0.09924252,  0.34110105, ...,  0.35097238,
           0.35097238,  0.35097238],
         ...,
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [4], 'to': [12]}

generate models:138

analyse output arrays in iter:151

pre layer res:
4:add
{'name': 'add', 'output': array([[[[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 6.4489062e+27, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 5.6866284e+09, ...,
                    inf,           inf, 2.0000000e+00]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 6.4489062e+27, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 5.6866284e+09, ...,
                    inf,           inf, 2.0000000e+00]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 6.4489062e+27, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 5.6866284e+09, ...,
                    inf,           inf, 2.0000000e+00]],

        ...,

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 6.4489062e+27, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 5.6866284e+09, ...,
                    inf,           inf, 2.0000000e+00]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 6.4489062e+27, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 5.6866284e+09, ...,
                    inf,           inf, 2.0000000e+00]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 6.4489062e+27, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf, 5.6866284e+09, ...,
                    inf,           inf, 2.0000000e+00]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [24, 10], 'to': [6]}
tf node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [4], 'to': [8]}
ms node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan,  0.]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan,  0.]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan,  0.]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan,  0.]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan,  0.]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan,  0., ..., nan, nan,  0.]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [4], 'to': [8]}
torch node:
{'name': 'softmax', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [4], 'to': [8]}

generate models:141

analyse output arrays in iter:161

pre layer res:
8:reshape
{'name': 'reshape', 'output': array([[[[-inf,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         ...,
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.]],

        [[  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         ...,
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.]],

        [[  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         ...,
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.]],

        ...,

        [[  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         ...,
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.]],

        [[  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         ...,
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.]],

        [[  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         ...,
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.],
         [  0.,   0.,   0., ...,   0.,   0.,   0.]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [24], 'to': [4]}
tf node:
{'name': 'log', 'output': array([[[[ nan, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [8], 'to': [19]}
ms node:
{'name': 'log', 'output': array([[[[ nan, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [8], 'to': [19]}
torch node:
{'name': 'log', 'output': array([[[[ nan, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        ...,

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [8], 'to': [19]}

generate models:151

analyse output arrays in iter:175

pre layer res:
4:transpose
{'name': 'transpose', 'output': array([[[[          inf,           inf, 4.2354456e+27, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [8.7257812e+02,           inf,           inf, ...,
          8.5087350e+17, 6.7981237e+32, 6.7981237e+32],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.7654105e+22],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf, 4.2354456e+27, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [8.7257812e+02,           inf,           inf, ...,
          8.5087350e+17, 6.7981237e+32, 6.7981237e+32],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.7654105e+22],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf, 4.2354456e+27, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [8.7257812e+02,           inf,           inf, ...,
          8.5087350e+17, 6.7981237e+32, 6.7981237e+32],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.7654105e+22],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        ...,

        [[          inf,           inf, 4.2354456e+27, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [8.7257812e+02,           inf,           inf, ...,
          8.5087350e+17, 6.7981237e+32, 6.7981237e+32],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.7654105e+22],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf, 4.2354456e+27, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [8.7257812e+02,           inf,           inf, ...,
          8.5087350e+17, 6.7981237e+32, 6.7981237e+32],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.7654105e+22],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf, 4.2354456e+27, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [8.7257812e+02,           inf,           inf, ...,
          8.5087350e+17, 6.7981237e+32, 6.7981237e+32],
         ...,
         [          inf,           inf,           inf, ...,
                    inf,           inf, 5.7654105e+22],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [14]}
tf node:
{'name': 'conv2d', 'output': array([[[[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        ...,

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]],

        [[nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         ...,
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan],
         [nan, nan, nan, ..., nan, nan, nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 30, 30]), 'from': [4], 'to': [15]}
ms node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': (1, 64, 30, 30), 'from': [4], 'to': [15]}
torch node:
{'name': 'conv2d', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 30, 30]), 'from': [4], 'to': [15]}

generate models:164

analyse output arrays in iter:188

pre layer res:
13:relu
{'name': 'relu', 'output': array([[[[ 45627.91 ,  45627.91 , 100552.03 , ...,  68302.06 ,
           77700.21 ,  77700.21 ],
         [ 45627.91 ,  45627.91 , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         [     0.   ,      0.   , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         ...,
         [ 97766.66 , 102498.484, 102498.484, ..., 103601.375,
           73112.05 ,  73112.05 ],
         [ 52187.703, 102498.484, 102498.484, ...,  73112.05 ,
           73112.05 ,  73112.05 ],
         [ 52187.703,  52187.703,  52187.703, ...,  73112.05 ,
           73112.05 ,  73112.05 ]],

        [[ 45627.91 ,  45627.91 , 100552.03 , ...,  68302.06 ,
           77700.21 ,  77700.21 ],
         [ 45627.91 ,  45627.91 , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         [     0.   ,      0.   , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         ...,
         [ 97766.66 , 102498.484, 102498.484, ..., 103601.375,
           73112.05 ,  73112.05 ],
         [ 52187.703, 102498.484, 102498.484, ...,  73112.05 ,
           73112.05 ,  73112.05 ],
         [ 52187.703,  52187.703,  52187.703, ...,  73112.05 ,
           73112.05 ,  73112.05 ]],

        [[ 45627.91 ,  45627.91 , 100552.03 , ...,  68302.06 ,
           77700.21 ,  77700.21 ],
         [ 45627.91 ,  45627.91 , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         [     0.   ,      0.   , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         ...,
         [ 97766.66 , 102498.484, 102498.484, ..., 103601.375,
           73112.05 ,  73112.05 ],
         [ 52187.703, 102498.484, 102498.484, ...,  73112.05 ,
           73112.05 ,  73112.05 ],
         [ 52187.703,  52187.703,  52187.703, ...,  73112.05 ,
           73112.05 ,  73112.05 ]],

        ...,

        [[ 45627.91 ,  45627.91 , 100552.03 , ...,  68302.06 ,
           77700.21 ,  77700.21 ],
         [ 45627.91 ,  45627.91 , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         [     0.   ,      0.   , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         ...,
         [ 97766.66 , 102498.484, 102498.484, ..., 103601.375,
           73112.05 ,  73112.05 ],
         [ 52187.703, 102498.484, 102498.484, ...,  73112.05 ,
           73112.05 ,  73112.05 ],
         [ 52187.703,  52187.703,  52187.703, ...,  73112.05 ,
           73112.05 ,  73112.05 ]],

        [[ 45627.91 ,  45627.91 , 100552.03 , ...,  68302.06 ,
           77700.21 ,  77700.21 ],
         [ 45627.91 ,  45627.91 , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         [     0.   ,      0.   , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         ...,
         [ 97766.66 , 102498.484, 102498.484, ..., 103601.375,
           73112.05 ,  73112.05 ],
         [ 52187.703, 102498.484, 102498.484, ...,  73112.05 ,
           73112.05 ,  73112.05 ],
         [ 52187.703,  52187.703,  52187.703, ...,  73112.05 ,
           73112.05 ,  73112.05 ]],

        [[ 45627.91 ,  45627.91 , 100552.03 , ...,  68302.06 ,
           77700.21 ,  77700.21 ],
         [ 45627.91 ,  45627.91 , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         [     0.   ,      0.   , 100552.03 , ...,  72533.99 ,
           77700.21 ,  77700.21 ],
         ...,
         [ 97766.66 , 102498.484, 102498.484, ..., 103601.375,
           73112.05 ,  73112.05 ],
         [ 52187.703, 102498.484, 102498.484, ...,  73112.05 ,
           73112.05 ,  73112.05 ],
         [ 52187.703,  52187.703,  52187.703, ...,  73112.05 ,
           73112.05 ,  73112.05 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12], 'to': [4]}
tf node:
{'name': 'sin', 'output': array([[[[-0.54931515, -0.54931515,  0.7985085 , ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.54931515, -0.54931515,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.87914383,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.54931515, -0.54931515,  0.7985085 , ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.54931515, -0.54931515,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.87914383,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.54931515, -0.54931515,  0.7985085 , ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.54931515, -0.54931515,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.87914383,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        ...,

        [[-0.54931515, -0.54931515,  0.7985085 , ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.54931515, -0.54931515,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.87914383,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.54931515, -0.54931515,  0.7985085 , ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.54931515, -0.54931515,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.87914383,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.54931515, -0.54931515,  0.7985085 , ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.54931515, -0.54931515,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.7985085 , ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.87914383,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [14]}
ms node:
{'name': 'sin', 'output': array([[[[-0.5493152 , -0.5493152 ,  0.79850847, ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.5493152 , -0.5493152 ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.8791438 ,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.5493152 , -0.5493152 ,  0.79850847, ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.5493152 , -0.5493152 ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.8791438 ,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.5493152 , -0.5493152 ,  0.79850847, ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.5493152 , -0.5493152 ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.8791438 ,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        ...,

        [[-0.5493152 , -0.5493152 ,  0.79850847, ..., -0.64162755,
           0.71747017,  0.71747017],
         [-0.5493152 , -0.5493152 ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         [ 0.        ,  0.        ,  0.79850847, ...,  0.783949  ,
           0.71747017,  0.71747017],
         ...,
         [ 0.28870147,  0.7723033 ,  0.7723033 , ..., -0.8791438 ,
           0.78496563,  0.78496563],
         [-0.42053637,  0.7723033 ,  0.7723033 , ...,  0.78496563,
           0.78496563,  0.78496563],
         [-0.42053637, -0.42053637, -0.42053637, ...,  0.78496563,
           0.78496563,  0.78496563]],

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]],

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [13], 'to': [14]}
torch node:
{'name': 'sin', 'output': array([[[[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]],

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]],

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]],

        ...,

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]],

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]],

        [[-0.62207353, -0.62207353,  0.7793097 , ..., -0.68259364,
           0.56219596,  0.56219596],
         [-0.62207353, -0.62207353,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         [ 0.        ,  0.        ,  0.7793097 , ...,  0.783949  ,
           0.56219596,  0.56219596],
         ...,
         [ 0.5754733 ,  0.8845759 ,  0.8845759 , ..., -0.6494608 ,
           0.81313366,  0.81313366],
         [-0.5695115 ,  0.8845759 ,  0.8845759 , ...,  0.81313366,
           0.81313366,  0.81313366],
         [-0.5695115 , -0.5695115 , -0.5695115 , ...,  0.81313366,
           0.81313366,  0.81313366]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [13], 'to': [14]}

generate models:176

analyse output arrays in iter:211

pre layer res:
10:add
{'name': 'add', 'output': array([[[[-3.1752112 , -4.4805403 ,  1.5870616 , ...,  1.4834176 ,
           1.5689915 ,  1.4066088 ],
         [ 1.570262  , -3.878193  ,  1.2569244 , ...,  0.2698366 ,
           0.8490851 ,  1.1199808 ],
         [-0.2379899 ,  1.5684326 ,  1.4154329 , ...,  1.4742594 ,
           0.5081767 , -4.70591   ],
         ...,
         [ 1.4847022 ,  5.3434505 , -4.1169066 , ...,  1.570723  ,
          -2.3426175 , -0.39867634],
         [ 4.518711  , -3.7885585 ,  0.73560274, ...,  1.2185837 ,
           1.560159  , -2.6566033 ],
         [ 1.3920116 , -0.33134556,  1.0918543 , ...,  1.5696434 ,
           0.25674468, -0.10148269]],

        [[-3.1752112 , -4.4805403 ,  1.5870616 , ...,  1.4834176 ,
           1.5689915 ,  1.4066088 ],
         [ 1.570262  , -3.878193  ,  1.2569244 , ...,  0.2698366 ,
           0.8490851 ,  1.1199808 ],
         [-0.2379899 ,  1.5684326 ,  1.4154329 , ...,  1.4742594 ,
           0.5081767 , -4.70591   ],
         ...,
         [ 1.4847022 ,  5.3434505 , -4.1169066 , ...,  1.570723  ,
          -2.3426175 , -0.39867634],
         [ 4.518711  , -3.7885585 ,  0.73560274, ...,  1.2185837 ,
           1.560159  , -2.6566033 ],
         [ 1.3920116 , -0.33134556,  1.0918543 , ...,  1.5696434 ,
           0.25674468, -0.10148269]],

        [[-3.1752112 , -4.4805403 ,  1.5870616 , ...,  1.4834176 ,
           1.5689915 ,  1.4066088 ],
         [ 1.570262  , -3.878193  ,  1.2569244 , ...,  0.2698366 ,
           0.8490851 ,  1.1199808 ],
         [-0.2379899 ,  1.5684326 ,  1.4154329 , ...,  1.4742594 ,
           0.5081767 , -4.70591   ],
         ...,
         [ 1.4847022 ,  5.3434505 , -4.1169066 , ...,  1.570723  ,
          -2.3426175 , -0.39867634],
         [ 4.518711  , -3.7885585 ,  0.73560274, ...,  1.2185837 ,
           1.560159  , -2.6566033 ],
         [ 1.3920116 , -0.33134556,  1.0918543 , ...,  1.5696434 ,
           0.25674468, -0.10148269]],

        ...,

        [[-3.1752112 , -4.4805403 ,  1.5870616 , ...,  1.4834176 ,
           1.5689915 ,  1.4066088 ],
         [ 1.570262  , -3.878193  ,  1.2569244 , ...,  0.2698366 ,
           0.8490851 ,  1.1199808 ],
         [-0.2379899 ,  1.5684326 ,  1.4154329 , ...,  1.4742594 ,
           0.5081767 , -4.70591   ],
         ...,
         [ 1.4847022 ,  5.3434505 , -4.1169066 , ...,  1.570723  ,
          -2.3426175 , -0.39867634],
         [ 4.518711  , -3.7885585 ,  0.73560274, ...,  1.2185837 ,
           1.560159  , -2.6566033 ],
         [ 1.3920116 , -0.33134556,  1.0918543 , ...,  1.5696434 ,
           0.25674468, -0.10148269]],

        [[-3.1752112 , -4.4805403 ,  1.5870616 , ...,  1.4834176 ,
           1.5689915 ,  1.4066088 ],
         [ 1.570262  , -3.878193  ,  1.2569244 , ...,  0.2698366 ,
           0.8490851 ,  1.1199808 ],
         [-0.2379899 ,  1.5684326 ,  1.4154329 , ...,  1.4742594 ,
           0.5081767 , -4.70591   ],
         ...,
         [ 1.4847022 ,  5.3434505 , -4.1169066 , ...,  1.570723  ,
          -2.3426175 , -0.39867634],
         [ 4.518711  , -3.7885585 ,  0.73560274, ...,  1.2185837 ,
           1.560159  , -2.6566033 ],
         [ 1.3920116 , -0.33134556,  1.0918543 , ...,  1.5696434 ,
           0.25674468, -0.10148269]],

        [[-3.1752112 , -4.4805403 ,  1.5870616 , ...,  1.4834176 ,
           1.5689915 ,  1.4066088 ],
         [ 1.570262  , -3.878193  ,  1.2569244 , ...,  0.2698366 ,
           0.8490851 ,  1.1199808 ],
         [-0.2379899 ,  1.5684326 ,  1.4154329 , ...,  1.4742594 ,
           0.5081767 , -4.70591   ],
         ...,
         [ 1.4847022 ,  5.3434505 , -4.1169066 , ...,  1.570723  ,
          -2.3426175 , -0.39867634],
         [ 4.518711  , -3.7885585 ,  0.73560274, ...,  1.2185837 ,
           1.560159  , -2.6566033 ],
         [ 1.3920116 , -0.33134556,  1.0918543 , ...,  1.5696434 ,
           0.25674468, -0.10148269]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [12, 14], 'to': [17]}
tf node:
{'name': 'log', 'output': array([[[[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118173],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521423,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596731 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118173],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521423,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596731 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118173],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521423,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596731 ,         nan]],

        ...,

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118173],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521423,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596731 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118173],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521423,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596731 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118173],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521423,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596731 ,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10], 'to': [11]}
ms node:
{'name': 'log', 'output': array([[[[        nan,         nan,  0.46188188, ...,  0.3943486 ,
           0.45043066,  0.3411845 ],
         [ 0.45124006,         nan,  0.22867058, ..., -1.3099415 ,
          -0.16359916,  0.11331213],
         [        nan,  0.45007434,  0.3474383 , ...,  0.3881557 ,
          -0.6769275 ,         nan],
         ...,
         [ 0.3952141 ,  1.6758697 ,         nan, ...,  0.45153365,
                  nan,         nan],
         [ 1.5082237 ,         nan, -0.30706513, ...,  0.1976878 ,
           0.4447855 ,         nan],
         [ 0.3307528 ,         nan,  0.08787457, ...,  0.45084605,
          -1.3596748 ,         nan]],

        [[        nan,         nan,  0.46188188, ...,  0.3943486 ,
           0.45043066,  0.3411845 ],
         [ 0.45124006,         nan,  0.22867058, ..., -1.3099415 ,
          -0.16359916,  0.11331213],
         [        nan,  0.45007434,  0.3474383 , ...,  0.3881557 ,
          -0.6769275 ,         nan],
         ...,
         [ 0.3952141 ,  1.6758697 ,         nan, ...,  0.45153365,
                  nan,         nan],
         [ 1.5082237 ,         nan, -0.30706513, ...,  0.1976878 ,
           0.4447855 ,         nan],
         [ 0.3307528 ,         nan,  0.08787457, ...,  0.45084605,
          -1.3596748 ,         nan]],

        [[        nan,         nan,  0.46188188, ...,  0.3943486 ,
           0.45043066,  0.3411845 ],
         [ 0.45124006,         nan,  0.22867058, ..., -1.3099415 ,
          -0.16359916,  0.11331213],
         [        nan,  0.45007434,  0.3474383 , ...,  0.3881557 ,
          -0.6769275 ,         nan],
         ...,
         [ 0.3952141 ,  1.6758697 ,         nan, ...,  0.45153365,
                  nan,         nan],
         [ 1.5082237 ,         nan, -0.30706513, ...,  0.1976878 ,
           0.4447855 ,         nan],
         [ 0.3307528 ,         nan,  0.08787457, ...,  0.45084605,
          -1.3596748 ,         nan]],

        ...,

        [[        nan,         nan,  0.46188188, ...,  0.3943486 ,
           0.45043066,  0.3411845 ],
         [ 0.45124006,         nan,  0.22867058, ..., -1.3099415 ,
          -0.16359916,  0.11331213],
         [        nan,  0.45007434,  0.3474383 , ...,  0.3881557 ,
          -0.6769275 ,         nan],
         ...,
         [ 0.3952141 ,  1.6758697 ,         nan, ...,  0.45153365,
                  nan,         nan],
         [ 1.5082237 ,         nan, -0.30706513, ...,  0.1976878 ,
           0.4447855 ,         nan],
         [ 0.3307528 ,         nan,  0.08787457, ...,  0.45084605,
          -1.3596748 ,         nan]],

        [[        nan,         nan,  0.46188188, ...,  0.3943486 ,
           0.45043066,  0.3411845 ],
         [ 0.45124006,         nan,  0.22867058, ..., -1.3099415 ,
          -0.16359916,  0.11331213],
         [        nan,  0.45007434,  0.3474383 , ...,  0.3881557 ,
          -0.6769275 ,         nan],
         ...,
         [ 0.3952141 ,  1.6758697 ,         nan, ...,  0.45153365,
                  nan,         nan],
         [ 1.5082237 ,         nan, -0.30706513, ...,  0.1976878 ,
           0.4447855 ,         nan],
         [ 0.3307528 ,         nan,  0.08787457, ...,  0.45084605,
          -1.3596748 ,         nan]],

        [[        nan,         nan,  0.46188188, ...,  0.3943486 ,
           0.45043066,  0.3411845 ],
         [ 0.45124006,         nan,  0.22867058, ..., -1.3099415 ,
          -0.16359916,  0.11331213],
         [        nan,  0.45007434,  0.3474383 , ...,  0.3881557 ,
          -0.6769275 ,         nan],
         ...,
         [ 0.3952141 ,  1.6758697 ,         nan, ...,  0.45153365,
                  nan,         nan],
         [ 1.5082237 ,         nan, -0.30706513, ...,  0.1976878 ,
           0.4447855 ,         nan],
         [ 0.3307528 ,         nan,  0.08787457, ...,  0.45084605,
          -1.3596748 ,         nan]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [10], 'to': [11]}
torch node:
{'name': 'log', 'output': array([[[[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118164],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521417,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596734 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118164],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521417,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596734 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118164],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521417,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596734 ,         nan]],

        ...,

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118164],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521417,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596734 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118164],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521417,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596734 ,         nan]],

        [[        nan,         nan,  0.4618843 , ...,  0.39434865,
           0.45043308,  0.34118164],
         [ 0.45124245,         nan,  0.22866778, ..., -1.3099387 ,
          -0.16359587,  0.11331155],
         [        nan,  0.45007676,  0.34743544, ...,  0.38815576,
          -0.6769261 ,         nan],
         ...,
         [ 0.39521417,  1.6758716 ,         nan, ...,  0.45153606,
                  nan,         nan],
         [ 1.5082268 ,         nan, -0.30706507, ...,  0.19768928,
           0.44478774,         nan],
         [ 0.33074993,         nan,  0.08787747, ...,  0.45084846,
          -1.3596734 ,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [10], 'to': [11]}

generate models:197

analyse output arrays in iter:219

pre layer res:
7:reshape
{'name': 'reshape', 'output': array([[[[-0.8755722 , -0.20356336,  0.58369726, ...,  0.35157713,
          -0.2685448 , -0.88783073],
         [ 0.7661742 , -0.3322997 , -0.78770036, ..., -0.955838  ,
          -0.25443974,  0.9507762 ],
         [-0.2771096 ,  0.4800589 , -0.19385514, ...,  0.10405257,
          -0.35452363, -0.15774812],
         ...,
         [ 0.3229582 ,  0.8106976 ,  0.26849246, ..., -0.56696546,
          -0.2185279 ,  0.45170188],
         [ 0.9369265 , -0.48222607,  0.9718899 , ...,  0.926992  ,
          -0.81645936, -0.6960251 ],
         [ 0.03791213,  0.82144904,  0.9241255 , ..., -0.58969396,
          -0.8697914 , -0.04683358]],

        [[-0.6619197 , -0.64513224, -0.5705314 , ..., -0.679455  ,
           0.9622602 ,  0.90838265],
         [-0.5315274 ,  0.47717893, -0.8095034 , ...,  0.67371863,
           0.07245531, -0.7990448 ],
         [ 0.73823076, -0.07730187, -0.2483391 , ...,  0.6114903 ,
           0.79531133, -0.37524515],
         ...,
         [ 0.77884924, -0.93655396,  0.6639828 , ..., -0.42588905,
           0.77238184,  0.4776762 ],
         [ 0.9384455 ,  0.5785488 , -0.7443377 , ...,  0.2507264 ,
          -0.95010334, -0.89774233],
         [ 0.40759543,  0.8757366 , -0.26537454, ...,  0.04742549,
           0.89073044,  0.8381425 ]],

        [[-0.8493485 ,  0.6946618 ,  0.8403401 , ..., -0.68284196,
          -0.14108142,  0.3095287 ],
         [-0.88788986,  0.4940482 ,  0.8454896 , ...,  0.6904886 ,
          -0.1524959 ,  0.15779468],
         [-0.17119493, -0.43450323,  0.35911503, ..., -0.9869264 ,
           0.14373276, -0.55944806],
         ...,
         [ 0.4096904 , -0.89346874,  0.9655165 , ..., -0.8103419 ,
           0.81398517,  0.19239442],
         [ 0.13985002, -0.24991108,  0.21225093, ...,  0.698668  ,
           0.74844456, -0.8922445 ],
         [-0.22269009,  0.8573792 ,  0.6983993 , ..., -0.7371026 ,
          -0.5904995 , -0.9836614 ]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [16], 'to': [20, 23]}
tf node:
{'name': 'log', 'output': array([[[[        nan,         nan, -0.5383728 , ..., -1.0453262 ,
                  nan,         nan],
         [-0.26634574,         nan,         nan, ...,         nan,
                  nan, -0.05047655],
         [        nan, -0.7338465 ,         nan, ..., -2.262859  ,
                  nan,         nan],
         ...,
         [-1.1302323 , -0.20986015, -1.3149325 , ...,         nan,
                  nan, -0.79473287],
         [-0.06515045,         nan, -0.02851274, ..., -0.07581034,
                  nan,         nan],
         [-3.272484  , -0.19668537, -0.0789074 , ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
          -0.0384704 , -0.09608956],
         [        nan, -0.73986375,         nan, ..., -0.39494273,
          -2.6247854 ,         nan],
         [-0.3034988 ,         nan,         nan, ..., -0.49185616,
          -0.22902162,         nan],
         ...,
         [-0.24993777,         nan, -0.40949902, ...,         nan,
          -0.25827622, -0.73882216],
         [-0.06353049, -0.5472324 ,         nan, ..., -1.3833929 ,
                  nan,         nan],
         [-0.8974802 , -0.13268992,         nan, ..., -3.0485954 ,
          -0.11571343, -0.17656712]],

        [[        nan, -0.36433017, -0.17394862, ...,         nan,
                  nan, -1.1727045 ],
         [        nan, -0.7051222 , -0.16783938, ..., -0.37035584,
                  nan, -1.8464606 ],
         [        nan,         nan, -1.0241125 , ...,         nan,
          -1.9397995 ,         nan],
         ...,
         [-0.89235353,         nan, -0.03509208, ...,         nan,
          -0.20581314, -1.6482078 ],
         [-1.9671848 ,         nan, -1.5499861 , ..., -0.3585796 ,
          -0.28975815,         nan],
         [        nan, -0.153875  , -0.35896426, ...,         nan,
                  nan,         nan]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [7], 'to': [4]}
ms node:
{'name': 'log', 'output': array([[[[        nan,         nan, -0.5383742 , ..., -1.0453233 ,
                  nan,         nan],
         [-0.26634803,         nan,         nan, ...,         nan,
                  nan, -0.05047647],
         [        nan, -0.7338465 ,         nan, ..., -2.2628622 ,
                  nan,         nan],
         ...,
         [-1.1302295 , -0.20986263, -1.3149352 , ...,         nan,
                  nan, -0.7947339 ],
         [-0.06515037,         nan, -0.02851417, ..., -0.07581032,
                  nan,         nan],
         [-3.2724855 , -0.19668786, -0.07890738, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
          -0.03847038, -0.09609061],
         [        nan, -0.7398637 ,         nan, ..., -0.39494464,
          -2.6247866 ,         nan],
         [-0.30349886,         nan,         nan, ..., -0.49185535,
          -0.22902411,         nan],
         ...,
         [-0.24994008,         nan, -0.40950105, ...,         nan,
          -0.25827855, -0.73882216],
         [-0.06353047, -0.547234  ,         nan, ..., -1.3833942 ,
                  nan,         nan],
         [-0.8974825 , -0.13269098,         nan, ..., -3.0485976 ,
          -0.11571442, -0.17657049]],

        [[        nan, -0.3643273 , -0.1739519 , ...,         nan,
                  nan, -1.1727035 ],
         [        nan, -0.70512366, -0.16784267, ..., -0.37035298,
                  nan, -1.8464576 ],
         [        nan,         nan, -1.0241096 , ...,         nan,
          -1.9398028 ,         nan],
         ...,
         [-0.8923559 ,         nan, -0.035092  , ...,         nan,
          -0.20581561, -1.6482099 ],
         [-1.967184  ,         nan, -1.5499893 , ..., -0.35857683,
          -0.2897583 ,         nan],
         [        nan, -0.15387835, -0.3589614 , ...,         nan,
                  nan,         nan]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [7], 'to': [4]}
torch node:
{'name': 'log', 'output': array([[[[        nan,         nan, -0.53837276, ..., -1.045326  ,
                  nan,         nan],
         [-0.2663459 ,         nan,         nan, ...,         nan,
                  nan, -0.05047649],
         [        nan, -0.73384655,         nan, ..., -2.2628589 ,
                  nan,         nan],
         ...,
         [-1.1302323 , -0.20986022, -1.3149323 , ...,         nan,
                  nan, -0.79473287],
         [-0.06515046,         nan, -0.02851274, ..., -0.07581034,
                  nan,         nan],
         [-3.272484  , -0.19668545, -0.0789074 , ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
          -0.0384704 , -0.09608963],
         [        nan, -0.73986375,         nan, ..., -0.3949427 ,
          -2.6247852 ,         nan],
         [-0.3034988 ,         nan,         nan, ..., -0.49185616,
          -0.2290217 ,         nan],
         ...,
         [-0.24993785,         nan, -0.4094991 , ...,         nan,
          -0.2582763 , -0.73882216],
         [-0.06353049, -0.5472324 ,         nan, ..., -1.3833928 ,
                  nan,         nan],
         [-0.89748013, -0.13269   ,         nan, ..., -3.0485952 ,
          -0.11571343, -0.1765672 ]],

        [[        nan, -0.36433017, -0.17394862, ...,         nan,
                  nan, -1.1727043 ],
         [        nan, -0.70512223, -0.16783938, ..., -0.37035584,
                  nan, -1.8464605 ],
         [        nan,         nan, -1.0241125 , ...,         nan,
          -1.9397995 ,         nan],
         ...,
         [-0.89235353,         nan, -0.03509202, ...,         nan,
          -0.20581321, -1.6482077 ],
         [-1.9671845 ,         nan, -1.5499861 , ..., -0.3585797 ,
          -0.28975824,         nan],
         [        nan, -0.15387505, -0.35896426, ...,         nan,
                  nan,         nan]],

        ...,

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]],

        [[       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         ...,
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf],
         [       -inf,        -inf,        -inf, ...,        -inf,
                 -inf,        -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [7], 'to': [4]}

generate models:205

analyse output arrays in iter:223

pre layer res:
14:conv2d
{'name': 'conv2d', 'output': array([[[[11425.37   , 11444.458  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7936.0605 ,  7944.0864 ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7939.617  ,  7938.086  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         ...,
         [ 7833.492  ,  8191.338  ,  8239.217  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,  8185.3364 ,  8210.244  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,     0.     ,     0.     , ...,   780.33887,
            780.62115, 10460.745  ]],

        [[11425.37   , 11444.458  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7936.0605 ,  7944.0864 ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7939.617  ,  7938.086  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         ...,
         [ 7833.492  ,  8191.338  ,  8239.217  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,  8185.3364 ,  8210.244  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,     0.     ,     0.     , ...,   780.33887,
            780.62115, 10460.745  ]],

        [[11425.37   , 11444.458  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7936.0605 ,  7944.0864 ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7939.617  ,  7938.086  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         ...,
         [ 7833.492  ,  8191.338  ,  8239.217  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,  8185.3364 ,  8210.244  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,     0.     ,     0.     , ...,   780.33887,
            780.62115, 10460.745  ]],

        ...,

        [[11425.37   , 11444.458  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7936.0605 ,  7944.0864 ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7939.617  ,  7938.086  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         ...,
         [ 7833.492  ,  8191.338  ,  8239.217  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,  8185.3364 ,  8210.244  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,     0.     ,     0.     , ...,   780.33887,
            780.62115, 10460.745  ]],

        [[11425.37   , 11444.458  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7936.0605 ,  7944.0864 ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7939.617  ,  7938.086  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         ...,
         [ 7833.492  ,  8191.338  ,  8239.217  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,  8185.3364 ,  8210.244  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,     0.     ,     0.     , ...,   780.33887,
            780.62115, 10460.745  ]],

        [[11425.37   , 11444.458  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7936.0605 ,  7944.0864 ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         [ 7939.617  ,  7938.086  ,     0.     , ...,     0.     ,
              0.     ,     0.     ],
         ...,
         [ 7833.492  ,  8191.338  ,  8239.217  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,  8185.3364 ,  8210.244  , ...,     0.     ,
              0.     ,     0.     ],
         [    0.     ,     0.     ,     0.     , ...,   780.33887,
            780.62115, 10460.745  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [6]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.84222394,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.99761397, -0.9341403 ,  0.92488515, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965381 , -0.9528631 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.84222394,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.99761397, -0.9341403 ,  0.92488515, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965381 , -0.9528631 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.84222394,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.99761397, -0.9341403 ,  0.92488515, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965381 , -0.9528631 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        ...,

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.84222394,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.99761397, -0.9341403 ,  0.92488515, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965381 , -0.9528631 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.84222394,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.99761397, -0.9341403 ,  0.92488515, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965381 , -0.9528631 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.84222394,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.99761397, -0.9341403 ,  0.92488515, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965381 , -0.9528631 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [14], 'to': [15]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38080615,  0.85080135,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.7148703 ,  0.67044723,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9976809 , -0.9343145 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965786 , -0.9531589 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38080615,  0.85080135,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.7148703 ,  0.67044723,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9976809 , -0.9343145 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965786 , -0.9531589 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38080615,  0.85080135,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.7148703 ,  0.67044723,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9976809 , -0.9343145 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965786 , -0.9531589 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        ...,

        [[ 0.5665919 ,  0.3560423 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38080615,  0.85080135,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.7148703 ,  0.67044723,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9976809 , -0.9343145 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9965786 , -0.9531589 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94042873,
           0.9979129 , -0.68777484]],

        [[ 0.5690035 ,  0.34873095,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.37538174,  0.8471893 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.7199726 ,  0.6653596 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9972649 , -0.93238646,  0.9252561 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9960339 , -0.9513703 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94028336,
           0.9979129 , -0.6913111 ]],

        [[ 0.5690035 ,  0.34873095,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.37538174,  0.8471893 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.7199726 ,  0.6653596 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9972649 , -0.93238646,  0.9252561 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9960339 , -0.9513703 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94028336,
           0.9979129 , -0.6913111 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [14], 'to': [15]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.5641754 ,  0.35512957,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.8416971 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9984915 , -0.9355274 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9966588 , -0.95404094, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94036645,
           0.99790895, -0.68777484]],

        [[ 0.5641754 ,  0.35512957,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.8416971 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9984915 , -0.9355274 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9966588 , -0.95404094, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94036645,
           0.99790895, -0.68777484]],

        [[ 0.5641754 ,  0.35512957,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.8416971 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9984915 , -0.9355274 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9966588 , -0.95404094, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94036645,
           0.99790895, -0.68777484]],

        ...,

        [[ 0.5641754 ,  0.35512957,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.8416971 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9984915 , -0.9355274 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9966588 , -0.95404094, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94036645,
           0.99790895, -0.68777484]],

        [[ 0.5641754 ,  0.35512957,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.8416971 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9984915 , -0.9355274 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9966588 , -0.95404094, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94036645,
           0.99790895, -0.68777484]],

        [[ 0.5641754 ,  0.35512957,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.38711807,  0.8416971 ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [-0.72604436,  0.65840536,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [-0.9984915 , -0.9355274 ,  0.9245134 , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        , -0.9966588 , -0.95404094, ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.94036645,
           0.99790895, -0.68777484]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [14], 'to': [15]}

generate models:209

analyse output arrays in iter:224

pre layer res:
5:reshape
{'name': 'reshape', 'output': array([[[[-0.4180529 , -1.8428395 ,  0.1030798 , ...,  0.05714226,
           1.8525114 ,  1.6188061 ],
         [ 0.8742714 , -1.7998356 , -2.9130113 , ...,  0.4116038 ,
           0.20322174,  0.33957738],
         [-1.4055374 , -1.9080974 ,  2.2828517 , ..., -2.6527302 ,
           1.5814292 ,  1.8548554 ],
         ...,
         [ 0.7706033 ,  0.6929316 , -2.0465906 , ..., -1.1970204 ,
           1.032306  ,  0.56841815],
         [ 1.1702248 , -1.1176045 ,  0.54496753, ..., -1.1362231 ,
           2.3068967 , -0.34174848],
         [-1.0243137 ,  0.7462923 , -2.001853  , ..., -2.5103412 ,
          -0.4701894 ,  1.2134709 ]],

        [[-0.4180529 , -1.8428395 ,  0.1030798 , ...,  0.05714226,
           1.8525114 ,  1.6188061 ],
         [ 0.8742714 , -1.7998356 , -2.9130113 , ...,  0.4116038 ,
           0.20322174,  0.33957738],
         [-1.4055374 , -1.9080974 ,  2.2828517 , ..., -2.6527302 ,
           1.5814292 ,  1.8548554 ],
         ...,
         [ 0.7706033 ,  0.6929316 , -2.0465906 , ..., -1.1970204 ,
           1.032306  ,  0.56841815],
         [ 1.1702248 , -1.1176045 ,  0.54496753, ..., -1.1362231 ,
           2.3068967 , -0.34174848],
         [-1.0243137 ,  0.7462923 , -2.001853  , ..., -2.5103412 ,
          -0.4701894 ,  1.2134709 ]],

        [[-0.4180529 , -1.8428395 ,  0.1030798 , ...,  0.05714226,
           1.8525114 ,  1.6188061 ],
         [ 0.8742714 , -1.7998356 , -2.9130113 , ...,  0.4116038 ,
           0.20322174,  0.33957738],
         [-1.4055374 , -1.9080974 ,  2.2828517 , ..., -2.6527302 ,
           1.5814292 ,  1.8548554 ],
         ...,
         [ 0.7706033 ,  0.6929316 , -2.0465906 , ..., -1.1970204 ,
           1.032306  ,  0.56841815],
         [ 1.1702248 , -1.1176045 ,  0.54496753, ..., -1.1362231 ,
           2.3068967 , -0.34174848],
         [-1.0243137 ,  0.7462923 , -2.001853  , ..., -2.5103412 ,
          -0.4701894 ,  1.2134709 ]],

        ...,

        [[-0.4180529 , -1.8428395 ,  0.1030798 , ...,  0.05714226,
           1.8525114 ,  1.6188061 ],
         [ 0.8742714 , -1.7998356 , -2.9130113 , ...,  0.4116038 ,
           0.20322174,  0.33957738],
         [-1.4055374 , -1.9080974 ,  2.2828517 , ..., -2.6527302 ,
           1.5814292 ,  1.8548554 ],
         ...,
         [ 0.7706033 ,  0.6929316 , -2.0465906 , ..., -1.1970204 ,
           1.032306  ,  0.56841815],
         [ 1.1702248 , -1.1176045 ,  0.54496753, ..., -1.1362231 ,
           2.3068967 , -0.34174848],
         [-1.0243137 ,  0.7462923 , -2.001853  , ..., -2.5103412 ,
          -0.4701894 ,  1.2134709 ]],

        [[-0.4180529 , -1.8428395 ,  0.1030798 , ...,  0.05714226,
           1.8525114 ,  1.6188061 ],
         [ 0.8742714 , -1.7998356 , -2.9130113 , ...,  0.4116038 ,
           0.20322174,  0.33957738],
         [-1.4055374 , -1.9080974 ,  2.2828517 , ..., -2.6527302 ,
           1.5814292 ,  1.8548554 ],
         ...,
         [ 0.7706033 ,  0.6929316 , -2.0465906 , ..., -1.1970204 ,
           1.032306  ,  0.56841815],
         [ 1.1702248 , -1.1176045 ,  0.54496753, ..., -1.1362231 ,
           2.3068967 , -0.34174848],
         [-1.0243137 ,  0.7462923 , -2.001853  , ..., -2.5103412 ,
          -0.4701894 ,  1.2134709 ]],

        [[-0.4180529 , -1.8428395 ,  0.1030798 , ...,  0.05714226,
           1.8525114 ,  1.6188061 ],
         [ 0.8742714 , -1.7998356 , -2.9130113 , ...,  0.4116038 ,
           0.20322174,  0.33957738],
         [-1.4055374 , -1.9080974 ,  2.2828517 , ..., -2.6527302 ,
           1.5814292 ,  1.8548554 ],
         ...,
         [ 0.7706033 ,  0.6929316 , -2.0465906 , ..., -1.1970204 ,
           1.032306  ,  0.56841815],
         [ 1.1702248 , -1.1176045 ,  0.54496753, ..., -1.1362231 ,
           2.3068967 , -0.34174848],
         [-1.0243137 ,  0.7462923 , -2.001853  , ..., -2.5103412 ,
          -0.4701894 ,  1.2134709 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [6]}
tf node:
{'name': 'log', 'output': array([[[[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        ...,

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [5], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[        nan,         nan, -2.2722542 , ..., -2.8622124 ,
           0.6165423 ,  0.4816865 ],
         [-0.13436542,         nan,         nan, ..., -0.88769644,
          -1.59346   , -1.0800554 ],
         [        nan,         nan,  0.8254222 , ...,         nan,
           0.4583266 ,  0.6178068 ],
         ...,
         [-0.2605838 , -0.36682114,         nan, ...,         nan,
           0.0317985 , -0.5649011 ],
         [ 0.15719438,         nan, -0.60703194, ...,         nan,
           0.8359    ,         nan],
         [        nan, -0.292638  ,         nan, ...,         nan,
                  nan,  0.19348332]],

        [[        nan,         nan, -2.2722542 , ..., -2.8622124 ,
           0.6165423 ,  0.4816865 ],
         [-0.13436542,         nan,         nan, ..., -0.88769644,
          -1.59346   , -1.0800554 ],
         [        nan,         nan,  0.8254222 , ...,         nan,
           0.4583266 ,  0.6178068 ],
         ...,
         [-0.2605838 , -0.36682114,         nan, ...,         nan,
           0.0317985 , -0.5649011 ],
         [ 0.15719438,         nan, -0.60703194, ...,         nan,
           0.8359    ,         nan],
         [        nan, -0.292638  ,         nan, ...,         nan,
                  nan,  0.19348332]],

        [[        nan,         nan, -2.2722542 , ..., -2.8622124 ,
           0.6165423 ,  0.4816865 ],
         [-0.13436542,         nan,         nan, ..., -0.88769644,
          -1.59346   , -1.0800554 ],
         [        nan,         nan,  0.8254222 , ...,         nan,
           0.4583266 ,  0.6178068 ],
         ...,
         [-0.2605838 , -0.36682114,         nan, ...,         nan,
           0.0317985 , -0.5649011 ],
         [ 0.15719438,         nan, -0.60703194, ...,         nan,
           0.8359    ,         nan],
         [        nan, -0.292638  ,         nan, ...,         nan,
                  nan,  0.19348332]],

        ...,

        [[        nan,         nan, -2.2722542 , ..., -2.8622124 ,
           0.6165423 ,  0.4816865 ],
         [-0.13436542,         nan,         nan, ..., -0.88769644,
          -1.59346   , -1.0800554 ],
         [        nan,         nan,  0.8254222 , ...,         nan,
           0.4583266 ,  0.6178068 ],
         ...,
         [-0.2605838 , -0.36682114,         nan, ...,         nan,
           0.0317985 , -0.5649011 ],
         [ 0.15719438,         nan, -0.60703194, ...,         nan,
           0.8359    ,         nan],
         [        nan, -0.292638  ,         nan, ...,         nan,
                  nan,  0.19348332]],

        [[        nan,         nan, -2.2722542 , ..., -2.8622124 ,
           0.6165423 ,  0.4816865 ],
         [-0.13436542,         nan,         nan, ..., -0.88769644,
          -1.59346   , -1.0800554 ],
         [        nan,         nan,  0.8254222 , ...,         nan,
           0.4583266 ,  0.6178068 ],
         ...,
         [-0.2605838 , -0.36682114,         nan, ...,         nan,
           0.0317985 , -0.5649011 ],
         [ 0.15719438,         nan, -0.60703194, ...,         nan,
           0.8359    ,         nan],
         [        nan, -0.292638  ,         nan, ...,         nan,
                  nan,  0.19348332]],

        [[        nan,         nan, -2.2722542 , ..., -2.8622124 ,
           0.6165423 ,  0.4816865 ],
         [-0.13436542,         nan,         nan, ..., -0.88769644,
          -1.59346   , -1.0800554 ],
         [        nan,         nan,  0.8254222 , ...,         nan,
           0.4583266 ,  0.6178068 ],
         ...,
         [-0.2605838 , -0.36682114,         nan, ...,         nan,
           0.0317985 , -0.5649011 ],
         [ 0.15719438,         nan, -0.60703194, ...,         nan,
           0.8359    ,         nan],
         [        nan, -0.292638  ,         nan, ...,         nan,
                  nan,  0.19348332]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [5], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        ...,

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]],

        [[        nan,         nan, -2.2722518 , ..., -2.8622115 ,
           0.6165422 ,  0.48168892],
         [-0.13436443,         nan,         nan, ..., -0.887694  ,
          -1.5934576 , -1.0800534 ],
         [        nan,         nan,  0.8254254 , ...,         nan,
           0.45832902,  0.61780673],
         ...,
         [-0.26058155, -0.366824  ,         nan, ...,         nan,
           0.03179509, -0.56489795],
         [ 0.15719585,         nan, -0.6070291 , ...,         nan,
           0.83590317,         nan],
         [        nan, -0.29263794,         nan, ...,         nan,
                  nan,  0.1934848 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [5], 'to': [2]}

generate models:210

analyse output arrays in iter:231

pre layer res:
5:flatten
{'name': 'flatten', 'output': array([[46.256844  , 46.256844  , 46.256844  , ..., 24.33371   ,
         0.27331477,  0.27331477]], dtype=float32), 'output_shape': TensorShape([1, 262144]), 'from': [9], 'to': [8]}
tf node:
{'name': 'cos', 'output': array([[-0.6470814 , -0.6470814 , -0.6470814 , ...,  0.69740117,
         0.96288145,  0.96288145]], dtype=float32), 'output_shape': TensorShape([1, 262144]), 'from': [5], 'to': [6]}
ms node:
{'name': 'cos', 'output': array([[-0.6470814 , -0.6470814 , -0.6470814 , ...,  0.6974011 ,
         0.96288145,  0.96288145]], dtype=float32), 'output_shape': (1, 262144), 'from': [5], 'to': [6]}
torch node:
{'name': 'cos', 'output': array([[-0.6470814 , -0.6470814 , -0.6470814 , ...,  0.6974011 ,
         0.96288145,  0.96288145]], dtype=float32), 'output_shape': torch.Size([1, 262144]), 'from': [5], 'to': [6]}

pre layer res:
4:add
{'name': 'add', 'output': array([[[[23682.855  , 23682.855  , 23682.855  , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [23682.855  , 23682.855  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [27685.328  , 27685.328  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         ...,
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
            140.90028,   140.90028]],

        [[23682.855  , 23682.855  , 23682.855  , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [23682.855  , 23682.855  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [27685.328  , 27685.328  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         ...,
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
            140.90028,   140.90028]],

        [[23682.855  , 23682.855  , 23682.855  , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [23682.855  , 23682.855  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [27685.328  , 27685.328  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         ...,
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
            140.90028,   140.90028]],

        ...,

        [[23682.855  , 23682.855  , 23682.855  , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [23682.855  , 23682.855  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [27685.328  , 27685.328  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         ...,
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
            140.90028,   140.90028]],

        [[23682.855  , 23682.855  , 23682.855  , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [23682.855  , 23682.855  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [27685.328  , 27685.328  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         ...,
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
            140.90028,   140.90028]],

        [[23682.855  , 23682.855  , 23682.855  , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [23682.855  , 23682.855  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         [27685.328  , 27685.328  , 32332.92   , ..., 32114.996  ,
          32114.996  , 32114.996  ],
         ...,
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
          10848.827  , 10848.827  ],
         [31483.697  , 32155.498  , 32155.498  , ..., 12459.528  ,
            140.90028,   140.90028]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12, 7], 'to': [18]}
tf node:
{'name': 'softmax', 'output': array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        ...,

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [13]}
ms node:
{'name': 'softmax', 'output': array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        ...,

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [4], 'to': [13]}
torch node:
{'name': 'softmax', 'output': array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        ...,

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         ...,
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [4], 'to': [13]}

generate models:217

analyse output arrays in iter:236

pre layer res:
8:flatten
{'name': 'flatten', 'output': array([[ 0.49224728,  0.39520505, -2.2201343 , ..., -0.3943752 ,
        -1.2770244 ,  1.5625392 ]], dtype=float32), 'output_shape': TensorShape([1, 3072]), 'from': [0], 'to': [23]}
tf node:
{'name': 'log', 'output': array([[-0.7087741 , -0.92835057,         nan, ...,         nan,
                nan,  0.4463122 ]], dtype=float32), 'output_shape': TensorShape([1, 3072]), 'from': [8], 'to': [12]}
ms node:
{'name': 'log', 'output': array([[-0.7087755 , -0.92835295,         nan, ...,         nan,
                nan,  0.4463098 ]], dtype=float32), 'output_shape': (1, 3072), 'from': [8], 'to': [12]}
torch node:
{'name': 'log', 'output': array([[-0.7087741 , -0.92835057,         nan, ...,         nan,
                nan,  0.4463122 ]], dtype=float32), 'output_shape': torch.Size([1, 3072]), 'from': [8], 'to': [12]}

generate models:222

analyse output arrays in iter:253

pre layer res:
16:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[ 1.1825283 ,  0.18168318, -0.0469366 , ...,  1.6759892 ,
          -1.1526662 ,  1.2450405 ],
         [-0.35235026, -1.5627048 ,  0.58471286, ...,  0.17019522,
          -1.3251802 , -0.84828395],
         [-1.9370279 ,  0.7953205 , -2.017937  , ...,  3.210581  ,
          -0.7345475 , -2.5924911 ],
         ...,
         [ 2.145268  , -0.7043736 , -2.8012853 , ..., -1.5991547 ,
          -0.79607743,  0.64550585],
         [-2.8269181 ,  2.8901622 ,  0.94647664, ..., -0.8682536 ,
           1.7278461 , -0.06452751],
         [ 0.07069865,  0.17742682, -0.04290541, ...,  1.3778553 ,
          -1.3202837 , -1.3351558 ]],

        [[ 1.1825283 ,  0.18168318, -0.0469366 , ...,  1.6759892 ,
          -1.1526662 ,  1.2450405 ],
         [-0.35235026, -1.5627048 ,  0.58471286, ...,  0.17019522,
          -1.3251802 , -0.84828395],
         [-1.9370279 ,  0.7953205 , -2.017937  , ...,  3.210581  ,
          -0.7345475 , -2.5924911 ],
         ...,
         [ 2.145268  , -0.7043736 , -2.8012853 , ..., -1.5991547 ,
          -0.79607743,  0.64550585],
         [-2.8269181 ,  2.8901622 ,  0.94647664, ..., -0.8682536 ,
           1.7278461 , -0.06452751],
         [ 0.07069865,  0.17742682, -0.04290541, ...,  1.3778553 ,
          -1.3202837 , -1.3351558 ]],

        [[ 1.1825283 ,  0.18168318, -0.0469366 , ...,  1.6759892 ,
          -1.1526662 ,  1.2450405 ],
         [-0.35235026, -1.5627048 ,  0.58471286, ...,  0.17019522,
          -1.3251802 , -0.84828395],
         [-1.9370279 ,  0.7953205 , -2.017937  , ...,  3.210581  ,
          -0.7345475 , -2.5924911 ],
         ...,
         [ 2.145268  , -0.7043736 , -2.8012853 , ..., -1.5991547 ,
          -0.79607743,  0.64550585],
         [-2.8269181 ,  2.8901622 ,  0.94647664, ..., -0.8682536 ,
           1.7278461 , -0.06452751],
         [ 0.07069865,  0.17742682, -0.04290541, ...,  1.3778553 ,
          -1.3202837 , -1.3351558 ]],

        ...,

        [[ 1.1825283 ,  0.18168318, -0.0469366 , ...,  1.6759892 ,
          -1.1526662 ,  1.2450405 ],
         [-0.35235026, -1.5627048 ,  0.58471286, ...,  0.17019522,
          -1.3251802 , -0.84828395],
         [-1.9370279 ,  0.7953205 , -2.017937  , ...,  3.210581  ,
          -0.7345475 , -2.5924911 ],
         ...,
         [ 2.145268  , -0.7043736 , -2.8012853 , ..., -1.5991547 ,
          -0.79607743,  0.64550585],
         [-2.8269181 ,  2.8901622 ,  0.94647664, ..., -0.8682536 ,
           1.7278461 , -0.06452751],
         [ 0.07069865,  0.17742682, -0.04290541, ...,  1.3778553 ,
          -1.3202837 , -1.3351558 ]],

        [[ 1.1825283 ,  0.18168318, -0.0469366 , ...,  1.6759892 ,
          -1.1526662 ,  1.2450405 ],
         [-0.35235026, -1.5627048 ,  0.58471286, ...,  0.17019522,
          -1.3251802 , -0.84828395],
         [-1.9370279 ,  0.7953205 , -2.017937  , ...,  3.210581  ,
          -0.7345475 , -2.5924911 ],
         ...,
         [ 2.145268  , -0.7043736 , -2.8012853 , ..., -1.5991547 ,
          -0.79607743,  0.64550585],
         [-2.8269181 ,  2.8901622 ,  0.94647664, ..., -0.8682536 ,
           1.7278461 , -0.06452751],
         [ 0.07069865,  0.17742682, -0.04290541, ...,  1.3778553 ,
          -1.3202837 , -1.3351558 ]],

        [[ 1.1825283 ,  0.18168318, -0.0469366 , ...,  1.6759892 ,
          -1.1526662 ,  1.2450405 ],
         [-0.35235026, -1.5627048 ,  0.58471286, ...,  0.17019522,
          -1.3251802 , -0.84828395],
         [-1.9370279 ,  0.7953205 , -2.017937  , ...,  3.210581  ,
          -0.7345475 , -2.5924911 ],
         ...,
         [ 2.145268  , -0.7043736 , -2.8012853 , ..., -1.5991547 ,
          -0.79607743,  0.64550585],
         [-2.8269181 ,  2.8901622 ,  0.94647664, ..., -0.8682536 ,
           1.7278461 , -0.06452751],
         [ 0.07069865,  0.17742682, -0.04290541, ...,  1.3778553 ,
          -1.3202837 , -1.3351558 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [7]}
tf node:
{'name': 'log', 'output': array([[[[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.2191681 ],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.2191681 ],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.2191681 ],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        ...,

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.2191681 ],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.2191681 ],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.2191681 ],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[ 0.16765326, -1.705491  ,         nan, ...,  0.5164002 ,
                  nan,  0.2191689 ],
         [        nan,         nan, -0.5366359 , ..., -1.7708111 ,
                  nan,         nan],
         [        nan, -0.2290125 ,         nan, ...,  1.1664495 ,
                  nan,         nan],
         ...,
         [ 0.76326156,         nan,         nan, ...,         nan,
                  nan, -0.4377182 ],
         [        nan,  1.0613126 , -0.05500897, ...,         nan,
           0.54687464,         nan],
         [-2.649332  , -1.7291942 ,         nan, ...,  0.320531  ,
                  nan,         nan]],

        [[ 0.16765326, -1.705491  ,         nan, ...,  0.5164002 ,
                  nan,  0.2191689 ],
         [        nan,         nan, -0.5366359 , ..., -1.7708111 ,
                  nan,         nan],
         [        nan, -0.2290125 ,         nan, ...,  1.1664495 ,
                  nan,         nan],
         ...,
         [ 0.76326156,         nan,         nan, ...,         nan,
                  nan, -0.4377182 ],
         [        nan,  1.0613126 , -0.05500897, ...,         nan,
           0.54687464,         nan],
         [-2.649332  , -1.7291942 ,         nan, ...,  0.320531  ,
                  nan,         nan]],

        [[ 0.16765326, -1.705491  ,         nan, ...,  0.5164002 ,
                  nan,  0.2191689 ],
         [        nan,         nan, -0.5366359 , ..., -1.7708111 ,
                  nan,         nan],
         [        nan, -0.2290125 ,         nan, ...,  1.1664495 ,
                  nan,         nan],
         ...,
         [ 0.76326156,         nan,         nan, ...,         nan,
                  nan, -0.4377182 ],
         [        nan,  1.0613126 , -0.05500897, ...,         nan,
           0.54687464,         nan],
         [-2.649332  , -1.7291942 ,         nan, ...,  0.320531  ,
                  nan,         nan]],

        ...,

        [[ 0.16765326, -1.705491  ,         nan, ...,  0.5164002 ,
                  nan,  0.2191689 ],
         [        nan,         nan, -0.5366359 , ..., -1.7708111 ,
                  nan,         nan],
         [        nan, -0.2290125 ,         nan, ...,  1.1664495 ,
                  nan,         nan],
         ...,
         [ 0.76326156,         nan,         nan, ...,         nan,
                  nan, -0.4377182 ],
         [        nan,  1.0613126 , -0.05500897, ...,         nan,
           0.54687464,         nan],
         [-2.649332  , -1.7291942 ,         nan, ...,  0.320531  ,
                  nan,         nan]],

        [[ 0.16765326, -1.705491  ,         nan, ...,  0.5164002 ,
                  nan,  0.2191689 ],
         [        nan,         nan, -0.5366359 , ..., -1.7708111 ,
                  nan,         nan],
         [        nan, -0.2290125 ,         nan, ...,  1.1664495 ,
                  nan,         nan],
         ...,
         [ 0.76326156,         nan,         nan, ...,         nan,
                  nan, -0.4377182 ],
         [        nan,  1.0613126 , -0.05500897, ...,         nan,
           0.54687464,         nan],
         [-2.649332  , -1.7291942 ,         nan, ...,  0.320531  ,
                  nan,         nan]],

        [[ 0.16765326, -1.705491  ,         nan, ...,  0.5164002 ,
                  nan,  0.2191689 ],
         [        nan,         nan, -0.5366359 , ..., -1.7708111 ,
                  nan,         nan],
         [        nan, -0.2290125 ,         nan, ...,  1.1664495 ,
                  nan,         nan],
         ...,
         [ 0.76326156,         nan,         nan, ...,         nan,
                  nan, -0.4377182 ],
         [        nan,  1.0613126 , -0.05500897, ...,         nan,
           0.54687464,         nan],
         [-2.649332  , -1.7291942 ,         nan, ...,  0.320531  ,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [16], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.21916808],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.21916808],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.21916808],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        ...,

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.21916808],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.21916808],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]],

        [[ 0.16765474, -1.7054908 ,         nan, ...,  0.51640356,
                  nan,  0.21916808],
         [        nan,         nan, -0.5366344 , ..., -1.7708092 ,
                  nan,         nan],
         [        nan, -0.22901009,         nan, ...,  1.1664519 ,
                  nan,         nan],
         ...,
         [ 0.7632645 ,         nan,         nan, ...,         nan,
                  nan, -0.437721  ],
         [        nan,  1.0613127 , -0.05500899, ...,         nan,
           0.5468756 ,         nan],
         [-2.6493287 , -1.729197  ,         nan, ...,  0.32052815,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [16], 'to': [2]}

generate models:239

analyse output arrays in iter:259

pre layer res:
1:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[-0.02140649,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [18], 'to': [14]}
tf node:
{'name': 'log', 'output': array([[[[ nan, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [1], 'to': [9]}
ms node:
{'name': 'log', 'output': array([[[[ nan, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [1], 'to': [9]}
torch node:
{'name': 'log', 'output': array([[[[ nan, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]],

        [[-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         ...,
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf],
         [-inf, -inf, -inf, ..., -inf, -inf, -inf]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [1], 'to': [9]}

generate models:244

analyse output arrays in iter:260

pre layer res:
1:conv2d
{'name': 'conv2d', 'output': array([[[[ 1.3866282 ,  1.6736524 , -0.51040155, ...,  3.1123002 ,
          -4.4198794 , -0.03102118],
         [-3.1506133 , -1.7812673 , -1.0996009 , ..., -0.1487131 ,
          -0.83813334,  1.6609756 ],
         [-0.19133131, -0.7762612 , -2.3873942 , ...,  2.777741  ,
           1.7159834 , -1.6338636 ],
         ...,
         [ 1.9311936 ,  2.2856376 ,  3.0685754 , ..., -0.7330568 ,
          -1.6286628 , -0.11649764],
         [-2.4632223 , -0.21996361,  4.122811  , ..., -1.9713995 ,
          -3.1492522 , -0.62707037],
         [ 0.2783004 ,  1.319375  , -1.4138494 , ...,  2.8810105 ,
          -0.53067875, -0.1314173 ]],

        [[ 1.3866282 ,  1.6736524 , -0.51040155, ...,  3.1123002 ,
          -4.4198794 , -0.03102118],
         [-3.1506133 , -1.7812673 , -1.0996009 , ..., -0.1487131 ,
          -0.83813334,  1.6609756 ],
         [-0.19133131, -0.7762612 , -2.3873942 , ...,  2.777741  ,
           1.7159834 , -1.6338636 ],
         ...,
         [ 1.9311936 ,  2.2856376 ,  3.0685754 , ..., -0.7330568 ,
          -1.6286628 , -0.11649764],
         [-2.4632223 , -0.21996361,  4.122811  , ..., -1.9713995 ,
          -3.1492522 , -0.62707037],
         [ 0.2783004 ,  1.319375  , -1.4138494 , ...,  2.8810105 ,
          -0.53067875, -0.1314173 ]],

        [[ 1.3866282 ,  1.6736524 , -0.51040155, ...,  3.1123002 ,
          -4.4198794 , -0.03102118],
         [-3.1506133 , -1.7812673 , -1.0996009 , ..., -0.1487131 ,
          -0.83813334,  1.6609756 ],
         [-0.19133131, -0.7762612 , -2.3873942 , ...,  2.777741  ,
           1.7159834 , -1.6338636 ],
         ...,
         [ 1.9311936 ,  2.2856376 ,  3.0685754 , ..., -0.7330568 ,
          -1.6286628 , -0.11649764],
         [-2.4632223 , -0.21996361,  4.122811  , ..., -1.9713995 ,
          -3.1492522 , -0.62707037],
         [ 0.2783004 ,  1.319375  , -1.4138494 , ...,  2.8810105 ,
          -0.53067875, -0.1314173 ]],

        ...,

        [[ 1.3866282 ,  1.6736524 , -0.51040155, ...,  3.1123002 ,
          -4.4198794 , -0.03102118],
         [-3.1506133 , -1.7812673 , -1.0996009 , ..., -0.1487131 ,
          -0.83813334,  1.6609756 ],
         [-0.19133131, -0.7762612 , -2.3873942 , ...,  2.777741  ,
           1.7159834 , -1.6338636 ],
         ...,
         [ 1.9311936 ,  2.2856376 ,  3.0685754 , ..., -0.7330568 ,
          -1.6286628 , -0.11649764],
         [-2.4632223 , -0.21996361,  4.122811  , ..., -1.9713995 ,
          -3.1492522 , -0.62707037],
         [ 0.2783004 ,  1.319375  , -1.4138494 , ...,  2.8810105 ,
          -0.53067875, -0.1314173 ]],

        [[ 1.3866282 ,  1.6736524 , -0.51040155, ...,  3.1123002 ,
          -4.4198794 , -0.03102118],
         [-3.1506133 , -1.7812673 , -1.0996009 , ..., -0.1487131 ,
          -0.83813334,  1.6609756 ],
         [-0.19133131, -0.7762612 , -2.3873942 , ...,  2.777741  ,
           1.7159834 , -1.6338636 ],
         ...,
         [ 1.9311936 ,  2.2856376 ,  3.0685754 , ..., -0.7330568 ,
          -1.6286628 , -0.11649764],
         [-2.4632223 , -0.21996361,  4.122811  , ..., -1.9713995 ,
          -3.1492522 , -0.62707037],
         [ 0.2783004 ,  1.319375  , -1.4138494 , ...,  2.8810105 ,
          -0.53067875, -0.1314173 ]],

        [[ 1.3866282 ,  1.6736524 , -0.51040155, ...,  3.1123002 ,
          -4.4198794 , -0.03102118],
         [-3.1506133 , -1.7812673 , -1.0996009 , ..., -0.1487131 ,
          -0.83813334,  1.6609756 ],
         [-0.19133131, -0.7762612 , -2.3873942 , ...,  2.777741  ,
           1.7159834 , -1.6338636 ],
         ...,
         [ 1.9311936 ,  2.2856376 ,  3.0685754 , ..., -0.7330568 ,
          -1.6286628 , -0.11649764],
         [-2.4632223 , -0.21996361,  4.122811  , ..., -1.9713995 ,
          -3.1492522 , -0.62707037],
         [ 0.2783004 ,  1.319375  , -1.4138494 , ...,  2.8810105 ,
          -0.53067875, -0.1314173 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [13]}
tf node:
{'name': 'log', 'output': array([[[[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        ...,

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[ 0.32687786,  0.51500505,         nan, ...,  1.1353599 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5074018 ],
         [        nan,         nan,         nan, ...,  1.0216409 ,
           0.53998303,         nan],
         ...,
         [ 0.6581383 ,  0.82664186,  1.1212112 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165337 , ...,         nan,
                  nan,         nan],
         [-1.2790536 ,  0.27715623,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.32687786,  0.51500505,         nan, ...,  1.1353599 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5074018 ],
         [        nan,         nan,         nan, ...,  1.0216409 ,
           0.53998303,         nan],
         ...,
         [ 0.6581383 ,  0.82664186,  1.1212112 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165337 , ...,         nan,
                  nan,         nan],
         [-1.2790536 ,  0.27715623,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.32687786,  0.51500505,         nan, ...,  1.1353599 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5074018 ],
         [        nan,         nan,         nan, ...,  1.0216409 ,
           0.53998303,         nan],
         ...,
         [ 0.6581383 ,  0.82664186,  1.1212112 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165337 , ...,         nan,
                  nan,         nan],
         [-1.2790536 ,  0.27715623,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        ...,

        [[ 0.32687786,  0.51500505,         nan, ...,  1.1353599 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5074018 ],
         [        nan,         nan,         nan, ...,  1.0216409 ,
           0.53998303,         nan],
         ...,
         [ 0.6581383 ,  0.82664186,  1.1212112 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165337 , ...,         nan,
                  nan,         nan],
         [-1.2790536 ,  0.27715623,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.32687786,  0.51500505,         nan, ...,  1.1353599 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5074018 ],
         [        nan,         nan,         nan, ...,  1.0216409 ,
           0.53998303,         nan],
         ...,
         [ 0.6581383 ,  0.82664186,  1.1212112 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165337 , ...,         nan,
                  nan,         nan],
         [-1.2790536 ,  0.27715623,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.32687786,  0.51500505,         nan, ...,  1.1353599 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5074018 ],
         [        nan,         nan,         nan, ...,  1.0216409 ,
           0.53998303,         nan],
         ...,
         [ 0.6581383 ,  0.82664186,  1.1212112 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165337 , ...,         nan,
                  nan,         nan],
         [-1.2790536 ,  0.27715623,         nan, ...,  1.0581411 ,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [1], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        ...,

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]],

        [[ 0.326875  ,  0.51500833,         nan, ...,  1.135362  ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.50740516],
         [        nan,         nan,         nan, ...,  1.021638  ,
           0.5399863 ,         nan],
         ...,
         [ 0.6581383 ,  0.826645  ,  1.1212134 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,  1.4165351 , ...,         nan,
                  nan,         nan],
         [-1.2790542 ,  0.27715817,         nan, ...,  1.0581411 ,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [1], 'to': [2]}

generate models:245

analyse output arrays in iter:263

pre layer res:
13:pad
{'name': 'pad', 'output': array([[ 1.1547797,  1.0827582, -5.5215063, ...,  0.       ,  0.       ,
         0.       ]], dtype=float32), 'output_shape': TensorShape([1, 65536]), 'from': [12], 'to': [16]}
tf node:
{'name': 'log', 'output': array([[0.14390957, 0.07951166,        nan, ...,       -inf,       -inf,
              -inf]], dtype=float32), 'output_shape': TensorShape([1, 65536]), 'from': [13], 'to': [25]}
ms node:
{'name': 'log', 'output': array([[0.1439065 , 0.07950876,        nan, ...,       -inf,       -inf,
              -inf]], dtype=float32), 'output_shape': (1, 65536), 'from': [13], 'to': [25]}
torch node:
{'name': 'log', 'output': array([[0.14391018, 0.07951144,        nan, ...,       -inf,       -inf,
              -inf]], dtype=float32), 'output_shape': torch.Size([1, 65536]), 'from': [13], 'to': [25]}

generate models:248

analyse output arrays in iter:278

pre layer res:
9:add
{'name': 'add', 'output': array([[[[2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          1.1140155e+35,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          1.1140155e+35,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          1.1140155e+35,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        ...,

        [[2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          1.1140155e+35,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          1.1140155e+35,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [2.3172776e+35,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
          1.1140155e+35,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf,           inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [7, 2], 'to': [15]}
tf node:
{'name': 'cos', 'output': array([[[[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336472,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336472,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336472,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336472,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336472,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336472,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [9], 'to': [16]}
ms node:
{'name': 'cos', 'output': array([[[[-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ..., -0.40922812,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ..., -0.40922812,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ..., -0.40922812,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.41815633,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ..., -0.40922812,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.4092785 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.4092785 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.16005953,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.4092785 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.4092785 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.16005953,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [9], 'to': [16]}
torch node:
{'name': 'cos', 'output': array([[[[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336471,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336471,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336471,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336471,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336471,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [-0.44241574,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,  0.04336471,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [9], 'to': [16]}

generate models:260

analyse output arrays in iter:279

pre layer res:
15:exp
{'name': 'exp', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [19], 'to': [18]}
tf node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [15], 'to': [8]}
ms node:
{'name': 'log', 'output': array([[[[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        ...,

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]],

        [[88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         ...,
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284],
         [88.72284, 88.72284, 88.72284, ..., 88.72284, 88.72284,
          88.72284]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [15], 'to': [8]}
torch node:
{'name': 'log', 'output': array([[[[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        ...,

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]],

        [[inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         ...,
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf],
         [inf, inf, inf, ..., inf, inf, inf]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [15], 'to': [8]}

generate models:261

analyse output arrays in iter:289

pre layer res:
20:empty_seq_operator
{'name': 'empty_seq_operator', 'output': array([[[[ 1.1119425 , -0.4473821 ,  1.1265433 , ...,  0.24990317,
          -2.0483372 , -0.48458782],
         [-0.85639524, -1.135014  , -2.5228782 , ..., -0.18362916,
           2.7723408 ,  0.6882443 ],
         [-0.69874775,  1.6630192 ,  0.08814102, ...,  0.7565659 ,
          -1.4548675 , -0.46651426],
         ...,
         [-2.01445   , -1.2693207 ,  1.114984  , ..., -1.0707021 ,
           3.7133622 , -2.3902965 ],
         [-0.55235666, -0.71060205,  1.8146431 , ...,  0.4410303 ,
           2.4415417 , -0.33686435],
         [ 1.8948717 , -1.3998637 ,  3.3795624 , ..., -0.632411  ,
          -0.90358233, -0.23475361]],

        [[ 1.1119425 , -0.4473821 ,  1.1265433 , ...,  0.24990317,
          -2.0483372 , -0.48458782],
         [-0.85639524, -1.135014  , -2.5228782 , ..., -0.18362916,
           2.7723408 ,  0.6882443 ],
         [-0.69874775,  1.6630192 ,  0.08814102, ...,  0.7565659 ,
          -1.4548675 , -0.46651426],
         ...,
         [-2.01445   , -1.2693207 ,  1.114984  , ..., -1.0707021 ,
           3.7133622 , -2.3902965 ],
         [-0.55235666, -0.71060205,  1.8146431 , ...,  0.4410303 ,
           2.4415417 , -0.33686435],
         [ 1.8948717 , -1.3998637 ,  3.3795624 , ..., -0.632411  ,
          -0.90358233, -0.23475361]],

        [[ 1.1119425 , -0.4473821 ,  1.1265433 , ...,  0.24990317,
          -2.0483372 , -0.48458782],
         [-0.85639524, -1.135014  , -2.5228782 , ..., -0.18362916,
           2.7723408 ,  0.6882443 ],
         [-0.69874775,  1.6630192 ,  0.08814102, ...,  0.7565659 ,
          -1.4548675 , -0.46651426],
         ...,
         [-2.01445   , -1.2693207 ,  1.114984  , ..., -1.0707021 ,
           3.7133622 , -2.3902965 ],
         [-0.55235666, -0.71060205,  1.8146431 , ...,  0.4410303 ,
           2.4415417 , -0.33686435],
         [ 1.8948717 , -1.3998637 ,  3.3795624 , ..., -0.632411  ,
          -0.90358233, -0.23475361]],

        ...,

        [[ 1.1119425 , -0.4473821 ,  1.1265433 , ...,  0.24990317,
          -2.0483372 , -0.48458782],
         [-0.85639524, -1.135014  , -2.5228782 , ..., -0.18362916,
           2.7723408 ,  0.6882443 ],
         [-0.69874775,  1.6630192 ,  0.08814102, ...,  0.7565659 ,
          -1.4548675 , -0.46651426],
         ...,
         [-2.01445   , -1.2693207 ,  1.114984  , ..., -1.0707021 ,
           3.7133622 , -2.3902965 ],
         [-0.55235666, -0.71060205,  1.8146431 , ...,  0.4410303 ,
           2.4415417 , -0.33686435],
         [ 1.8948717 , -1.3998637 ,  3.3795624 , ..., -0.632411  ,
          -0.90358233, -0.23475361]],

        [[ 1.1119425 , -0.4473821 ,  1.1265433 , ...,  0.24990317,
          -2.0483372 , -0.48458782],
         [-0.85639524, -1.135014  , -2.5228782 , ..., -0.18362916,
           2.7723408 ,  0.6882443 ],
         [-0.69874775,  1.6630192 ,  0.08814102, ...,  0.7565659 ,
          -1.4548675 , -0.46651426],
         ...,
         [-2.01445   , -1.2693207 ,  1.114984  , ..., -1.0707021 ,
           3.7133622 , -2.3902965 ],
         [-0.55235666, -0.71060205,  1.8146431 , ...,  0.4410303 ,
           2.4415417 , -0.33686435],
         [ 1.8948717 , -1.3998637 ,  3.3795624 , ..., -0.632411  ,
          -0.90358233, -0.23475361]],

        [[ 1.1119425 , -0.4473821 ,  1.1265433 , ...,  0.24990317,
          -2.0483372 , -0.48458782],
         [-0.85639524, -1.135014  , -2.5228782 , ..., -0.18362916,
           2.7723408 ,  0.6882443 ],
         [-0.69874775,  1.6630192 ,  0.08814102, ...,  0.7565659 ,
          -1.4548675 , -0.46651426],
         ...,
         [-2.01445   , -1.2693207 ,  1.114984  , ..., -1.0707021 ,
           3.7133622 , -2.3902965 ],
         [-0.55235666, -0.71060205,  1.8146431 , ...,  0.4410303 ,
           2.4415417 , -0.33686435],
         [ 1.8948717 , -1.3998637 ,  3.3795624 , ..., -0.632411  ,
          -0.90358233, -0.23475361]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [8]}
tf node:
{'name': 'log', 'output': array([[[[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        ...,

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [20], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[ 0.10610909,         nan,  0.11915074, ..., -1.3866832 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.0196948 , -0.3736086 ],
         [        nan,  0.50863147, -2.4288144 , ..., -0.27896783,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884066, ...,         nan,
           1.3119378 ,         nan],
         [        nan,         nan,  0.59588784, ..., -0.8186427 ,
           0.89263046,         nan],
         [ 0.63915116,         nan,  1.2177429 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610909,         nan,  0.11915074, ..., -1.3866832 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.0196948 , -0.3736086 ],
         [        nan,  0.50863147, -2.4288144 , ..., -0.27896783,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884066, ...,         nan,
           1.3119378 ,         nan],
         [        nan,         nan,  0.59588784, ..., -0.8186427 ,
           0.89263046,         nan],
         [ 0.63915116,         nan,  1.2177429 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610909,         nan,  0.11915074, ..., -1.3866832 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.0196948 , -0.3736086 ],
         [        nan,  0.50863147, -2.4288144 , ..., -0.27896783,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884066, ...,         nan,
           1.3119378 ,         nan],
         [        nan,         nan,  0.59588784, ..., -0.8186427 ,
           0.89263046,         nan],
         [ 0.63915116,         nan,  1.2177429 , ...,         nan,
                  nan,         nan]],

        ...,

        [[ 0.10610909,         nan,  0.11915074, ..., -1.3866832 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.0196948 , -0.3736086 ],
         [        nan,  0.50863147, -2.4288144 , ..., -0.27896783,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884066, ...,         nan,
           1.3119378 ,         nan],
         [        nan,         nan,  0.59588784, ..., -0.8186427 ,
           0.89263046,         nan],
         [ 0.63915116,         nan,  1.2177429 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610909,         nan,  0.11915074, ..., -1.3866832 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.0196948 , -0.3736086 ],
         [        nan,  0.50863147, -2.4288144 , ..., -0.27896783,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884066, ...,         nan,
           1.3119378 ,         nan],
         [        nan,         nan,  0.59588784, ..., -0.8186427 ,
           0.89263046,         nan],
         [ 0.63915116,         nan,  1.2177429 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610909,         nan,  0.11915074, ..., -1.3866832 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.0196948 , -0.3736086 ],
         [        nan,  0.50863147, -2.4288144 , ..., -0.27896783,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884066, ...,         nan,
           1.3119378 ,         nan],
         [        nan,         nan,  0.59588784, ..., -0.8186427 ,
           0.89263046,         nan],
         [ 0.63915116,         nan,  1.2177429 , ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [20], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        ...,

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]],

        [[ 0.10610851,         nan,  0.1191539 , ..., -1.3866818 ,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
           1.019692  , -0.37361145],
         [        nan,  0.50863475, -2.4288173 , ..., -0.2789656 ,
                  nan,         nan],
         ...,
         [        nan,         nan,  0.10884009, ...,         nan,
           1.3119377 ,         nan],
         [        nan,         nan,  0.59588885, ..., -0.8186417 ,
           0.8926297 ,         nan],
         [ 0.63915116,         nan,  1.2177463 , ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [20], 'to': [2]}

generate models:271

analyse output arrays in iter:293

pre layer res:
1:conv2d
{'name': 'conv2d', 'output': array([[[[-1.2892637 , -0.24072415, -0.08246893, ..., -1.7368877 ,
          -1.7069511 ,  1.1965911 ],
         [ 0.9274938 ,  0.16330989,  2.1048288 , ..., -0.0051946 ,
           0.91676784,  0.12652878],
         [ 0.31277472, -0.90320665, -0.07243472, ...,  3.4135604 ,
           0.67534554,  0.0481317 ],
         ...,
         [-0.6499774 ,  0.8555945 , -0.4690786 , ...,  0.44831014,
          -1.6545285 ,  2.521263  ],
         [ 1.2130208 ,  0.60973394,  1.7475648 , ...,  0.18773055,
           0.27911615, -1.2546973 ],
         [ 1.9141555 , -2.6382723 ,  2.0668354 , ...,  1.6191063 ,
          -0.23595369, -1.0306159 ]],

        [[-1.2892637 , -0.24072415, -0.08246893, ..., -1.7368877 ,
          -1.7069511 ,  1.1965911 ],
         [ 0.9274938 ,  0.16330989,  2.1048288 , ..., -0.0051946 ,
           0.91676784,  0.12652878],
         [ 0.31277472, -0.90320665, -0.07243472, ...,  3.4135604 ,
           0.67534554,  0.0481317 ],
         ...,
         [-0.6499774 ,  0.8555945 , -0.4690786 , ...,  0.44831014,
          -1.6545285 ,  2.521263  ],
         [ 1.2130208 ,  0.60973394,  1.7475648 , ...,  0.18773055,
           0.27911615, -1.2546973 ],
         [ 1.9141555 , -2.6382723 ,  2.0668354 , ...,  1.6191063 ,
          -0.23595369, -1.0306159 ]],

        [[-1.2892637 , -0.24072415, -0.08246893, ..., -1.7368877 ,
          -1.7069511 ,  1.1965911 ],
         [ 0.9274938 ,  0.16330989,  2.1048288 , ..., -0.0051946 ,
           0.91676784,  0.12652878],
         [ 0.31277472, -0.90320665, -0.07243472, ...,  3.4135604 ,
           0.67534554,  0.0481317 ],
         ...,
         [-0.6499774 ,  0.8555945 , -0.4690786 , ...,  0.44831014,
          -1.6545285 ,  2.521263  ],
         [ 1.2130208 ,  0.60973394,  1.7475648 , ...,  0.18773055,
           0.27911615, -1.2546973 ],
         [ 1.9141555 , -2.6382723 ,  2.0668354 , ...,  1.6191063 ,
          -0.23595369, -1.0306159 ]],

        ...,

        [[-1.2892637 , -0.24072415, -0.08246893, ..., -1.7368877 ,
          -1.7069511 ,  1.1965911 ],
         [ 0.9274938 ,  0.16330989,  2.1048288 , ..., -0.0051946 ,
           0.91676784,  0.12652878],
         [ 0.31277472, -0.90320665, -0.07243472, ...,  3.4135604 ,
           0.67534554,  0.0481317 ],
         ...,
         [-0.6499774 ,  0.8555945 , -0.4690786 , ...,  0.44831014,
          -1.6545285 ,  2.521263  ],
         [ 1.2130208 ,  0.60973394,  1.7475648 , ...,  0.18773055,
           0.27911615, -1.2546973 ],
         [ 1.9141555 , -2.6382723 ,  2.0668354 , ...,  1.6191063 ,
          -0.23595369, -1.0306159 ]],

        [[-1.2892637 , -0.24072415, -0.08246893, ..., -1.7368877 ,
          -1.7069511 ,  1.1965911 ],
         [ 0.9274938 ,  0.16330989,  2.1048288 , ..., -0.0051946 ,
           0.91676784,  0.12652878],
         [ 0.31277472, -0.90320665, -0.07243472, ...,  3.4135604 ,
           0.67534554,  0.0481317 ],
         ...,
         [-0.6499774 ,  0.8555945 , -0.4690786 , ...,  0.44831014,
          -1.6545285 ,  2.521263  ],
         [ 1.2130208 ,  0.60973394,  1.7475648 , ...,  0.18773055,
           0.27911615, -1.2546973 ],
         [ 1.9141555 , -2.6382723 ,  2.0668354 , ...,  1.6191063 ,
          -0.23595369, -1.0306159 ]],

        [[-1.2892637 , -0.24072415, -0.08246893, ..., -1.7368877 ,
          -1.7069511 ,  1.1965911 ],
         [ 0.9274938 ,  0.16330989,  2.1048288 , ..., -0.0051946 ,
           0.91676784,  0.12652878],
         [ 0.31277472, -0.90320665, -0.07243472, ...,  3.4135604 ,
           0.67534554,  0.0481317 ],
         ...,
         [-0.6499774 ,  0.8555945 , -0.4690786 , ...,  0.44831014,
          -1.6545285 ,  2.521263  ],
         [ 1.2130208 ,  0.60973394,  1.7475648 , ...,  0.18773055,
           0.27911615, -1.2546973 ],
         [ 1.9141555 , -2.6382723 ,  2.0668354 , ...,  1.6191063 ,
          -0.23595369, -1.0306159 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [5]}
tf node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [4]}
ms node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,  0.17947532],
         [-0.07526913, -1.8121029 ,  0.74423754, ...,         nan,
          -0.08690201, -2.067287  ],
         [-1.1622692 ,         nan,         nan, ...,  1.2277526 ,
          -0.39253274, -3.0338163 ],
         ...,
         [        nan, -0.15596199,         nan, ..., -0.802271  ,
                  nan,  0.9247627 ],
         [ 0.1931123 , -0.49473178,  0.5582223 , ..., -1.6727498 ,
          -1.2761267 ,         nan],
         [ 0.64927655,         nan,  0.72602206, ...,  0.4818719 ,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.17947532],
         [-0.07526913, -1.8121029 ,  0.74423754, ...,         nan,
          -0.08690201, -2.067287  ],
         [-1.1622692 ,         nan,         nan, ...,  1.2277526 ,
          -0.39253274, -3.0338163 ],
         ...,
         [        nan, -0.15596199,         nan, ..., -0.802271  ,
                  nan,  0.9247627 ],
         [ 0.1931123 , -0.49473178,  0.5582223 , ..., -1.6727498 ,
          -1.2761267 ,         nan],
         [ 0.64927655,         nan,  0.72602206, ...,  0.4818719 ,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.17947532],
         [-0.07526913, -1.8121029 ,  0.74423754, ...,         nan,
          -0.08690201, -2.067287  ],
         [-1.1622692 ,         nan,         nan, ...,  1.2277526 ,
          -0.39253274, -3.0338163 ],
         ...,
         [        nan, -0.15596199,         nan, ..., -0.802271  ,
                  nan,  0.9247627 ],
         [ 0.1931123 , -0.49473178,  0.5582223 , ..., -1.6727498 ,
          -1.2761267 ,         nan],
         [ 0.64927655,         nan,  0.72602206, ...,  0.4818719 ,
                  nan,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.17947532],
         [-0.07526913, -1.8121029 ,  0.74423754, ...,         nan,
          -0.08690201, -2.067287  ],
         [-1.1622692 ,         nan,         nan, ...,  1.2277526 ,
          -0.39253274, -3.0338163 ],
         ...,
         [        nan, -0.15596199,         nan, ..., -0.802271  ,
                  nan,  0.9247627 ],
         [ 0.1931123 , -0.49473178,  0.5582223 , ..., -1.6727498 ,
          -1.2761267 ,         nan],
         [ 0.64927655,         nan,  0.72602206, ...,  0.4818719 ,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.17947532],
         [-0.07526913, -1.8121029 ,  0.74423754, ...,         nan,
          -0.08690201, -2.067287  ],
         [-1.1622692 ,         nan,         nan, ...,  1.2277526 ,
          -0.39253274, -3.0338163 ],
         ...,
         [        nan, -0.15596199,         nan, ..., -0.802271  ,
                  nan,  0.9247627 ],
         [ 0.1931123 , -0.49473178,  0.5582223 , ..., -1.6727498 ,
          -1.2761267 ,         nan],
         [ 0.64927655,         nan,  0.72602206, ...,  0.4818719 ,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.17947532],
         [-0.07526913, -1.8121029 ,  0.74423754, ...,         nan,
          -0.08690201, -2.067287  ],
         [-1.1622692 ,         nan,         nan, ...,  1.2277526 ,
          -0.39253274, -3.0338163 ],
         ...,
         [        nan, -0.15596199,         nan, ..., -0.802271  ,
                  nan,  0.9247627 ],
         [ 0.1931123 , -0.49473178,  0.5582223 , ..., -1.6727498 ,
          -1.2761267 ,         nan],
         [ 0.64927655,         nan,  0.72602206, ...,  0.4818719 ,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [1], 'to': [4]}
torch node:
{'name': 'log', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,  0.1794768 ],
         [-0.07526916, -1.8121058 ,  0.74423414, ...,         nan,
          -0.08690102, -2.0672855 ],
         [-1.1622721 ,         nan,         nan, ...,  1.2277559 ,
          -0.3925308 , -3.0338142 ],
         ...,
         [        nan, -0.15595871,         nan, ..., -0.80227   ,
                  nan,  0.9247599 ],
         [ 0.19311377, -0.4947326 ,  0.55822325, ..., -1.6727476 ,
          -1.2761272 ,         nan],
         [ 0.6492765 ,         nan,  0.72601867, ...,  0.48187435,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [1], 'to': [4]}

generate models:275

analyse output arrays in iter:323

pre layer res:
18:reshape
{'name': 'reshape', 'output': array([[[[-1.0345705 ,  1.0566031 ,  0.6191589 , ..., -0.53797376,
           0.45142895, -1.7449951 ],
         [-2.1969492 , -1.1292895 , -0.36294344, ..., -1.9964865 ,
          -0.9415288 ,  0.2373005 ],
         [-0.32058153, -0.37793365, -1.084784  , ..., -0.3578013 ,
           0.89462847,  0.45643273],
         ...,
         [ 0.29689118,  0.4245951 ,  2.785093  , ...,  0.11967877,
           0.27587205,  0.79579467],
         [ 0.3537894 ,  0.77870524,  0.5391567 , ...,  0.07537396,
           0.1207618 , -1.2546717 ],
         [ 0.518372  ,  1.4461052 ,  2.3167133 , ..., -0.8768465 ,
           0.3184861 ,  0.31612417]],

        [[-0.28760523,  0.68956655,  0.5867742 , ..., -0.85723215,
          -0.1557785 ,  0.08144567],
         [-0.03216614,  0.6020598 ,  0.1344945 , ...,  0.97459894,
          -1.1066196 , -0.6241678 ],
         [-0.1686529 , -0.7176577 , -0.17650276, ..., -1.056797  ,
           1.6572791 ,  0.39685714],
         ...,
         [ 0.07099748, -0.088076  ,  1.1828032 , ...,  0.35395542,
           0.31133115, -0.28874925],
         [-0.43487453,  0.02582645, -0.8575696 , ..., -0.03042961,
           0.9454706 ,  0.53989154],
         [-0.7975988 , -0.32192308, -0.83047765, ..., -1.5261909 ,
           0.16801293, -0.6225531 ]],

        [[ 0.271887  , -0.12720586,  0.30455098, ..., -1.3904136 ,
          -0.22674525, -0.33762974],
         [-0.00746096, -0.07235452, -0.41410074, ...,  0.6015383 ,
           0.14172421, -1.7322844 ],
         [ 0.72816473,  0.22097576,  2.0382125 , ..., -2.867024  ,
           0.19997688,  0.21149398],
         ...,
         [ 0.60176754,  0.3378863 , -0.21540609, ..., -1.8459415 ,
           0.3682516 ,  1.1383542 ],
         [-0.87958044, -0.09283091,  0.30368078, ...,  0.31509143,
          -1.2246263 ,  0.4272541 ],
         [ 0.76692694,  0.60268176,  1.3319821 , ..., -0.02099733,
          -0.9364773 ,  0.34355298]],

        ...,

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]],

        [[ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         ...,
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ],
         [ 0.        ,  0.        ,  0.        , ...,  0.        ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [17], 'to': [8]}
19:tanh
{'name': 'tanh', 'output': array([[[[0.99937594, 0.9994525 , 0.99999124, ..., 0.99999875,
          0.9993992 , 0.8738638 ],
         [0.9998994 , 0.99999946, 1.        , ..., 1.        ,
          0.9999933 , 0.99996835],
         [0.99999547, 1.        , 1.        , ..., 0.9999957 ,
          0.99999493, 0.99996835],
         ...,
         [0.99399847, 1.        , 1.        , ..., 0.9999978 ,
          0.99999964, 0.99999714],
         [0.9997846 , 1.        , 1.        , ..., 0.99999744,
          0.9999802 , 0.9999802 ],
         [0.9997421 , 0.99999917, 1.        , ..., 0.9998237 ,
          0.9976954 , 0.9976954 ]],

        [[0.99937594, 0.9994525 , 0.99999124, ..., 0.99999875,
          0.9993992 , 0.8738638 ],
         [0.9998994 , 0.99999946, 1.        , ..., 1.        ,
          0.9999933 , 0.99996835],
         [0.99999547, 1.        , 1.        , ..., 0.9999957 ,
          0.99999493, 0.99996835],
         ...,
         [0.99399847, 1.        , 1.        , ..., 0.9999978 ,
          0.99999964, 0.99999714],
         [0.9997846 , 1.        , 1.        , ..., 0.99999744,
          0.9999802 , 0.9999802 ],
         [0.9997421 , 0.99999917, 1.        , ..., 0.9998237 ,
          0.9976954 , 0.9976954 ]],

        [[0.99937594, 0.9994525 , 0.99999124, ..., 0.99999875,
          0.9993992 , 0.8738638 ],
         [0.9998994 , 0.99999946, 1.        , ..., 1.        ,
          0.9999933 , 0.99996835],
         [0.99999547, 1.        , 1.        , ..., 0.9999957 ,
          0.99999493, 0.99996835],
         ...,
         [0.99399847, 1.        , 1.        , ..., 0.9999978 ,
          0.99999964, 0.99999714],
         [0.9997846 , 1.        , 1.        , ..., 0.99999744,
          0.9999802 , 0.9999802 ],
         [0.9997421 , 0.99999917, 1.        , ..., 0.9998237 ,
          0.9976954 , 0.9976954 ]],

        ...,

        [[0.99937594, 0.9994525 , 0.99999124, ..., 0.99999875,
          0.9993992 , 0.8738638 ],
         [0.9998994 , 0.99999946, 1.        , ..., 1.        ,
          0.9999933 , 0.99996835],
         [0.99999547, 1.        , 1.        , ..., 0.9999957 ,
          0.99999493, 0.99996835],
         ...,
         [0.99399847, 1.        , 1.        , ..., 0.9999978 ,
          0.99999964, 0.99999714],
         [0.9997846 , 1.        , 1.        , ..., 0.99999744,
          0.9999802 , 0.9999802 ],
         [0.9997421 , 0.99999917, 1.        , ..., 0.9998237 ,
          0.9976954 , 0.9976954 ]],

        [[0.99937594, 0.9994525 , 0.99999124, ..., 0.99999875,
          0.9993992 , 0.8738638 ],
         [0.9998994 , 0.99999946, 1.        , ..., 1.        ,
          0.9999933 , 0.99996835],
         [0.99999547, 1.        , 1.        , ..., 0.9999957 ,
          0.99999493, 0.99996835],
         ...,
         [0.99399847, 1.        , 1.        , ..., 0.9999978 ,
          0.99999964, 0.99999714],
         [0.9997846 , 1.        , 1.        , ..., 0.99999744,
          0.9999802 , 0.9999802 ],
         [0.9997421 , 0.99999917, 1.        , ..., 0.9998237 ,
          0.9976954 , 0.9976954 ]],

        [[0.99937594, 0.9994525 , 0.99999124, ..., 0.99999875,
          0.9993992 , 0.8738638 ],
         [0.9998994 , 0.99999946, 1.        , ..., 1.        ,
          0.9999933 , 0.99996835],
         [0.99999547, 1.        , 1.        , ..., 0.9999957 ,
          0.99999493, 0.99996835],
         ...,
         [0.99399847, 1.        , 1.        , ..., 0.9999978 ,
          0.99999964, 0.99999714],
         [0.9997846 , 1.        , 1.        , ..., 0.99999744,
          0.9999802 , 0.9999802 ],
         [0.9997421 , 0.99999917, 1.        , ..., 0.9998237 ,
          0.9976954 , 0.9976954 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10], 'to': [8]}
tf node:
{'name': 'add', 'output': array([[[[-0.03519452,  2.0560555 ,  1.6191502 , ...,  0.462025  ,
           1.4508281 , -0.8711313 ],
         [-1.1970499 , -0.12929004,  0.6370566 , ..., -0.99648654,
           0.05846453,  1.2372688 ],
         [ 0.6794139 ,  0.6220664 , -0.08478403, ...,  0.6421944 ,
           1.8946234 ,  1.4564011 ],
         ...,
         [ 1.2908896 ,  1.4245951 ,  3.785093  , ...,  1.1196766 ,
           1.2758718 ,  1.7957919 ],
         [ 1.353574  ,  1.7787052 ,  1.5391567 , ...,  1.0753714 ,
           1.120742  , -0.25469148],
         [ 1.5181141 ,  2.4461045 ,  3.3167133 , ...,  0.1229772 ,
           1.3161814 ,  1.3138195 ]],

        [[ 0.7117707 ,  1.689019  ,  1.5867654 , ...,  0.1427666 ,
           0.84362066,  0.9553095 ],
         [ 0.96773326,  1.6020592 ,  1.1344945 , ...,  1.9745989 ,
          -0.10662627,  0.37580055],
         [ 0.8313426 ,  0.2823423 ,  0.82349724, ..., -0.05680132,
           2.657274  ,  1.3968256 ],
         ...,
         [ 1.064996  ,  0.911924  ,  2.1828032 , ...,  1.3539532 ,
           1.3113308 ,  0.7112479 ],
         [ 0.56491005,  1.0258265 ,  0.14243042, ...,  0.96956784,
           1.9454508 ,  1.5398717 ],
         [ 0.20214331,  0.6780761 ,  0.16952235, ..., -0.5263672 ,
           1.1657083 ,  0.37514228]],

        [[ 1.2712629 ,  0.8722466 ,  1.3045422 , ..., -0.3904149 ,
           0.77265394,  0.5362341 ],
         [ 0.99243844,  0.92764497,  0.58589923, ...,  1.6015383 ,
           1.1417176 , -0.7323161 ],
         [ 1.7281601 ,  1.2209758 ,  3.0382125 , ..., -1.8670282 ,
           1.1999718 ,  1.2114624 ],
         ...,
         [ 1.5957661 ,  1.3378863 ,  0.78459394, ..., -0.84594375,
           1.3682512 ,  2.1383514 ],
         [ 0.12020415,  0.9071691 ,  1.3036808 , ...,  1.3150889 ,
          -0.22464609,  1.4272343 ],
         [ 1.766669  ,  1.6026809 ,  2.3319821 , ...,  0.97882634,
           0.06121808,  1.3412484 ]],

        ...,

        [[ 0.99937594,  0.9994525 ,  0.99999124, ...,  0.99999875,
           0.9993992 ,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  1.        ,
           0.9999933 ,  0.99996835],
         [ 0.99999547,  1.        ,  1.        , ...,  0.9999957 ,
           0.99999493,  0.99996835],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.9999978 ,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.99999744,
           0.9999802 ,  0.9999802 ],
         [ 0.9997421 ,  0.99999917,  1.        , ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]],

        [[ 0.99937594,  0.9994525 ,  0.99999124, ...,  0.99999875,
           0.9993992 ,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  1.        ,
           0.9999933 ,  0.99996835],
         [ 0.99999547,  1.        ,  1.        , ...,  0.9999957 ,
           0.99999493,  0.99996835],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.9999978 ,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.99999744,
           0.9999802 ,  0.9999802 ],
         [ 0.9997421 ,  0.99999917,  1.        , ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]],

        [[ 0.99937594,  0.9994525 ,  0.99999124, ...,  0.99999875,
           0.9993992 ,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  1.        ,
           0.9999933 ,  0.99996835],
         [ 0.99999547,  1.        ,  1.        , ...,  0.9999957 ,
           0.99999493,  0.99996835],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.9999978 ,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.99999744,
           0.9999802 ,  0.9999802 ],
         [ 0.9997421 ,  0.99999917,  1.        , ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [18, 19], 'to': [11]}
ms node:
{'name': 'add', 'output': array([[[[-0.03519446,  2.0560555 ,  1.6191502 , ...,  0.46202493,
           1.4508282 , -0.8711313 ],
         [-1.1970499 , -0.12929004,  0.6370566 , ..., -0.9964868 ,
           0.05846453,  1.2372688 ],
         [ 0.6794139 ,  0.6220664 , -0.08478403, ...,  0.6421945 ,
           1.8946233 ,  1.456401  ],
         ...,
         [ 1.2908896 ,  1.4245951 ,  3.785093  , ...,  1.1196765 ,
           1.2758718 ,  1.7957919 ],
         [ 1.353574  ,  1.7787052 ,  1.5391567 , ...,  1.0753714 ,
           1.1207418 , -0.2546916 ],
         [ 1.518114  ,  2.4461045 ,  3.3167133 , ...,  0.1229772 ,
           1.3161814 ,  1.3138195 ]],

        [[ 0.7117708 ,  1.689019  ,  1.5867655 , ...,  0.14276654,
           0.8436208 ,  0.9553095 ],
         [ 0.96773326,  1.6020592 ,  1.1344945 , ...,  1.9745986 ,
          -0.10662627,  0.3758005 ],
         [ 0.8313426 ,  0.2823423 ,  0.82349724, ..., -0.05680126,
           2.657274  ,  1.3968254 ],
         ...,
         [ 1.064996  ,  0.911924  ,  2.1828032 , ...,  1.3539531 ,
           1.3113308 ,  0.7112479 ],
         [ 0.56491005,  1.0258265 ,  0.14243042, ...,  0.9695678 ,
           1.9454507 ,  1.5398717 ],
         [ 0.20214319,  0.6780761 ,  0.16952229, ..., -0.5263672 ,
           1.1657083 ,  0.37514228]],

        [[ 1.271263  ,  0.8722465 ,  1.3045423 , ..., -0.39041495,
           0.772654  ,  0.5362341 ],
         [ 0.99243844,  0.92764497,  0.58589923, ...,  1.6015381 ,
           1.1417176 , -0.73231614],
         [ 1.7281601 ,  1.2209758 ,  3.0382125 , ..., -1.8670282 ,
           1.1999718 ,  1.2114623 ],
         ...,
         [ 1.5957661 ,  1.3378863 ,  0.78459394, ..., -0.8459438 ,
           1.3682512 ,  2.1383514 ],
         [ 0.12020415,  0.9071691 ,  1.3036808 , ...,  1.3150887 ,
          -0.22464621,  1.4272342 ],
         [ 1.7666689 ,  1.6026809 ,  2.3319821 , ...,  0.97882634,
           0.06121808,  1.3412484 ]],

        ...,

        [[ 0.999376  ,  0.99945235,  0.9999913 , ...,  0.9999987 ,
           0.99939924,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  0.99999976,
           0.9999933 ,  0.9999683 ],
         [ 0.99999547,  1.        ,  1.        , ...,  0.99999577,
           0.9999949 ,  0.9999683 ],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.99999774,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.9999974 ,
           0.9999801 ,  0.9999801 ],
         [ 0.999742  ,  0.99999917,  0.99999994, ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]],

        [[ 0.999376  ,  0.99945235,  0.9999913 , ...,  0.9999987 ,
           0.99939924,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  0.99999976,
           0.9999933 ,  0.9999683 ],
         [ 0.99999547,  1.        ,  1.        , ...,  0.99999577,
           0.9999949 ,  0.9999683 ],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.99999774,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.9999974 ,
           0.9999801 ,  0.9999801 ],
         [ 0.999742  ,  0.99999917,  0.99999994, ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]],

        [[ 0.999376  ,  0.99945235,  0.9999913 , ...,  0.9999987 ,
           0.99939924,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  0.99999976,
           0.9999933 ,  0.9999683 ],
         [ 0.99999547,  1.        ,  1.        , ...,  0.99999577,
           0.9999949 ,  0.9999683 ],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.99999774,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.9999974 ,
           0.9999801 ,  0.9999801 ],
         [ 0.999742  ,  0.99999917,  0.99999994, ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [18, 19], 'to': [11]}
torch node:
{'name': 'add', 'output': array([[[[-0.03519446,  2.0560555 ,  1.6191502 , ...,  0.46202493,
           1.4508283 , -0.8711313 ],
         [-1.1970499 , -0.12929004,  0.6370566 , ..., -0.9964868 ,
           0.05846453,  1.2372688 ],
         [ 0.6794139 ,  0.6220664 , -0.08478403, ...,  0.6421945 ,
           1.8946233 ,  1.4564011 ],
         ...,
         [ 1.2908896 ,  1.4245951 ,  3.785093  , ...,  1.1196765 ,
           1.2758718 ,  1.7957919 ],
         [ 1.353574  ,  1.7787052 ,  1.5391567 , ...,  1.0753714 ,
           1.1207418 , -0.2546916 ],
         [ 1.518114  ,  2.4461045 ,  3.3167133 , ...,  0.1229772 ,
           1.3161814 ,  1.3138195 ]],

        [[ 0.7117708 ,  1.689019  ,  1.5867655 , ...,  0.14276654,
           0.8436208 ,  0.9553095 ],
         [ 0.96773326,  1.6020592 ,  1.1344945 , ...,  1.9745986 ,
          -0.10662627,  0.37580055],
         [ 0.8313426 ,  0.2823423 ,  0.82349724, ..., -0.05680126,
           2.657274  ,  1.3968256 ],
         ...,
         [ 1.064996  ,  0.911924  ,  2.1828032 , ...,  1.3539531 ,
           1.3113308 ,  0.7112479 ],
         [ 0.56491005,  1.0258265 ,  0.14243042, ...,  0.9695678 ,
           1.9454507 ,  1.5398717 ],
         [ 0.20214319,  0.6780761 ,  0.16952229, ..., -0.5263672 ,
           1.1657083 ,  0.37514228]],

        [[ 1.271263  ,  0.87224656,  1.3045423 , ..., -0.39041495,
           0.77265406,  0.5362341 ],
         [ 0.99243844,  0.92764497,  0.58589923, ...,  1.6015381 ,
           1.1417176 , -0.7323161 ],
         [ 1.7281601 ,  1.2209758 ,  3.0382125 , ..., -1.8670282 ,
           1.1999718 ,  1.2114624 ],
         ...,
         [ 1.5957661 ,  1.3378863 ,  0.78459394, ..., -0.8459438 ,
           1.3682512 ,  2.1383514 ],
         [ 0.12020415,  0.9071691 ,  1.3036808 , ...,  1.3150887 ,
          -0.22464621,  1.4272342 ],
         [ 1.7666689 ,  1.6026809 ,  2.3319821 , ...,  0.97882634,
           0.06121808,  1.3412484 ]],

        ...,

        [[ 0.999376  ,  0.9994524 ,  0.9999913 , ...,  0.9999987 ,
           0.9993993 ,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  0.99999976,
           0.9999933 ,  0.99996835],
         [ 0.99999547,  1.        ,  1.        , ...,  0.99999577,
           0.9999949 ,  0.99996835],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.99999774,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.9999974 ,
           0.9999801 ,  0.9999801 ],
         [ 0.999742  ,  0.99999917,  0.99999994, ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]],

        [[ 0.999376  ,  0.9994524 ,  0.9999913 , ...,  0.9999987 ,
           0.9993993 ,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  0.99999976,
           0.9999933 ,  0.99996835],
         [ 0.99999547,  1.        ,  1.        , ...,  0.99999577,
           0.9999949 ,  0.99996835],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.99999774,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.9999974 ,
           0.9999801 ,  0.9999801 ],
         [ 0.999742  ,  0.99999917,  0.99999994, ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]],

        [[ 0.999376  ,  0.9994524 ,  0.9999913 , ...,  0.9999987 ,
           0.9993993 ,  0.8738638 ],
         [ 0.9998994 ,  0.99999946,  1.        , ...,  0.99999976,
           0.9999933 ,  0.99996835],
         [ 0.99999547,  1.        ,  1.        , ...,  0.99999577,
           0.9999949 ,  0.99996835],
         ...,
         [ 0.99399847,  1.        ,  1.        , ...,  0.99999774,
           0.99999964,  0.99999714],
         [ 0.9997846 ,  1.        ,  1.        , ...,  0.9999974 ,
           0.9999801 ,  0.9999801 ],
         [ 0.999742  ,  0.99999917,  0.99999994, ...,  0.9998237 ,
           0.9976954 ,  0.9976954 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [18, 19], 'to': [11]}

pre layer res:
20:add
{'name': 'add', 'output': array([[[[254.82481, 258.53503, 258.12668, ..., 253.60474, 256.36707,
          222.57979],
         [254.93405, 255.5297 , 255.35745, ..., 256.57614, 254.19923,
          254.8426 ],
         [256.2382 , 255.12538, 256.8617 , ..., 253.64146, 259.64572,
          257.51334],
         ...,
         [255.73062, 257.099  , 262.5376 , ..., 255.59312, 257.23132,
          258.44098],
         [255.33836, 257.49042, 256.5244 , ..., 256.4352 , 256.18234,
          255.96251],
         [256.93973, 259.17294, 261.13495, ..., 254.05643, 255.27864,
          255.7634 ]],

        [[254.82481, 258.168  , 258.09427, ..., 253.60474, 255.91565,
          222.66124],
         [254.93405, 256.13174, 255.49194, ..., 257.55075, 254.19923,
          254.6053 ],
         [256.2382 , 255.12538, 256.8617 , ..., 253.64146, 260.4084 ,
          257.45377],
         ...,
         [255.50473, 256.6744 , 260.9353 , ..., 255.82741, 257.26678,
          257.64517],
         [254.98457, 256.73752, 255.98526, ..., 256.35983, 257.00705,
          256.5024 ],
         [256.42136, 257.72684, 258.81824, ..., 254.05643, 255.12817,
          255.44727]],

        [[255.0967 , 257.47842, 257.81207, ..., 253.60474, 255.91565,
          222.57979],
         [254.93405, 255.5297 , 255.35745, ..., 257.17767, 254.34096,
          254.6053 ],
         [256.96637, 255.34636, 258.8999 , ..., 253.64146, 258.95108,
          257.2684 ],
         ...,
         [256.0355 , 257.0123 , 259.7525 , ..., 255.47345, 257.3237 ,
          258.78354],
         [254.98457, 256.7117 , 256.28894, ..., 256.67493, 256.06158,
          256.38977],
         [257.1883 , 258.32953, 260.1502 , ..., 254.05643, 254.96016,
          255.79082]],

        ...,

        [[254.82481, 257.47842, 257.5075 , ..., 253.60474, 255.91565,
          222.57979],
         [254.93405, 255.5297 , 255.35745, ..., 256.57614, 254.19923,
          254.6053 ],
         [256.2382 , 255.12538, 256.8617 , ..., 253.64146, 258.7511 ,
          257.05692],
         ...,
         [255.43373, 256.6744 , 259.7525 , ..., 255.47345, 256.95544,
          257.64517],
         [254.98457, 256.7117 , 255.98526, ..., 256.35983, 256.06158,
          255.96251],
         [256.42136, 257.72684, 258.81824, ..., 254.05643, 254.96016,
          255.44727]],

        [[254.82481, 257.47842, 257.5075 , ..., 253.60474, 255.91565,
          222.57979],
         [254.93405, 255.5297 , 255.35745, ..., 256.57614, 254.19923,
          254.6053 ],
         [256.2382 , 255.12538, 256.8617 , ..., 253.64146, 258.7511 ,
          257.05692],
         ...,
         [255.43373, 256.6744 , 259.7525 , ..., 255.47345, 256.95544,
          257.64517],
         [254.98457, 256.7117 , 255.98526, ..., 256.35983, 256.06158,
          255.96251],
         [256.42136, 257.72684, 258.81824, ..., 254.05643, 254.96016,
          255.44727]],

        [[254.82481, 257.47842, 257.5075 , ..., 253.60474, 255.91565,
          222.57979],
         [254.93405, 255.5297 , 255.35745, ..., 256.57614, 254.19923,
          254.6053 ],
         [256.2382 , 255.12538, 256.8617 , ..., 253.64146, 258.7511 ,
          257.05692],
         ...,
         [255.43373, 256.6744 , 259.7525 , ..., 255.47345, 256.95544,
          257.64517],
         [254.98457, 256.7117 , 255.98526, ..., 256.35983, 256.06158,
          255.96251],
         [256.42136, 257.72684, 258.81824, ..., 254.05643, 254.96016,
          255.44727]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [7, 2], 'to': [21]}
tf node:
{'name': 'softmax', 'output': array([[[[3.05471825e-04, 1.24824373e-02, 8.29760451e-03, ...,
          9.01774984e-05, 1.42811262e-03, 3.02785058e-18],
         [9.10174975e-04, 1.65123527e-03, 1.38997042e-03, ...,
          4.70192218e-03, 4.36513510e-04, 8.30635312e-04],
         [1.67301588e-03, 5.49811230e-04, 3.12093436e-03, ...,
          1.24668426e-04, 5.05094044e-02, 5.98810054e-03],
         ...,
         [7.95087835e-04, 3.12387780e-03, 7.18865097e-01, ...,
          6.92948583e-04, 3.56583879e-03, 1.19538708e-02],
         [9.17162397e-04, 7.88989756e-03, 3.00290342e-03, ...,
          2.74663558e-03, 2.13295454e-03, 1.71202142e-03],
         [1.23302452e-03, 1.15038939e-02, 8.18338543e-02, ...,
          6.89874505e-05, 2.34191320e-04, 3.80275073e-04]],

        [[4.20065393e-04, 1.18916985e-02, 1.10464608e-02, ...,
          1.24006358e-04, 1.25043397e-03, 4.51704142e-18],
         [1.10526604e-03, 3.66115617e-03, 1.93088409e-03, ...,
          1.51316011e-02, 5.30077843e-04, 7.95595406e-04],
         [8.05306714e-04, 2.64651782e-04, 1.50226289e-03, ...,
          6.00091917e-05, 5.21260314e-02, 2.71568471e-03],
         ...,
         [1.10489363e-03, 3.55881196e-03, 2.52224982e-01, ...,
          1.52565923e-03, 6.43533235e-03, 9.39512439e-03],
         [3.77167686e-04, 2.17685173e-03, 1.02595240e-03, ...,
          1.49211416e-03, 2.85026175e-03, 1.72077061e-03],
         [1.19123398e-03, 4.39501368e-03, 1.30902911e-02, ...,
          1.11923524e-04, 3.26870009e-04, 4.49733168e-04]],

        [[4.27689316e-04, 4.62913839e-03, 6.46252092e-03, ...,
          9.62008708e-05, 9.70053661e-04, 3.23009418e-18],
         [1.82619621e-03, 3.31307692e-03, 2.78886920e-03, ...,
          1.72163099e-02, 1.00918335e-03, 1.31453725e-03],
         [1.22710578e-02, 2.42840103e-03, 8.48407745e-02, ...,
          4.41462646e-04, 8.92957747e-02, 1.65978968e-02],
         ...,
         [2.09862902e-03, 5.57387713e-03, 8.63401592e-02, ...,
          1.19631027e-03, 7.61022139e-03, 3.27640250e-02],
         [7.16138980e-04, 4.02790355e-03, 2.63922685e-03, ...,
          3.88247287e-03, 2.10250611e-03, 2.91921874e-03],
         [2.05246895e-03, 6.42552786e-03, 3.96843702e-02, ...,
          8.95620979e-05, 2.21110939e-04, 5.07411663e-04]],

        ...,

        [[1.33674534e-03, 1.89887751e-02, 1.95491407e-02, ...,
          3.94616945e-04, 3.97917069e-03, 1.32498816e-17],
         [3.54844448e-03, 6.43757172e-03, 5.41899400e-03, ...,
          1.83311030e-02, 1.70180900e-03, 2.55425018e-03],
         [8.19519814e-03, 2.69322726e-03, 1.52877681e-02, ...,
          6.10683172e-04, 1.01135105e-01, 1.85834989e-02],
         ...,
         [3.51770781e-03, 1.21640693e-02, 2.64166862e-01, ...,
          3.66023788e-03, 1.61113311e-02, 3.21126692e-02],
         [2.22339248e-03, 1.25054093e-02, 6.04795897e-03, ...,
          8.79597012e-03, 6.52763899e-03, 5.91191556e-03],
         [4.20051487e-03, 1.54976435e-02, 4.61588241e-02, ...,
          3.94663366e-04, 9.74345079e-04, 1.58584362e-03]],

        [[1.33674534e-03, 1.89887751e-02, 1.95491407e-02, ...,
          3.94616945e-04, 3.97917069e-03, 1.32498816e-17],
         [3.54844448e-03, 6.43757172e-03, 5.41899400e-03, ...,
          1.83311030e-02, 1.70180900e-03, 2.55425018e-03],
         [8.19519814e-03, 2.69322726e-03, 1.52877681e-02, ...,
          6.10683172e-04, 1.01135105e-01, 1.85834989e-02],
         ...,
         [3.51770781e-03, 1.21640693e-02, 2.64166862e-01, ...,
          3.66023788e-03, 1.61113311e-02, 3.21126692e-02],
         [2.22339248e-03, 1.25054093e-02, 6.04795897e-03, ...,
          8.79597012e-03, 6.52763899e-03, 5.91191556e-03],
         [4.20051487e-03, 1.54976435e-02, 4.61588241e-02, ...,
          3.94663366e-04, 9.74345079e-04, 1.58584362e-03]],

        [[1.33674534e-03, 1.89887751e-02, 1.95491407e-02, ...,
          3.94616945e-04, 3.97917069e-03, 1.32498816e-17],
         [3.54844448e-03, 6.43757172e-03, 5.41899400e-03, ...,
          1.83311030e-02, 1.70180900e-03, 2.55425018e-03],
         [8.19519814e-03, 2.69322726e-03, 1.52877681e-02, ...,
          6.10683172e-04, 1.01135105e-01, 1.85834989e-02],
         ...,
         [3.51770781e-03, 1.21640693e-02, 2.64166862e-01, ...,
          3.66023788e-03, 1.61113311e-02, 3.21126692e-02],
         [2.22339248e-03, 1.25054093e-02, 6.04795897e-03, ...,
          8.79597012e-03, 6.52763899e-03, 5.91191556e-03],
         [4.20051487e-03, 1.54976435e-02, 4.61588241e-02, ...,
          3.94663366e-04, 9.74345079e-04, 1.58584362e-03]]]],
      dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [20], 'to': [13]}
ms node:
{'name': 'softmax', 'output': array([[[[3.0547174e-04, 1.2482434e-02, 8.2976036e-03, ...,
          9.0177491e-05, 1.4282869e-03, 3.0278504e-18],
         [9.1017637e-04, 1.6512381e-03, 1.3899726e-03, ...,
          4.7017867e-03, 4.3651424e-04, 8.3063677e-04],
         [1.6730163e-03, 5.4981140e-04, 3.1209358e-03, ...,
          1.2466848e-04, 5.0509423e-02, 5.9881033e-03],
         ...,
         [7.9508784e-04, 3.1238773e-03, 7.1886510e-01, ...,
          6.9294852e-04, 3.5658388e-03, 1.1953869e-02],
         [9.1716438e-04, 7.8899134e-03, 3.0029097e-03, ...,
          2.7466419e-03, 2.1329590e-03, 1.7120250e-03],
         [1.2330308e-03, 1.1503950e-02, 8.1831783e-02, ...,
          6.8987807e-05, 2.3419250e-04, 3.8027699e-04]],

        [[4.2006533e-04, 1.1891696e-02, 1.1046459e-02, ...,
          1.2400633e-04, 1.2505865e-03, 4.5170422e-18],
         [1.1052687e-03, 3.6611645e-03, 1.9308886e-03, ...,
          1.5131175e-02, 5.3007912e-04, 7.9559744e-04],
         [8.0530683e-04, 2.6465184e-04, 1.5022631e-03, ...,
          6.0009195e-05, 5.2126043e-02, 2.7156849e-03],
         ...,
         [1.1048939e-03, 3.5588122e-03, 2.5222504e-01, ...,
          1.5256596e-03, 6.4353328e-03, 9.3951253e-03],
         [3.7716830e-04, 2.1768550e-03, 1.0259540e-03, ...,
          1.4921166e-03, 2.8502664e-03, 1.7207732e-03],
         [1.1912371e-03, 4.3950258e-03, 1.3089926e-02, ...,
          1.1192381e-04, 3.2687088e-04, 4.4973430e-04]],

        [[4.2768923e-04, 4.6291379e-03, 6.4625195e-03, ...,
          9.6200842e-05, 9.7017188e-04, 3.2300940e-18],
         [1.8262054e-03, 3.3130937e-03, 2.7888829e-03, ...,
          1.7215870e-02, 1.0091884e-03, 1.3145439e-03],
         [1.2271063e-02, 2.4284024e-03, 8.4840812e-02, ...,
          4.4146288e-04, 8.9295819e-02, 1.6597906e-02],
         ...,
         [2.0986293e-03, 5.5738785e-03, 8.6340167e-02, ...,
          1.1963103e-03, 7.6102219e-03, 3.2764029e-02],
         [7.1613974e-04, 4.0279077e-03, 2.6392301e-03, ...,
          3.8824773e-03, 2.1025087e-03, 2.9192222e-03],
         [2.0524752e-03, 6.4255479e-03, 3.9683286e-02, ...,
          8.9562382e-05, 2.2111164e-04, 5.0741312e-04]],

        ...,

        [[1.3367448e-03, 1.8988764e-02, 1.9549131e-02, ...,
          3.9461677e-04, 3.9796550e-03, 1.3249877e-17],
         [3.5484566e-03, 6.4375931e-03, 5.4190131e-03, ...,
          1.8330606e-02, 1.7018148e-03, 2.5542588e-03],
         [8.1952037e-03, 2.6932289e-03, 1.5287778e-02, ...,
          6.1068358e-04, 1.0113517e-01, 1.8583510e-02],
         ...,
         [3.5177076e-03, 1.2164070e-02, 2.6416686e-01, ...,
          3.6602381e-03, 1.6111331e-02, 3.2112669e-02],
         [2.2233990e-03, 1.2505447e-02, 6.0479771e-03, ...,
          8.7959962e-03, 6.5276590e-03, 5.9119342e-03],
         [4.2005354e-03, 1.5497723e-02, 4.6157647e-02, ...,
          3.9466535e-04, 9.7434991e-04, 1.5858514e-03]],

        [[1.3367787e-03, 1.8988959e-02, 1.9566638e-02, ...,
          3.9459069e-04, 3.9764177e-03, 1.3238694e-17],
         [3.5518329e-03, 6.4376253e-03, 5.4192054e-03, ...,
          1.8331254e-02, 1.7002400e-03, 2.5542327e-03],
         [8.1899324e-03, 2.6934685e-03, 1.5289139e-02, ...,
          6.1030005e-04, 1.0106703e-01, 1.8584596e-02],
         ...,
         [3.5150195e-03, 1.2164238e-02, 2.6417050e-01, ...,
          3.6595624e-03, 1.6111553e-02, 3.2105271e-02],
         [2.2233208e-03, 1.2505578e-02, 6.0480409e-03, ...,
          8.7942099e-03, 6.5229484e-03, 5.9075779e-03],
         [4.2006574e-03, 1.5497700e-02, 4.6157580e-02, ...,
          3.9503828e-04, 9.7433367e-04, 1.5858007e-03]],

        [[1.3367787e-03, 1.8988959e-02, 1.9566638e-02, ...,
          3.9459069e-04, 3.9764177e-03, 1.3238694e-17],
         [3.5518329e-03, 6.4376253e-03, 5.4192054e-03, ...,
          1.8331254e-02, 1.7002400e-03, 2.5542327e-03],
         [8.1899324e-03, 2.6934685e-03, 1.5289139e-02, ...,
          6.1030005e-04, 1.0106703e-01, 1.8584596e-02],
         ...,
         [3.5150195e-03, 1.2164238e-02, 2.6417050e-01, ...,
          3.6595624e-03, 1.6111553e-02, 3.2105271e-02],
         [2.2233208e-03, 1.2505578e-02, 6.0480409e-03, ...,
          8.7942099e-03, 6.5229484e-03, 5.9075779e-03],
         [4.2006574e-03, 1.5497700e-02, 4.6157580e-02, ...,
          3.9503828e-04, 9.7433367e-04, 1.5858007e-03]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [20], 'to': [13]}
torch node:
{'name': 'softmax', 'output': array([[[[3.05488560e-04, 1.24827409e-02, 8.30515288e-03, ...,
          9.01728199e-05, 1.42714544e-03, 3.02538414e-18],
         [9.11027193e-04, 1.65124366e-03, 1.38999871e-03, ...,
          4.70187468e-03, 4.36102971e-04, 8.30614299e-04],
         [1.67180842e-03, 5.49833756e-04, 3.12106241e-03, ...,
          1.24584170e-04, 5.04729562e-02, 5.98816387e-03],
         ...,
         [7.94472813e-04, 3.12389131e-03, 7.18868196e-01, ...,
          6.92824658e-04, 3.56585416e-03, 1.19513683e-02],
         [9.17126075e-04, 7.88994599e-03, 3.00292205e-03, ...,
          2.74606608e-03, 2.13140622e-03, 1.71075237e-03],
         [1.23306655e-03, 1.15035819e-02, 8.18316564e-02, ...,
          6.90529923e-05, 2.34188585e-04, 3.80270620e-04]],

        [[4.20087512e-04, 1.18919620e-02, 1.10564856e-02, ...,
          1.23999649e-04, 1.24958425e-03, 4.51335219e-18],
         [1.10629993e-03, 3.66122741e-03, 1.93092157e-03, ...,
          1.51314335e-02, 5.29578829e-04, 7.95574510e-04],
         [8.04725860e-04, 2.64662754e-04, 1.50232506e-03, ...,
          5.99686500e-05, 5.20884320e-02, 2.71571404e-03],
         ...,
         [1.10403821e-03, 3.55882524e-03, 2.52225935e-01, ...,
          1.52538554e-03, 6.43535610e-03, 9.39315278e-03],
         [3.77152319e-04, 2.17686221e-03, 1.02595740e-03, ...,
          1.49180286e-03, 2.84818909e-03, 1.71946664e-03],
         [1.19126646e-03, 4.39486513e-03, 1.30898496e-02, ...,
          1.12029098e-04, 3.26863985e-04, 4.49724845e-04]],

        [[4.27714200e-04, 4.62926738e-03, 6.46842225e-03, ...,
          9.61961923e-05, 9.69399989e-04, 3.22747408e-18],
         [1.82799913e-03, 3.31326225e-03, 2.78906757e-03, ...,
          1.72170103e-02, 1.00828544e-03, 1.31457066e-03],
         [1.22627858e-02, 2.42861616e-03, 8.48482847e-02, ...,
          4.41185228e-04, 8.92355815e-02, 1.65988598e-02],
         ...,
         [2.09704926e-03, 5.57393208e-03, 8.63410160e-02, ...,
          1.19610305e-03, 7.61029683e-03, 3.27573530e-02],
         [7.16110575e-04, 4.02792823e-03, 2.63924291e-03, ...,
          3.88166751e-03, 2.10097968e-03, 2.91701057e-03],
         [2.05252436e-03, 6.42530899e-03, 3.96830216e-02, ...,
          8.96465572e-05, 2.21106777e-04, 5.07402059e-04]],

        ...,

        [[1.33680983e-03, 1.89891104e-02, 1.95667949e-02, ...,
          3.94593837e-04, 3.97644890e-03, 1.32390001e-17],
         [3.55186150e-03, 6.43777568e-03, 5.41924872e-03, ...,
          1.83314029e-02, 1.70025369e-03, 2.55425321e-03],
         [8.18968751e-03, 2.69347033e-03, 1.52891474e-02, ...,
          6.10300398e-04, 1.01067096e-01, 1.85846072e-02],
         ...,
         [3.51501419e-03, 1.21642174e-02, 2.64170080e-01, ...,
          3.65961273e-03, 1.61115285e-02, 3.21062021e-02],
         [2.22332356e-03, 1.25055937e-02, 6.04804792e-03, ...,
          8.79422110e-03, 6.52295584e-03, 5.90758445e-03],
         [4.20061918e-03, 1.54970828e-02, 4.61571515e-02, ...,
          3.95034673e-04, 9.74324590e-04, 1.58581045e-03]],

        [[1.33680983e-03, 1.89891104e-02, 1.95667949e-02, ...,
          3.94593837e-04, 3.97644890e-03, 1.32390001e-17],
         [3.55186150e-03, 6.43777568e-03, 5.41924872e-03, ...,
          1.83314029e-02, 1.70025369e-03, 2.55425321e-03],
         [8.18968751e-03, 2.69347033e-03, 1.52891474e-02, ...,
          6.10300398e-04, 1.01067096e-01, 1.85846072e-02],
         ...,
         [3.51501419e-03, 1.21642174e-02, 2.64170080e-01, ...,
          3.65961273e-03, 1.61115285e-02, 3.21062021e-02],
         [2.22332356e-03, 1.25055937e-02, 6.04804792e-03, ...,
          8.79422110e-03, 6.52295584e-03, 5.90758445e-03],
         [4.20061918e-03, 1.54970828e-02, 4.61571515e-02, ...,
          3.95034673e-04, 9.74324590e-04, 1.58581045e-03]],

        [[1.33680983e-03, 1.89891104e-02, 1.95667949e-02, ...,
          3.94593837e-04, 3.97644890e-03, 1.32390001e-17],
         [3.55186150e-03, 6.43777568e-03, 5.41924872e-03, ...,
          1.83314029e-02, 1.70025369e-03, 2.55425321e-03],
         [8.18968751e-03, 2.69347033e-03, 1.52891474e-02, ...,
          6.10300398e-04, 1.01067096e-01, 1.85846072e-02],
         ...,
         [3.51501419e-03, 1.21642174e-02, 2.64170080e-01, ...,
          3.65961273e-03, 1.61115285e-02, 3.21062021e-02],
         [2.22332356e-03, 1.25055937e-02, 6.04804792e-03, ...,
          8.79422110e-03, 6.52295584e-03, 5.90758445e-03],
         [4.20061918e-03, 1.54970828e-02, 4.61571515e-02, ...,
          3.95034673e-04, 9.74324590e-04, 1.58581045e-03]]]],
      dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [20], 'to': [13]}

generate models:304

analyse output arrays in iter:326

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[-0.44061708,  1.1649868 , -0.9638878 , ..., -1.740926  ,
          -1.1351403 , -0.71388644],
         [ 0.46649078, -0.5947559 ,  1.8046627 , ..., -1.2615482 ,
           0.38999823, -0.96611744],
         [-1.3664757 ,  1.1699847 ,  1.0448955 , ..., -1.3905715 ,
          -0.12709391,  0.0244734 ],
         ...,
         [-0.6133678 ,  1.4784805 , -0.05383321, ..., -0.17514513,
           0.04859166,  0.8806322 ],
         [ 0.04307554, -1.819512  , -0.05924507, ..., -0.05469369,
           1.334742  ,  0.9620554 ],
         [-1.2890803 ,  0.86034775,  0.5555383 , ..., -0.10053501,
          -0.63242024, -0.8836566 ]],

        [[-0.72972393,  1.6234188 , -0.5754561 , ..., -0.4679386 ,
          -0.614055  , -0.37831584],
         [ 0.15920672, -1.3781853 ,  1.5951148 , ..., -0.22621754,
          -1.5658743 , -0.13040182],
         [ 1.3403617 , -1.5597677 ,  0.5253148 , ..., -0.1839941 ,
          -1.119428  ,  1.3812202 ],
         ...,
         [-0.2374301 ,  0.60950553, -1.9729861 , ...,  0.38589248,
          -1.2987474 , -1.2924602 ],
         [ 2.2623756 ,  0.14342786,  0.7567074 , ...,  1.650807  ,
          -0.6552293 , -0.7353879 ],
         [ 0.3847412 , -0.91350496, -0.01929346, ...,  0.62927824,
          -1.065666  , -1.6955078 ]],

        [[ 0.6271499 , -0.53908354,  1.6126102 , ...,  2.1238654 ,
           0.01931922, -0.9469178 ],
         [-0.34370634, -0.5807483 ,  0.16625404, ..., -0.2671168 ,
          -0.19187641,  0.5667587 ],
         [ 0.3169993 , -1.0898833 ,  1.0120708 , ..., -0.76225364,
          -0.0801046 ,  1.809638  ],
         ...,
         [ 0.06806389,  0.5386379 , -1.6379182 , ..., -0.27631938,
           0.46549127,  0.27025032],
         [ 0.39797443,  0.7637082 ,  0.08861163, ..., -2.710887  ,
          -0.5129903 , -1.6359549 ],
         [-0.08565228, -1.8382198 , -1.5030638 , ...,  0.7865363 ,
           0.9189486 , -0.4395739 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [7]}
tf node:
{'name': 'log', 'output': array([[[[        nan,  0.1527098 ,         nan, ...,         nan,
                  nan,         nan],
         [-0.76251704,         nan,  0.5903737 , ...,         nan,
          -0.9416131 ,         nan],
         [        nan,  0.15699068,  0.04391691, ...,         nan,
                  nan, -3.7101684 ],
         ...,
         [        nan,  0.39101484,         nan, ...,         nan,
          -3.0243034 , -0.12711519],
         [-3.1448    ,         nan,         nan, ...,         nan,
           0.28873798, -0.03868326],
         [        nan, -0.15041861, -0.5878177 , ...,         nan,
                  nan,         nan]],

        [[        nan,  0.48453432,         nan, ...,         nan,
                  nan,         nan],
         [-1.8375518 ,         nan,  0.4669457 , ...,         nan,
                  nan,         nan],
         [ 0.2929395 ,         nan, -0.6437576 , ...,         nan,
                  nan,  0.32296732],
         ...,
         [        nan, -0.49510723,         nan, ..., -0.9521965 ,
                  nan,         nan],
         [ 0.8164154 , -1.941923  , -0.27877867, ...,  0.5012643 ,
                  nan,         nan],
         [-0.95518446,         nan,         nan, ..., -0.46318176,
                  nan,         nan]],

        [[-0.46656972,         nan,  0.47785413, ...,  0.7532377 ,
          -3.946655  ,         nan],
         [        nan,         nan, -1.7942383 , ...,         nan,
                  nan, -0.5678216 ],
         [-1.1488558 ,         nan,  0.0119985 , ...,         nan,
                  nan,  0.59312683],
         ...,
         [-2.6873083 , -0.61871177,         nan, ...,         nan,
          -0.76466197, -1.3084066 ],
         [-0.9213675 , -0.26956955, -2.4234922 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.24011643,
          -0.0845251 ,         nan]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [5, 16]}
ms node:
{'name': 'log', 'output': array([[[[        nan,  0.15270832,         nan, ...,         nan,
                  nan,         nan],
         [-0.76251704,         nan,  0.59037274, ...,         nan,
          -0.9416153 ,         nan],
         [        nan,  0.15698919,  0.04392032, ...,         nan,
                  nan, -3.7101707 ],
         ...,
         [        nan,  0.39101478,         nan, ...,         nan,
          -3.0243056 , -0.12711619],
         [-3.144797  ,         nan,         nan, ...,         nan,
           0.28873605, -0.03868324],
         [        nan, -0.1504196 , -0.58781713, ...,         nan,
                  nan,         nan]],

        [[        nan,  0.48453188,         nan, ...,         nan,
                  nan,         nan],
         [-1.837549  ,         nan,  0.46694332, ...,         nan,
                  nan,         nan],
         [ 0.29293758,         nan, -0.6437541 , ...,         nan,
                  nan,  0.32297018],
         ...,
         [        nan, -0.49510646,         nan, ..., -0.95219874,
                  nan,         nan],
         [ 0.81641227, -1.9419262 , -0.27878088, ...,  0.5012619 ,
                  nan,         nan],
         [-0.95518667,         nan,         nan, ..., -0.46317896,
                  nan,         nan]],

        [[-0.46656692,         nan,  0.47785172, ...,  0.7532411 ,
          -3.9466543 ,         nan],
         [        nan,         nan, -1.7942402 , ...,         nan,
                  nan, -0.56782484],
         [-1.148853  ,         nan,  0.01199707, ...,         nan,
                  nan,  0.5931259 ],
         ...,
         [-2.6873114 , -0.6187147 ,         nan, ...,         nan,
          -0.7646619 , -1.3084096 ],
         [-0.9213699 , -0.26957175, -2.4234893 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.24011885,
          -0.08452608,         nan]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [5, 16]}
torch node:
{'name': 'log', 'output': array([[[[        nan,  0.1527098 ,         nan, ...,         nan,
                  nan,         nan],
         [-0.76251704,         nan,  0.5903737 , ...,         nan,
          -0.9416131 ,         nan],
         [        nan,  0.15699068,  0.04391691, ...,         nan,
                  nan, -3.7101684 ],
         ...,
         [        nan,  0.39101484,         nan, ...,         nan,
          -3.0243034 , -0.12711519],
         [-3.1448    ,         nan,         nan, ...,         nan,
           0.28873798, -0.03868326],
         [        nan, -0.15041861, -0.5878177 , ...,         nan,
                  nan,         nan]],

        [[        nan,  0.48453432,         nan, ...,         nan,
                  nan,         nan],
         [-1.8375518 ,         nan,  0.4669457 , ...,         nan,
                  nan,         nan],
         [ 0.2929395 ,         nan, -0.6437576 , ...,         nan,
                  nan,  0.32296732],
         ...,
         [        nan, -0.49510723,         nan, ..., -0.9521965 ,
                  nan,         nan],
         [ 0.8164154 , -1.941923  , -0.27877867, ...,  0.5012643 ,
                  nan,         nan],
         [-0.9551844 ,         nan,         nan, ..., -0.46318176,
                  nan,         nan]],

        [[-0.46656972,         nan,  0.47785413, ...,  0.7532377 ,
          -3.946655  ,         nan],
         [        nan,         nan, -1.7942383 , ...,         nan,
                  nan, -0.5678216 ],
         [-1.1488558 ,         nan,  0.0119985 , ...,         nan,
                  nan,  0.59312683],
         ...,
         [-2.6873083 , -0.61871177,         nan, ...,         nan,
          -0.76466197, -1.3084066 ],
         [-0.9213675 , -0.26956955, -2.4234922 , ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.24011643,
          -0.0845251 ,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [5, 16]}

generate models:307

analyse output arrays in iter:341

pre layer res:
0:zeropadding2d
{'name': 'zeropadding2d', 'output': array([[[[ 1.200767  ,  1.4753183 , -0.44550145, ...,  0.19329181,
          -0.7532776 , -0.25475523],
         [ 1.1845623 ,  1.462406  ,  0.26161808, ..., -0.5849387 ,
          -0.4161743 ,  1.2006916 ],
         [ 0.37700158, -0.06227292, -1.2137802 , ..., -2.4695973 ,
          -0.6129981 , -1.4486871 ],
         ...,
         [ 0.24939707,  0.92749476, -1.3557703 , ...,  0.3906444 ,
          -1.1416944 ,  1.639687  ],
         [-0.03236233, -0.2612256 ,  3.1298738 , ..., -0.49632272,
          -0.06217699,  0.39906812],
         [ 1.8995266 , -1.2387133 ,  0.5239664 , ..., -0.4298431 ,
          -1.5396754 , -1.4800502 ]],

        [[ 0.29333702, -0.20136967, -3.0341332 , ...,  0.11168662,
          -0.92805445, -0.8334223 ],
         [-0.08532336, -1.3710823 ,  0.74864054, ...,  0.7175429 ,
           0.3066716 ,  0.7032571 ],
         [ 0.6135454 ,  0.01073861, -0.7632974 , ...,  0.58838844,
          -0.59233326, -0.07677448],
         ...,
         [-0.91076314,  1.0057901 , -1.016405  , ..., -0.7658022 ,
           1.023782  ,  0.00814376],
         [-0.02745987,  1.5534883 ,  1.4690001 , ...,  0.40765804,
           0.94084173, -1.9175823 ],
         [ 0.7052437 ,  0.04552184,  0.9019748 , ...,  0.2269541 ,
          -1.5783775 ,  0.4982583 ]],

        [[-0.07117692, -0.51593745,  0.03772373, ..., -1.2563151 ,
          -0.04595267, -1.954893  ],
         [ 0.85728073, -0.92727184,  0.16873945, ...,  0.16886383,
          -0.19237424,  0.3217728 ],
         [-0.06515812,  0.3430447 , -0.16941893, ..., -0.9475691 ,
           1.8031093 , -0.3986813 ],
         ...,
         [ 0.8531551 , -0.5917161 ,  0.9365868 , ..., -0.67810863,
           0.8142339 ,  0.8570225 ],
         [-0.8793687 , -0.05031633,  0.8822559 , ...,  1.6073997 ,
           0.04056118,  0.41071528],
         [-0.1640955 , -1.0552158 ,  0.64869726, ...,  0.22467029,
           0.320004  ,  0.3575604 ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [], 'to': [5]}
tf node:
{'name': 'log', 'output': array([[[[ 0.18296055,  0.3888738 ,         nan, ..., -1.6435542 ,
                  nan,         nan],
         [ 0.16937336,  0.38008305, -1.3408695 , ...,         nan,
                  nan,  0.18289772],
         [-0.9755059 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [-1.388709  , -0.07526813,         nan, ..., -0.9399576 ,
                  nan,  0.49450535],
         [        nan,         nan,  1.1409926 , ...,         nan,
                  nan, -0.91862315],
         [ 0.6416047 ,         nan, -0.6463278 , ...,         nan,
                  nan,         nan]],

        [[-1.226433  ,         nan,         nan, ..., -2.1920583 ,
                  nan,         nan],
         [        nan,         nan, -0.28949633, ..., -0.33192256,
          -1.1819779 , -0.35203275],
         [-0.48850098, -4.5339093 ,         nan, ..., -0.530368  ,
                  nan,         nan],
         ...,
         [        nan,  0.00577342,         nan, ...,         nan,
           0.02350363, -4.810503  ],
         [        nan,  0.44050288,  0.38458195, ..., -0.8973266 ,
          -0.06098034,         nan],
         [-0.34921184, -3.089563  , -0.1031687 , ..., -1.4830074 ,
                  nan, -0.6966367 ]],

        [[        nan,         nan, -3.2774658 , ...,         nan,
                  nan,         nan],
         [-0.15398984,         nan, -1.7793994 , ..., -1.7786627 ,
                  nan, -1.1339095 ],
         [        nan, -1.0698946 ,         nan, ...,         nan,
           0.5895126 ,         nan],
         ...,
         [-0.15881395,         nan, -0.06551308, ...,         nan,
          -0.2055076 , -0.15429108],
         [        nan,         nan, -0.12527311, ...,  0.47461778,
          -3.204944  , -0.889855  ],
         [        nan,         nan, -0.43278915, ..., -1.4931214 ,
          -1.1394218 , -1.028451  ]]]], dtype=float32), 'output_shape': TensorShape([1, 3, 32, 32]), 'from': [0], 'to': [7, 12]}
ms node:
{'name': 'log', 'output': array([[[[ 0.18295908,  0.38887373,         nan, ..., -1.6435565 ,
                  nan,         nan],
         [ 0.16937187,  0.380083  , -1.3408662 , ...,         nan,
                  nan,  0.18289623],
         [-0.9755081 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [-1.3887104 , -0.0752681 ,         nan, ..., -0.93996   ,
                  nan,  0.49450293],
         [        nan,         nan,  1.1409903 , ...,         nan,
                  nan, -0.9186256 ],
         [ 0.6416047 ,         nan, -0.64632434, ...,         nan,
                  nan,         nan]],

        [[-1.2264346 ,         nan,         nan, ..., -2.1920593 ,
                  nan,         nan],
         [        nan,         nan, -0.2894964 , ..., -0.3319197 ,
          -1.181977  , -0.35202992],
         [-0.48850018, -4.533911  ,         nan, ..., -0.5303694 ,
                  nan,         nan],
         ...,
         [        nan,  0.00577199,         nan, ...,         nan,
           0.0235022 , -4.8104997 ],
         [        nan,  0.44050068,  0.38458192, ..., -0.89732903,
          -0.06098032,         nan],
         [-0.349209  , -3.0895631 , -0.10316969, ..., -1.4830085 ,
                  nan, -0.6966381 ]],

        [[        nan,         nan, -3.2774675 , ...,         nan,
                  nan,         nan],
         [-0.15399313,         nan, -1.7794014 , ..., -1.7786646 ,
                  nan, -1.1339067 ],
         [        nan, -1.0698965 ,         nan, ...,         nan,
           0.5895116 ,         nan],
         ...,
         [-0.15881723,         nan, -0.06551306, ...,         nan,
          -0.20551002, -0.15429437],
         [        nan,         nan, -0.1252741 , ...,  0.47461537,
          -3.204941  , -0.8898575 ],
         [        nan,         nan, -0.43278635, ..., -1.4931223 ,
          -1.1394191 , -1.0284481 ]]]], dtype=float32), 'output_shape': (1, 3, 32, 32), 'from': [0], 'to': [7, 12]}
torch node:
{'name': 'log', 'output': array([[[[ 0.18296055,  0.3888738 ,         nan, ..., -1.6435542 ,
                  nan,         nan],
         [ 0.16937336,  0.38008305, -1.3408695 , ...,         nan,
                  nan,  0.1828977 ],
         [-0.9755059 ,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [-1.388709  , -0.07526813,         nan, ..., -0.9399576 ,
                  nan,  0.49450535],
         [        nan,         nan,  1.1409926 , ...,         nan,
                  nan, -0.91862315],
         [ 0.64160466,         nan, -0.6463278 , ...,         nan,
                  nan,         nan]],

        [[-1.226433  ,         nan,         nan, ..., -2.1920583 ,
                  nan,         nan],
         [        nan,         nan, -0.28949633, ..., -0.33192256,
          -1.1819779 , -0.35203275],
         [-0.48850098, -4.5339093 ,         nan, ..., -0.530368  ,
                  nan,         nan],
         ...,
         [        nan,  0.00577342,         nan, ...,         nan,
           0.02350363, -4.810503  ],
         [        nan,  0.44050288,  0.38458198, ..., -0.8973266 ,
          -0.06098034,         nan],
         [-0.34921184, -3.089563  , -0.1031687 , ..., -1.4830074 ,
                  nan, -0.6966367 ]],

        [[        nan,         nan, -3.2774658 , ...,         nan,
                  nan,         nan],
         [-0.15398984,         nan, -1.7793994 , ..., -1.7786627 ,
                  nan, -1.1339095 ],
         [        nan, -1.0698946 ,         nan, ...,         nan,
           0.5895126 ,         nan],
         ...,
         [-0.15881395,         nan, -0.06551308, ...,         nan,
          -0.2055076 , -0.15429108],
         [        nan,         nan, -0.12527311, ...,  0.47461778,
          -3.204944  , -0.889855  ],
         [        nan,         nan, -0.43278915, ..., -1.4931213 ,
          -1.1394218 , -1.028451  ]]]], dtype=float32), 'output_shape': torch.Size([1, 3, 32, 32]), 'from': [0], 'to': [7, 12]}

generate models:320

analyse output arrays in iter:349

pre layer res:
19:add
{'name': 'add', 'output': array([[[[143.38239 , 156.45998 , 154.53885 , ..., 125.8954  ,
                -inf,       -inf],
         [139.36829 , 158.06602 , 155.43314 , ..., 128.77711 ,
                -inf,       -inf],
         [139.85596 , 157.60896 , 157.72523 , ..., 126.16263 ,
                -inf,       -inf],
         ...,
         [140.90189 , 155.79333 , 155.3681  , ..., 127.7059  ,
                -inf,       -inf],
         [137.84874 , 157.01495 , 156.00787 , ..., 125.9075  ,
                -inf,       -inf],
         [139.26056 , 158.57593 , 153.80424 , ..., 126.509674,
                -inf,       -inf]],

        [[143.38239 , 156.45998 , 154.53885 , ..., 125.8954  ,
                -inf,       -inf],
         [139.36829 , 158.06602 , 155.43314 , ..., 128.77711 ,
                -inf,       -inf],
         [139.85596 , 157.60896 , 157.72523 , ..., 126.16263 ,
                -inf,       -inf],
         ...,
         [140.90189 , 155.79333 , 155.3681  , ..., 127.7059  ,
                -inf,       -inf],
         [137.84874 , 157.01495 , 156.00787 , ..., 125.9075  ,
                -inf,       -inf],
         [139.26056 , 158.57593 , 153.80424 , ..., 126.509674,
                -inf,       -inf]],

        [[ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         ...,
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ]],

        ...,

        [[ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         ...,
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ]],

        [[ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         ...,
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ]],

        [[ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         ...,
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ],
         [ 93.64698 , 104.10875 , 103.51013 , ...,  84.11875 ,
            0.      ,   0.      ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [6, 22], 'to': [31]}
tf node:
{'name': 'sin', 'output': array([[[[-0.90478593, -0.5807556 , -0.5653099 , ...,  0.22962743,
                  nan,         nan],
         [ 0.9078843 ,  0.83404094, -0.9971361 , ...,  0.0281802 ,
                  nan,         nan],
         [ 0.99848324,  0.5049554 ,  0.6016796 , ...,  0.47847924,
                  nan,         nan],
         ...,
         [ 0.4526932 , -0.9598025 , -0.9901134 , ...,  0.8909336 ,
                  nan,         nan],
         [-0.3721619 , -0.06463398, -0.8780438 , ...,  0.24138722,
                  nan,         nan],
         [ 0.8575472 ,  0.99722606,  0.13339621, ...,  0.7486132 ,
                  nan,         nan]],

        [[-0.90478593, -0.5807556 , -0.5653099 , ...,  0.22962743,
                  nan,         nan],
         [ 0.9078843 ,  0.83404094, -0.9971361 , ...,  0.0281802 ,
                  nan,         nan],
         [ 0.99848324,  0.5049554 ,  0.6016796 , ...,  0.47847924,
                  nan,         nan],
         ...,
         [ 0.4526932 , -0.9598025 , -0.9901134 , ...,  0.8909336 ,
                  nan,         nan],
         [-0.3721619 , -0.06463398, -0.8780438 , ...,  0.24138722,
                  nan,         nan],
         [ 0.8575472 ,  0.99722606,  0.13339621, ...,  0.7486132 ,
                  nan,         nan]],

        [[-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         ...,
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ]],

        ...,

        [[-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         ...,
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ]],

        [[-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         ...,
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ]],

        [[-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         ...,
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ],
         [-0.565302  , -0.42249092,  0.16171248, ...,  0.64746255,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [19], 'to': [7]}
ms node:
{'name': 'sin', 'output': array([[[[-0.9047924 , -0.5808425 , -0.5653099 , ...,  0.22949375,
                  nan,         nan],
         [ 0.90787786,  0.833982  , -0.9971361 , ...,  0.02831747,
                  nan,         nan],
         [ 0.99848324,  0.50486326,  0.6016796 , ...,  0.47835866,
                  nan,         nan],
         ...,
         [ 0.4526932 , -0.9598325 , -0.9901134 , ...,  0.8909959 ,
                  nan,         nan],
         [-0.3721477 , -0.06471011, -0.87805104, ...,  0.24122432,
                  nan,         nan],
         [ 0.8575629 ,  0.9972204 ,  0.13341133, ...,  0.7485019 ,
                  nan,         nan]],

        [[-0.9047924 , -0.5808425 , -0.5653099 , ...,  0.22949375,
                  nan,         nan],
         [ 0.90787786,  0.833982  , -0.9971361 , ...,  0.02831747,
                  nan,         nan],
         [ 0.99848324,  0.50486326,  0.6016796 , ...,  0.47835866,
                  nan,         nan],
         ...,
         [ 0.4526932 , -0.9598325 , -0.9901134 , ...,  0.8909959 ,
                  nan,         nan],
         [-0.3721477 , -0.06471011, -0.87805104, ...,  0.24122432,
                  nan,         nan],
         [ 0.8575629 ,  0.9972204 ,  0.13341133, ...,  0.7485019 ,
                  nan,         nan]],

        [[-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         ...,
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ]],

        ...,

        [[-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         ...,
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ]],

        [[-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         ...,
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ]],

        [[-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         ...,
         [-0.5653083 , -0.4224287 ,  0.16171248, ...,  0.6475323 ,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ],
         [-0.56528944, -0.42244253,  0.16172001, ...,  0.64754975,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [19], 'to': [7]}
torch node:
{'name': 'sin', 'output': array([[[[-0.90478593, -0.580768  , -0.5653099 , ...,  0.22962   ,
                  nan,         nan],
         [ 0.9078843 ,  0.8340325 , -0.9971361 , ...,  0.02819545,
                  nan,         nan],
         [ 0.9984824 ,  0.50494224,  0.60169184, ...,  0.47846586,
                  nan,         nan],
         ...,
         [ 0.45267957, -0.9598068 , -0.9901134 , ...,  0.8909405 ,
                  nan,         nan],
         [-0.37214774, -0.06463398, -0.87803644, ...,  0.24137981,
                  nan,         nan],
         [ 0.8575629 ,  0.99722606,  0.13338108, ...,  0.7486031 ,
                  nan,         nan]],

        [[-0.90478593, -0.580768  , -0.5653099 , ...,  0.22962   ,
                  nan,         nan],
         [ 0.9078843 ,  0.8340325 , -0.9971361 , ...,  0.02819545,
                  nan,         nan],
         [ 0.9984824 ,  0.50494224,  0.60169184, ...,  0.47846586,
                  nan,         nan],
         ...,
         [ 0.45267957, -0.9598068 , -0.9901134 , ...,  0.8909405 ,
                  nan,         nan],
         [-0.37214774, -0.06463398, -0.87803644, ...,  0.24137981,
                  nan,         nan],
         [ 0.8575629 ,  0.99722606,  0.13338108, ...,  0.7486031 ,
                  nan,         nan]],

        [[-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         ...,
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ]],

        ...,

        [[-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         ...,
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ]],

        [[-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         ...,
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ]],

        [[-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         ...,
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ],
         [-0.5652957 , -0.422484  ,  0.16170496, ...,  0.6474683 ,
           0.        ,  0.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [19], 'to': [7]}

generate models:327

analyse output arrays in iter:354

pre layer res:
10:add
{'name': 'add', 'output': array([[[[546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         ...,
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53]],

        [[546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         ...,
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53]],

        [[546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         ...,
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53]],

        ...,

        [[546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         ...,
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53]],

        [[546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         ...,
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53]],

        [[546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         ...,
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53],
         [546898.5 , 674517.06, 798991.9 , ..., 654082.6 , 621618.6 ,
          432963.53]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [8, 8], 'to': [16]}
tf node:
{'name': 'cos', 'output': array([[[[-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         ...,
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418]],

        [[-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         ...,
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418]],

        [[-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         ...,
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418]],

        ...,

        [[-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         ...,
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418]],

        [[-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         ...,
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418]],

        [[-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         ...,
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418],
         [-0.81032777, -0.1583164 , -0.9991925 , ..., -0.9942735 ,
          -0.4433962 , -0.22535418]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10], 'to': [9]}
ms node:
{'name': 'cos', 'output': array([[[[-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         ...,
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294]],

        [[-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         ...,
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294]],

        [[-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         ...,
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294]],

        ...,

        [[-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         ...,
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294]],

        [[-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         ...,
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294]],

        [[-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         ...,
         [-0.8103277 , -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.4433962 , -0.22535416],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294],
         [-0.8103277 , -0.1583164 , -0.99640584, ..., -0.9990069 ,
          -0.4433962 , -0.19480294]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [10], 'to': [9]}
torch node:
{'name': 'cos', 'output': array([[[[-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         ...,
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416]],

        [[-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         ...,
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416]],

        [[-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         ...,
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416]],

        ...,

        [[-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         ...,
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416]],

        [[-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         ...,
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416]],

        [[-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         ...,
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416],
         [-0.77214587, -0.1583164 , -0.9991925 , ..., -0.9990069 ,
          -0.55168587, -0.22535416]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [10], 'to': [9]}

generate models:332

analyse output arrays in iter:360

pre layer res:
13:add
{'name': 'add', 'output': array([[[[297.1999  , 297.1999  , 297.1999  , ..., 117.32558 ,
          117.32558 ,  28.386196],
         [297.1999  , 297.1999  , 297.1999  , ..., 182.43893 ,
          182.43893 ,  74.25834 ],
         [173.96848 , 173.96848 , 173.96848 , ..., 182.43893 ,
          182.43893 ,  89.239815],
         ...,
         [179.40976 , 179.40976 , 184.76392 , ..., 129.68901 ,
          122.38037 , 122.38037 ],
         [179.40976 , 179.40976 , 184.76392 , ..., 323.933   ,
          323.933   , 323.933   ],
         [124.63709 , 124.63709 , 123.2066  , ..., 323.933   ,
          323.933   , 323.933   ]],

        [[297.1999  , 297.1999  , 297.1999  , ..., 117.32558 ,
          117.32558 ,  28.386196],
         [297.1999  , 297.1999  , 297.1999  , ..., 182.43893 ,
          182.43893 ,  74.25834 ],
         [173.96848 , 173.96848 , 173.96848 , ..., 182.43893 ,
          182.43893 ,  89.239815],
         ...,
         [179.40976 , 179.40976 , 184.76392 , ..., 129.68901 ,
          122.38037 , 122.38037 ],
         [179.40976 , 179.40976 , 184.76392 , ..., 323.933   ,
          323.933   , 323.933   ],
         [124.63709 , 124.63709 , 123.2066  , ..., 323.933   ,
          323.933   , 323.933   ]],

        [[297.1999  , 297.1999  , 297.1999  , ..., 117.32558 ,
          117.32558 ,  28.386196],
         [297.1999  , 297.1999  , 297.1999  , ..., 182.43893 ,
          182.43893 ,  74.25834 ],
         [173.96848 , 173.96848 , 173.96848 , ..., 182.43893 ,
          182.43893 ,  89.239815],
         ...,
         [179.40976 , 179.40976 , 184.76392 , ..., 129.68901 ,
          122.38037 , 122.38037 ],
         [179.40976 , 179.40976 , 184.76392 , ..., 323.933   ,
          323.933   , 323.933   ],
         [124.63709 , 124.63709 , 123.2066  , ..., 323.933   ,
          323.933   , 323.933   ]],

        ...,

        [[297.1999  , 297.1999  , 297.1999  , ..., 117.32558 ,
          117.32558 ,  28.386196],
         [297.1999  , 297.1999  , 297.1999  , ..., 182.43893 ,
          182.43893 ,  74.25834 ],
         [173.96848 , 173.96848 , 173.96848 , ..., 182.43893 ,
          182.43893 ,  89.239815],
         ...,
         [179.40976 , 179.40976 , 184.76392 , ..., 129.68901 ,
          122.38037 , 122.38037 ],
         [179.40976 , 179.40976 , 184.76392 , ..., 323.933   ,
          323.933   , 323.933   ],
         [124.63709 , 124.63709 , 123.2066  , ..., 323.933   ,
          323.933   , 323.933   ]],

        [[297.1999  , 297.1999  , 297.1999  , ..., 117.32558 ,
          117.32558 ,  28.386196],
         [297.1999  , 297.1999  , 297.1999  , ..., 182.43893 ,
          182.43893 ,  74.25834 ],
         [173.96848 , 173.96848 , 173.96848 , ..., 182.43893 ,
          182.43893 ,  89.239815],
         ...,
         [179.40976 , 179.40976 , 184.76392 , ..., 129.68901 ,
          122.38037 , 122.38037 ],
         [179.40976 , 179.40976 , 184.76392 , ..., 323.933   ,
          323.933   , 323.933   ],
         [124.63709 , 124.63709 , 123.2066  , ..., 323.933   ,
          323.933   , 323.933   ]],

        [[297.1999  , 297.1999  , 297.1999  , ..., 117.32558 ,
          117.32558 ,  28.386196],
         [297.1999  , 297.1999  , 297.1999  , ..., 182.43893 ,
          182.43893 ,  74.25834 ],
         [173.96848 , 173.96848 , 173.96848 , ..., 182.43893 ,
          182.43893 ,  89.239815],
         ...,
         [179.40976 , 179.40976 , 184.76392 , ..., 129.68901 ,
          122.38037 , 122.38037 ],
         [179.40976 , 179.40976 , 184.76392 , ..., 323.933   ,
          323.933   , 323.933   ],
         [124.63709 , 124.63709 , 123.2066  , ..., 323.933   ,
          323.933   , 323.933   ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [12, 4], 'to': [9]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462717,
           0.22462717, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462717,
           0.22462717,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.7730986 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.8555507 , -0.8555507 , -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462717,
           0.22462717, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462717,
           0.22462717,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.7730986 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.8555507 , -0.8555507 , -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462717,
           0.22462717, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462717,
           0.22462717,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.7730986 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.8555507 , -0.8555507 , -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        ...,

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462717,
           0.22462717, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462717,
           0.22462717,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.7730986 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.8555507 , -0.8555507 , -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462717,
           0.22462717, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462717,
           0.22462717,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.7730986 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.8555507 , -0.8555507 , -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462717,
           0.22462717, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462717,
           0.22462717,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.7730986 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.556403  , ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.8555507 , -0.8555507 , -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [13], 'to': [8]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        ...,

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.885072  ,
          -0.885072  , -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494193 ,  0.9494193 ,  0.9494193 , ..., -0.88510746,
          -0.88510746, -0.11163669],
         [ 0.9494193 ,  0.9494193 ,  0.9494193 , ...,  0.224761  ,
           0.224761  , -0.90860766],
         [-0.92498124, -0.92498124, -0.92498124, ...,  0.224761  ,
           0.224761  ,  0.9566212 ],
         ...,
         [-0.33256686, -0.33256686,  0.5563396 , ..., -0.7731179 ,
           0.14117761,  0.14117761],
         [-0.33256686, -0.33256686,  0.5563396 , ..., -0.3419593 ,
          -0.3419593 , -0.3419593 ],
         [-0.85555464, -0.85555464, -0.6322547 , ..., -0.3419593 ,
          -0.3419593 , -0.3419593 ]],

        [[ 0.9494193 ,  0.9494193 ,  0.9494193 , ..., -0.88510746,
          -0.88510746, -0.11163669],
         [ 0.9494193 ,  0.9494193 ,  0.9494193 , ...,  0.224761  ,
           0.224761  , -0.90860766],
         [-0.92498124, -0.92498124, -0.92498124, ...,  0.224761  ,
           0.224761  ,  0.9566212 ],
         ...,
         [-0.33256686, -0.33256686,  0.5563396 , ..., -0.7731179 ,
           0.14117761,  0.14117761],
         [-0.33256686, -0.33256686,  0.5563396 , ..., -0.3419593 ,
          -0.3419593 , -0.3419593 ],
         [-0.85555464, -0.85555464, -0.6322547 , ..., -0.3419593 ,
          -0.3419593 , -0.3419593 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [13], 'to': [8]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.88507193,
          -0.88507193, -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.88507193,
          -0.88507193, -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.88507193,
          -0.88507193, -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        ...,

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.88507193,
          -0.88507193, -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.88507193,
          -0.88507193, -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]],

        [[ 0.9494289 ,  0.9494289 ,  0.9494289 , ..., -0.88507193,
          -0.88507193, -0.11162911],
         [ 0.9494289 ,  0.9494289 ,  0.9494289 , ...,  0.22462718,
           0.22462718, -0.90858537],
         [-0.92494065, -0.92494065, -0.92494065, ...,  0.22462718,
           0.22462718,  0.9566346 ],
         ...,
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.7730985 ,
           0.14126825,  0.14126825],
         [-0.33252367, -0.33252367,  0.55640304, ..., -0.34193063,
          -0.34193063, -0.34193063],
         [-0.85555065, -0.85555065, -0.6322725 , ..., -0.34193063,
          -0.34193063, -0.34193063]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [13], 'to': [8]}

generate models:338

analyse output arrays in iter:361

pre layer res:
9:mean
{'name': 'mean', 'output': array([[[inf, inf, inf, ..., inf, inf, inf],
        [inf, inf, inf, ..., inf, inf, inf],
        [inf, inf, inf, ..., inf, inf, inf],
        ...,
        [inf, inf, inf, ..., inf, inf, inf],
        [inf, inf, inf, ..., inf, inf, inf],
        [inf, inf, inf, ..., inf, inf, inf]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32]), 'from': [7], 'to': [16]}
tf node:
{'name': 'softmax', 'output': array([[[nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        ...,
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32]), 'from': [9], 'to': [12]}
ms node:
{'name': 'softmax', 'output': array([[[nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        ...,
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan]]], dtype=float32), 'output_shape': (1, 64, 32), 'from': [9], 'to': [12]}
torch node:
{'name': 'softmax', 'output': array([[[nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        ...,
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan],
        [nan, nan, nan, ..., nan, nan, nan]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32]), 'from': [9], 'to': [12]}

generate models:339

analyse output arrays in iter:370

pre layer res:
1:conv2d
{'name': 'conv2d', 'output': array([[[[ 1.4978793 , -1.49118   ,  0.04760981, ..., -0.5768397 ,
          -0.8819922 , -0.9978565 ],
         [-3.0969472 ,  0.67523396,  2.4307635 , ...,  2.1671999 ,
           1.2678013 ,  0.29018703],
         [-0.866885  , -0.65219426, -0.7467691 , ..., -1.0265197 ,
          -2.630188  , -1.2865535 ],
         ...,
         [-0.41808537,  0.17540985, -2.758184  , ..., -1.4368279 ,
          -1.4615641 , -1.9764425 ],
         [-0.212904  , -0.17345485, -1.2144821 , ...,  0.87100065,
           1.4280044 ,  1.17202   ],
         [ 1.5559804 , -0.63729125, -4.7817984 , ...,  3.1763844 ,
          -0.0767321 ,  1.1010541 ]],

        [[ 1.4978793 , -1.49118   ,  0.04760981, ..., -0.5768397 ,
          -0.8819922 , -0.9978565 ],
         [-3.0969472 ,  0.67523396,  2.4307635 , ...,  2.1671999 ,
           1.2678013 ,  0.29018703],
         [-0.866885  , -0.65219426, -0.7467691 , ..., -1.0265197 ,
          -2.630188  , -1.2865535 ],
         ...,
         [-0.41808537,  0.17540985, -2.758184  , ..., -1.4368279 ,
          -1.4615641 , -1.9764425 ],
         [-0.212904  , -0.17345485, -1.2144821 , ...,  0.87100065,
           1.4280044 ,  1.17202   ],
         [ 1.5559804 , -0.63729125, -4.7817984 , ...,  3.1763844 ,
          -0.0767321 ,  1.1010541 ]],

        [[ 1.4978793 , -1.49118   ,  0.04760981, ..., -0.5768397 ,
          -0.8819922 , -0.9978565 ],
         [-3.0969472 ,  0.67523396,  2.4307635 , ...,  2.1671999 ,
           1.2678013 ,  0.29018703],
         [-0.866885  , -0.65219426, -0.7467691 , ..., -1.0265197 ,
          -2.630188  , -1.2865535 ],
         ...,
         [-0.41808537,  0.17540985, -2.758184  , ..., -1.4368279 ,
          -1.4615641 , -1.9764425 ],
         [-0.212904  , -0.17345485, -1.2144821 , ...,  0.87100065,
           1.4280044 ,  1.17202   ],
         [ 1.5559804 , -0.63729125, -4.7817984 , ...,  3.1763844 ,
          -0.0767321 ,  1.1010541 ]],

        ...,

        [[ 1.4978793 , -1.49118   ,  0.04760981, ..., -0.5768397 ,
          -0.8819922 , -0.9978565 ],
         [-3.0969472 ,  0.67523396,  2.4307635 , ...,  2.1671999 ,
           1.2678013 ,  0.29018703],
         [-0.866885  , -0.65219426, -0.7467691 , ..., -1.0265197 ,
          -2.630188  , -1.2865535 ],
         ...,
         [-0.41808537,  0.17540985, -2.758184  , ..., -1.4368279 ,
          -1.4615641 , -1.9764425 ],
         [-0.212904  , -0.17345485, -1.2144821 , ...,  0.87100065,
           1.4280044 ,  1.17202   ],
         [ 1.5559804 , -0.63729125, -4.7817984 , ...,  3.1763844 ,
          -0.0767321 ,  1.1010541 ]],

        [[ 1.4978793 , -1.49118   ,  0.04760981, ..., -0.5768397 ,
          -0.8819922 , -0.9978565 ],
         [-3.0969472 ,  0.67523396,  2.4307635 , ...,  2.1671999 ,
           1.2678013 ,  0.29018703],
         [-0.866885  , -0.65219426, -0.7467691 , ..., -1.0265197 ,
          -2.630188  , -1.2865535 ],
         ...,
         [-0.41808537,  0.17540985, -2.758184  , ..., -1.4368279 ,
          -1.4615641 , -1.9764425 ],
         [-0.212904  , -0.17345485, -1.2144821 , ...,  0.87100065,
           1.4280044 ,  1.17202   ],
         [ 1.5559804 , -0.63729125, -4.7817984 , ...,  3.1763844 ,
          -0.0767321 ,  1.1010541 ]],

        [[ 1.4978793 , -1.49118   ,  0.04760981, ..., -0.5768397 ,
          -0.8819922 , -0.9978565 ],
         [-3.0969472 ,  0.67523396,  2.4307635 , ...,  2.1671999 ,
           1.2678013 ,  0.29018703],
         [-0.866885  , -0.65219426, -0.7467691 , ..., -1.0265197 ,
          -2.630188  , -1.2865535 ],
         ...,
         [-0.41808537,  0.17540985, -2.758184  , ..., -1.4368279 ,
          -1.4615641 , -1.9764425 ],
         [-0.212904  , -0.17345485, -1.2144821 , ...,  0.87100065,
           1.4280044 ,  1.17202   ],
         [ 1.5559804 , -0.63729125, -4.7817984 , ...,  3.1763844 ,
          -0.0767321 ,  1.1010541 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [0], 'to': [9, 13]}
tf node:
{'name': 'log', 'output': array([[[[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        ...,

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [1], 'to': [2]}
ms node:
{'name': 'log', 'output': array([[[[ 0.40405023,         nan, -3.0447187 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269796,  0.8882039 , ...,  0.773433  ,
           0.23728694, -1.2372311 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.7406272 ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811354,
           0.3562808 ,  0.15872724],
         [ 0.44210362,         nan,         nan, ...,  1.1557412 ,
                  nan,  0.09626854]],

        [[ 0.40405023,         nan, -3.0447187 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269796,  0.8882039 , ...,  0.773433  ,
           0.23728694, -1.2372311 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.7406272 ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811354,
           0.3562808 ,  0.15872724],
         [ 0.44210362,         nan,         nan, ...,  1.1557412 ,
                  nan,  0.09626854]],

        [[ 0.40405023,         nan, -3.0447187 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269796,  0.8882039 , ...,  0.773433  ,
           0.23728694, -1.2372311 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.7406272 ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811354,
           0.3562808 ,  0.15872724],
         [ 0.44210362,         nan,         nan, ...,  1.1557412 ,
                  nan,  0.09626854]],

        ...,

        [[ 0.40405023,         nan, -3.0447187 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269796,  0.8882039 , ...,  0.773433  ,
           0.23728694, -1.2372311 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.7406272 ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811354,
           0.3562808 ,  0.15872724],
         [ 0.44210362,         nan,         nan, ...,  1.1557412 ,
                  nan,  0.09626854]],

        [[ 0.40405023,         nan, -3.0447187 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269796,  0.8882039 , ...,  0.773433  ,
           0.23728694, -1.2372311 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.7406272 ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811354,
           0.3562808 ,  0.15872724],
         [ 0.44210362,         nan,         nan, ...,  1.1557412 ,
                  nan,  0.09626854]],

        [[ 0.40405023,         nan, -3.0447187 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269796,  0.8882039 , ...,  0.773433  ,
           0.23728694, -1.2372311 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.7406272 ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811354,
           0.3562808 ,  0.15872724],
         [ 0.44210362,         nan,         nan, ...,  1.1557412 ,
                  nan,  0.09626854]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [1], 'to': [2]}
torch node:
{'name': 'log', 'output': array([[[[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        ...,

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]],

        [[ 0.4040503 ,         nan, -3.0447166 , ...,         nan,
                  nan,         nan],
         [        nan, -0.39269605,  0.8882054 , ...,  0.77343595,
           0.23728412, -1.2372296 ],
         [        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         ...,
         [        nan, -1.74063   ,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ..., -0.13811256,
           0.35627794,  0.15872872],
         [ 0.44210586,         nan,         nan, ...,  1.1557436 ,
                  nan,  0.09626797]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [1], 'to': [2]}

generate models:348

analyse output arrays in iter:384

pre layer res:
21:reshape
{'name': 'reshape', 'output': array([[[[ 5276.9766,  5276.9766,  3481.0093, ...,  6827.2783,
           9142.346 ,  9142.346 ],
         [10720.308 , 10720.308 , 10720.308 , ...,  7456.549 ,
           7456.549 ,  4481.762 ],
         [ 6405.982 ,  8213.605 ,  8221.351 , ...,  4257.0815,
           4656.9443,  4720.477 ],
         ...,
         [ 2224.8523,  6872.24  ,  6872.24  , ...,  7243.5806,
           4291.4297,  4291.4297],
         [ 5276.9766,  5276.9766,  4542.069 , ...,  8749.428 ,
           8749.428 , 10967.347 ],
         [10967.347 , 10967.347 ,  9832.306 , ...,  7456.549 ,
           7456.549 ,  4481.762 ]]]], dtype=float32), 'output_shape': TensorShape([1, 1, 112, 112]), 'from': [20], 'to': [25]}
tf node:
{'name': 'softmax', 'output': array([[[[0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         ...,
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 1.   ],
         [0.125, 0.125, 0.   , ..., 0.   , 0.   , 0.   ]]]], dtype=float32), 'output_shape': TensorShape([1, 1, 112, 112]), 'from': [21], 'to': [18]}
ms node:
{'name': 'softmax', 'output': array([[[[0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         ...,
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 1.   ],
         [0.125, 0.125, 0.   , ..., 0.   , 0.   , 0.   ]]]], dtype=float32), 'output_shape': (1, 1, 112, 112), 'from': [21], 'to': [18]}
torch node:
{'name': 'softmax', 'output': array([[[[0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         ...,
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 0.   ],
         [0.   , 0.   , 0.   , ..., 0.   , 0.   , 1.   ],
         [0.125, 0.125, 0.   , ..., 0.   , 0.   , 0.   ]]]], dtype=float32), 'output_shape': torch.Size([1, 1, 112, 112]), 'from': [21], 'to': [18]}

generate models:360

analyse output arrays in iter:387

pre layer res:
16:transpose
{'name': 'transpose', 'output': array([[[[ 9082.665, 10222.248, 10982.251, ..., 11164.252, 11164.252,
          11164.252],
         [ 9082.665, 10222.248, 10982.251, ..., 11164.252, 15844.438,
          15844.438],
         [10570.269, 11191.187, 11191.187, ...,  9067.223, 15844.438,
          15844.438],
         ...,
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 11927.579, ..., 18642.83 , 18642.83 ,
          18642.83 ]],

        [[ 9082.665, 10222.248, 10982.251, ..., 11164.252, 11164.252,
          11164.252],
         [ 9082.665, 10222.248, 10982.251, ..., 11164.252, 15844.438,
          15844.438],
         [10570.269, 11191.187, 11191.187, ...,  9067.223, 15844.438,
          15844.438],
         ...,
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 11927.579, ..., 18642.83 , 18642.83 ,
          18642.83 ]],

        [[ 9082.665, 10222.248, 10982.251, ..., 11164.252, 11164.252,
          11164.252],
         [ 9082.665, 10222.248, 10982.251, ..., 11164.252, 15844.438,
          15844.438],
         [10570.269, 11191.187, 11191.187, ...,  9067.223, 15844.438,
          15844.438],
         ...,
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 11927.579, ..., 18642.83 , 18642.83 ,
          18642.83 ]],

        ...,

        [[ 9082.665, 10222.248, 10982.251, ..., 11164.252, 11164.252,
          11164.252],
         [ 9082.665, 10222.248, 10982.251, ..., 11164.252, 15844.438,
          15844.438],
         [10570.269, 11191.187, 11191.187, ...,  9067.223, 15844.438,
          15844.438],
         ...,
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 11927.579, ..., 18642.83 , 18642.83 ,
          18642.83 ]],

        [[ 9082.665, 10222.248, 10982.251, ..., 11164.252, 11164.252,
          11164.252],
         [ 9082.665, 10222.248, 10982.251, ..., 11164.252, 15844.438,
          15844.438],
         [10570.269, 11191.187, 11191.187, ...,  9067.223, 15844.438,
          15844.438],
         ...,
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 11927.579, ..., 18642.83 , 18642.83 ,
          18642.83 ]],

        [[ 9082.665, 10222.248, 10982.251, ..., 11164.252, 11164.252,
          11164.252],
         [ 9082.665, 10222.248, 10982.251, ..., 11164.252, 15844.438,
          15844.438],
         [10570.269, 11191.187, 11191.187, ...,  9067.223, 15844.438,
          15844.438],
         ...,
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 13806.264, ..., 18642.83 , 18642.83 ,
          18642.83 ],
         [13435.376, 13435.376, 11927.579, ..., 18642.83 , 18642.83 ,
          18642.83 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [7], 'to': [17]}
tf node:
{'name': 'sin', 'output': array([[[[-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.74028313,  0.74028313, ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.74028313,  0.74028313, ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.74028313,  0.74028313, ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        ...,

        [[-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.74028313,  0.74028313, ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.74028313,  0.74028313, ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454578, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.74028313,  0.74028313, ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8603932 , ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16], 'to': [8, 21]}
ms node:
{'name': 'sin', 'output': array([[[[-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.82394487, -0.82394487],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.82394487, -0.82394487],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.82394487, -0.82394487],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        ...,

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.82394487, -0.82394487],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.82394487,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.3170626 , -0.47626406, -0.6867005 , ..., -0.82339114,
          -0.82339114, -0.82339114],
         [-0.3170626 , -0.47626406, -0.6867005 , ..., -0.82339114,
          -0.98310655, -0.98310655],
         [ 0.9279117 ,  0.7402831 ,  0.7402831 , ...,  0.5508049 ,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.85537535, ...,  0.5836187 ,
           0.5836187 ,  0.5836187 ],
         [ 0.9376488 ,  0.9376488 ,  0.85537535, ...,  0.5836187 ,
           0.5836187 ,  0.5836187 ],
         [ 0.9376488 ,  0.9376488 ,  0.8635888 , ...,  0.5836187 ,
           0.5836187 ,  0.5836187 ]],

        [[-0.3170626 , -0.47626406, -0.6867005 , ..., -0.82339114,
          -0.82339114, -0.82339114],
         [-0.3170626 , -0.47626406, -0.6867005 , ..., -0.82339114,
          -0.98310655, -0.98310655],
         [ 0.9279117 ,  0.7402831 ,  0.7402831 , ...,  0.5508049 ,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.85537535, ...,  0.5836187 ,
           0.5836187 ,  0.5836187 ],
         [ 0.9376488 ,  0.9376488 ,  0.85537535, ...,  0.5836187 ,
           0.5836187 ,  0.5836187 ],
         [ 0.9376488 ,  0.9376488 ,  0.8635888 , ...,  0.5836187 ,
           0.5836187 ,  0.5836187 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [16], 'to': [8, 21]}
torch node:
{'name': 'sin', 'output': array([[[[-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        ...,

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]],

        [[-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.8239449 , -0.8239449 ],
         [-0.31520963, -0.47454575, -0.6867005 , ..., -0.8239449 ,
          -0.98310655, -0.98310655],
         [ 0.92863804,  0.7402831 ,  0.7402831 , ...,  0.55324775,
          -0.98310655, -0.98310655],
         ...,
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.86039317, ...,  0.58044225,
           0.58044225,  0.58044225],
         [ 0.9376488 ,  0.9376488 ,  0.8665283 , ...,  0.58044225,
           0.58044225,  0.58044225]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [16], 'to': [8, 21]}

generate models:363

analyse output arrays in iter:392

pre layer res:
5:relu
{'name': 'relu', 'output': array([[[[ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         ...,
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623]],

        [[ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         ...,
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623]],

        [[ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         ...,
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623]],

        ...,

        [[ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         ...,
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623]],

        [[ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         ...,
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623]],

        [[ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         ...,
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623],
         [ 8277.221, 10359.524, 11065.66 , ..., 15317.307, 17043.635,
          11394.623]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [4], 'to': [13]}
tf node:
{'name': 'sin', 'output': array([[[[ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        ...,

        [[ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.76814514, -0.9924893 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [5], 'to': [6]}
ms node:
{'name': 'sin', 'output': array([[[[ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        ...,

        [[ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.8253548 , ..., -0.89081615,
          -0.47469714, -0.06644332]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [5], 'to': [6]}
torch node:
{'name': 'sin', 'output': array([[[[ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332]],

        ...,

        [[ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332]],

        [[ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         ...,
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332],
         [ 0.7681451 , -0.9927263 ,  0.826456  , ..., -0.89081615,
          -0.47641528, -0.06644332]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [5], 'to': [6]}

generate models:367

analyse output arrays in iter:407

pre layer res:
7:relu
{'name': 'relu', 'output': array([[[[ 4697.937  ,     0.     ,     0.     , ...,     0.     ,
           2822.9631 , 12334.     ],
         [ 3217.2332 ,   980.96405,     0.     , ...,     0.     ,
           2717.0935 ,     0.     ],
         [14965.563  ,     0.     ,     0.     , ...,     0.     ,
           7589.313  ,  6934.687  ],
         ...,
         [    0.     ,  1206.6014 ,  3016.13   , ..., 12371.191  ,
           4017.0813 ,     0.     ],
         [  187.78053,     0.     ,   733.99207, ...,     0.     ,
           5589.003  ,     0.     ],
         [ 5586.0005 ,     0.     ,     0.     , ...,  6770.884  ,
              0.     ,  5367.803  ]],

        [[ 4697.937  ,     0.     ,     0.     , ...,     0.     ,
           2822.9631 , 12334.     ],
         [ 3217.2332 ,   980.96405,     0.     , ...,     0.     ,
           2717.0935 ,     0.     ],
         [14965.563  ,     0.     ,     0.     , ...,     0.     ,
           7589.313  ,  6934.687  ],
         ...,
         [    0.     ,  1206.6014 ,  3016.13   , ..., 12371.191  ,
           4017.0813 ,     0.     ],
         [  187.78053,     0.     ,   733.99207, ...,     0.     ,
           5589.003  ,     0.     ],
         [ 5586.0005 ,     0.     ,     0.     , ...,  6770.884  ,
              0.     ,  5367.803  ]],

        [[ 4697.937  ,     0.     ,     0.     , ...,     0.     ,
           2822.9631 , 12334.     ],
         [ 3217.2332 ,   980.96405,     0.     , ...,     0.     ,
           2717.0935 ,     0.     ],
         [14965.563  ,     0.     ,     0.     , ...,     0.     ,
           7589.313  ,  6934.687  ],
         ...,
         [    0.     ,  1206.6014 ,  3016.13   , ..., 12371.191  ,
           4017.0813 ,     0.     ],
         [  187.78053,     0.     ,   733.99207, ...,     0.     ,
           5589.003  ,     0.     ],
         [ 5586.0005 ,     0.     ,     0.     , ...,  6770.884  ,
              0.     ,  5367.803  ]],

        ...,

        [[ 4697.937  ,     0.     ,     0.     , ...,     0.     ,
           2822.9631 , 12334.     ],
         [ 3217.2332 ,   980.96405,     0.     , ...,     0.     ,
           2717.0935 ,     0.     ],
         [14965.563  ,     0.     ,     0.     , ...,     0.     ,
           7589.313  ,  6934.687  ],
         ...,
         [    0.     ,  1206.6014 ,  3016.13   , ..., 12371.191  ,
           4017.0813 ,     0.     ],
         [  187.78053,     0.     ,   733.99207, ...,     0.     ,
           5589.003  ,     0.     ],
         [ 5586.0005 ,     0.     ,     0.     , ...,  6770.884  ,
              0.     ,  5367.803  ]],

        [[ 4697.937  ,     0.     ,     0.     , ...,     0.     ,
           2822.9631 , 12334.     ],
         [ 3217.2332 ,   980.96405,     0.     , ...,     0.     ,
           2717.0935 ,     0.     ],
         [14965.563  ,     0.     ,     0.     , ...,     0.     ,
           7589.313  ,  6934.687  ],
         ...,
         [    0.     ,  1206.6014 ,  3016.13   , ..., 12371.191  ,
           4017.0813 ,     0.     ],
         [  187.78053,     0.     ,   733.99207, ...,     0.     ,
           5589.003  ,     0.     ],
         [ 5586.0005 ,     0.     ,     0.     , ...,  6770.884  ,
              0.     ,  5367.803  ]],

        [[ 4697.937  ,     0.     ,     0.     , ...,     0.     ,
           2822.9631 , 12334.     ],
         [ 3217.2332 ,   980.96405,     0.     , ...,     0.     ,
           2717.0935 ,     0.     ],
         [14965.563  ,     0.     ,     0.     , ...,     0.     ,
           7589.313  ,  6934.687  ],
         ...,
         [    0.     ,  1206.6014 ,  3016.13   , ..., 12371.191  ,
           4017.0813 ,     0.     ],
         [  187.78053,     0.     ,   733.99207, ...,     0.     ,
           5589.003  ,     0.     ],
         [ 5586.0005 ,     0.     ,     0.     , ...,  6770.884  ,
              0.     ,  5367.803  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [6], 'to': [9]}
tf node:
{'name': 'sin', 'output': array([[[[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991378,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556374 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68282366,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991378,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556374 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68282366,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991378,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556374 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68282366,
           0.        ,  0.9240804 ]],

        ...,

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991378,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556374 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68282366,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991378,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556374 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68282366,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991378,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556374 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68282366,
           0.        ,  0.9240804 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [7], 'to': [16]}
ms node:
{'name': 'sin', 'output': array([[[[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991376,  0.7083821 ,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784261,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.92389363]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991376,  0.7083821 ,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784261,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.92389363]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991376,  0.7083821 ,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784261,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.92389363]],

        ...,

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708281 ,  0.10703656],
         [ 0.23991376,  0.7083821 ,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784261,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.92389363]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9712946 ,  0.10703656],
         [ 0.23872854,  0.7079081 ,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69996685, -0.92911977],
         ...,
         [ 0.        ,  0.22784261,  0.20149942, ..., -0.38624513,
           0.8481754 ,  0.        ],
         [-0.65557975,  0.        , -0.9089158 , ...,  0.        ,
          -0.11180609,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68709266,
           0.        ,  0.9242669 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9712946 ,  0.10703656],
         [ 0.23872854,  0.7079081 ,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69996685, -0.92911977],
         ...,
         [ 0.        ,  0.22784261,  0.20149942, ..., -0.38624513,
           0.8481754 ,  0.        ],
         [-0.65557975,  0.        , -0.9089158 , ...,  0.        ,
          -0.11180609,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.68709266,
           0.        ,  0.9242669 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [7], 'to': [16]}
torch node:
{'name': 'sin', 'output': array([[[[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708282 ,  0.10703656],
         [ 0.23991376,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708282 ,  0.10703656],
         [ 0.23991376,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708282 ,  0.10703656],
         [ 0.23991376,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.9240804 ]],

        ...,

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708282 ,  0.10703656],
         [ 0.23991376,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708282 ,  0.10703656],
         [ 0.23991376,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.9240804 ]],

        [[-0.9508578 ,  0.        ,  0.        , ...,  0.        ,
           0.9708282 ,  0.10703656],
         [ 0.23991376,  0.70833904,  0.        , ...,  0.        ,
           0.3747615 ,  0.        ],
         [-0.83267736,  0.        ,  0.        , ...,  0.        ,
          -0.69961804, -0.92911977],
         ...,
         [ 0.        ,  0.22784263,  0.19958596, ..., -0.38984528,
           0.8498524 ,  0.        ],
         [-0.6556373 ,  0.        , -0.90889037, ...,  0.        ,
          -0.10937966,  0.        ],
         [ 0.24619281,  0.        ,  0.        , ..., -0.6828236 ,
           0.        ,  0.9240804 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [7], 'to': [16]}

generate models:382

analyse output arrays in iter:429

pre layer res:
18:relu
{'name': 'relu', 'output': array([[[[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf, 1.0000000e+00],
         [1.0000000e+00,           inf, 7.8513704e+15, ...,
          1.0000000e+00,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [3.7182817e+00,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf, 1.0000000e+00],
         [1.0000000e+00,           inf, 7.8513704e+15, ...,
          1.0000000e+00,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [3.7182817e+00,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf, 1.0000000e+00],
         [1.0000000e+00,           inf, 7.8513704e+15, ...,
          1.0000000e+00,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [3.7182817e+00,           inf,           inf, ...,
                    inf,           inf,           inf]],

        ...,

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf, 1.0000000e+00],
         [1.0000000e+00,           inf, 7.8513704e+15, ...,
          1.0000000e+00,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [3.7182817e+00,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf, 1.0000000e+00],
         [1.0000000e+00,           inf, 7.8513704e+15, ...,
          1.0000000e+00,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [3.7182817e+00,           inf,           inf, ...,
                    inf,           inf,           inf]],

        [[          inf,           inf,           inf, ...,
                    inf,           inf,           inf],
         [          inf,           inf,           inf, ...,
                    inf,           inf, 1.0000000e+00],
         [1.0000000e+00,           inf, 7.8513704e+15, ...,
          1.0000000e+00,           inf,           inf],
         ...,
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [          inf,           inf,           inf, ...,
                    inf, 1.0000000e+00,           inf],
         [3.7182817e+00,           inf,           inf, ...,
                    inf,           inf,           inf]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [17], 'to': [24, 16]}
tf node:
{'name': 'cos', 'output': array([[[[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,  0.5403023],
         [ 0.5403023,        nan, -0.5239776, ...,  0.5403023,
                 nan,        nan],
         ...,
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [-0.8382726,        nan,        nan, ...,        nan,
                 nan,        nan]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,  0.5403023],
         [ 0.5403023,        nan, -0.5239776, ...,  0.5403023,
                 nan,        nan],
         ...,
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [-0.8382726,        nan,        nan, ...,        nan,
                 nan,        nan]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,  0.5403023],
         [ 0.5403023,        nan, -0.5239776, ...,  0.5403023,
                 nan,        nan],
         ...,
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [-0.8382726,        nan,        nan, ...,        nan,
                 nan,        nan]],

        ...,

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,  0.5403023],
         [ 0.5403023,        nan, -0.5239776, ...,  0.5403023,
                 nan,        nan],
         ...,
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [-0.8382726,        nan,        nan, ...,        nan,
                 nan,        nan]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,  0.5403023],
         [ 0.5403023,        nan, -0.5239776, ...,  0.5403023,
                 nan,        nan],
         ...,
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [-0.8382726,        nan,        nan, ...,        nan,
                 nan,        nan]],

        [[       nan,        nan,        nan, ...,        nan,
                 nan,        nan],
         [       nan,        nan,        nan, ...,        nan,
                 nan,  0.5403023],
         [ 0.5403023,        nan, -0.5239776, ...,  0.5403023,
                 nan,        nan],
         ...,
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [       nan,        nan,        nan, ...,        nan,
           0.5403023,        nan],
         [-0.8382726,        nan,        nan, ...,        nan,
                 nan,        nan]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [18], 'to': [24]}
ms node:
{'name': 'cos', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5403023 ],
         [ 0.5403023 ,         nan,  0.70269287, ...,  0.5403023 ,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [-0.8382724 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5403023 ],
         [ 0.5403023 ,         nan,  0.70269287, ...,  0.5403023 ,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [-0.8382724 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5403023 ],
         [ 0.5403023 ,         nan,  0.70269287, ...,  0.5403023 ,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [-0.8382724 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5403023 ],
         [ 0.5403023 ,         nan,  0.70269287, ...,  0.5403023 ,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [-0.8382724 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5403023 ],
         [ 0.5403023 ,         nan,  0.70269287, ...,  0.5403023 ,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [-0.8382724 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.5403023 ],
         [ 0.5403023 ,         nan,  0.70269287, ...,  0.5403023 ,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.5403023 ,         nan],
         [-0.8382724 ,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [18], 'to': [24]}
torch node:
{'name': 'cos', 'output': array([[[[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.54030234],
         [ 0.54030234,         nan,  0.21710174, ...,  0.54030234,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [-0.8382725 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.54030234],
         [ 0.54030234,         nan,  0.21710174, ...,  0.54030234,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [-0.8382725 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.54030234],
         [ 0.54030234,         nan,  0.21710174, ...,  0.54030234,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [-0.8382725 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        ...,

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.54030234],
         [ 0.54030234,         nan,  0.21710174, ...,  0.54030234,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [-0.8382725 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.54030234],
         [ 0.54030234,         nan,  0.21710174, ...,  0.54030234,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [-0.8382725 ,         nan,         nan, ...,         nan,
                  nan,         nan]],

        [[        nan,         nan,         nan, ...,         nan,
                  nan,         nan],
         [        nan,         nan,         nan, ...,         nan,
                  nan,  0.54030234],
         [ 0.54030234,         nan,  0.21710174, ...,  0.54030234,
                  nan,         nan],
         ...,
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [        nan,         nan,         nan, ...,         nan,
           0.54030234,         nan],
         [-0.8382725 ,         nan,         nan, ...,         nan,
                  nan,         nan]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [18], 'to': [24]}

generate models:404

analyse output arrays in iter:433

pre layer res:
23:reshape
{'name': 'reshape', 'output': array([[[[3923.7092, 3943.3772, 3666.5178, ..., 3696.2214, 3861.7422,
          3799.1667],
         [3869.2227, 3903.4338, 3726.393 , ..., 3876.3362, 3816.8752,
          3804.6328],
         [3921.391 , 3955.0283, 3715.6023, ..., 3686.9458, 3852.3433,
          3822.2302],
         ...,
         [3877.731 , 3922.5933, 3688.7075, ..., 3819.5234, 3817.9346,
          3792.0376],
         [3922.8435, 3938.0251, 3742.5825, ..., 3697.617 , 3838.97  ,
          3804.912 ],
         [3871.977 , 3902.2766, 3742.5383, ..., 3854.721 , 3813.5059,
          3683.963 ]],

        [[3924.3008, 3940.8218, 3621.4937, ..., 3695.1267, 3843.162 ,
          3798.9978],
         [3872.9094, 3905.8406, 3724.733 , ..., 3844.5679, 3792.733 ,
          3802.2178],
         [3922.4736, 3953.5278, 3717.3516, ..., 3669.4763, 3838.162 ,
          3797.0498],
         ...,
         [3876.7444, 3922.0754, 3685.4812, ..., 3860.5842, 3820.9048,
          3795.205 ],
         [3917.7437, 3934.31  , 3746.787 , ..., 3712.2598, 3835.8335,
          3805.2327],
         [3874.2217, 3910.9226, 3747.2478, ..., 3840.5374, 3808.443 ,
          3796.8882]],

        [[3927.0332, 3946.7463, 3629.311 , ..., 3682.094 , 3836.0225,
          3919.0857],
         [3873.659 , 3914.9885, 3769.5347, ..., 3836.6643, 3785.962 ,
          3799.413 ],
         [3928.1455, 3954.9324, 3709.6594, ..., 3656.55  , 3830.8296,
          3793.9473],
         ...,
         [3872.9036, 3922.732 , 3689.4253, ..., 3853.1387, 3817.3306,
          3792.7393],
         [3919.6375, 3935.7717, 3747.3455, ..., 3713.3623, 3829.77  ,
          3806.5422],
         [3874.5244, 3920.34  , 3693.4707, ..., 3835.269 , 3808.7344,
          3793.668 ]],

        ...,

        [[   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         ...,
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ]],

        [[   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         ...,
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ]],

        [[   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         ...,
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ],
         [   0.    ,    0.    ,    0.    , ...,    0.    ,    0.    ,
             0.    ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [22], 'to': [14]}
tf node:
{'name': 'softmax', 'output': array([[[[3.0244726e-29, 1.0527857e-20, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [1.2310525e-32, 4.9972371e-18, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [6.7125617e-32, 2.6314253e-25, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[2.4756029e-32, 3.7038930e-25, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [2.3142848e-32, 7.0971528e-19, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [1.2525880e-33, 1.9611330e-26, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        [[1.5618069e-32, 5.6876516e-24, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 5.5216354e-36],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [5.5185134e-31, 2.3725199e-19, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         ...,
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [3.5262341e-32, 3.5837586e-25, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00],
         [0.0000000e+00, 0.0000000e+00, 0.0000000e+00, ...,
          0.0000000e+00, 0.0000000e+00, 0.0000000e+00]],

        ...,

        [[3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         ...,
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02]],

        [[3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         ...,
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02]],

        [[3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         ...,
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02],
         [3.1250000e-02, 3.1250000e-02, 3.1250000e-02, ...,
          3.1250000e-02, 3.1250000e-02, 3.1250000e-02]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [23], 'to': [11]}
ms node:
{'name': 'softmax', 'output': array([[[[3.02447256e-29, 1.05278564e-20, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.23105270e-32, 4.99723796e-18, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [6.71261876e-32, 2.63144745e-25, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.47560345e-32, 3.70389325e-25, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [2.31428507e-32, 7.09888573e-19, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.25258814e-33, 1.96113332e-26, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[1.56180734e-32, 5.69043039e-24, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 5.52298495e-36],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.51851481e-31, 2.37252021e-19, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [3.52614804e-32, 3.58367109e-25, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        ...,

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]],

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]],

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]]]],
      dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [23], 'to': [11]}
torch node:
{'name': 'softmax', 'output': array([[[[3.02447226e-29, 1.05278548e-20, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.23105248e-32, 4.99723714e-18, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.75582698e-41, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [6.71261641e-32, 2.63144671e-25, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[2.47560286e-32, 3.70389276e-25, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [2.31428463e-32, 7.09888573e-19, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 2.09466094e-40, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [1.25258795e-33, 1.96113317e-26, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 1.68155816e-44, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        [[1.56180705e-32, 5.69043000e-24, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 5.52298387e-36],
         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [5.51851387e-31, 2.37252021e-19, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         ...,
         [0.00000000e+00, 1.59187506e-42, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [3.52614715e-32, 3.58367011e-25, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
         [0.00000000e+00, 1.85910267e-39, 0.00000000e+00, ...,
          0.00000000e+00, 0.00000000e+00, 0.00000000e+00]],

        ...,

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]],

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]],

        [[3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         ...,
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02],
         [3.12500000e-02, 3.12500000e-02, 3.12500000e-02, ...,
          3.12500000e-02, 3.12500000e-02, 3.12500000e-02]]]],
      dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [23], 'to': [11]}

generate models:407

analyse output arrays in iter:442

pre layer res:
10:add
{'name': 'add', 'output': array([[[[30.17557  ,  6.9258204, 27.38661  , ...,  6.7826843,
           5.938114 ,  5.612611 ],
         [11.851299 ,  6.9258204,  8.723089 , ...,  6.7826843,
          17.123203 ,  5.612611 ],
         [ 6.130762 ,  6.9258204,  9.088974 , ...,  6.7826843,
          18.22316  , 25.886753 ],
         ...,
         [ 6.130762 ,  6.9258204,  6.1732306, ..., 12.4192505,
           5.938114 ,  5.612611 ],
         [15.673306 ,  6.9258204,  7.2105007, ...,  6.7826843,
          29.33791  ,  7.84743  ],
         [ 6.130762 ,  6.9258204, 11.947008 , ..., 31.076567 ,
           5.938114 , 11.0629835]],

        [[30.17557  ,  6.9258204, 27.38661  , ...,  6.7826843,
           5.938114 ,  5.612611 ],
         [11.851299 ,  6.9258204,  8.723089 , ...,  6.7826843,
          17.123203 ,  5.612611 ],
         [ 6.130762 ,  6.9258204,  9.088974 , ...,  6.7826843,
          18.22316  , 25.886753 ],
         ...,
         [ 6.130762 ,  6.9258204,  6.1732306, ..., 12.4192505,
           5.938114 ,  5.612611 ],
         [15.673306 ,  6.9258204,  7.2105007, ...,  6.7826843,
          29.33791  ,  7.84743  ],
         [ 6.130762 ,  6.9258204, 11.947008 , ..., 31.076567 ,
           5.938114 , 11.0629835]],

        [[30.17557  ,  6.9258204, 27.38661  , ...,  6.7826843,
           5.938114 ,  5.612611 ],
         [11.851299 ,  6.9258204,  8.723089 , ...,  6.7826843,
          17.123203 ,  5.612611 ],
         [ 6.130762 ,  6.9258204,  9.088974 , ...,  6.7826843,
          18.22316  , 25.886753 ],
         ...,
         [ 6.130762 ,  6.9258204,  6.1732306, ..., 12.4192505,
           5.938114 ,  5.612611 ],
         [15.673306 ,  6.9258204,  7.2105007, ...,  6.7826843,
          29.33791  ,  7.84743  ],
         [ 6.130762 ,  6.9258204, 11.947008 , ..., 31.076567 ,
           5.938114 , 11.0629835]],

        ...,

        [[30.17557  ,  6.9258204, 27.38661  , ...,  6.7826843,
           5.938114 ,  5.612611 ],
         [11.851299 ,  6.9258204,  8.723089 , ...,  6.7826843,
          17.123203 ,  5.612611 ],
         [ 6.130762 ,  6.9258204,  9.088974 , ...,  6.7826843,
          18.22316  , 25.886753 ],
         ...,
         [ 6.130762 ,  6.9258204,  6.1732306, ..., 12.4192505,
           5.938114 ,  5.612611 ],
         [15.673306 ,  6.9258204,  7.2105007, ...,  6.7826843,
          29.33791  ,  7.84743  ],
         [ 6.130762 ,  6.9258204, 11.947008 , ..., 31.076567 ,
           5.938114 , 11.0629835]],

        [[30.17557  ,  6.9258204, 27.38661  , ...,  6.7826843,
           5.938114 ,  5.612611 ],
         [11.851299 ,  6.9258204,  8.723089 , ...,  6.7826843,
          17.123203 ,  5.612611 ],
         [ 6.130762 ,  6.9258204,  9.088974 , ...,  6.7826843,
          18.22316  , 25.886753 ],
         ...,
         [ 6.130762 ,  6.9258204,  6.1732306, ..., 12.4192505,
           5.938114 ,  5.612611 ],
         [15.673306 ,  6.9258204,  7.2105007, ...,  6.7826843,
          29.33791  ,  7.84743  ],
         [ 6.130762 ,  6.9258204, 11.947008 , ..., 31.076567 ,
           5.938114 , 11.0629835]],

        [[30.17557  ,  6.9258204, 27.38661  , ...,  6.7826843,
           5.938114 ,  5.612611 ],
         [11.851299 ,  6.9258204,  8.723089 , ...,  6.7826843,
          17.123203 ,  5.612611 ],
         [ 6.130762 ,  6.9258204,  9.088974 , ...,  6.7826843,
          18.22316  , 25.886753 ],
         ...,
         [ 6.130762 ,  6.9258204,  6.1732306, ..., 12.4192505,
           5.938114 ,  5.612611 ],
         [15.673306 ,  6.9258204,  7.2105007, ...,  6.7826843,
          29.33791  ,  7.84743  ],
         [ 6.130762 ,  6.9258204, 11.947008 , ..., 31.076567 ,
           5.938114 , 11.0629835]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [9, 9], 'to': [4]}
tf node:
{'name': 'log', 'output': array([[[[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.725016 ],
         [2.4724374, 1.9352565, 2.1659734, ..., 1.9143729, 2.8404346,
          1.725016 ],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.725016 ],
         [2.751959 , 1.9352565, 1.9755384, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.725016 ],
         [2.4724374, 1.9352565, 2.1659734, ..., 1.9143729, 2.8404346,
          1.725016 ],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.725016 ],
         [2.751959 , 1.9352565, 1.9755384, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.725016 ],
         [2.4724374, 1.9352565, 2.1659734, ..., 1.9143729, 2.8404346,
          1.725016 ],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.725016 ],
         [2.751959 , 1.9352565, 1.9755384, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        ...,

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.725016 ],
         [2.4724374, 1.9352565, 2.1659734, ..., 1.9143729, 2.8404346,
          1.725016 ],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.725016 ],
         [2.751959 , 1.9352565, 1.9755384, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.725016 ],
         [2.4724374, 1.9352565, 2.1659734, ..., 1.9143729, 2.8404346,
          1.725016 ],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.725016 ],
         [2.751959 , 1.9352565, 1.9755384, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.725016 ],
         [2.4724374, 1.9352565, 2.1659734, ..., 1.9143729, 2.8404346,
          1.725016 ],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.725016 ],
         [2.751959 , 1.9352565, 1.9755384, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [10], 'to': [14]}
ms node:
{'name': 'log', 'output': array([[[[3.4070325, 1.9352548, 3.3100512, ..., 1.9143686, 1.7813913,
          1.725019 ],
         [2.472437 , 1.9352548, 2.1659713, ..., 1.9143686, 2.8404315,
          1.725019 ],
         [1.8133155, 1.9352548, 2.2070594, ..., 1.9143686, 2.90269  ,
          3.253729 ],
         ...,
         [1.8133155, 1.9352548, 1.820221 , ..., 2.519245 , 1.7813913,
          1.725019 ],
         [2.7519572, 1.9352548, 1.9755381, ..., 1.9143686, 3.3788795,
          2.0601847],
         [1.8133155, 1.9352548, 2.4804814, ..., 3.4364524, 1.7813913,
          2.4036076]],

        [[3.4070325, 1.9352548, 3.3100512, ..., 1.9143686, 1.7813913,
          1.725019 ],
         [2.472437 , 1.9352548, 2.1659713, ..., 1.9143686, 2.8404315,
          1.725019 ],
         [1.8133155, 1.9352548, 2.2070594, ..., 1.9143686, 2.90269  ,
          3.253729 ],
         ...,
         [1.8133155, 1.9352548, 1.820221 , ..., 2.519245 , 1.7813913,
          1.725019 ],
         [2.7519572, 1.9352548, 1.9755381, ..., 1.9143686, 3.3788795,
          2.0601847],
         [1.8133155, 1.9352548, 2.4804814, ..., 3.4364524, 1.7813913,
          2.4036076]],

        [[3.4070325, 1.9352548, 3.3100512, ..., 1.9143686, 1.7813913,
          1.725019 ],
         [2.472437 , 1.9352548, 2.1659713, ..., 1.9143686, 2.8404315,
          1.725019 ],
         [1.8133155, 1.9352548, 2.2070594, ..., 1.9143686, 2.90269  ,
          3.253729 ],
         ...,
         [1.8133155, 1.9352548, 1.820221 , ..., 2.519245 , 1.7813913,
          1.725019 ],
         [2.7519572, 1.9352548, 1.9755381, ..., 1.9143686, 3.3788795,
          2.0601847],
         [1.8133155, 1.9352548, 2.4804814, ..., 3.4364524, 1.7813913,
          2.4036076]],

        ...,

        [[3.4070325, 1.9352548, 3.3100512, ..., 1.9143686, 1.7813913,
          1.725019 ],
         [2.472437 , 1.9352548, 2.1659713, ..., 1.9143686, 2.8404315,
          1.725019 ],
         [1.8133155, 1.9352548, 2.2070594, ..., 1.9143686, 2.90269  ,
          3.253729 ],
         ...,
         [1.8133155, 1.9352548, 1.820221 , ..., 2.519245 , 1.7813913,
          1.725019 ],
         [2.7519572, 1.9352548, 1.9755381, ..., 1.9143686, 3.3788795,
          2.0601847],
         [1.8133155, 1.9352548, 2.4804814, ..., 3.4364524, 1.7813913,
          2.4036076]],

        [[3.4070325, 1.9352548, 3.3100512, ..., 1.9143686, 1.7813913,
          1.725019 ],
         [2.472437 , 1.9352548, 2.1659713, ..., 1.9143686, 2.8404315,
          1.725019 ],
         [1.8133155, 1.9352548, 2.2070594, ..., 1.9143686, 2.90269  ,
          3.253729 ],
         ...,
         [1.8133155, 1.9352548, 1.820221 , ..., 2.519245 , 1.7813913,
          1.725019 ],
         [2.7519572, 1.9352548, 1.9755381, ..., 1.9143686, 3.3788795,
          2.0601847],
         [1.8133155, 1.9352548, 2.4804814, ..., 3.4364524, 1.7813913,
          2.4036076]],

        [[3.4070325, 1.9352548, 3.3100512, ..., 1.9143686, 1.7813913,
          1.725019 ],
         [2.472437 , 1.9352548, 2.1659713, ..., 1.9143686, 2.8404315,
          1.725019 ],
         [1.8133155, 1.9352548, 2.2070594, ..., 1.9143686, 2.90269  ,
          3.253729 ],
         ...,
         [1.8133155, 1.9352548, 1.820221 , ..., 2.519245 , 1.7813913,
          1.725019 ],
         [2.7519572, 1.9352548, 1.9755381, ..., 1.9143686, 3.3788795,
          2.0601847],
         [1.8133155, 1.9352548, 2.4804814, ..., 3.4364524, 1.7813913,
          2.4036076]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [10], 'to': [14]}
torch node:
{'name': 'log', 'output': array([[[[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.7250161],
         [2.4724374, 1.9352565, 2.1659737, ..., 1.9143729, 2.8404346,
          1.7250161],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.7250161],
         [2.751959 , 1.9352565, 1.9755385, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.7250161],
         [2.4724374, 1.9352565, 2.1659737, ..., 1.9143729, 2.8404346,
          1.7250161],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.7250161],
         [2.751959 , 1.9352565, 1.9755385, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.7250161],
         [2.4724374, 1.9352565, 2.1659737, ..., 1.9143729, 2.8404346,
          1.7250161],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.7250161],
         [2.751959 , 1.9352565, 1.9755385, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        ...,

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.7250161],
         [2.4724374, 1.9352565, 2.1659737, ..., 1.9143729, 2.8404346,
          1.7250161],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.7250161],
         [2.751959 , 1.9352565, 1.9755385, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.7250161],
         [2.4724374, 1.9352565, 2.1659737, ..., 1.9143729, 2.8404346,
          1.7250161],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.7250161],
         [2.751959 , 1.9352565, 1.9755385, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]],

        [[3.4070327, 1.9352565, 3.3100543, ..., 1.9143729, 1.7813916,
          1.7250161],
         [2.4724374, 1.9352565, 2.1659737, ..., 1.9143729, 2.8404346,
          1.7250161],
         [1.8133191, 1.9352565, 2.207062 , ..., 1.9143729, 2.9026933,
          3.2537315],
         ...,
         [1.8133191, 1.9352565, 1.8202224, ..., 2.5192478, 1.7813916,
          1.7250161],
         [2.751959 , 1.9352565, 1.9755385, ..., 1.9143729, 3.3788805,
          2.0601861],
         [1.8133191, 1.9352565, 2.480481 , ..., 3.436454 , 1.7813916,
          2.4036047]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [10], 'to': [14]}

pre layer res:
3:maxpool2d
{'name': 'maxpool2d', 'output': array([[[[3.005601 , 3.005601 , 3.07087  , ..., 1.3981361, 1.3981361,
          1.3981361],
         [3.005601 , 3.005601 , 3.07087  , ..., 1.5356307, 2.534268 ,
          2.534268 ],
         [2.3536348, 2.9652896, 2.9652896, ..., 1.5356307, 2.534268 ,
          2.534268 ],
         ...,
         [1.192818 , 1.192818 , 1.5251398, ..., 2.9249744, 2.9249744,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744]],

        [[3.005601 , 3.005601 , 3.07087  , ..., 1.3981361, 1.3981361,
          1.3981361],
         [3.005601 , 3.005601 , 3.07087  , ..., 1.5356307, 2.534268 ,
          2.534268 ],
         [2.3536348, 2.9652896, 2.9652896, ..., 1.5356307, 2.534268 ,
          2.534268 ],
         ...,
         [1.192818 , 1.192818 , 1.5251398, ..., 2.9249744, 2.9249744,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744]],

        [[3.005601 , 3.005601 , 3.07087  , ..., 1.3981361, 1.3981361,
          1.3981361],
         [3.005601 , 3.005601 , 3.07087  , ..., 1.5356307, 2.534268 ,
          2.534268 ],
         [2.3536348, 2.9652896, 2.9652896, ..., 1.5356307, 2.534268 ,
          2.534268 ],
         ...,
         [1.192818 , 1.192818 , 1.5251398, ..., 2.9249744, 2.9249744,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744]],

        ...,

        [[3.005601 , 3.005601 , 3.07087  , ..., 1.3981361, 1.3981361,
          1.3981361],
         [3.005601 , 3.005601 , 3.07087  , ..., 1.5356307, 2.534268 ,
          2.534268 ],
         [2.3536348, 2.9652896, 2.9652896, ..., 1.5356307, 2.534268 ,
          2.534268 ],
         ...,
         [1.192818 , 1.192818 , 1.5251398, ..., 2.9249744, 2.9249744,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744]],

        [[3.005601 , 3.005601 , 3.07087  , ..., 1.3981361, 1.3981361,
          1.3981361],
         [3.005601 , 3.005601 , 3.07087  , ..., 1.5356307, 2.534268 ,
          2.534268 ],
         [2.3536348, 2.9652896, 2.9652896, ..., 1.5356307, 2.534268 ,
          2.534268 ],
         ...,
         [1.192818 , 1.192818 , 1.5251398, ..., 2.9249744, 2.9249744,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744]],

        [[3.005601 , 3.005601 , 3.07087  , ..., 1.3981361, 1.3981361,
          1.3981361],
         [3.005601 , 3.005601 , 3.07087  , ..., 1.5356307, 2.534268 ,
          2.534268 ],
         [2.3536348, 2.9652896, 2.9652896, ..., 1.5356307, 2.534268 ,
          2.534268 ],
         ...,
         [1.192818 , 1.192818 , 1.5251398, ..., 2.9249744, 2.9249744,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744],
         [1.192818 , 1.192818 , 1.5251398, ..., 3.0367353, 3.0367353,
          2.9249744]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [2], 'to': [5]}
tf node:
{'name': 'log', 'output': array([[[[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        ...,

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [3], 'to': [6]}
ms node:
{'name': 'log', 'output': array([[[[1.1004753 , 1.1004753 , 1.1219586 , ..., 0.33514288,
          0.33514288, 0.33514288],
         [1.1004753 , 1.1004753 , 1.1219586 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         [0.8559594 , 1.0869746 , 1.0869746 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         ...,
         [0.17631713, 0.17631713, 0.42208385, ..., 1.0732857 ,
          1.0732857 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ]],

        [[1.1004753 , 1.1004753 , 1.1219586 , ..., 0.33514288,
          0.33514288, 0.33514288],
         [1.1004753 , 1.1004753 , 1.1219586 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         [0.8559594 , 1.0869746 , 1.0869746 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         ...,
         [0.17631713, 0.17631713, 0.42208385, ..., 1.0732857 ,
          1.0732857 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ]],

        [[1.1004753 , 1.1004753 , 1.1219586 , ..., 0.33514288,
          0.33514288, 0.33514288],
         [1.1004753 , 1.1004753 , 1.1219586 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         [0.8559594 , 1.0869746 , 1.0869746 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         ...,
         [0.17631713, 0.17631713, 0.42208385, ..., 1.0732857 ,
          1.0732857 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ]],

        ...,

        [[1.1004753 , 1.1004753 , 1.1219586 , ..., 0.33514288,
          0.33514288, 0.33514288],
         [1.1004753 , 1.1004753 , 1.1219586 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         [0.8559594 , 1.0869746 , 1.0869746 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         ...,
         [0.17631713, 0.17631713, 0.42208385, ..., 1.0732857 ,
          1.0732857 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ]],

        [[1.1004753 , 1.1004753 , 1.1219586 , ..., 0.33514288,
          0.33514288, 0.33514288],
         [1.1004753 , 1.1004753 , 1.1219586 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         [0.8559594 , 1.0869746 , 1.0869746 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         ...,
         [0.17631713, 0.17631713, 0.42208385, ..., 1.0732857 ,
          1.0732857 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ]],

        [[1.1004753 , 1.1004753 , 1.1219586 , ..., 0.33514288,
          0.33514288, 0.33514288],
         [1.1004753 , 1.1004753 , 1.1219586 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         [0.8559594 , 1.0869746 , 1.0869746 , ..., 0.42893896,
          0.9299076 , 0.9299076 ],
         ...,
         [0.17631713, 0.17631713, 0.42208385, ..., 1.0732857 ,
          1.0732857 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ],
         [0.17631713, 0.17631713, 0.42208385, ..., 1.1107808 ,
          1.1107808 , 1.0732857 ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [3], 'to': [6]}
torch node:
{'name': 'log', 'output': array([[[[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        ...,

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]],

        [[1.1004775 , 1.1004775 , 1.1219609 , ..., 0.33514002,
          0.33514002, 0.33514002],
         [1.1004775 , 1.1004775 , 1.1219609 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         [0.85596085, 1.0869747 , 1.0869747 , ..., 0.4289412 ,
          0.9299048 , 0.9299048 ],
         ...,
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.0732858 ,
          1.0732858 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ],
         [0.17631862, 0.17631862, 0.4220861 , ..., 1.1107831 ,
          1.1107831 , 1.0732858 ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [3], 'to': [6]}

generate models:415

analyse output arrays in iter:480

pre layer res:
16:reshape
{'name': 'reshape', 'output': array([[[[544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         ...,
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84]],

        [[544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         ...,
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84],
         [544349.5 , 643748.9 , 843056.6 , ..., 678204.8 , 603021.1 ,
          501897.84]],

        [[     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         ...,
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ]],

        ...,

        [[     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         ...,
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ]],

        [[     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         ...,
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ]],

        [[     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         ...,
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ],
         [     0.  ,      0.  ,      0.  , ...,      0.  ,      0.  ,
               0.  ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [15], 'to': [12]}
tf node:
{'name': 'cos', 'output': array([[[[ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         ...,
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217]],

        [[ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         ...,
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217],
         [ 0.85653794,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.98979217]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': TensorShape([1, 64, 32, 32]), 'from': [16], 'to': [8]}
ms node:
{'name': 'cos', 'output': array([[[[ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         [ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         [ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         ...,
         [ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         [ 0.91419756,  0.45686167, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.91419756,  0.45686167, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ]],

        [[ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         [ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         [ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         ...,
         [ 0.8870998 ,  0.40040973, -0.68831605, ..., -0.5962009 ,
           0.2658881 , -0.9937619 ],
         [ 0.91419756,  0.45686167, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.91419756,  0.45686167, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': (1, 64, 32, 32), 'from': [16], 'to': [8]}
torch node:
{'name': 'cos', 'output': array([[[[ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         ...,
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ]],

        [[ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         ...,
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ],
         [ 0.85653794,  0.40040973, -0.64166343, ..., -0.5962009 ,
           0.2658881 , -0.9967612 ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        ...,

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]],

        [[ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         ...,
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ],
         [ 1.        ,  1.        ,  1.        , ...,  1.        ,
           1.        ,  1.        ]]]], dtype=float32), 'output_shape': torch.Size([1, 64, 32, 32]), 'from': [16], 'to': [8]}

generate models:449

analyse the exceptions in iter:491
torch exception:
{'id': 21, 'name': 'flatten', 'frame_work': 'torch', 'input_datas': [tensor([93642.2109], grad_fn=<SumBackward1>)]}
Dimension out of range (expected to be in range of [-1, 0], but got 1)

generate models:460

analyse output arrays in iter:498

pre layer res:
24:add
{'name': 'add', 'output': array([[[[46.747467, 71.945656, 75.238235, ..., 73.790634, 49.416943,
          67.38704 ],
         [54.867855, 66.662704, 74.67284 , ..., 64.20625 , 46.685448,
          46.71951 ],
         [54.73713 , 74.972336, 52.767857, ..., 53.246887, 36.859062,
          11.32128 ],
         ...,
         [54.678547, 68.84169 , 62.466652, ..., 57.97217 , 50.909428,
          49.720512],
         [41.62726 , 59.97717 , 33.819927, ..., 74.21891 , 75.770615,
          50.474262],
         [33.81366 , 42.70888 , 41.828934, ..., 74.87195 , 75.687836,
          66.97784 ]],

        [[26.844685, 85.30513 , 63.039333, ..., 67.15312 , 39.045   ,
          56.091465],
         [57.69331 , 63.87642 , 71.51895 , ..., 71.04942 , 64.98308 ,
          66.882774],
         [83.9803  , 69.67427 , 36.29181 , ..., 46.894844, 32.515617,
          35.56198 ],
         ...,
         [79.94466 , 71.35725 , 62.673813, ..., 71.78004 , 56.217636,
          42.742798],
         [61.36026 , 56.36477 , 19.19218 , ..., 74.75663 , 73.93046 ,
          50.118107],
         [23.485664, 14.216047, 22.488949, ..., 43.177658, 66.421104,
          53.76927 ]],

        [[63.988308, 66.78888 , 56.337486, ..., 55.63814 , 59.300755,
          23.806023],
         [35.97522 , 46.08686 , 64.201126, ..., 61.88561 , 66.319664,
          62.992134],
         [63.260956, 74.95114 , 57.0309  , ..., 74.47021 , 46.95149 ,
          40.545544],
         ...,
         [73.77357 , 60.260334, 59.124428, ..., 61.54369 , 50.687187,
          62.19323 ],
         [58.953384, 46.274788, 41.642708, ..., 86.11308 , 61.039314,
          59.422924],
         [22.487083, 35.34132 , 25.773432, ..., 68.86883 , 58.805176,
          33.43325 ]],

        ...,

        [[50.07099 , 65.5532  , 55.701843, ..., 59.096413, 52.60074 ,
          52.60074 ],
         [50.07099 , 65.5532  , 63.457214, ..., 59.096413, 53.676964,
          52.60074 ],
         [65.1132  , 70.52455 , 49.849327, ..., 60.907753, 46.145973,
          30.02471 ],
         ...,
         [59.02387 , 77.34041 , 72.83487 , ..., 73.940605, 61.660904,
          52.73468 ],
         [51.199165, 57.864525, 34.78517 , ..., 72.458435, 58.575077,
          53.565193],
         [30.513643, 37.179   , 30.959255, ..., 62.4992  , 58.575077,
          49.037964]],

        [[50.07099 , 65.5532  , 55.701843, ..., 59.096413, 52.60074 ,
          52.60074 ],
         [50.07099 , 65.5532  , 63.457214, ..., 59.096413, 53.676964,
          52.60074 ],
         [65.1132  , 70.52455 , 49.849327, ..., 60.907753, 46.145973,
          30.02471 ],
         ...,
         [59.02387 , 77.34041 , 72.83487 , ..., 73.940605, 61.660904,
          52.73468 ],
         [51.199165, 57.864525, 34.78517 , ..., 72.458435, 58.575077,
          53.565193],
         [30.513643, 37.179   , 30.959255, ..., 62.4992  , 58.575077,
          49.037964]],

        [[50.07099 , 65.5532  , 55.701843, ..., 59.096413, 52.60074 ,
          52.60074 ],
         [50.07099 , 65.5532  , 63.457214, ..., 59.096413, 53.676964,
          52.60074 ],
         [65.1132  , 70.52455 , 49.849327, ..., 60.907753, 46.145973,
          30.02471 ],
         ...,
         [59.02387 , 77.34041 , 72.83487 , ..., 73.940605, 61.660904,
          52.73468 ],
         [51.199165, 57.864525, 34.78517 , ..., 72.458435, 58.575077,
          53.565193],
         [30.513643, 37.179   , 30.959255, ..., 62.4992  , 58.575077,
          49.037964]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [18, 18], 'to': [8]}
tf node:
{'name': 'cos', 'output': array([[[[-0.9299856 , -0.9520356 ,  0.98722917, ..., -0.03678491,
           0.66107947, -0.15655619],
         [-0.10979457, -0.77171767,  0.7482425 , ...,  0.19513623,
          -0.90541416, -0.9193463 ],
         [-0.23842351,  0.9106723 , -0.80256224, ..., -0.98719734,
           0.6674259 ,  0.31997702],
         ...,
         [-0.29487485,  0.9628724 ,  0.93405193, ...,  0.1467603 ,
           0.7997335 ,  0.85514283],
         [-0.7062892 , -0.95912325, -0.74009013, ...,  0.38155952,
           0.9314601 ,  0.97828454],
         [-0.73586065,  0.29301676, -0.5501694 , ...,  0.864684  ,
           0.9583548 , -0.53660226]],

        [[-0.14067885, -0.8860101 ,  0.97855306, ..., -0.3812242 ,
           0.22301863,  0.8972908 ],
         [ 0.41337213,  0.50227726, -0.7400312 , ..., -0.35563043,
          -0.5483824 , -0.61427563],
         [-0.6654493 ,  0.8476627 ,  0.16276616, ..., -0.9738835 ,
           0.45387164, -0.5365423 ],
         ...,
         [-0.16519555, -0.6220919 ,  0.9875376 , ..., -0.88856256,
           0.94570756,  0.32526982],
         [ 0.09904063,  0.9831382 ,  0.9418761 , ...,  0.801143  ,
           0.10284852,  0.9891599 ],
         [-0.07620658, -0.07879857, -0.87863505, ...,  0.69337136,
          -0.90146303, -0.9351207 ]],

        [[ 0.4025872 , -0.6855527 ,  0.9777839 , ...,  0.6133303 ,
          -0.9250968 ,  0.2416615 ],
         [-0.15249844, -0.50878006,  0.20016204, ...,  0.58473384,
          -0.94066274,  0.9871825 ],
         [ 0.9093394 ,  0.90171236,  0.88596237, ...,  0.5994228 ,
          -0.98517567, -0.9567554 ],
         ...,
         [-0.05383413, -0.84186125, -0.8441425 , ...,  0.27888513,
           0.9123925 ,  0.8029171 ],
         [-0.74057144, -0.6606576 , -0.6952682 , ..., -0.2770428 ,
          -0.21992977, -0.96447796],
         [-0.87952423, -0.7082354 ,  0.8016832 , ...,  0.969843  ,
          -0.633224  , -0.4318362 ]],

        ...,

        [[ 0.98114616, -0.9129886 ,  0.66236556, ..., -0.8287938 ,
          -0.6921472 , -0.6921472 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.8287938 ,
          -0.9638006 , -0.6921472 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.3459994 ,
          -0.5587516 ,  0.17861585],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927758, -0.78233224],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.4400128 , -0.98752534],
         [ 0.6198198 ,  0.86776406,  0.8975253 , ...,  0.945179  ,
          -0.4400128 ,  0.3365754 ]],

        [[ 0.98114616, -0.9129886 ,  0.66236556, ..., -0.8287938 ,
          -0.6921472 , -0.6921472 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.8287938 ,
          -0.9638006 , -0.6921472 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.3459994 ,
          -0.5587516 ,  0.17861585],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927758, -0.78233224],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.4400128 , -0.98752534],
         [ 0.6198198 ,  0.86776406,  0.8975253 , ...,  0.945179  ,
          -0.4400128 ,  0.3365754 ]],

        [[ 0.98114616, -0.9129886 ,  0.66236556, ..., -0.8287938 ,
          -0.6921472 , -0.6921472 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.8287938 ,
          -0.9638006 , -0.6921472 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.3459994 ,
          -0.5587516 ,  0.17861585],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927758, -0.78233224],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.4400128 , -0.98752534],
         [ 0.6198198 ,  0.86776406,  0.8975253 , ...,  0.945179  ,
          -0.4400128 ,  0.3365754 ]]]], dtype=float32), 'output_shape': TensorShape([1, 256, 32, 32]), 'from': [24], 'to': [25]}
ms node:
{'name': 'cos', 'output': array([[[[-0.9299856 , -0.9520356 ,  0.98722917, ..., -0.0367849 ,
           0.66107655, -0.15656371],
         [-0.10979456, -0.77171767,  0.7482425 , ...,  0.19513623,
          -0.9054125 , -0.9193447 ],
         [-0.23842351,  0.9106723 , -0.80256224, ..., -0.98719853,
           0.6674259 ,  0.31997523],
         ...,
         [-0.29487485,  0.9628724 ,  0.93405193, ...,  0.1467603 ,
           0.7997358 ,  0.85514283],
         [-0.7062892 , -0.95912325, -0.74009013, ...,  0.3815595 ,
           0.9314601 ,  0.97828454],
         [-0.73586065,  0.29301673, -0.5501694 , ...,  0.8646801 ,
           0.9583569 , -0.53660876]],

        [[-0.14067884, -0.8860101 ,  0.97855306, ..., -0.3812242 ,
           0.22302236,  0.89728916],
         [ 0.41337213,  0.50227726, -0.7400312 , ..., -0.35563043,
          -0.5483824 , -0.61427563],
         [-0.6654493 ,  0.8476627 ,  0.16276617, ..., -0.97388524,
           0.45387164, -0.5365423 ],
         ...,
         [-0.16519557, -0.6220919 ,  0.9875376 , ..., -0.88856256,
           0.9457063 ,  0.3252698 ],
         [ 0.09904063,  0.9831382 ,  0.9418761 , ...,  0.801143  ,
           0.10284093,  0.9891599 ],
         [-0.07620658, -0.07880047, -0.87863505, ...,  0.69337136,
          -0.9014663 , -0.93512344]],

        [[ 0.40258718, -0.6855527 ,  0.9777839 , ...,  0.6133303 ,
          -0.9250954 ,  0.24165781],
         [-0.15249844, -0.5087801 ,  0.20016204, ...,  0.58473384,
          -0.9406653 ,  0.9871825 ],
         [ 0.9093394 ,  0.90171236,  0.88596237, ...,  0.59942895,
          -0.98517567, -0.9567554 ],
         ...,
         [-0.05383412, -0.84186125, -0.8441425 , ...,  0.27888513,
           0.91239405,  0.8029171 ],
         [-0.74057144, -0.6606576 , -0.6952682 , ..., -0.2770428 ,
          -0.21992977, -0.96447796],
         [-0.87952423, -0.7082353 ,  0.8016832 , ...,  0.969843  ,
          -0.63322103, -0.4318293 ]],

        ...,

        [[ 0.98114616, -0.9129886 ,  0.6623655 , ..., -0.82879376,
          -0.6921444 , -0.6921444 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.82879376,
          -0.9638016 , -0.6921444 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.34599224,
          -0.5587516 ,  0.17861396],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927406, -0.7823322 ],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.44000942, -0.98752534],
         [ 0.6198198 ,  0.86776406,  0.8975253 , ...,  0.94517773,
          -0.44000942,  0.3365682 ]],

        [[ 0.98114616, -0.9129886 ,  0.6623655 , ..., -0.82879376,
          -0.6921444 , -0.6921444 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.82879376,
          -0.9638016 , -0.6921444 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.34599224,
          -0.5587516 ,  0.17861396],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927406, -0.7823322 ],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.44000942, -0.98752534],
         [ 0.6198198 ,  0.86776406,  0.8975253 , ...,  0.94517773,
          -0.44000942,  0.3365682 ]],

        [[ 0.98114616, -0.9129886 ,  0.6623655 , ..., -0.82879376,
          -0.6921444 , -0.6921444 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.82879376,
          -0.9638016 , -0.6921444 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.34599224,
          -0.5587516 ,  0.17861396],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927406, -0.7823322 ],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.44000942, -0.98752534],
         [ 0.6198198 ,  0.86776406,  0.8975253 , ...,  0.94517773,
          -0.44000942,  0.3365682 ]]]], dtype=float32), 'output_shape': (1, 256, 32, 32), 'from': [24], 'to': [25]}
torch node:
{'name': 'cos', 'output': array([[[[-0.9299856 , -0.9520356 ,  0.98722917, ..., -0.0367849 ,
           0.66107655, -0.15656371],
         [-0.10979456, -0.7717176 ,  0.7482425 , ...,  0.19513623,
          -0.9054125 , -0.9193447 ],
         [-0.23842351,  0.9106723 , -0.80256224, ..., -0.98719734,
           0.6674259 ,  0.31997523],
         ...,
         [-0.29487485,  0.9628724 ,  0.93405193, ...,  0.1467603 ,
           0.7997358 ,  0.85514283],
         [-0.7062892 , -0.9591233 , -0.74009013, ...,  0.38155952,
           0.9314601 ,  0.97828454],
         [-0.73586065,  0.29301673, -0.5501694 , ...,  0.8646801 ,
           0.9583569 , -0.53660876]],

        [[-0.14067885, -0.8860101 ,  0.97855306, ..., -0.3812242 ,
           0.22302236,  0.89728916],
         [ 0.41337213,  0.50227726, -0.7400312 , ..., -0.35563043,
          -0.5483824 , -0.61427563],
         [-0.6654493 ,  0.8476627 ,  0.16276617, ..., -0.9738835 ,
           0.45387164, -0.5365423 ],
         ...,
         [-0.16519557, -0.6220919 ,  0.9875376 , ..., -0.88856256,
           0.9457063 ,  0.3252698 ],
         [ 0.09904063,  0.9831382 ,  0.9418761 , ...,  0.80114293,
           0.10284093,  0.9891599 ],
         [-0.07620658, -0.07880047, -0.87863505, ...,  0.69337136,
          -0.9014663 , -0.93512344]],

        [[ 0.4025872 , -0.6855527 ,  0.9777839 , ...,  0.6133303 ,
          -0.9250954 ,  0.24165781],
         [-0.15249844, -0.5087801 ,  0.20016204, ...,  0.58473384,
          -0.9406653 ,  0.9871825 ],
         [ 0.9093394 ,  0.90171236,  0.88596237, ...,  0.5994229 ,
          -0.98517567, -0.9567554 ],
         ...,
         [-0.05383412, -0.84186125, -0.8441425 , ...,  0.27888513,
           0.91239405,  0.8029171 ],
         [-0.74057144, -0.6606576 , -0.6952682 , ..., -0.2770428 ,
          -0.21992977, -0.96447796],
         [-0.87952423, -0.7082353 ,  0.8016832 , ...,  0.969843  ,
          -0.63322103, -0.4318293 ]],

        ...,

        [[ 0.98114616, -0.9129886 ,  0.6623655 , ..., -0.82879376,
          -0.6921444 , -0.6921444 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.82879376,
          -0.9638016 , -0.6921444 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.3459994 ,
          -0.5587516 ,  0.17861396],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927406, -0.7823322 ],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.44000942, -0.98752534],
         [ 0.6198198 ,  0.867764  ,  0.8975253 , ...,  0.94517773,
          -0.44000942,  0.3365682 ]],

        [[ 0.98114616, -0.9129886 ,  0.6623655 , ..., -0.82879376,
          -0.6921444 , -0.6921444 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.82879376,
          -0.9638016 , -0.6921444 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.3459994 ,
          -0.5587516 ,  0.17861396],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927406, -0.7823322 ],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.44000942, -0.98752534],
         [ 0.6198198 ,  0.867764  ,  0.8975253 , ...,  0.94517773,
          -0.44000942,  0.3365682 ]],

        [[ 0.98114616, -0.9129886 ,  0.6623655 , ..., -0.82879376,
          -0.6921444 , -0.6921444 ],
         [ 0.98114616, -0.9129886 ,  0.8107517 , ..., -0.82879376,
          -0.9638016 , -0.6921444 ],
         [-0.6522492 ,  0.160585  ,  0.9146499 , ..., -0.3459994 ,
          -0.5587516 ,  0.17861396],
         ...,
         [-0.7860572 , -0.36290944, -0.8374268 , ...,  0.11293634,
           0.38927406, -0.7823322 ],
         [ 0.59487766,  0.25218663, -0.97419894, ..., -0.9797066 ,
          -0.44000942, -0.98752534],
         [ 0.6198198 ,  0.867764  ,  0.8975253 , ...,  0.94517773,
          -0.44000942,  0.3365682 ]]]], dtype=float32), 'output_shape': torch.Size([1, 256, 32, 32]), 'from': [24], 'to': [25]}

generate models:467

final statics:
total operators:28
tensorflow --> nums:57,distinct_bugs:6
mindspore --> nums:47,distinct_bugs:4
torch --> nums:41,distinct_bugs:6
tensorflow --> 
conv2d:15
sin:8
log:19
cos:9
softmax:5
add:1
mindspore --> 
sin:11
log:21
cos:8
softmax:7
torch --> 
sin:8
log:19
cos:7
softmax:5
maxpool2d:1
flatten:1

generate models:468
